define(['dart_sdk', 'packages/flutter/src/painting/basic_types.dart', 'packages/flutter/src/painting/placeholder_span.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/scheduler/binding.dart', 'packages/flutter/src/scheduler/priority.dart', 'packages/flutter/src/foundation/object.dart', 'packages/flutter/src/foundation/key.dart', 'packages/vector_math/vector_math_64.dart', 'packages/flutter/src/painting/matrix_utils.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/gestures/drag_details.dart', 'packages/flutter/src/foundation/collections.dart', 'packages/flutter/src/painting/geometry.dart', 'packages/flutter/src/rendering/stack.dart', 'packages/flutter/src/painting/strut_style.dart', 'packages/flutter/src/services/system_chrome.dart', 'packages/flutter/src/painting/colors.dart', 'packages/flutter/src/services/keyboard_key.dart', 'packages/flutter/src/services/raw_keyboard_windows.dart', 'packages/flutter/src/foundation/change_notifier.dart', 'packages/flutter/src/gestures/events.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/semantics/semantics.dart', 'packages/flutter/src/rendering/custom_paint.dart', 'packages/flutter/src/foundation/synchronous_future.dart', 'packages/flutter/src/foundation/observer_list.dart', 'packages/flutter/src/services/system_navigator.dart', 'packages/flutter/src/rendering/performance_overlay.dart', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/flutter/src/services/system_sound.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/gestures/tap.dart', 'packages/flutter/src/gestures/recognizer.dart', 'packages/flutter/src/scheduler/ticker.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/services/system_channels.dart', 'packages/flutter/src/painting/decoration.dart', 'packages/flutter/src/rendering/table.dart', 'packages/flutter/src/rendering/table_border.dart', 'packages/flutter/src/foundation/print.dart', 'packages/flutter/src/rendering/sliver.dart', 'packages/flutter/src/rendering/proxy_sliver.dart', 'packages/flutter/src/rendering/paragraph.dart', 'packages/flutter/src/services/clipboard.dart', 'packages/flutter/src/services/text_input.dart', 'packages/flutter/src/services/text_editing.dart', 'packages/flutter/src/rendering/editable.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/gestures/force_press.dart', 'packages/flutter/src/gestures/long_press.dart', 'packages/flutter/src/gestures/constants.dart', 'packages/flutter/src/gestures/monodrag.dart', 'packages/flutter/src/rendering/viewport_offset.dart', 'packages/flutter/src/gestures/velocity_tracker.dart', 'packages/flutter/src/physics/utils.dart', 'packages/flutter/src/physics/tolerance.dart', 'packages/flutter/src/widgets/scroll_metrics.dart', 'packages/flutter/src/gestures/drag.dart', 'packages/flutter/src/physics/simulation.dart', 'packages/flutter/src/physics/spring_simulation.dart', 'packages/flutter/src/widgets/scroll_simulation.dart', 'packages/flutter/src/gestures/multitap.dart', 'packages/flutter/src/gestures/scale.dart', 'packages/flutter/src/gestures/binding.dart', 'packages/flutter/src/painting/binding.dart', 'packages/flutter/src/painting/_network_image_web.dart', 'packages/flutter/src/painting/image_stream.dart', 'packages/flutter/src/painting/decoration_image.dart', 'packages/flutter/src/painting/image_resolution.dart', 'packages/flutter/src/painting/box_fit.dart', 'packages/flutter/src/semantics/binding.dart', 'packages/flutter/src/rendering/sliver_list.dart', 'packages/flutter/src/rendering/sliver_fixed_extent_list.dart', 'packages/flutter/src/rendering/sliver_grid.dart', 'packages/flutter/src/rendering/sliver_multi_box_adaptor.dart', 'packages/flutter/src/services/text_formatter.dart', 'packages/flutter/src/rendering/error.dart', 'packages/flutter/src/painting/box_shadow.dart', 'packages/flutter/src/foundation/binding.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/rendering/rotated_box.dart', 'packages/flutter/src/rendering/shifted_box.dart', 'packages/flutter/src/rendering/custom_layout.dart', 'packages/flutter/src/rendering/sliver_padding.dart', 'packages/flutter/src/rendering/list_body.dart', 'packages/flutter/src/rendering/flex.dart', 'packages/flutter/src/rendering/wrap.dart', 'packages/flutter/src/rendering/flow.dart', 'packages/flutter/src/rendering/image.dart'], (function load__packages__flutter__src__widgets__widget_span_dart(dart_sdk, packages__flutter__src__painting__basic_types$46dart, packages__flutter__src__painting__placeholder_span$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__scheduler__binding$46dart, packages__flutter__src__scheduler__priority$46dart, packages__flutter__src__foundation__object$46dart, packages__flutter__src__foundation__key$46dart, packages__vector_math__vector_math_64$46dart, packages__flutter__src__painting__matrix_utils$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__gestures__drag_details$46dart, packages__flutter__src__foundation__collections$46dart, packages__flutter__src__painting__geometry$46dart, packages__flutter__src__rendering__stack$46dart, packages__flutter__src__painting__strut_style$46dart, packages__flutter__src__services__system_chrome$46dart, packages__flutter__src__painting__colors$46dart, packages__flutter__src__services__keyboard_key$46dart, packages__flutter__src__services__raw_keyboard_windows$46dart, packages__flutter__src__foundation__change_notifier$46dart, packages__flutter__src__gestures__events$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__semantics__semantics$46dart, packages__flutter__src__rendering__custom_paint$46dart, packages__flutter__src__foundation__synchronous_future$46dart, packages__flutter__src__foundation__observer_list$46dart, packages__flutter__src__services__system_navigator$46dart, packages__flutter__src__rendering__performance_overlay$46dart, packages__flutter__src__foundation___platform_web$46dart, packages__flutter__src__services__system_sound$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__gestures__tap$46dart, packages__flutter__src__gestures__recognizer$46dart, packages__flutter__src__scheduler__ticker$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__services__system_channels$46dart, packages__flutter__src__painting__decoration$46dart, packages__flutter__src__rendering__table$46dart, packages__flutter__src__rendering__table_border$46dart, packages__flutter__src__foundation__print$46dart, packages__flutter__src__rendering__sliver$46dart, packages__flutter__src__rendering__proxy_sliver$46dart, packages__flutter__src__rendering__paragraph$46dart, packages__flutter__src__services__clipboard$46dart, packages__flutter__src__services__text_input$46dart, packages__flutter__src__services__text_editing$46dart, packages__flutter__src__rendering__editable$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__gestures__force_press$46dart, packages__flutter__src__gestures__long_press$46dart, packages__flutter__src__gestures__constants$46dart, packages__flutter__src__gestures__monodrag$46dart, packages__flutter__src__rendering__viewport_offset$46dart, packages__flutter__src__gestures__velocity_tracker$46dart, packages__flutter__src__physics__utils$46dart, packages__flutter__src__physics__tolerance$46dart, packages__flutter__src__widgets__scroll_metrics$46dart, packages__flutter__src__gestures__drag$46dart, packages__flutter__src__physics__simulation$46dart, packages__flutter__src__physics__spring_simulation$46dart, packages__flutter__src__widgets__scroll_simulation$46dart, packages__flutter__src__gestures__multitap$46dart, packages__flutter__src__gestures__scale$46dart, packages__flutter__src__gestures__binding$46dart, packages__flutter__src__painting__binding$46dart, packages__flutter__src__painting___network_image_web$46dart, packages__flutter__src__painting__image_stream$46dart, packages__flutter__src__painting__decoration_image$46dart, packages__flutter__src__painting__image_resolution$46dart, packages__flutter__src__painting__box_fit$46dart, packages__flutter__src__semantics__binding$46dart, packages__flutter__src__rendering__sliver_list$46dart, packages__flutter__src__rendering__sliver_fixed_extent_list$46dart, packages__flutter__src__rendering__sliver_grid$46dart, packages__flutter__src__rendering__sliver_multi_box_adaptor$46dart, packages__flutter__src__services__text_formatter$46dart, packages__flutter__src__rendering__error$46dart, packages__flutter__src__painting__box_shadow$46dart, packages__flutter__src__foundation__binding$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__rendering__rotated_box$46dart, packages__flutter__src__rendering__shifted_box$46dart, packages__flutter__src__rendering__custom_layout$46dart, packages__flutter__src__rendering__sliver_padding$46dart, packages__flutter__src__rendering__list_body$46dart, packages__flutter__src__rendering__flex$46dart, packages__flutter__src__rendering__wrap$46dart, packages__flutter__src__rendering__flow$46dart, packages__flutter__src__rendering__image$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const typed_data = dart_sdk.typed_data;
  const _js_helper = dart_sdk._js_helper;
  const _internal = dart_sdk._internal;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const convert = dart_sdk.convert;
  const collection = dart_sdk.collection;
  const developer = dart_sdk.developer;
  const math = dart_sdk.math;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const placeholder_span = packages__flutter__src__painting__placeholder_span$46dart.src__painting__placeholder_span;
  const text_painter = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_painter;
  const inline_span = packages__flutter__src__painting__placeholder_span$46dart.src__painting__inline_span;
  const text_span = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_span;
  const layer = packages__flutter__src__rendering__layer$46dart.src__rendering__layer;
  const object$ = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const debug = packages__flutter__src__rendering__layer$46dart.src__rendering__debug;
  const binding = packages__flutter__src__rendering__layer$46dart.src__rendering__binding;
  const box$ = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const mouse_cursor = packages__flutter__src__rendering__layer$46dart.src__rendering__mouse_cursor;
  const diagnostics$ = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const assertions = packages__flutter__src__foundation__debug$46dart.src__foundation__assertions;
  const debug$ = packages__flutter__src__foundation__debug$46dart.src__foundation__debug;
  const binding$ = packages__flutter__src__scheduler__binding$46dart.src__scheduler__binding;
  const priority = packages__flutter__src__scheduler__priority$46dart.src__scheduler__priority;
  const object = packages__flutter__src__foundation__object$46dart.src__foundation__object;
  const key = packages__flutter__src__foundation__key$46dart.src__foundation__key;
  const vector_math_64 = packages__vector_math__vector_math_64$46dart.vector_math_64;
  const matrix_utils = packages__flutter__src__painting__matrix_utils$46dart.src__painting__matrix_utils;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const drag_details = packages__flutter__src__gestures__drag_details$46dart.src__gestures__drag_details;
  const collections = packages__flutter__src__foundation__collections$46dart.src__foundation__collections;
  const geometry = packages__flutter__src__painting__geometry$46dart.src__painting__geometry;
  const stack = packages__flutter__src__rendering__stack$46dart.src__rendering__stack;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const strut_style = packages__flutter__src__painting__strut_style$46dart.src__painting__strut_style;
  const system_chrome = packages__flutter__src__services__system_chrome$46dart.src__services__system_chrome;
  const colors = packages__flutter__src__painting__colors$46dart.src__painting__colors;
  const keyboard_key = packages__flutter__src__services__keyboard_key$46dart.src__services__keyboard_key;
  const raw_keyboard = packages__flutter__src__services__raw_keyboard_windows$46dart.src__services__raw_keyboard;
  const change_notifier = packages__flutter__src__foundation__change_notifier$46dart.src__foundation__change_notifier;
  const events = packages__flutter__src__gestures__events$46dart.src__gestures__events;
  const alignment$ = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const semantics = packages__flutter__src__semantics__semantics$46dart.src__semantics__semantics;
  const custom_paint = packages__flutter__src__rendering__custom_paint$46dart.src__rendering__custom_paint;
  const synchronous_future = packages__flutter__src__foundation__synchronous_future$46dart.src__foundation__synchronous_future;
  const observer_list = packages__flutter__src__foundation__observer_list$46dart.src__foundation__observer_list;
  const system_navigator = packages__flutter__src__services__system_navigator$46dart.src__services__system_navigator;
  const performance_overlay = packages__flutter__src__rendering__performance_overlay$46dart.src__rendering__performance_overlay;
  const platform = packages__flutter__src__foundation___platform_web$46dart.src__foundation__platform;
  const system_sound = packages__flutter__src__services__system_sound$46dart.src__services__system_sound;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  const animations = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animations;
  const tween = packages__flutter__src__animation__listener_helpers$46dart.src__animation__tween;
  const tap$ = packages__flutter__src__gestures__tap$46dart.src__gestures__tap;
  const recognizer = packages__flutter__src__gestures__recognizer$46dart.src__gestures__recognizer;
  const ticker = packages__flutter__src__scheduler__ticker$46dart.src__scheduler__ticker;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const binding$0 = packages__flutter__src__services__system_channels$46dart.src__services__binding;
  const restoration = packages__flutter__src__services__system_channels$46dart.src__services__restoration;
  const system_channels = packages__flutter__src__services__system_channels$46dart.src__services__system_channels;
  const message_codec = packages__flutter__src__services__system_channels$46dart.src__services__message_codec;
  const asset_bundle = packages__flutter__src__services__system_channels$46dart.src__services__asset_bundle;
  const decoration = packages__flutter__src__painting__decoration$46dart.src__painting__decoration;
  const table = packages__flutter__src__rendering__table$46dart.src__rendering__table;
  const table_border = packages__flutter__src__rendering__table_border$46dart.src__rendering__table_border;
  const print = packages__flutter__src__foundation__print$46dart.src__foundation__print;
  const sliver = packages__flutter__src__rendering__sliver$46dart.src__rendering__sliver;
  const viewport$ = packages__flutter__src__rendering__sliver$46dart.src__rendering__viewport;
  const proxy_sliver = packages__flutter__src__rendering__proxy_sliver$46dart.src__rendering__proxy_sliver;
  const paragraph = packages__flutter__src__rendering__paragraph$46dart.src__rendering__paragraph;
  const clipboard = packages__flutter__src__services__clipboard$46dart.src__services__clipboard;
  const text_input = packages__flutter__src__services__text_input$46dart.src__services__text_input;
  const autofill = packages__flutter__src__services__text_input$46dart.src__services__autofill;
  const text_editing = packages__flutter__src__services__text_editing$46dart.src__services__text_editing;
  const editable = packages__flutter__src__rendering__editable$46dart.src__rendering__editable;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const force_press = packages__flutter__src__gestures__force_press$46dart.src__gestures__force_press;
  const long_press = packages__flutter__src__gestures__long_press$46dart.src__gestures__long_press;
  const constants = packages__flutter__src__gestures__constants$46dart.src__gestures__constants;
  const monodrag = packages__flutter__src__gestures__monodrag$46dart.src__gestures__monodrag;
  const viewport_offset = packages__flutter__src__rendering__viewport_offset$46dart.src__rendering__viewport_offset;
  const velocity_tracker = packages__flutter__src__gestures__velocity_tracker$46dart.src__gestures__velocity_tracker;
  const utils = packages__flutter__src__physics__utils$46dart.src__physics__utils;
  const tolerance = packages__flutter__src__physics__tolerance$46dart.src__physics__tolerance;
  const scroll_metrics = packages__flutter__src__widgets__scroll_metrics$46dart.src__widgets__scroll_metrics;
  const drag = packages__flutter__src__gestures__drag$46dart.src__gestures__drag;
  const simulation = packages__flutter__src__physics__simulation$46dart.src__physics__simulation;
  const spring_simulation = packages__flutter__src__physics__spring_simulation$46dart.src__physics__spring_simulation;
  const scroll_simulation = packages__flutter__src__widgets__scroll_simulation$46dart.src__widgets__scroll_simulation;
  const multitap = packages__flutter__src__gestures__multitap$46dart.src__gestures__multitap;
  const scale = packages__flutter__src__gestures__scale$46dart.src__gestures__scale;
  const binding$1 = packages__flutter__src__gestures__binding$46dart.src__gestures__binding;
  const binding$2 = packages__flutter__src__painting__binding$46dart.src__painting__binding;
  const image_provider = packages__flutter__src__painting___network_image_web$46dart.src__painting__image_provider;
  const _network_image_web = packages__flutter__src__painting___network_image_web$46dart.src__painting___network_image_web;
  const image_stream = packages__flutter__src__painting__image_stream$46dart.src__painting__image_stream;
  const decoration_image = packages__flutter__src__painting__decoration_image$46dart.src__painting__decoration_image;
  const image_resolution = packages__flutter__src__painting__image_resolution$46dart.src__painting__image_resolution;
  const box_fit = packages__flutter__src__painting__box_fit$46dart.src__painting__box_fit;
  const binding$3 = packages__flutter__src__semantics__binding$46dart.src__semantics__binding;
  const sliver_list = packages__flutter__src__rendering__sliver_list$46dart.src__rendering__sliver_list;
  const sliver_fixed_extent_list = packages__flutter__src__rendering__sliver_fixed_extent_list$46dart.src__rendering__sliver_fixed_extent_list;
  const sliver_grid = packages__flutter__src__rendering__sliver_grid$46dart.src__rendering__sliver_grid;
  const sliver_multi_box_adaptor = packages__flutter__src__rendering__sliver_multi_box_adaptor$46dart.src__rendering__sliver_multi_box_adaptor;
  const text_formatter = packages__flutter__src__services__text_formatter$46dart.src__services__text_formatter;
  const error = packages__flutter__src__rendering__error$46dart.src__rendering__error;
  const box_shadow = packages__flutter__src__painting__box_shadow$46dart.src__painting__box_shadow;
  const binding$4 = packages__flutter__src__foundation__binding$46dart.src__foundation__binding;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const rotated_box = packages__flutter__src__rendering__rotated_box$46dart.src__rendering__rotated_box;
  const shifted_box = packages__flutter__src__rendering__shifted_box$46dart.src__rendering__shifted_box;
  const custom_layout = packages__flutter__src__rendering__custom_layout$46dart.src__rendering__custom_layout;
  const sliver_padding = packages__flutter__src__rendering__sliver_padding$46dart.src__rendering__sliver_padding;
  const list_body = packages__flutter__src__rendering__list_body$46dart.src__rendering__list_body;
  const flex$ = packages__flutter__src__rendering__flex$46dart.src__rendering__flex;
  const wrap = packages__flutter__src__rendering__wrap$46dart.src__rendering__wrap;
  const flow = packages__flutter__src__rendering__flow$46dart.src__rendering__flow;
  const image = packages__flutter__src__rendering__image$46dart.src__rendering__image;
  var widget_span = Object.create(dart.library);
  var widget_inspector = Object.create(dart.library);
  var title$ = Object.create(dart.library);
  var shortcuts$ = Object.create(dart.library);
  var semantics_debugger = Object.create(dart.library);
  var router = Object.create(dart.library);
  var performance_overlay$ = Object.create(dart.library);
  var modal_barrier = Object.create(dart.library);
  var routes = Object.create(dart.library);
  var pages = Object.create(dart.library);
  var heroes = Object.create(dart.library);
  var navigator$ = Object.create(dart.library);
  var table$ = Object.create(dart.library);
  var inherited_model = Object.create(dart.library);
  var visibility = Object.create(dart.library);
  var transitions = Object.create(dart.library);
  var overlay$ = Object.create(dart.library);
  var text_selection = Object.create(dart.library);
  var inherited_theme = Object.create(dart.library);
  var text = Object.create(dart.library);
  var viewport = Object.create(dart.library);
  var scroll_configuration = Object.create(dart.library);
  var restoration_properties = Object.create(dart.library);
  var restoration$ = Object.create(dart.library);
  var scroll_position_with_single_context = Object.create(dart.library);
  var scroll_activity = Object.create(dart.library);
  var page_storage = Object.create(dart.library);
  var scroll_position = Object.create(dart.library);
  var scroll_notification = Object.create(dart.library);
  var overscroll_indicator = Object.create(dart.library);
  var scroll_physics = Object.create(dart.library);
  var ticker_provider = Object.create(dart.library);
  var scroll_context = Object.create(dart.library);
  var scroll_controller = Object.create(dart.library);
  var primary_scroll_controller = Object.create(dart.library);
  var gesture_detector = Object.create(dart.library);
  var scrollable$ = Object.create(dart.library);
  var scroll_aware_image_provider = Object.create(dart.library);
  var media_query = Object.create(dart.library);
  var disposable_build_context = Object.create(dart.library);
  var image$ = Object.create(dart.library);
  var container = Object.create(dart.library);
  var localizations = Object.create(dart.library);
  var sliver$ = Object.create(dart.library);
  var notification_listener = Object.create(dart.library);
  var automatic_keep_alive = Object.create(dart.library);
  var autofill$ = Object.create(dart.library);
  var editable_text = Object.create(dart.library);
  var focus_traversal = Object.create(dart.library);
  var inherited_notifier = Object.create(dart.library);
  var focus_scope = Object.create(dart.library);
  var focus_manager = Object.create(dart.library);
  var framework = Object.create(dart.library);
  var debug$0 = Object.create(dart.library);
  var banner = Object.create(dart.library);
  var app = Object.create(dart.library);
  var binding$5 = Object.create(dart.library);
  var basic = Object.create(dart.library);
  var actions$ = Object.create(dart.library);
  var $length = dartx.length;
  var $_get = dartx._get;
  var $runtimeType = dartx.runtimeType;
  var $_equals = dartx._equals;
  var $containsKey = dartx.containsKey;
  var $add = dartx.add;
  var $_set = dartx._set;
  var $trimRight = dartx.trimRight;
  var $buffer = dartx.buffer;
  var $clear = dartx.clear;
  var $remove = dartx.remove;
  var $forEach = dartx.forEach;
  var $putIfAbsent = dartx.putIfAbsent;
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $take = dartx.take;
  var $reversed = dartx.reversed;
  var $contains = dartx.contains;
  var $startsWith = dartx.startsWith;
  var $modulo = dartx['%'];
  var $every = dartx.every;
  var $where = dartx.where;
  var $isNotEmpty = dartx.isNotEmpty;
  var $hashCode = dartx.hashCode;
  var $compareTo = dartx.compareTo;
  var $sort = dartx.sort;
  var $join = dartx.join;
  var $addAll = dartx.addAll;
  var $isEmpty = dartx.isEmpty;
  var $first = dartx.first;
  var $toString = dartx.toString;
  var $keys = dartx.keys;
  var $abs = dartx.abs;
  var $sign = dartx.sign;
  var $insert = dartx.insert;
  var $trim = dartx.trim;
  var $single = dartx.single;
  var $leftShift = dartx['<<'];
  var $cast = dartx.cast;
  var $lastWhere = dartx.lastWhere;
  var $firstWhere = dartx.firstWhere;
  var $removeLast = dartx.removeLast;
  var $values = dartx.values;
  var $toSet = dartx.toSet;
  var $last = dartx.last;
  var $substring = dartx.substring;
  var $split = dartx.split;
  var $removeWhere = dartx.removeWhere;
  var $plus = dartx['+'];
  var $removeAt = dartx.removeAt;
  var $any = dartx.any;
  var $indexWhere = dartx.indexWhere;
  var $iterator = dartx.iterator;
  var $sublist = dartx.sublist;
  var $expand = dartx.expand;
  var $stackTrace = dartx.stackTrace;
  var $indexOf = dartx.indexOf;
  var $insertAll = dartx.insertAll;
  var $lastIndexOf = dartx.lastIndexOf;
  var $skip = dartx.skip;
  var $singleWhere = dartx.singleWhere;
  var $toStringAsFixed = dartx.toStringAsFixed;
  var $clamp = dartx.clamp;
  var $isFinite = dartx.isFinite;
  var $round = dartx.round;
  var $toDouble = dartx.toDouble;
  var $truncate = dartx.truncate;
  var $fold = dartx.fold;
  var $times = dartx['*'];
  var $replaceRange = dartx.replaceRange;
  var $runes = dartx.runes;
  var $followedBy = dartx.followedBy;
  var $whereType = dartx.whereType;
  var $endsWith = dartx.endsWith;
  var $update = dartx.update;
  var VoidTobool = () => (VoidTobool = dart.constFn(dart.fnType(core.bool, [])))();
  var StringN = () => (StringN = dart.constFn(dart.nullable(core.String)))();
  var ListOfStringN = () => (ListOfStringN = dart.constFn(core.List$(StringN())))();
  var SetOf_InspectorReferenceData = () => (SetOf_InspectorReferenceData = dart.constFn(core.Set$(widget_inspector._InspectorReferenceData)))();
  var IdentityMapOfString$SetOf_InspectorReferenceData = () => (IdentityMapOfString$SetOf_InspectorReferenceData = dart.constFn(_js_helper.IdentityMap$(core.String, SetOf_InspectorReferenceData())))();
  var IdentityMapOfString$_InspectorReferenceData = () => (IdentityMapOfString$_InspectorReferenceData = dart.constFn(_js_helper.IdentityMap$(core.String, widget_inspector._InspectorReferenceData)))();
  var IdentityMapOfObject$String = () => (IdentityMapOfObject$String = dart.constFn(_js_helper.IdentityMap$(core.Object, core.String)))();
  var ObjectN = () => (ObjectN = dart.constFn(dart.nullable(core.Object)))();
  var IdentityMapOfString$ObjectN = () => (IdentityMapOfString$ObjectN = dart.constFn(_js_helper.IdentityMap$(core.String, ObjectN())))();
  var MapOfString$ObjectN = () => (MapOfString$ObjectN = dart.constFn(core.Map$(core.String, ObjectN())))();
  var FutureOfMapOfString$ObjectN = () => (FutureOfMapOfString$ObjectN = dart.constFn(async.Future$(MapOfString$ObjectN())))();
  var MapOfString$String = () => (MapOfString$String = dart.constFn(core.Map$(core.String, core.String)))();
  var MapOfString$StringToFutureOfMapOfString$ObjectN = () => (MapOfString$StringToFutureOfMapOfString$ObjectN = dart.constFn(dart.fnType(FutureOfMapOfString$ObjectN(), [MapOfString$String()])))();
  var IdentityMapOfString$dynamic = () => (IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))();
  var MapOfString$dynamic = () => (MapOfString$dynamic = dart.constFn(core.Map$(core.String, dart.dynamic)))();
  var FutureOfMapOfString$dynamic = () => (FutureOfMapOfString$dynamic = dart.constFn(async.Future$(MapOfString$dynamic())))();
  var MapOfString$StringToFutureOfMapOfString$dynamic = () => (MapOfString$StringToFutureOfMapOfString$dynamic = dart.constFn(dart.fnType(FutureOfMapOfString$dynamic(), [MapOfString$String()])))();
  var JSArrayOfString = () => (JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))();
  var FutureOfvoid = () => (FutureOfvoid = dart.constFn(async.Future$(dart.void)))();
  var FutureOfbool = () => (FutureOfbool = dart.constFn(async.Future$(core.bool)))();
  var VoidToFutureOfbool = () => (VoidToFutureOfbool = dart.constFn(dart.fnType(FutureOfbool(), [])))();
  var boolToFutureOfvoid = () => (boolToFutureOfvoid = dart.constFn(dart.fnType(FutureOfvoid(), [core.bool])))();
  var RenderObjectTovoid = () => (RenderObjectTovoid = dart.constFn(dart.fnType(dart.void, [object$.RenderObject])))();
  var FutureOfNull = () => (FutureOfNull = dart.constFn(async.Future$(core.Null)))();
  var VoidToFutureOfNull = () => (VoidToFutureOfNull = dart.constFn(dart.fnType(FutureOfNull(), [])))();
  var StringToFutureOfNull = () => (StringToFutureOfNull = dart.constFn(dart.fnType(FutureOfNull(), [core.String])))();
  var StringNAndStringToFutureOfNull = () => (StringNAndStringToFutureOfNull = dart.constFn(dart.fnType(FutureOfNull(), [StringN(), core.String])))();
  var ListOfString = () => (ListOfString = dart.constFn(core.List$(core.String)))();
  var ListOfStringToFutureOfNull = () => (ListOfStringToFutureOfNull = dart.constFn(dart.fnType(FutureOfNull(), [ListOfString()])))();
  var IdentityMapOfString$Object = () => (IdentityMapOfString$Object = dart.constFn(_js_helper.IdentityMap$(core.String, core.Object)))();
  var _IdentityHashSetOf_InspectorReferenceData = () => (_IdentityHashSetOf_InspectorReferenceData = dart.constFn(collection._IdentityHashSet$(widget_inspector._InspectorReferenceData)))();
  var VoidToSetOf_InspectorReferenceData = () => (VoidToSetOf_InspectorReferenceData = dart.constFn(dart.fnType(SetOf_InspectorReferenceData(), [])))();
  var JSArrayOfDiagnosticsNode = () => (JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics$.DiagnosticsNode)))();
  var StringToString = () => (StringToString = dart.constFn(dart.fnType(core.String, [core.String])))();
  var MapNOfString$ObjectN = () => (MapNOfString$ObjectN = dart.constFn(dart.nullable(MapOfString$ObjectN())))();
  var _DiagnosticsPathNodeToMapNOfString$ObjectN = () => (_DiagnosticsPathNodeToMapNOfString$ObjectN = dart.constFn(dart.fnType(MapNOfString$ObjectN(), [widget_inspector._DiagnosticsPathNode])))();
  var _DiagnosticsPathNodeL = () => (_DiagnosticsPathNodeL = dart.constFn(dart.legacy(widget_inspector._DiagnosticsPathNode)))();
  var JSArrayOfRenderObject = () => (JSArrayOfRenderObject = dart.constFn(_interceptors.JSArray$(object$.RenderObject)))();
  var RenderObjectN = () => (RenderObjectN = dart.constFn(dart.nullable(object$.RenderObject)))();
  var DiagnosticsNodeTobool = () => (DiagnosticsNodeTobool = dart.constFn(dart.fnType(core.bool, [diagnostics$.DiagnosticsNode])))();
  var DiagnosticsNodeN = () => (DiagnosticsNodeN = dart.constFn(dart.nullable(diagnostics$.DiagnosticsNode)))();
  var DiagnosticsNodeL = () => (DiagnosticsNodeL = dart.constFn(dart.legacy(diagnostics$.DiagnosticsNode)))();
  var ImageN = () => (ImageN = dart.constFn(dart.nullable(ui.Image)))();
  var _LocationL = () => (_LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))();
  var DebugCreatorN = () => (DebugCreatorN = dart.constFn(dart.nullable(framework.DebugCreator)))();
  var ElementTobool = () => (ElementTobool = dart.constFn(dart.fnType(core.bool, [framework.Element])))();
  var _LocationCountN = () => (_LocationCountN = dart.constFn(dart.nullable(widget_inspector._LocationCount)))();
  var JSArrayOf_LocationCountN = () => (JSArrayOf_LocationCountN = dart.constFn(_interceptors.JSArray$(_LocationCountN())))();
  var JSArrayOf_LocationCount = () => (JSArrayOf_LocationCount = dart.constFn(_interceptors.JSArray$(widget_inspector._LocationCount)))();
  var ListOfint = () => (ListOfint = dart.constFn(core.List$(core.int)))();
  var IdentityMapOfString$ListOfint = () => (IdentityMapOfString$ListOfint = dart.constFn(_js_helper.IdentityMap$(core.String, ListOfint())))();
  var JSArrayOfint = () => (JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))();
  var VoidToListOfint = () => (VoidToListOfint = dart.constFn(dart.fnType(ListOfint(), [])))();
  var StateOfStatefulWidget = () => (StateOfStatefulWidget = dart.constFn(framework.State$(framework.StatefulWidget)))();
  var GlobalKeyOfStateOfStatefulWidget = () => (GlobalKeyOfStateOfStatefulWidget = dart.constFn(framework.GlobalKey$(StateOfStatefulWidget())))();
  var VoidTovoid = () => (VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))();
  var RenderObjectTodouble = () => (RenderObjectTodouble = dart.constFn(dart.fnType(core.double, [object$.RenderObject])))();
  var RenderObjectAndRenderObjectToint = () => (RenderObjectAndRenderObjectToint = dart.constFn(dart.fnType(core.int, [object$.RenderObject, object$.RenderObject])))();
  var _HashSetOfRenderObject = () => (_HashSetOfRenderObject = dart.constFn(collection._HashSet$(object$.RenderObject)))();
  var JSArrayOfWidget = () => (JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))();
  var EnumPropertyOf_StateLifecycle = () => (EnumPropertyOf_StateLifecycle = dart.constFn(diagnostics$.EnumProperty$(framework._StateLifecycle)))();
  var ObjectFlagPropertyOfStatefulElement = () => (ObjectFlagPropertyOfStatefulElement = dart.constFn(diagnostics$.ObjectFlagProperty$(framework.StatefulElement)))();
  var JSArrayOf_TransformedRect = () => (JSArrayOf_TransformedRect = dart.constFn(_interceptors.JSArray$(widget_inspector._TransformedRect)))();
  var TextSpanN = () => (TextSpanN = dart.constFn(dart.nullable(text_span.TextSpan)))();
  var JSArrayOfOffset = () => (JSArrayOfOffset = dart.constFn(_interceptors.JSArray$(ui.Offset)))();
  var _LocationToMapOfString$ObjectN = () => (_LocationToMapOfString$ObjectN = dart.constFn(dart.fnType(MapOfString$ObjectN(), [widget_inspector._Location])))();
  var JSArrayOf_DiagnosticsPathNode = () => (JSArrayOf_DiagnosticsPathNode = dart.constFn(_interceptors.JSArray$(widget_inspector._DiagnosticsPathNode)))();
  var SyncIterableOfDiagnosticsNode = () => (SyncIterableOfDiagnosticsNode = dart.constFn(_js_helper.SyncIterable$(diagnostics$.DiagnosticsNode)))();
  var LinkedMapOf_Location$int = () => (LinkedMapOf_Location$int = dart.constFn(_js_helper.LinkedMap$(widget_inspector._Location, core.int)))();
  var JSArrayOf_Location = () => (JSArrayOf_Location = dart.constFn(_interceptors.JSArray$(widget_inspector._Location)))();
  var LogicalKeyboardKeyAndLogicalKeyboardKeyToint = () => (LogicalKeyboardKeyAndLogicalKeyboardKeyToint = dart.constFn(dart.fnType(core.int, [keyboard_key.LogicalKeyboardKey, keyboard_key.LogicalKeyboardKey])))();
  var LogicalKeyboardKeyToString = () => (LogicalKeyboardKeyToString = dart.constFn(dart.fnType(core.String, [keyboard_key.LogicalKeyboardKey])))();
  var SetOfLogicalKeyboardKey = () => (SetOfLogicalKeyboardKey = dart.constFn(core.Set$(keyboard_key.LogicalKeyboardKey)))();
  var DiagnosticsPropertyOfSetOfLogicalKeyboardKey = () => (DiagnosticsPropertyOfSetOfLogicalKeyboardKey = dart.constFn(diagnostics$.DiagnosticsProperty$(SetOfLogicalKeyboardKey())))();
  var LinkedHashSetOfLogicalKeyboardKey = () => (LinkedHashSetOfLogicalKeyboardKey = dart.constFn(collection.LinkedHashSet$(keyboard_key.LogicalKeyboardKey)))();
  var LogicalKeySetToString = () => (LogicalKeySetToString = dart.constFn(dart.fnType(core.String, [shortcuts$.LogicalKeySet])))();
  var LogicalKeySetL = () => (LogicalKeySetL = dart.constFn(dart.legacy(shortcuts$.LogicalKeySet)))();
  var IntentL = () => (IntentL = dart.constFn(dart.legacy(actions$.Intent)))();
  var MapOfLogicalKeySet$Intent = () => (MapOfLogicalKeySet$Intent = dart.constFn(core.Map$(shortcuts$.LogicalKeySet, actions$.Intent)))();
  var DiagnosticsPropertyOfMapOfLogicalKeySet$Intent = () => (DiagnosticsPropertyOfMapOfLogicalKeySet$Intent = dart.constFn(diagnostics$.DiagnosticsProperty$(MapOfLogicalKeySet$Intent())))();
  var DiagnosticsPropertyOfShortcutManager = () => (DiagnosticsPropertyOfShortcutManager = dart.constFn(diagnostics$.DiagnosticsProperty$(shortcuts$.ShortcutManager)))();
  var DurationTovoid = () => (DurationTovoid = dart.constFn(dart.fnType(dart.void, [core.Duration])))();
  var SemanticsNodeTobool = () => (SemanticsNodeTobool = dart.constFn(dart.fnType(core.bool, [semantics.SemanticsNode])))();
  var _IntentionToReportRouteInformationL = () => (_IntentionToReportRouteInformationL = dart.constFn(dart.legacy(router._IntentionToReportRouteInformation)))();
  var SynchronousFutureOfbool = () => (SynchronousFutureOfbool = dart.constFn(synchronous_future.SynchronousFuture$(core.bool)))();
  var boolToSynchronousFutureOfbool = () => (boolToSynchronousFutureOfbool = dart.constFn(dart.fnType(SynchronousFutureOfbool(), [core.bool])))();
  var SynchronousFutureOfvoid = () => (SynchronousFutureOfvoid = dart.constFn(synchronous_future.SynchronousFuture$(dart.void)))();
  var voidToFuture = () => (voidToFuture = dart.constFn(dart.fnType(async.Future, [dart.void])))();
  var IterableOfDiagnosticsNode = () => (IterableOfDiagnosticsNode = dart.constFn(core.Iterable$(diagnostics$.DiagnosticsNode)))();
  var VoidToIterableOfDiagnosticsNode = () => (VoidToIterableOfDiagnosticsNode = dart.constFn(dart.fnType(IterableOfDiagnosticsNode(), [])))();
  var LinkedHashSetOfChildBackButtonDispatcher = () => (LinkedHashSetOfChildBackButtonDispatcher = dart.constFn(collection.LinkedHashSet$(router.ChildBackButtonDispatcher)))();
  var boolToFutureOfbool = () => (boolToFutureOfbool = dart.constFn(dart.fnType(FutureOfbool(), [core.bool])))();
  var ColorN = () => (ColorN = dart.constFn(dart.nullable(ui.Color)))();
  var AnimationOfColorN = () => (AnimationOfColorN = dart.constFn(animation.Animation$(ColorN())))();
  var DiagnosticsPropertyOfListenable = () => (DiagnosticsPropertyOfListenable = dart.constFn(diagnostics$.DiagnosticsProperty$(change_notifier.Listenable)))();
  var GestureRecognizerFactoryOfGestureRecognizer = () => (GestureRecognizerFactoryOfGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactory$(recognizer.GestureRecognizer)))();
  var LinkedMapOfType$GestureRecognizerFactoryOfGestureRecognizer = () => (LinkedMapOfType$GestureRecognizerFactoryOfGestureRecognizer = dart.constFn(_js_helper.LinkedMap$(core.Type, GestureRecognizerFactoryOfGestureRecognizer())))();
  var JSArrayOfOverlayEntry = () => (JSArrayOfOverlayEntry = dart.constFn(_interceptors.JSArray$(overlay$.OverlayEntry)))();
  var ValueNotifierOfStringN = () => (ValueNotifierOfStringN = dart.constFn(change_notifier.ValueNotifier$(StringN())))();
  var OverlayEntryL = () => (OverlayEntryL = dart.constFn(dart.legacy(overlay$.OverlayEntry)))();
  var voidToNull = () => (voidToNull = dart.constFn(dart.fnType(core.Null, [dart.void])))();
  var _RouteEntryN = () => (_RouteEntryN = dart.constFn(dart.nullable(navigator$._RouteEntry)))();
  var _RouteEntryNTobool = () => (_RouteEntryNTobool = dart.constFn(dart.fnType(core.bool, [_RouteEntryN()])))();
  var VoidToNull = () => (VoidToNull = dart.constFn(dart.fnType(core.Null, [])))();
  var AnimationStatusTovoid = () => (AnimationStatusTovoid = dart.constFn(dart.fnType(dart.void, [animation.AnimationStatus])))();
  var dynamicToNull = () => (dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))();
  var JSArrayOfLocalHistoryEntry = () => (JSArrayOfLocalHistoryEntry = dart.constFn(_interceptors.JSArray$(routes.LocalHistoryEntry)))();
  var ActionOfIntent = () => (ActionOfIntent = dart.constFn(actions$.Action$(actions$.Intent)))();
  var ActionOfIntentTovoid = () => (ActionOfIntentTovoid = dart.constFn(dart.fnType(dart.void, [ActionOfIntent()])))();
  var ObserverListOfActionOfIntentTovoid = () => (ObserverListOfActionOfIntentTovoid = dart.constFn(observer_list.ObserverList$(ActionOfIntentTovoid())))();
  var ListOfActionOfIntentTovoid = () => (ListOfActionOfIntentTovoid = dart.constFn(core.List$(ActionOfIntentTovoid())))();
  var JSArrayOfListenable = () => (JSArrayOfListenable = dart.constFn(_interceptors.JSArray$(change_notifier.Listenable)))();
  var WidgetN = () => (WidgetN = dart.constFn(dart.nullable(framework.Widget)))();
  var BuildContextAndWidgetNToRestorationScope = () => (BuildContextAndWidgetNToRestorationScope = dart.constFn(dart.fnType(restoration$.RestorationScope, [framework.BuildContext, WidgetN()])))();
  var LinkedMapOfType$ActionOfIntent = () => (LinkedMapOfType$ActionOfIntent = dart.constFn(_js_helper.LinkedMap$(core.Type, ActionOfIntent())))();
  var ValueNotifierOfbool = () => (ValueNotifierOfbool = dart.constFn(change_notifier.ValueNotifier$(core.bool)))();
  var BuildContextAndWidgetNToIgnorePointer = () => (BuildContextAndWidgetNToIgnorePointer = dart.constFn(dart.fnType(basic.IgnorePointer, [framework.BuildContext, WidgetN()])))();
  var BuildContextAndWidgetNToWidget = () => (BuildContextAndWidgetNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, WidgetN()])))();
  var BuildContextToWidget = () => (BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))();
  var BuildContextToActions = () => (BuildContextToActions = dart.constFn(dart.fnType(actions$.Actions, [framework.BuildContext])))();
  var JSArrayOfVoidToFutureOfbool = () => (JSArrayOfVoidToFutureOfbool = dart.constFn(_interceptors.JSArray$(VoidToFutureOfbool())))();
  var RouteTobool = () => (RouteTobool = dart.constFn(dart.fnType(core.bool, [navigator$.Route])))();
  var ListOfVoidToFutureOfbool = () => (ListOfVoidToFutureOfbool = dart.constFn(core.List$(VoidToFutureOfbool())))();
  var SyncIterableOfOverlayEntry = () => (SyncIterableOfOverlayEntry = dart.constFn(_js_helper.SyncIterable$(overlay$.OverlayEntry)))();
  var SetOfRouteAware = () => (SetOfRouteAware = dart.constFn(core.Set$(routes.RouteAware)))();
  var LinkedHashSetOfRouteAware = () => (LinkedHashSetOfRouteAware = dart.constFn(collection.LinkedHashSet$(routes.RouteAware)))();
  var VoidToSetOfRouteAware = () => (VoidToSetOfRouteAware = dart.constFn(dart.fnType(SetOfRouteAware(), [])))();
  var AnimationOfdouble = () => (AnimationOfdouble = dart.constFn(animation.Animation$(core.double)))();
  var BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget = () => (BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, AnimationOfdouble(), AnimationOfdouble(), framework.Widget])))();
  var HeroFlightDirectionL = () => (HeroFlightDirectionL = dart.constFn(dart.legacy(heroes.HeroFlightDirection)))();
  var LinkedMapOfObject$_HeroState = () => (LinkedMapOfObject$_HeroState = dart.constFn(_js_helper.LinkedMap$(core.Object, heroes._HeroState)))();
  var DiagnosticsPropertyOfStatefulElement = () => (DiagnosticsPropertyOfStatefulElement = dart.constFn(diagnostics$.DiagnosticsProperty$(framework.StatefulElement)))();
  var StatefulElementAndObjectTovoid = () => (StatefulElementAndObjectTovoid = dart.constFn(dart.fnType(dart.void, [framework.StatefulElement, core.Object])))();
  var ElementTovoid = () => (ElementTovoid = dart.constFn(dart.fnType(dart.void, [framework.Element])))();
  var DiagnosticsPropertyOfObject = () => (DiagnosticsPropertyOfObject = dart.constFn(diagnostics$.DiagnosticsProperty$(core.Object)))();
  var RenderBoxN = () => (RenderBoxN = dart.constFn(dart.nullable(box$.RenderBox)))();
  var BuildContextAndWidgetNToPositioned = () => (BuildContextAndWidgetNToPositioned = dart.constFn(dart.fnType(basic.Positioned, [framework.BuildContext, WidgetN()])))();
  var RectN = () => (RectN = dart.constFn(dart.nullable(ui.Rect)))();
  var ReverseTweenOfRectN = () => (ReverseTweenOfRectN = dart.constFn(tween.ReverseTween$(RectN())))();
  var TweenOfdouble = () => (TweenOfdouble = dart.constFn(tween.Tween$(core.double)))();
  var LinkedMapOfObject$_HeroFlight = () => (LinkedMapOfObject$_HeroFlight = dart.constFn(_js_helper.LinkedMap$(core.Object, heroes._HeroFlight)))();
  var _HeroFlightTobool = () => (_HeroFlightTobool = dart.constFn(dart.fnType(core.bool, [heroes._HeroFlight])))();
  var BuildContextAndAnimationOfdoubleAndHeroFlightDirection__ToWidget = () => (BuildContextAndAnimationOfdoubleAndHeroFlightDirection__ToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, AnimationOfdouble(), heroes.HeroFlightDirection, framework.BuildContext, framework.BuildContext])))();
  var RoutePopDispositionL = () => (RoutePopDispositionL = dart.constFn(dart.legacy(navigator$.RoutePopDisposition)))();
  var JSArrayOfRouteTransitionRecord = () => (JSArrayOfRouteTransitionRecord = dart.constFn(_interceptors.JSArray$(navigator$.RouteTransitionRecord)))();
  var RouteTransitionRecordN = () => (RouteTransitionRecordN = dart.constFn(dart.nullable(navigator$.RouteTransitionRecord)))();
  var RouteTransitionRecordNAndboolTovoid = () => (RouteTransitionRecordNAndboolTovoid = dart.constFn(dart.fnType(dart.void, [RouteTransitionRecordN(), core.bool])))();
  var PageL = () => (PageL = dart.constFn(dart.legacy(navigator$.Page)))();
  var ListOfRoute = () => (ListOfRoute = dart.constFn(core.List$(navigator$.Route)))();
  var NavigatorStateAndStringToListOfRoute = () => (NavigatorStateAndStringToListOfRoute = dart.constFn(dart.fnType(ListOfRoute(), [navigator$.NavigatorState, core.String])))();
  var NavigatorObserverL = () => (NavigatorObserverL = dart.constFn(dart.legacy(navigator$.NavigatorObserver)))();
  var RouteN = () => (RouteN = dart.constFn(dart.nullable(navigator$.Route)))();
  var JSArrayOfRouteN = () => (JSArrayOfRouteN = dart.constFn(_interceptors.JSArray$(RouteN())))();
  var RouteNTobool = () => (RouteNTobool = dart.constFn(dart.fnType(core.bool, [RouteN()])))();
  var _RouteLifecycleL = () => (_RouteLifecycleL = dart.constFn(dart.legacy(navigator$._RouteLifecycle)))();
  var PageOfObjectN = () => (PageOfObjectN = dart.constFn(navigator$.Page$(ObjectN())))();
  var OverlayEntryTobool = () => (OverlayEntryTobool = dart.constFn(dart.fnType(core.bool, [overlay$.OverlayEntry])))();
  var VoidToFn = () => (VoidToFn = dart.constFn(dart.fnType(VoidTovoid(), [])))();
  var FnTodynamic = () => (FnTodynamic = dart.constFn(dart.fnType(dart.dynamic, [VoidTovoid()])))();
  var _RouteEntryTobool = () => (_RouteEntryTobool = dart.constFn(dart.fnType(core.bool, [navigator$._RouteEntry])))();
  var JSArrayOf_RouteEntry = () => (JSArrayOf_RouteEntry = dart.constFn(_interceptors.JSArray$(navigator$._RouteEntry)))();
  var ListQueueOf_NavigatorObservation = () => (ListQueueOf_NavigatorObservation = dart.constFn(collection.ListQueue$(navigator$._NavigatorObservation)))();
  var RestorableNumOfint = () => (RestorableNumOfint = dart.constFn(restoration_properties.RestorableNum$(core.int)))();
  var LinkedHashSetOfint = () => (LinkedHashSetOfint = dart.constFn(collection.LinkedHashSet$(core.int)))();
  var HeroControllerScopeN = () => (HeroControllerScopeN = dart.constFn(dart.nullable(navigator$.HeroControllerScope)))();
  var GlobalKeyOfOverlayState = () => (GlobalKeyOfOverlayState = dart.constFn(framework.GlobalKey$(overlay$.OverlayState)))();
  var RouteTo_RouteEntry = () => (RouteTo_RouteEntry = dart.constFn(dart.fnType(navigator$._RouteEntry, [navigator$.Route])))();
  var JSArrayOfNavigatorObserver = () => (JSArrayOfNavigatorObserver = dart.constFn(_interceptors.JSArray$(navigator$.NavigatorObserver)))();
  var LinkedHashSetOfKey = () => (LinkedHashSetOfKey = dart.constFn(collection.LinkedHashSet$(key.Key)))();
  var ListOf_RouteEntry = () => (ListOf_RouteEntry = dart.constFn(core.List$(navigator$._RouteEntry)))();
  var LinkedMapOf_RouteEntryN$ListOf_RouteEntry = () => (LinkedMapOf_RouteEntryN$ListOf_RouteEntry = dart.constFn(_js_helper.LinkedMap$(_RouteEntryN(), ListOf_RouteEntry())))();
  var VoidToListOf_RouteEntry = () => (VoidToListOf_RouteEntry = dart.constFn(dart.fnType(ListOf_RouteEntry(), [])))();
  var LinkedMapOfLocalKey$_RouteEntry = () => (LinkedMapOfLocalKey$_RouteEntry = dart.constFn(_js_helper.LinkedMap$(key.LocalKey, navigator$._RouteEntry)))();
  var LinkedMapOfRouteTransitionRecordN$RouteTransitionRecord = () => (LinkedMapOfRouteTransitionRecordN$RouteTransitionRecord = dart.constFn(_js_helper.LinkedMap$(RouteTransitionRecordN(), navigator$.RouteTransitionRecord)))();
  var DiagnosticsPropertyOfNavigatorState = () => (DiagnosticsPropertyOfNavigatorState = dart.constFn(diagnostics$.DiagnosticsProperty$(navigator$.NavigatorState)))();
  var ObjectNToString = () => (ObjectNToString = dart.constFn(dart.fnType(core.String, [ObjectN()])))();
  var LinkedHashSetOf_WidgetTicker = () => (LinkedHashSetOf_WidgetTicker = dart.constFn(collection.LinkedHashSet$(ticker_provider._WidgetTicker)))();
  var SetOfTicker = () => (SetOfTicker = dart.constFn(core.Set$(ticker.Ticker)))();
  var DiagnosticsPropertyOfSetOfTicker = () => (DiagnosticsPropertyOfSetOfTicker = dart.constFn(diagnostics$.DiagnosticsProperty$(SetOfTicker())))();
  var RestorablePropertyOfObjectN = () => (RestorablePropertyOfObjectN = dart.constFn(restoration$.RestorableProperty$(ObjectN())))();
  var LinkedMapOfRestorablePropertyOfObjectN$VoidTovoid = () => (LinkedMapOfRestorablePropertyOfObjectN$VoidTovoid = dart.constFn(_js_helper.LinkedMap$(RestorablePropertyOfObjectN(), VoidTovoid())))();
  var RestorablePropertyOfObjectNToStringN = () => (RestorablePropertyOfObjectNToStringN = dart.constFn(dart.fnType(StringN(), [RestorablePropertyOfObjectN()])))();
  var RestorablePropertyOfObjectNToErrorDescription = () => (RestorablePropertyOfObjectNToErrorDescription = dart.constFn(dart.fnType(assertions.ErrorDescription, [RestorablePropertyOfObjectN()])))();
  var RestorablePropertyOfObjectNAndFnTovoid = () => (RestorablePropertyOfObjectNAndFnTovoid = dart.constFn(dart.fnType(dart.void, [RestorablePropertyOfObjectN(), VoidTovoid()])))();
  var _RouteRestorationTypeL = () => (_RouteRestorationTypeL = dart.constFn(dart.legacy(navigator$._RouteRestorationType)))();
  var ListOfObjectN = () => (ListOfObjectN = dart.constFn(core.List$(ObjectN())))();
  var JSArrayOfObject = () => (JSArrayOfObject = dart.constFn(_interceptors.JSArray$(core.Object)))();
  var BuildContextAndObjectNToRoute = () => (BuildContextAndObjectNToRoute = dart.constFn(dart.fnType(navigator$.Route, [framework.BuildContext, ObjectN()])))();
  var ListOfObject = () => (ListOfObject = dart.constFn(core.List$(core.Object)))();
  var IdentityMapOfString$ListOfObject = () => (IdentityMapOfString$ListOfObject = dart.constFn(_js_helper.IdentityMap$(core.String, ListOfObject())))();
  var ObjectL = () => (ObjectL = dart.constFn(dart.legacy(core.Object)))();
  var IdentityMapOfStringN$ListOfObject = () => (IdentityMapOfStringN$ListOfObject = dart.constFn(_js_helper.IdentityMap$(StringN(), ListOfObject())))();
  var MapEntryOfStringN$ListOfObject = () => (MapEntryOfStringN$ListOfObject = dart.constFn(core.MapEntry$(StringN(), ListOfObject())))();
  var dynamicAnddynamicToMapEntryOfStringN$ListOfObject = () => (dynamicAnddynamicToMapEntryOfStringN$ListOfObject = dart.constFn(dart.fnType(MapEntryOfStringN$ListOfObject(), [dart.dynamic, dart.dynamic])))();
  var MapOfStringN$ListOfObject = () => (MapOfStringN$ListOfObject = dart.constFn(core.Map$(StringN(), ListOfObject())))();
  var MapNOfStringN$ListOfObject = () => (MapNOfStringN$ListOfObject = dart.constFn(dart.nullable(MapOfStringN$ListOfObject())))();
  var BuildContextToNavigatorState = () => (BuildContextToNavigatorState = dart.constFn(dart.fnType(navigator$.NavigatorState, [framework.BuildContext])))();
  var TableRowL = () => (TableRowL = dart.constFn(dart.legacy(table$.TableRow)))();
  var TableRowTobool = () => (TableRowTobool = dart.constFn(dart.fnType(core.bool, [table$.TableRow])))();
  var WidgetTobool = () => (WidgetTobool = dart.constFn(dart.fnType(core.bool, [framework.Widget])))();
  var DecorationN = () => (DecorationN = dart.constFn(dart.nullable(decoration.Decoration)))();
  var TableRowToDecorationN = () => (TableRowToDecorationN = dart.constFn(dart.fnType(DecorationN(), [table$.TableRow])))();
  var ListOfWidget = () => (ListOfWidget = dart.constFn(core.List$(framework.Widget)))();
  var TableRowToListOfWidget = () => (TableRowToListOfWidget = dart.constFn(dart.fnType(ListOfWidget(), [table$.TableRow])))();
  var _TableElementRowL = () => (_TableElementRowL = dart.constFn(dart.legacy(table$._TableElementRow)))();
  var _HashSetOfElement = () => (_HashSetOfElement = dart.constFn(collection._HashSet$(framework.Element)))();
  var WidgetToElement = () => (WidgetToElement = dart.constFn(dart.fnType(framework.Element, [framework.Widget])))();
  var TableRowTo_TableElementRow = () => (TableRowTo_TableElementRow = dart.constFn(dart.fnType(table$._TableElementRow, [table$.TableRow])))();
  var ListOfElement = () => (ListOfElement = dart.constFn(core.List$(framework.Element)))();
  var LinkedMapOfLocalKey$ListOfElement = () => (LinkedMapOfLocalKey$ListOfElement = dart.constFn(_js_helper.LinkedMap$(key.LocalKey, ListOfElement())))();
  var _TableElementRowTobool = () => (_TableElementRowTobool = dart.constFn(dart.fnType(core.bool, [table$._TableElementRow])))();
  var JSArrayOf_TableElementRow = () => (JSArrayOf_TableElementRow = dart.constFn(_interceptors.JSArray$(table$._TableElementRow)))();
  var LinkedHashSetOfListOfElement = () => (LinkedHashSetOfListOfElement = dart.constFn(collection.LinkedHashSet$(ListOfElement())))();
  var ElementL = () => (ElementL = dart.constFn(dart.legacy(framework.Element)))();
  var WidgetL = () => (WidgetL = dart.constFn(dart.legacy(framework.Widget)))();
  var ListOfElementTobool = () => (ListOfElementTobool = dart.constFn(dart.fnType(core.bool, [ListOfElement()])))();
  var ElementToRenderBox = () => (ElementToRenderBox = dart.constFn(dart.fnType(box$.RenderBox, [framework.Element])))();
  var IterableOfRenderBox = () => (IterableOfRenderBox = dart.constFn(core.Iterable$(box$.RenderBox)))();
  var _TableElementRowToIterableOfRenderBox = () => (_TableElementRowToIterableOfRenderBox = dart.constFn(dart.fnType(IterableOfRenderBox(), [table$._TableElementRow])))();
  var _TableElementRowToListOfElement = () => (_TableElementRowToListOfElement = dart.constFn(dart.fnType(ListOfElement(), [table$._TableElementRow])))();
  var RenderObjectElementN = () => (RenderObjectElementN = dart.constFn(dart.nullable(framework.RenderObjectElement)))();
  var ParentDataElementOfParentData = () => (ParentDataElementOfParentData = dart.constFn(framework.ParentDataElement$(object$.ParentData)))();
  var JSArrayOfParentDataElementOfParentData = () => (JSArrayOfParentDataElementOfParentData = dart.constFn(_interceptors.JSArray$(ParentDataElementOfParentData())))();
  var ElementN = () => (ElementN = dart.constFn(dart.nullable(framework.Element)))();
  var ElementToElementN = () => (ElementToElementN = dart.constFn(dart.fnType(ElementN(), [framework.Element])))();
  var IndexedSlotOfElementN = () => (IndexedSlotOfElementN = dart.constFn(framework.IndexedSlot$(ElementN())))();
  var LinkedMapOfKey$Element = () => (LinkedMapOfKey$Element = dart.constFn(_js_helper.LinkedMap$(key.Key, framework.Element)))();
  var VoidToNever = () => (VoidToNever = dart.constFn(dart.fnType(dart.Never, [])))();
  var DiagnosticsPropertyOfRenderObject = () => (DiagnosticsPropertyOfRenderObject = dart.constFn(diagnostics$.DiagnosticsProperty$(object$.RenderObject)))();
  var JSArrayOfElement = () => (JSArrayOfElement = dart.constFn(_interceptors.JSArray$(framework.Element)))();
  var DiagnosticsPropertyOfElement = () => (DiagnosticsPropertyOfElement = dart.constFn(diagnostics$.DiagnosticsProperty$(framework.Element)))();
  var ElementToDiagnosticsPropertyOfElement = () => (ElementToDiagnosticsPropertyOfElement = dart.constFn(dart.fnType(DiagnosticsPropertyOfElement(), [framework.Element])))();
  var DiagnosticsPropertyOfGlobalKeyOfStateOfStatefulWidget = () => (DiagnosticsPropertyOfGlobalKeyOfStateOfStatefulWidget = dart.constFn(diagnostics$.DiagnosticsProperty$(GlobalKeyOfStateOfStatefulWidget())))();
  var DiagnosticsPropertyOfWidget = () => (DiagnosticsPropertyOfWidget = dart.constFn(diagnostics$.DiagnosticsProperty$(framework.Widget)))();
  var _HashSetOfInheritedElement = () => (_HashSetOfInheritedElement = dart.constFn(collection._HashSet$(framework.InheritedElement)))();
  var StatefulElementN = () => (StatefulElementN = dart.constFn(dart.nullable(framework.StatefulElement)))();
  var ObjectFlagPropertyOfint = () => (ObjectFlagPropertyOfint = dart.constFn(diagnostics$.ObjectFlagProperty$(core.int)))();
  var ObjectFlagPropertyOfWidget = () => (ObjectFlagPropertyOfWidget = dart.constFn(diagnostics$.ObjectFlagProperty$(framework.Widget)))();
  var DiagnosticsPropertyOfKey = () => (DiagnosticsPropertyOfKey = dart.constFn(diagnostics$.DiagnosticsProperty$(key.Key)))();
  var InheritedElementToDiagnosticsNode = () => (InheritedElementToDiagnosticsNode = dart.constFn(dart.fnType(diagnostics$.DiagnosticsNode, [framework.InheritedElement])))();
  var ListOfDiagnosticsNode = () => (ListOfDiagnosticsNode = dart.constFn(core.List$(diagnostics$.DiagnosticsNode)))();
  var DiagnosticsPropertyOfListOfDiagnosticsNode = () => (DiagnosticsPropertyOfListOfDiagnosticsNode = dart.constFn(diagnostics$.DiagnosticsProperty$(ListOfDiagnosticsNode())))();
  var EnumPropertyOfTableCellVerticalAlignment = () => (EnumPropertyOfTableCellVerticalAlignment = dart.constFn(diagnostics$.EnumProperty$(table.TableCellVerticalAlignment)))();
  var JSArrayOfInheritedElement = () => (JSArrayOfInheritedElement = dart.constFn(_interceptors.JSArray$(framework.InheritedElement)))();
  var LinkedMapOfElement$ObjectN = () => (LinkedMapOfElement$ObjectN = dart.constFn(_js_helper.LinkedMap$(framework.Element, ObjectN())))();
  var HashMapOfType$InheritedElement = () => (HashMapOfType$InheritedElement = dart.constFn(collection.HashMap$(core.Type, framework.InheritedElement)))();
  var LinkedMapOfType$InheritedElement = () => (LinkedMapOfType$InheritedElement = dart.constFn(_js_helper.LinkedMap$(core.Type, framework.InheritedElement)))();
  var AnimationOfOffset = () => (AnimationOfOffset = dart.constFn(animation.Animation$(ui.Offset)))();
  var DiagnosticsPropertyOfAnimationOfdouble = () => (DiagnosticsPropertyOfAnimationOfdouble = dart.constFn(diagnostics$.DiagnosticsProperty$(AnimationOfdouble())))();
  var AnimationOfRelativeRect = () => (AnimationOfRelativeRect = dart.constFn(animation.Animation$(stack.RelativeRect)))();
  var AnimationOfRect = () => (AnimationOfRect = dart.constFn(animation.Animation$(ui.Rect)))();
  var AnimationOfAlignmentGeometry = () => (AnimationOfAlignmentGeometry = dart.constFn(animation.Animation$(alignment$.AlignmentGeometry)))();
  var AnimationOfTextStyle = () => (AnimationOfTextStyle = dart.constFn(animation.Animation$(text_style.TextStyle)))();
  var GlobalKeyOf_OverlayEntryWidgetState = () => (GlobalKeyOf_OverlayEntryWidgetState = dart.constFn(framework.GlobalKey$(overlay$._OverlayEntryWidgetState)))();
  var ListOfOverlayEntry = () => (ListOfOverlayEntry = dart.constFn(core.List$(overlay$.OverlayEntry)))();
  var LinkedHashSetOfOverlayEntry = () => (LinkedHashSetOfOverlayEntry = dart.constFn(collection.LinkedHashSet$(overlay$.OverlayEntry)))();
  var DiagnosticsPropertyOfListOfOverlayEntry = () => (DiagnosticsPropertyOfListOfOverlayEntry = dart.constFn(diagnostics$.DiagnosticsProperty$(ListOfOverlayEntry())))();
  var ContainerParentDataMixinOfRenderObject = () => (ContainerParentDataMixinOfRenderObject = dart.constFn(object$.ContainerParentDataMixin$(object$.RenderObject)))();
  var ContainerRenderObjectMixinOfRenderObject$ContainerParentDataMixinOfRenderObject = () => (ContainerRenderObjectMixinOfRenderObject$ContainerParentDataMixinOfRenderObject = dart.constFn(object$.ContainerRenderObjectMixin$(object$.RenderObject, ContainerParentDataMixinOfRenderObject())))();
  var RenderBoxTodouble = () => (RenderBoxTodouble = dart.constFn(dart.fnType(core.double, [box$.RenderBox])))();
  var OffsetN = () => (OffsetN = dart.constFn(dart.nullable(ui.Offset)))();
  var BoxHitTestResultAndOffsetNTobool = () => (BoxHitTestResultAndOffsetNTobool = dart.constFn(dart.fnType(core.bool, [box$.BoxHitTestResult, OffsetN()])))();
  var EnumPropertyOfTextDirection = () => (EnumPropertyOfTextDirection = dart.constFn(diagnostics$.EnumProperty$(ui.TextDirection)))();
  var TextSelectionHandleTypeL = () => (TextSelectionHandleTypeL = dart.constFn(dart.legacy(text_selection.TextSelectionHandleType)))();
  var _TextSelectionHandlePositionL = () => (_TextSelectionHandlePositionL = dart.constFn(dart.legacy(text_selection._TextSelectionHandlePosition)))();
  var TextSelectionTovoid = () => (TextSelectionTovoid = dart.constFn(dart.fnType(dart.void, [text_editing.TextSelection])))();
  var DiagnosticsPropertyOfTicker = () => (DiagnosticsPropertyOfTicker = dart.constFn(diagnostics$.DiagnosticsProperty$(ticker.Ticker)))();
  var GestureRecognizerFactoryWithHandlersOf_TransparentTapGestureRecognizer = () => (GestureRecognizerFactoryWithHandlersOf_TransparentTapGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(text_selection._TransparentTapGestureRecognizer)))();
  var VoidTo_TransparentTapGestureRecognizer = () => (VoidTo_TransparentTapGestureRecognizer = dart.constFn(dart.fnType(text_selection._TransparentTapGestureRecognizer, [])))();
  var _TransparentTapGestureRecognizerTovoid = () => (_TransparentTapGestureRecognizerTovoid = dart.constFn(dart.fnType(dart.void, [text_selection._TransparentTapGestureRecognizer])))();
  var GestureRecognizerFactoryWithHandlersOfLongPressGestureRecognizer = () => (GestureRecognizerFactoryWithHandlersOfLongPressGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(long_press.LongPressGestureRecognizer)))();
  var VoidToLongPressGestureRecognizer = () => (VoidToLongPressGestureRecognizer = dart.constFn(dart.fnType(long_press.LongPressGestureRecognizer, [])))();
  var LongPressGestureRecognizerTovoid = () => (LongPressGestureRecognizerTovoid = dart.constFn(dart.fnType(dart.void, [long_press.LongPressGestureRecognizer])))();
  var GestureRecognizerFactoryWithHandlersOfHorizontalDragGestureRecognizer = () => (GestureRecognizerFactoryWithHandlersOfHorizontalDragGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(monodrag.HorizontalDragGestureRecognizer)))();
  var VoidToHorizontalDragGestureRecognizer = () => (VoidToHorizontalDragGestureRecognizer = dart.constFn(dart.fnType(monodrag.HorizontalDragGestureRecognizer, [])))();
  var HorizontalDragGestureRecognizerTovoid = () => (HorizontalDragGestureRecognizerTovoid = dart.constFn(dart.fnType(dart.void, [monodrag.HorizontalDragGestureRecognizer])))();
  var GestureRecognizerFactoryWithHandlersOfForcePressGestureRecognizer = () => (GestureRecognizerFactoryWithHandlersOfForcePressGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(force_press.ForcePressGestureRecognizer)))();
  var VoidToForcePressGestureRecognizer = () => (VoidToForcePressGestureRecognizer = dart.constFn(dart.fnType(force_press.ForcePressGestureRecognizer, [])))();
  var ForcePressGestureRecognizerTovoid = () => (ForcePressGestureRecognizerTovoid = dart.constFn(dart.fnType(dart.void, [force_press.ForcePressGestureRecognizer])))();
  var ClipboardStatusL = () => (ClipboardStatusL = dart.constFn(dart.legacy(text_selection.ClipboardStatus)))();
  var InheritedThemeL = () => (InheritedThemeL = dart.constFn(dart.legacy(inherited_theme.InheritedTheme)))();
  var JSArrayOfInheritedTheme = () => (JSArrayOfInheritedTheme = dart.constFn(_interceptors.JSArray$(inherited_theme.InheritedTheme)))();
  var LinkedHashSetOfType = () => (LinkedHashSetOfType = dart.constFn(collection.LinkedHashSet$(core.Type)))();
  var boolTodynamic = () => (boolTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.bool])))();
  var BuildContextToDefaultTextStyle = () => (BuildContextToDefaultTextStyle = dart.constFn(dart.fnType(text.DefaultTextStyle, [framework.BuildContext])))();
  var EnumPropertyOfTextAlign = () => (EnumPropertyOfTextAlign = dart.constFn(diagnostics$.EnumProperty$(ui.TextAlign)))();
  var EnumPropertyOfTextOverflow = () => (EnumPropertyOfTextOverflow = dart.constFn(diagnostics$.EnumProperty$(paragraph.TextOverflow)))();
  var EnumPropertyOfTextWidthBasis = () => (EnumPropertyOfTextWidthBasis = dart.constFn(diagnostics$.EnumProperty$(text_painter.TextWidthBasis)))();
  var DiagnosticsPropertyOfTextHeightBehavior = () => (DiagnosticsPropertyOfTextHeightBehavior = dart.constFn(diagnostics$.DiagnosticsProperty$(ui.TextHeightBehavior)))();
  var JSArrayOfInlineSpan = () => (JSArrayOfInlineSpan = dart.constFn(_interceptors.JSArray$(inline_span.InlineSpan)))();
  var DiagnosticsPropertyOfLocale = () => (DiagnosticsPropertyOfLocale = dart.constFn(diagnostics$.DiagnosticsProperty$(ui.Locale)))();
  var EnumPropertyOfAxisDirection = () => (EnumPropertyOfAxisDirection = dart.constFn(diagnostics$.EnumProperty$(basic_types.AxisDirection)))();
  var DiagnosticsPropertyOfViewportOffset = () => (DiagnosticsPropertyOfViewportOffset = dart.constFn(diagnostics$.DiagnosticsProperty$(viewport_offset.ViewportOffset)))();
  var DiagnosticsPropertyOfdouble = () => (DiagnosticsPropertyOfdouble = dart.constFn(diagnostics$.DiagnosticsProperty$(core.double)))();
  var DiagnosticsPropertyOfCacheExtentStyle = () => (DiagnosticsPropertyOfCacheExtentStyle = dart.constFn(diagnostics$.DiagnosticsProperty$(viewport$.CacheExtentStyle)))();
  var RenderSliverN = () => (RenderSliverN = dart.constFn(dart.nullable(sliver.RenderSliver)))();
  var PointerEventToIOSScrollViewFlingVelocityTracker = () => (PointerEventToIOSScrollViewFlingVelocityTracker = dart.constFn(dart.fnType(velocity_tracker.IOSScrollViewFlingVelocityTracker, [events.PointerEvent])))();
  var PointerEventToVelocityTracker = () => (PointerEventToVelocityTracker = dart.constFn(dart.fnType(velocity_tracker.VelocityTracker, [events.PointerEvent])))();
  var DiagnosticsPropertyOfScrollBehavior = () => (DiagnosticsPropertyOfScrollBehavior = dart.constFn(diagnostics$.DiagnosticsProperty$(scroll_configuration.ScrollBehavior)))();
  var JSArrayOfTextSpan = () => (JSArrayOfTextSpan = dart.constFn(_interceptors.JSArray$(text_span.TextSpan)))();
  var RestorationBucketN = () => (RestorationBucketN = dart.constFn(dart.nullable(restoration.RestorationBucket)))();
  var RestorationBucketNToNull = () => (RestorationBucketNToNull = dart.constFn(dart.fnType(core.Null, [RestorationBucketN()])))();
  var doubleN = () => (doubleN = dart.constFn(dart.nullable(core.double)))();
  var LinkedHashSetOfSemanticsAction = () => (LinkedHashSetOfSemanticsAction = dart.constFn(collection.LinkedHashSet$(ui.SemanticsAction)))();
  var CompleterOfvoid = () => (CompleterOfvoid = dart.constFn(async.Completer$(dart.void)))();
  var JSArrayOfPageStorageKey = () => (JSArrayOfPageStorageKey = dart.constFn(_interceptors.JSArray$(page_storage.PageStorageKey)))();
  var LinkedMapOfObject$dynamic = () => (LinkedMapOfObject$dynamic = dart.constFn(_js_helper.LinkedMap$(core.Object, dart.dynamic)))();
  var ScrollPositionAlignmentPolicyL = () => (ScrollPositionAlignmentPolicyL = dart.constFn(dart.legacy(scroll_position.ScrollPositionAlignmentPolicy)))();
  var NotificationListenerOfNotification = () => (NotificationListenerOfNotification = dart.constFn(notification_listener.NotificationListener$(notification_listener.Notification)))();
  var ScrollNotificationTobool = () => (ScrollNotificationTobool = dart.constFn(dart.fnType(core.bool, [scroll_notification.ScrollNotification])))();
  var IdentityMapOfbool$bool = () => (IdentityMapOfbool$bool = dart.constFn(_js_helper.IdentityMap$(core.bool, core.bool)))();
  var NotificationListenerOfScrollNotification = () => (NotificationListenerOfScrollNotification = dart.constFn(notification_listener.NotificationListener$(scroll_notification.ScrollNotification)))();
  var _GlowStateL = () => (_GlowStateL = dart.constFn(dart.legacy(overscroll_indicator._GlowState)))();
  var DiagnosticsPropertyOfScrollPhysics = () => (DiagnosticsPropertyOfScrollPhysics = dart.constFn(diagnostics$.DiagnosticsProperty$(scroll_physics.ScrollPhysics)))();
  var DiagnosticsPropertyOfScrollMetrics = () => (DiagnosticsPropertyOfScrollMetrics = dart.constFn(diagnostics$.DiagnosticsProperty$(scroll_metrics.ScrollMetrics)))();
  var JSArrayOfScrollPosition = () => (JSArrayOfScrollPosition = dart.constFn(_interceptors.JSArray$(scroll_position.ScrollPosition)))();
  var JSArrayOfFutureOfvoid = () => (JSArrayOfFutureOfvoid = dart.constFn(_interceptors.JSArray$(FutureOfvoid())))();
  var ListOfScrollPosition = () => (ListOfScrollPosition = dart.constFn(core.List$(scroll_position.ScrollPosition)))();
  var LinkedMapOfScrollPosition$VoidTovoid = () => (LinkedMapOfScrollPosition$VoidTovoid = dart.constFn(_js_helper.LinkedMap$(scroll_position.ScrollPosition, VoidTovoid())))();
  var DiagnosticsPropertyOfScrollController = () => (DiagnosticsPropertyOfScrollController = dart.constFn(diagnostics$.DiagnosticsProperty$(scroll_controller.ScrollController)))();
  var GestureRecognizerFactoryWithHandlersOfTapGestureRecognizer = () => (GestureRecognizerFactoryWithHandlersOfTapGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(tap$.TapGestureRecognizer)))();
  var VoidToTapGestureRecognizer = () => (VoidToTapGestureRecognizer = dart.constFn(dart.fnType(tap$.TapGestureRecognizer, [])))();
  var TapGestureRecognizerTovoid = () => (TapGestureRecognizerTovoid = dart.constFn(dart.fnType(dart.void, [tap$.TapGestureRecognizer])))();
  var GestureRecognizerFactoryWithHandlersOfDoubleTapGestureRecognizer = () => (GestureRecognizerFactoryWithHandlersOfDoubleTapGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(multitap.DoubleTapGestureRecognizer)))();
  var VoidToDoubleTapGestureRecognizer = () => (VoidToDoubleTapGestureRecognizer = dart.constFn(dart.fnType(multitap.DoubleTapGestureRecognizer, [])))();
  var DoubleTapGestureRecognizerTovoid = () => (DoubleTapGestureRecognizerTovoid = dart.constFn(dart.fnType(dart.void, [multitap.DoubleTapGestureRecognizer])))();
  var GestureRecognizerFactoryWithHandlersOfVerticalDragGestureRecognizer = () => (GestureRecognizerFactoryWithHandlersOfVerticalDragGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(monodrag.VerticalDragGestureRecognizer)))();
  var VoidToVerticalDragGestureRecognizer = () => (VoidToVerticalDragGestureRecognizer = dart.constFn(dart.fnType(monodrag.VerticalDragGestureRecognizer, [])))();
  var VerticalDragGestureRecognizerTovoid = () => (VerticalDragGestureRecognizerTovoid = dart.constFn(dart.fnType(dart.void, [monodrag.VerticalDragGestureRecognizer])))();
  var GestureRecognizerFactoryWithHandlersOfPanGestureRecognizer = () => (GestureRecognizerFactoryWithHandlersOfPanGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(monodrag.PanGestureRecognizer)))();
  var VoidToPanGestureRecognizer = () => (VoidToPanGestureRecognizer = dart.constFn(dart.fnType(monodrag.PanGestureRecognizer, [])))();
  var PanGestureRecognizerTovoid = () => (PanGestureRecognizerTovoid = dart.constFn(dart.fnType(dart.void, [monodrag.PanGestureRecognizer])))();
  var GestureRecognizerFactoryWithHandlersOfScaleGestureRecognizer = () => (GestureRecognizerFactoryWithHandlersOfScaleGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(scale.ScaleGestureRecognizer)))();
  var VoidToScaleGestureRecognizer = () => (VoidToScaleGestureRecognizer = dart.constFn(dart.fnType(scale.ScaleGestureRecognizer, [])))();
  var ScaleGestureRecognizerTovoid = () => (ScaleGestureRecognizerTovoid = dart.constFn(dart.fnType(dart.void, [scale.ScaleGestureRecognizer])))();
  var EnumPropertyOfDragStartBehavior = () => (EnumPropertyOfDragStartBehavior = dart.constFn(diagnostics$.EnumProperty$(recognizer.DragStartBehavior)))();
  var TypeL = () => (TypeL = dart.constFn(dart.legacy(core.Type)))();
  var GestureRecognizerL = () => (GestureRecognizerL = dart.constFn(dart.legacy(recognizer.GestureRecognizer)))();
  var GestureRecognizerFactoryOfGestureRecognizerL = () => (GestureRecognizerFactoryOfGestureRecognizerL = dart.constFn(gesture_detector.GestureRecognizerFactory$(GestureRecognizerL())))();
  var GestureRecognizerFactoryLOfGestureRecognizerL = () => (GestureRecognizerFactoryLOfGestureRecognizerL = dart.constFn(dart.legacy(GestureRecognizerFactoryOfGestureRecognizerL())))();
  var RenderSemanticsGestureHandlerN = () => (RenderSemanticsGestureHandlerN = dart.constFn(dart.nullable(proxy_box.RenderSemanticsGestureHandler)))();
  var LinkedMapOfType$GestureRecognizer = () => (LinkedMapOfType$GestureRecognizer = dart.constFn(_js_helper.LinkedMap$(core.Type, recognizer.GestureRecognizer)))();
  var GestureRecognizerToString = () => (GestureRecognizerToString = dart.constFn(dart.fnType(core.String, [recognizer.GestureRecognizer])))();
  var IterablePropertyOfString = () => (IterablePropertyOfString = dart.constFn(diagnostics$.IterableProperty$(core.String)))();
  var IterablePropertyOfGestureRecognizer = () => (IterablePropertyOfGestureRecognizer = dart.constFn(diagnostics$.IterableProperty$(recognizer.GestureRecognizer)))();
  var DiagnosticsPropertyOfbool = () => (DiagnosticsPropertyOfbool = dart.constFn(diagnostics$.DiagnosticsProperty$(core.bool)))();
  var DiagnosticsPropertyOfSemanticsGestureDelegate = () => (DiagnosticsPropertyOfSemanticsGestureDelegate = dart.constFn(diagnostics$.DiagnosticsProperty$(gesture_detector.SemanticsGestureDelegate)))();
  var EnumPropertyOfHitTestBehavior = () => (EnumPropertyOfHitTestBehavior = dart.constFn(diagnostics$.EnumProperty$(proxy_box.HitTestBehavior)))();
  var TapGestureRecognizerN = () => (TapGestureRecognizerN = dart.constFn(dart.nullable(tap$.TapGestureRecognizer)))();
  var LongPressGestureRecognizerN = () => (LongPressGestureRecognizerN = dart.constFn(dart.nullable(long_press.LongPressGestureRecognizer)))();
  var HorizontalDragGestureRecognizerN = () => (HorizontalDragGestureRecognizerN = dart.constFn(dart.nullable(monodrag.HorizontalDragGestureRecognizer)))();
  var PanGestureRecognizerN = () => (PanGestureRecognizerN = dart.constFn(dart.nullable(monodrag.PanGestureRecognizer)))();
  var DragUpdateDetailsTovoid = () => (DragUpdateDetailsTovoid = dart.constFn(dart.fnType(dart.void, [drag_details.DragUpdateDetails])))();
  var VerticalDragGestureRecognizerN = () => (VerticalDragGestureRecognizerN = dart.constFn(dart.nullable(monodrag.VerticalDragGestureRecognizer)))();
  var _ScrollableScopeN = () => (_ScrollableScopeN = dart.constFn(dart.nullable(scrollable$._ScrollableScope)))();
  var ListOfvoid = () => (ListOfvoid = dart.constFn(core.List$(dart.void)))();
  var ListOfvoidToNull = () => (ListOfvoidToNull = dart.constFn(dart.fnType(core.Null, [ListOfvoid()])))();
  var GlobalKeyOfRawGestureDetectorState = () => (GlobalKeyOfRawGestureDetectorState = dart.constFn(framework.GlobalKey$(gesture_detector.RawGestureDetectorState)))();
  var DiagnosticsPropertyOfScrollPosition = () => (DiagnosticsPropertyOfScrollPosition = dart.constFn(diagnostics$.DiagnosticsProperty$(scroll_position.ScrollPosition)))();
  var JSArrayOfSemanticsNode = () => (JSArrayOfSemanticsNode = dart.constFn(_interceptors.JSArray$(semantics.SemanticsNode)))();
  var ScrollIncrementTypeL = () => (ScrollIncrementTypeL = dart.constFn(dart.legacy(scrollable$.ScrollIncrementType)))();
  var OrientationL = () => (OrientationL = dart.constFn(dart.legacy(media_query.Orientation)))();
  var DiagnosticsPropertyOfMediaQueryData = () => (DiagnosticsPropertyOfMediaQueryData = dart.constFn(diagnostics$.DiagnosticsProperty$(media_query.MediaQueryData)))();
  var NavigationModeL = () => (NavigationModeL = dart.constFn(dart.legacy(media_query.NavigationMode)))();
  var ImageProviderOfObject = () => (ImageProviderOfObject = dart.constFn(image_provider.ImageProvider$(core.Object)))();
  var DiagnosticsPropertyOfImageProviderOfObject = () => (DiagnosticsPropertyOfImageProviderOfObject = dart.constFn(diagnostics$.DiagnosticsProperty$(ImageProviderOfObject())))();
  var DiagnosticsPropertyOfFunction = () => (DiagnosticsPropertyOfFunction = dart.constFn(diagnostics$.DiagnosticsProperty$(core.Function)))();
  var EnumPropertyOfBlendMode = () => (EnumPropertyOfBlendMode = dart.constFn(diagnostics$.EnumProperty$(ui.BlendMode)))();
  var EnumPropertyOfBoxFit = () => (EnumPropertyOfBoxFit = dart.constFn(diagnostics$.EnumProperty$(box_fit.BoxFit)))();
  var DiagnosticsPropertyOfAlignmentGeometry = () => (DiagnosticsPropertyOfAlignmentGeometry = dart.constFn(diagnostics$.DiagnosticsProperty$(alignment$.AlignmentGeometry)))();
  var EnumPropertyOfImageRepeat = () => (EnumPropertyOfImageRepeat = dart.constFn(diagnostics$.EnumProperty$(decoration_image.ImageRepeat)))();
  var DiagnosticsPropertyOfRect = () => (DiagnosticsPropertyOfRect = dart.constFn(diagnostics$.DiagnosticsProperty$(ui.Rect)))();
  var EnumPropertyOfFilterQuality = () => (EnumPropertyOfFilterQuality = dart.constFn(diagnostics$.EnumProperty$(ui.FilterQuality)))();
  var StateOfImage = () => (StateOfImage = dart.constFn(framework.State$(image$.Image)))();
  var DisposableBuildContextOfStateOfImage = () => (DisposableBuildContextOfStateOfImage = dart.constFn(disposable_build_context.DisposableBuildContext$(StateOfImage())))();
  var ScrollAwareImageProviderOfObject = () => (ScrollAwareImageProviderOfObject = dart.constFn(scroll_aware_image_provider.ScrollAwareImageProvider$(core.Object)))();
  var StackTraceN = () => (StackTraceN = dart.constFn(dart.nullable(core.StackTrace)))();
  var dynamicAndStackTraceNTovoid = () => (dynamicAndStackTraceNTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic, StackTraceN()])))();
  var DiagnosticsPropertyOfImageStream = () => (DiagnosticsPropertyOfImageStream = dart.constFn(diagnostics$.DiagnosticsProperty$(image_stream.ImageStream)))();
  var DiagnosticsPropertyOfImageInfo = () => (DiagnosticsPropertyOfImageInfo = dart.constFn(diagnostics$.DiagnosticsProperty$(image_stream.ImageInfo)))();
  var DiagnosticsPropertyOfImageChunkEvent = () => (DiagnosticsPropertyOfImageChunkEvent = dart.constFn(diagnostics$.DiagnosticsProperty$(image_stream.ImageChunkEvent)))();
  var DiagnosticsPropertyOfint = () => (DiagnosticsPropertyOfint = dart.constFn(diagnostics$.DiagnosticsProperty$(core.int)))();
  var ImageInfoN = () => (ImageInfoN = dart.constFn(dart.nullable(image_stream.ImageInfo)))();
  var ImageInfoNAndboolTovoid = () => (ImageInfoNAndboolTovoid = dart.constFn(dart.fnType(dart.void, [ImageInfoN(), core.bool])))();
  var ObjectAndStackTraceNTovoid = () => (ObjectAndStackTraceNTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, StackTraceN()])))();
  var EnumPropertyOfDecorationPosition = () => (EnumPropertyOfDecorationPosition = dart.constFn(diagnostics$.EnumProperty$(proxy_box.DecorationPosition)))();
  var DiagnosticsPropertyOfDecoration = () => (DiagnosticsPropertyOfDecoration = dart.constFn(diagnostics$.DiagnosticsProperty$(decoration.Decoration)))();
  var DiagnosticsPropertyOfEdgeInsetsGeometry = () => (DiagnosticsPropertyOfEdgeInsetsGeometry = dart.constFn(diagnostics$.DiagnosticsProperty$(edge_insets.EdgeInsetsGeometry)))();
  var DiagnosticsPropertyOfClip = () => (DiagnosticsPropertyOfClip = dart.constFn(diagnostics$.DiagnosticsProperty$(ui.Clip)))();
  var DiagnosticsPropertyOfColor = () => (DiagnosticsPropertyOfColor = dart.constFn(diagnostics$.DiagnosticsProperty$(ui.Color)))();
  var DiagnosticsPropertyOfBoxConstraints = () => (DiagnosticsPropertyOfBoxConstraints = dart.constFn(diagnostics$.DiagnosticsProperty$(box$.BoxConstraints)))();
  var ObjectFlagPropertyOfMatrix4 = () => (ObjectFlagPropertyOfMatrix4 = dart.constFn(diagnostics$.ObjectFlagProperty$(vector_math_64.Matrix4)))();
  var SynchronousFutureOfWidgetsLocalizations = () => (SynchronousFutureOfWidgetsLocalizations = dart.constFn(synchronous_future.SynchronousFuture$(localizations.WidgetsLocalizations)))();
  var LocalizationsDelegateOfWidgetsLocalizations = () => (LocalizationsDelegateOfWidgetsLocalizations = dart.constFn(localizations.LocalizationsDelegate$(localizations.WidgetsLocalizations)))();
  var LocalizationsDelegateTobool = () => (LocalizationsDelegateTobool = dart.constFn(dart.fnType(core.bool, [localizations.LocalizationsDelegate])))();
  var ListOfLocalizationsDelegate = () => (ListOfLocalizationsDelegate = dart.constFn(core.List$(localizations.LocalizationsDelegate)))();
  var IterablePropertyOfLocalizationsDelegate = () => (IterablePropertyOfLocalizationsDelegate = dart.constFn(diagnostics$.IterableProperty$(localizations.LocalizationsDelegate)))();
  var LinkedMapOfType$dynamic = () => (LinkedMapOfType$dynamic = dart.constFn(_js_helper.LinkedMap$(core.Type, dart.dynamic)))();
  var MapOfType$dynamic = () => (MapOfType$dynamic = dart.constFn(core.Map$(core.Type, dart.dynamic)))();
  var MapOfType$dynamicToMapOfType$dynamic = () => (MapOfType$dynamicToMapOfType$dynamic = dart.constFn(dart.fnType(MapOfType$dynamic(), [MapOfType$dynamic()])))();
  var MapOfType$dynamicToNull = () => (MapOfType$dynamicToNull = dart.constFn(dart.fnType(core.Null, [MapOfType$dynamic()])))();
  var JSArrayOfLocalizationsDelegate = () => (JSArrayOfLocalizationsDelegate = dart.constFn(_interceptors.JSArray$(localizations.LocalizationsDelegate)))();
  var dynamicTodynamic = () => (dynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [dart.dynamic])))();
  var JSArrayOf_Pending = () => (JSArrayOf_Pending = dart.constFn(_interceptors.JSArray$(localizations._Pending)))();
  var SynchronousFutureOfMapOfType$dynamic = () => (SynchronousFutureOfMapOfType$dynamic = dart.constFn(synchronous_future.SynchronousFuture$(MapOfType$dynamic())))();
  var _PendingToFuture = () => (_PendingToFuture = dart.constFn(dart.fnType(async.Future, [localizations._Pending])))();
  var ListToMapOfType$dynamic = () => (ListToMapOfType$dynamic = dart.constFn(dart.fnType(MapOfType$dynamic(), [core.List])))();
  var WidgetAndintToint = () => (WidgetAndintToint = dart.constFn(dart.fnType(core.int, [framework.Widget, core.int])))();
  var KeyN = () => (KeyN = dart.constFn(dart.nullable(key.Key)))();
  var LinkedMapOfKeyN$int = () => (LinkedMapOfKeyN$int = dart.constFn(_js_helper.LinkedMap$(KeyN(), core.int)))();
  var DiagnosticsPropertyOfSliverChildDelegate = () => (DiagnosticsPropertyOfSliverChildDelegate = dart.constFn(diagnostics$.DiagnosticsProperty$(sliver$.SliverChildDelegate)))();
  var SplayTreeMapOfint$ElementN = () => (SplayTreeMapOfint$ElementN = dart.constFn(collection.SplayTreeMap$(core.int, ElementN())))();
  var IdentityMapOfint$double = () => (IdentityMapOfint$double = dart.constFn(_js_helper.IdentityMap$(core.int, core.double)))();
  var intTovoid = () => (intTovoid = dart.constFn(dart.fnType(dart.void, [core.int])))();
  var SliverMultiBoxAdaptorParentDataN = () => (SliverMultiBoxAdaptorParentDataN = dart.constFn(dart.nullable(sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData)))();
  var VoidToElementN = () => (VoidToElementN = dart.constFn(dart.fnType(ElementN(), [])))();
  var ElementNTobool = () => (ElementNTobool = dart.constFn(dart.fnType(core.bool, [ElementN()])))();
  var RenderObjectWithChildMixinOfRenderObject = () => (RenderObjectWithChildMixinOfRenderObject = dart.constFn(object$.RenderObjectWithChildMixin$(object$.RenderObject)))();
  var NotificationListenerOfKeepAliveNotification = () => (NotificationListenerOfKeepAliveNotification = dart.constFn(notification_listener.NotificationListener$(automatic_keep_alive.KeepAliveNotification)))();
  var LinkedMapOfListenable$VoidTovoid = () => (LinkedMapOfListenable$VoidTovoid = dart.constFn(_js_helper.LinkedMap$(change_notifier.Listenable, VoidTovoid())))();
  var ParentDataElementOfKeepAliveParentDataMixin = () => (ParentDataElementOfKeepAliveParentDataMixin = dart.constFn(framework.ParentDataElement$(sliver_multi_box_adaptor.KeepAliveParentDataMixin)))();
  var ParentDataElementNOfKeepAliveParentDataMixin = () => (ParentDataElementNOfKeepAliveParentDataMixin = dart.constFn(dart.nullable(ParentDataElementOfKeepAliveParentDataMixin())))();
  var ParentDataWidgetOfKeepAliveParentDataMixin = () => (ParentDataWidgetOfKeepAliveParentDataMixin = dart.constFn(framework.ParentDataWidget$(sliver_multi_box_adaptor.KeepAliveParentDataMixin)))();
  var MapOfListenable$VoidTovoid = () => (MapOfListenable$VoidTovoid = dart.constFn(core.Map$(change_notifier.Listenable, VoidTovoid())))();
  var DiagnosticsPropertyOfMapOfListenable$VoidTovoid = () => (DiagnosticsPropertyOfMapOfListenable$VoidTovoid = dart.constFn(diagnostics$.DiagnosticsProperty$(MapOfListenable$VoidTovoid())))();
  var AutofillContextActionL = () => (AutofillContextActionL = dart.constFn(dart.legacy(autofill$.AutofillContextAction)))();
  var IdentityMapOfString$AutofillClient = () => (IdentityMapOfString$AutofillClient = dart.constFn(_js_helper.IdentityMap$(core.String, autofill.AutofillClient)))();
  var AutofillClientTobool = () => (AutofillClientTobool = dart.constFn(dart.fnType(core.bool, [autofill.AutofillClient])))();
  var VoidToAutofillClient = () => (VoidToAutofillClient = dart.constFn(dart.fnType(autofill.AutofillClient, [])))();
  var JSArrayOfTextInputFormatter = () => (JSArrayOfTextInputFormatter = dart.constFn(_interceptors.JSArray$(text_formatter.TextInputFormatter)))();
  var TextInputFormatterL = () => (TextInputFormatterL = dart.constFn(dart.legacy(text_formatter.TextInputFormatter)))();
  var EmptyIterableOfTextInputFormatterL = () => (EmptyIterableOfTextInputFormatterL = dart.constFn(_internal.EmptyIterable$(TextInputFormatterL())))();
  var StringL = () => (StringL = dart.constFn(dart.legacy(core.String)))();
  var TextInputTypeL = () => (TextInputTypeL = dart.constFn(dart.legacy(text_input.TextInputType)))();
  var DiagnosticsPropertyOfTextEditingController = () => (DiagnosticsPropertyOfTextEditingController = dart.constFn(diagnostics$.DiagnosticsProperty$(editable_text.TextEditingController)))();
  var DiagnosticsPropertyOfFocusNode = () => (DiagnosticsPropertyOfFocusNode = dart.constFn(diagnostics$.DiagnosticsProperty$(focus_manager.FocusNode)))();
  var EnumPropertyOfSmartDashesType = () => (EnumPropertyOfSmartDashesType = dart.constFn(diagnostics$.EnumProperty$(text_input.SmartDashesType)))();
  var EnumPropertyOfSmartQuotesType = () => (EnumPropertyOfSmartQuotesType = dart.constFn(diagnostics$.EnumProperty$(text_input.SmartQuotesType)))();
  var DiagnosticsPropertyOfTextInputType = () => (DiagnosticsPropertyOfTextInputType = dart.constFn(diagnostics$.DiagnosticsProperty$(text_input.TextInputType)))();
  var IterableOfString = () => (IterableOfString = dart.constFn(core.Iterable$(core.String)))();
  var DiagnosticsPropertyOfIterableOfString = () => (DiagnosticsPropertyOfIterableOfString = dart.constFn(diagnostics$.DiagnosticsProperty$(IterableOfString())))();
  var TextEditingValueAndTextInputFormatterToTextEditingValue = () => (TextEditingValueAndTextInputFormatterToTextEditingValue = dart.constFn(dart.fnType(text_input.TextEditingValue, [text_input.TextEditingValue, text_formatter.TextInputFormatter])))();
  var BuildContextAndViewportOffsetToCompositedTransformTarget = () => (BuildContextAndViewportOffsetToCompositedTransformTarget = dart.constFn(dart.fnType(basic.CompositedTransformTarget, [framework.BuildContext, viewport_offset.ViewportOffset])))();
  var JSArrayOfFocusNode = () => (JSArrayOfFocusNode = dart.constFn(_interceptors.JSArray$(focus_manager.FocusNode)))();
  var TraversalDirectionL = () => (TraversalDirectionL = dart.constFn(dart.legacy(focus_traversal.TraversalDirection)))();
  var _FocusTraversalGroupMarkerN = () => (_FocusTraversalGroupMarkerN = dart.constFn(dart.nullable(focus_traversal._FocusTraversalGroupMarker)))();
  var FocusNodeN = () => (FocusNodeN = dart.constFn(dart.nullable(focus_manager.FocusNode)))();
  var LinkedMapOfFocusNodeN$_FocusTraversalGroupInfo = () => (LinkedMapOfFocusNodeN$_FocusTraversalGroupInfo = dart.constFn(_js_helper.LinkedMap$(FocusNodeN(), focus_traversal._FocusTraversalGroupInfo)))();
  var _FocusTraversalGroupInfoTovoid = () => (_FocusTraversalGroupInfoTovoid = dart.constFn(dart.fnType(dart.void, [focus_traversal._FocusTraversalGroupInfo])))();
  var LinkedMapOfFocusScopeNode$_DirectionalPolicyData = () => (LinkedMapOfFocusScopeNode$_DirectionalPolicyData = dart.constFn(_js_helper.LinkedMap$(focus_manager.FocusScopeNode, focus_traversal._DirectionalPolicyData)))();
  var _DirectionalPolicyDataEntryTobool = () => (_DirectionalPolicyDataEntryTobool = dart.constFn(dart.fnType(core.bool, [focus_traversal._DirectionalPolicyDataEntry])))();
  var FocusNodeAndFocusNodeToint = () => (FocusNodeAndFocusNodeToint = dart.constFn(dart.fnType(core.int, [focus_manager.FocusNode, focus_manager.FocusNode])))();
  var FocusNodeTobool = () => (FocusNodeTobool = dart.constFn(dart.fnType(core.bool, [focus_manager.FocusNode])))();
  var TraversalDirectionTobool = () => (TraversalDirectionTobool = dart.constFn(dart.fnType(core.bool, [focus_traversal.TraversalDirection])))();
  var JSArrayOf_DirectionalPolicyDataEntry = () => (JSArrayOf_DirectionalPolicyDataEntry = dart.constFn(_interceptors.JSArray$(focus_traversal._DirectionalPolicyDataEntry)))();
  var DirectionalityN = () => (DirectionalityN = dart.constFn(dart.nullable(basic.Directionality)))();
  var SetOfDirectionality = () => (SetOfDirectionality = dart.constFn(core.Set$(basic.Directionality)))();
  var _ReadingOrderSortDataToSetOfDirectionality = () => (_ReadingOrderSortDataToSetOfDirectionality = dart.constFn(dart.fnType(SetOfDirectionality(), [focus_traversal._ReadingOrderSortData])))();
  var _ReadingOrderSortDataAnd_ReadingOrderSortDataToint = () => (_ReadingOrderSortDataAnd_ReadingOrderSortDataToint = dart.constFn(dart.fnType(core.int, [focus_traversal._ReadingOrderSortData, focus_traversal._ReadingOrderSortData])))();
  var JSArrayOfDirectionality = () => (JSArrayOfDirectionality = dart.constFn(_interceptors.JSArray$(basic.Directionality)))();
  var ListOfDirectionality = () => (ListOfDirectionality = dart.constFn(core.List$(basic.Directionality)))();
  var BuildContextToListOfDirectionality = () => (BuildContextToListOfDirectionality = dart.constFn(dart.fnType(ListOfDirectionality(), [framework.BuildContext])))();
  var DiagnosticsPropertyOfTextDirection = () => (DiagnosticsPropertyOfTextDirection = dart.constFn(diagnostics$.DiagnosticsProperty$(ui.TextDirection)))();
  var _ReadingOrderSortDataToRect = () => (_ReadingOrderSortDataToRect = dart.constFn(dart.fnType(ui.Rect, [focus_traversal._ReadingOrderSortData])))();
  var _ReadingOrderDirectionalGroupDataAnd_ReadingOrderDirectionalGroupDataToint = () => (_ReadingOrderDirectionalGroupDataAnd_ReadingOrderDirectionalGroupDataToint = dart.constFn(dart.fnType(core.int, [focus_traversal._ReadingOrderDirectionalGroupData, focus_traversal._ReadingOrderDirectionalGroupData])))();
  var _ReadingOrderSortDataToString = () => (_ReadingOrderSortDataToString = dart.constFn(dart.fnType(core.String, [focus_traversal._ReadingOrderSortData])))();
  var JSArrayOf_ReadingOrderSortData = () => (JSArrayOf_ReadingOrderSortData = dart.constFn(_interceptors.JSArray$(focus_traversal._ReadingOrderSortData)))();
  var JSArrayOf_ReadingOrderDirectionalGroupData = () => (JSArrayOf_ReadingOrderDirectionalGroupData = dart.constFn(_interceptors.JSArray$(focus_traversal._ReadingOrderDirectionalGroupData)))();
  var _ReadingOrderSortDataTobool = () => (_ReadingOrderSortDataTobool = dart.constFn(dart.fnType(core.bool, [focus_traversal._ReadingOrderSortData])))();
  var ListOf_ReadingOrderSortData = () => (ListOf_ReadingOrderSortData = dart.constFn(core.List$(focus_traversal._ReadingOrderSortData)))();
  var IterableOf_ReadingOrderSortData = () => (IterableOf_ReadingOrderSortData = dart.constFn(core.Iterable$(focus_traversal._ReadingOrderSortData)))();
  var _ReadingOrderSortDataAndIterableOf_ReadingOrderSortDataToListOf_ReadingOrderSortData = () => (_ReadingOrderSortDataAndIterableOf_ReadingOrderSortDataToListOf_ReadingOrderSortData = dart.constFn(dart.fnType(ListOf_ReadingOrderSortData(), [focus_traversal._ReadingOrderSortData, IterableOf_ReadingOrderSortData()])))();
  var JSArrayOf_OrderedFocusInfo = () => (JSArrayOf_OrderedFocusInfo = dart.constFn(_interceptors.JSArray$(focus_traversal._OrderedFocusInfo)))();
  var _OrderedFocusInfoAnd_OrderedFocusInfoToint = () => (_OrderedFocusInfoAnd_OrderedFocusInfoToint = dart.constFn(dart.fnType(core.int, [focus_traversal._OrderedFocusInfo, focus_traversal._OrderedFocusInfo])))();
  var _OrderedFocusInfoToFocusNode = () => (_OrderedFocusInfoToFocusNode = dart.constFn(dart.fnType(focus_manager.FocusNode, [focus_traversal._OrderedFocusInfo])))();
  var FocusTraversalOrderN = () => (FocusTraversalOrderN = dart.constFn(dart.nullable(focus_traversal.FocusTraversalOrder)))();
  var DiagnosticsPropertyOfFocusOrder = () => (DiagnosticsPropertyOfFocusOrder = dart.constFn(diagnostics$.DiagnosticsProperty$(focus_traversal.FocusOrder)))();
  var DiagnosticsPropertyOfFocusTraversalPolicy = () => (DiagnosticsPropertyOfFocusTraversalPolicy = dart.constFn(diagnostics$.DiagnosticsProperty$(focus_traversal.FocusTraversalPolicy)))();
  var FocusNodeL = () => (FocusNodeL = dart.constFn(dart.legacy(focus_manager.FocusNode)))();
  var DiagnosticsPropertyOfBuildContext = () => (DiagnosticsPropertyOfBuildContext = dart.constFn(diagnostics$.DiagnosticsProperty$(framework.BuildContext)))();
  var FocusNodeToDiagnosticsNode = () => (FocusNodeToDiagnosticsNode = dart.constFn(dart.fnType(diagnostics$.DiagnosticsNode, [focus_manager.FocusNode])))();
  var KeyEventResultL = () => (KeyEventResultL = dart.constFn(dart.legacy(focus_manager.KeyEventResult)))();
  var UnfocusDispositionL = () => (UnfocusDispositionL = dart.constFn(dart.legacy(focus_manager.UnfocusDisposition)))();
  var FocusNodeToString = () => (FocusNodeToString = dart.constFn(dart.fnType(core.String, [focus_manager.FocusNode])))();
  var FocusHighlightModeL = () => (FocusHighlightModeL = dart.constFn(dart.legacy(focus_manager.FocusHighlightMode)))();
  var FocusHighlightStrategyL = () => (FocusHighlightStrategyL = dart.constFn(dart.legacy(focus_manager.FocusHighlightStrategy)))();
  var FocusHighlightModeTovoid = () => (FocusHighlightModeTovoid = dart.constFn(dart.fnType(dart.void, [focus_manager.FocusHighlightMode])))();
  var HashedObserverListOfFocusHighlightModeTovoid = () => (HashedObserverListOfFocusHighlightModeTovoid = dart.constFn(observer_list.HashedObserverList$(FocusHighlightModeTovoid())))();
  var LinkedHashSetOfFocusNode = () => (LinkedHashSetOfFocusNode = dart.constFn(collection.LinkedHashSet$(focus_manager.FocusNode)))();
  var ListOfFocusHighlightModeTovoid = () => (ListOfFocusHighlightModeTovoid = dart.constFn(core.List$(FocusHighlightModeTovoid())))();
  var DiagnosticsPropertyOfFocusManager = () => (DiagnosticsPropertyOfFocusManager = dart.constFn(diagnostics$.DiagnosticsProperty$(focus_manager.FocusManager)))();
  var DiagnosticsPropertyOfString = () => (DiagnosticsPropertyOfString = dart.constFn(diagnostics$.DiagnosticsProperty$(core.String)))();
  var LinkedMapOfElement$GlobalKeyOfStateOfStatefulWidget = () => (LinkedMapOfElement$GlobalKeyOfStateOfStatefulWidget = dart.constFn(_js_helper.LinkedMap$(framework.Element, GlobalKeyOfStateOfStatefulWidget())))();
  var LinkedMapOfGlobalKeyOfStateOfStatefulWidget$Element = () => (LinkedMapOfGlobalKeyOfStateOfStatefulWidget$Element = dart.constFn(_js_helper.LinkedMap$(GlobalKeyOfStateOfStatefulWidget(), framework.Element)))();
  var ElementAndGlobalKeyOfStateOfStatefulWidgetTovoid = () => (ElementAndGlobalKeyOfStateOfStatefulWidgetTovoid = dart.constFn(dart.fnType(dart.void, [framework.Element, GlobalKeyOfStateOfStatefulWidget()])))();
  var MapOfElement$GlobalKeyOfStateOfStatefulWidget = () => (MapOfElement$GlobalKeyOfStateOfStatefulWidget = dart.constFn(core.Map$(framework.Element, GlobalKeyOfStateOfStatefulWidget())))();
  var ElementAndMapOfElement$GlobalKeyOfStateOfStatefulWidgetTovoid = () => (ElementAndMapOfElement$GlobalKeyOfStateOfStatefulWidgetTovoid = dart.constFn(dart.fnType(dart.void, [framework.Element, MapOfElement$GlobalKeyOfStateOfStatefulWidget()])))();
  var SetOfElement = () => (SetOfElement = dart.constFn(core.Set$(framework.Element)))();
  var LinkedMapOfGlobalKeyOfStateOfStatefulWidget$SetOfElement = () => (LinkedMapOfGlobalKeyOfStateOfStatefulWidget$SetOfElement = dart.constFn(_js_helper.LinkedMap$(GlobalKeyOfStateOfStatefulWidget(), SetOfElement())))();
  var LinkedHashSetOfElement = () => (LinkedHashSetOfElement = dart.constFn(collection.LinkedHashSet$(framework.Element)))();
  var VoidToLinkedHashSetOfElement = () => (VoidToLinkedHashSetOfElement = dart.constFn(dart.fnType(LinkedHashSetOfElement(), [])))();
  var LinkedMapOfElement$MapOfElement$GlobalKeyOfStateOfStatefulWidget = () => (LinkedMapOfElement$MapOfElement$GlobalKeyOfStateOfStatefulWidget = dart.constFn(_js_helper.LinkedMap$(framework.Element, MapOfElement$GlobalKeyOfStateOfStatefulWidget())))();
  var LabeledGlobalKeyOfStateOfStatefulWidget = () => (LabeledGlobalKeyOfStateOfStatefulWidget = dart.constFn(framework.LabeledGlobalKey$(StateOfStatefulWidget())))();
  var _StateLifecycleL = () => (_StateLifecycleL = dart.constFn(dart.legacy(framework._StateLifecycle)))();
  var _ElementLifecycleL = () => (_ElementLifecycleL = dart.constFn(dart.legacy(framework._ElementLifecycle)))();
  var ElementAndElementToint = () => (ElementAndElementToint = dart.constFn(dart.fnType(core.int, [framework.Element, framework.Element])))();
  var SetOfGlobalKeyOfStateOfStatefulWidget = () => (SetOfGlobalKeyOfStateOfStatefulWidget = dart.constFn(core.Set$(GlobalKeyOfStateOfStatefulWidget())))();
  var LinkedMapOfElement$SetOfGlobalKeyOfStateOfStatefulWidget = () => (LinkedMapOfElement$SetOfGlobalKeyOfStateOfStatefulWidget = dart.constFn(_js_helper.LinkedMap$(framework.Element, SetOfGlobalKeyOfStateOfStatefulWidget())))();
  var _HashSetOfGlobalKeyOfStateOfStatefulWidget = () => (_HashSetOfGlobalKeyOfStateOfStatefulWidget = dart.constFn(collection._HashSet$(GlobalKeyOfStateOfStatefulWidget())))();
  var HashSetOfGlobalKeyOfStateOfStatefulWidget = () => (HashSetOfGlobalKeyOfStateOfStatefulWidget = dart.constFn(collection.HashSet$(GlobalKeyOfStateOfStatefulWidget())))();
  var VoidToHashSetOfGlobalKeyOfStateOfStatefulWidget = () => (VoidToHashSetOfGlobalKeyOfStateOfStatefulWidget = dart.constFn(dart.fnType(HashSetOfGlobalKeyOfStateOfStatefulWidget(), [])))();
  var IdentityMapOfString$int = () => (IdentityMapOfString$int = dart.constFn(_js_helper.IdentityMap$(core.String, core.int)))();
  var GlobalKeyOfStateOfStatefulWidgetToString = () => (GlobalKeyOfStateOfStatefulWidgetToString = dart.constFn(dart.fnType(core.String, [GlobalKeyOfStateOfStatefulWidget()])))();
  var intToint = () => (intToint = dart.constFn(dart.fnType(core.int, [core.int])))();
  var StringAndintTovoid = () => (StringAndintTovoid = dart.constFn(dart.fnType(dart.void, [core.String, core.int])))();
  var ElementToString = () => (ElementToString = dart.constFn(dart.fnType(core.String, [framework.Element])))();
  var FlutterErrorDetailsToWidget = () => (FlutterErrorDetailsToWidget = dart.constFn(dart.fnType(framework.Widget, [assertions.FlutterErrorDetails])))();
  var DiagnosticsPropertyOfStateOfStatefulWidget = () => (DiagnosticsPropertyOfStateOfStatefulWidget = dart.constFn(diagnostics$.DiagnosticsProperty$(StateOfStatefulWidget())))();
  var _HashSetOfKey = () => (_HashSetOfKey = dart.constFn(collection._HashSet$(key.Key)))();
  var BannerLocationL = () => (BannerLocationL = dart.constFn(dart.legacy(banner.BannerLocation)))();
  var EnumPropertyOfBannerLocation = () => (EnumPropertyOfBannerLocation = dart.constFn(diagnostics$.EnumProperty$(banner.BannerLocation)))();
  var BuildContextL = () => (BuildContextL = dart.constFn(dart.legacy(framework.BuildContext)))();
  var BuildContextLToWidgetL = () => (BuildContextLToWidgetL = dart.constFn(dart.fnType(WidgetL(), [BuildContextL()])))();
  var BuildContextLToLWidgetL = () => (BuildContextLToLWidgetL = dart.constFn(dart.legacy(BuildContextLToWidgetL())))();
  var LocaleL = () => (LocaleL = dart.constFn(dart.legacy(ui.Locale)))();
  var LinkedMapOfLogicalKeySet$Intent = () => (LinkedMapOfLogicalKeySet$Intent = dart.constFn(_js_helper.LinkedMap$(shortcuts$.LogicalKeySet, actions$.Intent)))();
  var GlobalObjectKeyOfNavigatorState = () => (GlobalObjectKeyOfNavigatorState = dart.constFn(framework.GlobalObjectKey$(navigator$.NavigatorState)))();
  var IdentityMapOfString$Locale = () => (IdentityMapOfString$Locale = dart.constFn(_js_helper.IdentityMap$(core.String, ui.Locale)))();
  var IdentityMapOfStringN$Locale = () => (IdentityMapOfStringN$Locale = dart.constFn(_js_helper.IdentityMap$(StringN(), ui.Locale)))();
  var SyncIterableOfLocalizationsDelegate = () => (SyncIterableOfLocalizationsDelegate = dart.constFn(_js_helper.SyncIterable$(localizations.LocalizationsDelegate)))();
  var LocalizationsDelegateToType = () => (LocalizationsDelegateToType = dart.constFn(dart.fnType(core.Type, [localizations.LocalizationsDelegate])))();
  var TypeToString = () => (TypeToString = dart.constFn(dart.fnType(core.String, [core.Type])))();
  var RouterOfObject = () => (RouterOfObject = dart.constFn(router.Router$(core.Object)))();
  var BuildContextToTitle = () => (BuildContextToTitle = dart.constFn(dart.fnType(title$.Title, [framework.BuildContext])))();
  var JSArrayOfLocale = () => (JSArrayOfLocale = dart.constFn(_interceptors.JSArray$(ui.Locale)))();
  var JSArrayOfWidgetsBindingObserver = () => (JSArrayOfWidgetsBindingObserver = dart.constFn(_interceptors.JSArray$(binding$5.WidgetsBindingObserver)))();
  var IterableOfDiagnosticsNodeToIterableOfDiagnosticsNode = () => (IterableOfDiagnosticsNodeToIterableOfDiagnosticsNode = dart.constFn(dart.fnType(IterableOfDiagnosticsNode(), [IterableOfDiagnosticsNode()])))();
  var PartialStackFrameL = () => (PartialStackFrameL = dart.constFn(dart.legacy(assertions.PartialStackFrame)))();
  var VoidToFutureOfvoid = () => (VoidToFutureOfvoid = dart.constFn(dart.fnType(FutureOfvoid(), [])))();
  var IdentityMapOfString$String = () => (IdentityMapOfString$String = dart.constFn(_js_helper.IdentityMap$(core.String, core.String)))();
  var FutureOfMapOfString$String = () => (FutureOfMapOfString$String = dart.constFn(async.Future$(MapOfString$String())))();
  var MapOfString$Object = () => (MapOfString$Object = dart.constFn(core.Map$(core.String, core.Object)))();
  var MapOfString$ObjectToFutureOfMapOfString$String = () => (MapOfString$ObjectToFutureOfMapOfString$String = dart.constFn(dart.fnType(FutureOfMapOfString$String(), [MapOfString$Object()])))();
  var ListOfWidgetsBindingObserver = () => (ListOfWidgetsBindingObserver = dart.constFn(core.List$(binding$5.WidgetsBindingObserver)))();
  var ListOfFrameTiming = () => (ListOfFrameTiming = dart.constFn(core.List$(ui.FrameTiming)))();
  var ListOfFrameTimingTovoid = () => (ListOfFrameTimingTovoid = dart.constFn(dart.fnType(dart.void, [ListOfFrameTiming()])))();
  var RenderObjectToWidgetAdapterOfRenderBox = () => (RenderObjectToWidgetAdapterOfRenderBox = dart.constFn(binding$5.RenderObjectToWidgetAdapter$(box$.RenderBox)))();
  var RenderObjectToWidgetElementOfRenderBox = () => (RenderObjectToWidgetElementOfRenderBox = dart.constFn(binding$5.RenderObjectToWidgetElement$(box$.RenderBox)))();
  var RenderObjectToWidgetElementNOfRenderBox = () => (RenderObjectToWidgetElementNOfRenderBox = dart.constFn(dart.nullable(RenderObjectToWidgetElementOfRenderBox())))();
  var GlobalObjectKeyOfStateOfStatefulWidget = () => (GlobalObjectKeyOfStateOfStatefulWidget = dart.constFn(framework.GlobalObjectKey$(StateOfStatefulWidget())))();
  var CustomClipperOfRect = () => (CustomClipperOfRect = dart.constFn(proxy_box.CustomClipper$(ui.Rect)))();
  var DiagnosticsPropertyOfCustomClipperOfRect = () => (DiagnosticsPropertyOfCustomClipperOfRect = dart.constFn(diagnostics$.DiagnosticsProperty$(CustomClipperOfRect())))();
  var DiagnosticsPropertyOfBorderRadius = () => (DiagnosticsPropertyOfBorderRadius = dart.constFn(diagnostics$.DiagnosticsProperty$(border_radius.BorderRadius)))();
  var CustomClipperOfRRect = () => (CustomClipperOfRRect = dart.constFn(proxy_box.CustomClipper$(ui.RRect)))();
  var DiagnosticsPropertyOfCustomClipperOfRRect = () => (DiagnosticsPropertyOfCustomClipperOfRRect = dart.constFn(diagnostics$.DiagnosticsProperty$(CustomClipperOfRRect())))();
  var BuildContextToClipPath = () => (BuildContextToClipPath = dart.constFn(dart.fnType(basic.ClipPath, [framework.BuildContext])))();
  var CustomClipperOfPath = () => (CustomClipperOfPath = dart.constFn(proxy_box.CustomClipper$(ui.Path)))();
  var DiagnosticsPropertyOfCustomClipperOfPath = () => (DiagnosticsPropertyOfCustomClipperOfPath = dart.constFn(diagnostics$.DiagnosticsProperty$(CustomClipperOfPath())))();
  var EnumPropertyOfBoxShape = () => (EnumPropertyOfBoxShape = dart.constFn(diagnostics$.EnumProperty$(box_border.BoxShape)))();
  var ValueKeyOfObject = () => (ValueKeyOfObject = dart.constFn(key.ValueKey$(core.Object)))();
  var EnumPropertyOfAxis = () => (EnumPropertyOfAxis = dart.constFn(diagnostics$.EnumProperty$(basic_types.Axis)))();
  var DiagnosticsPropertyOfSize = () => (DiagnosticsPropertyOfSize = dart.constFn(diagnostics$.DiagnosticsProperty$(ui.Size)))();
  var EnumPropertyOfStackFit = () => (EnumPropertyOfStackFit = dart.constFn(diagnostics$.EnumProperty$(stack.StackFit)))();
  var EnumPropertyOfClip = () => (EnumPropertyOfClip = dart.constFn(diagnostics$.EnumProperty$(ui.Clip)))();
  var EnumPropertyOfMainAxisAlignment = () => (EnumPropertyOfMainAxisAlignment = dart.constFn(diagnostics$.EnumProperty$(flex$.MainAxisAlignment)))();
  var EnumPropertyOfMainAxisSize = () => (EnumPropertyOfMainAxisSize = dart.constFn(diagnostics$.EnumProperty$(flex$.MainAxisSize)))();
  var EnumPropertyOfCrossAxisAlignment = () => (EnumPropertyOfCrossAxisAlignment = dart.constFn(diagnostics$.EnumProperty$(flex$.CrossAxisAlignment)))();
  var EnumPropertyOfVerticalDirection = () => (EnumPropertyOfVerticalDirection = dart.constFn(diagnostics$.EnumProperty$(basic_types.VerticalDirection)))();
  var EnumPropertyOfTextBaseline = () => (EnumPropertyOfTextBaseline = dart.constFn(diagnostics$.EnumProperty$(ui.TextBaseline)))();
  var EnumPropertyOfWrapAlignment = () => (EnumPropertyOfWrapAlignment = dart.constFn(diagnostics$.EnumProperty$(wrap.WrapAlignment)))();
  var InlineSpanTobool = () => (InlineSpanTobool = dart.constFn(dart.fnType(core.bool, [inline_span.InlineSpan])))();
  var DiagnosticsPropertyOfImage = () => (DiagnosticsPropertyOfImage = dart.constFn(diagnostics$.DiagnosticsProperty$(ui.Image)))();
  var DiagnosticsPropertyOfMouseCursor = () => (DiagnosticsPropertyOfMouseCursor = dart.constFn(diagnostics$.DiagnosticsProperty$(mouse_cursor.MouseCursor)))();
  var ValueKeyOfKey = () => (ValueKeyOfKey = dart.constFn(key.ValueKey$(key.Key)))();
  var ValueKeyOfint = () => (ValueKeyOfint = dart.constFn(key.ValueKey$(core.int)))();
  var JSArrayOfRepaintBoundary = () => (JSArrayOfRepaintBoundary = dart.constFn(_interceptors.JSArray$(basic.RepaintBoundary)))();
  var DiagnosticsPropertyOfSemanticsProperties = () => (DiagnosticsPropertyOfSemanticsProperties = dart.constFn(diagnostics$.DiagnosticsProperty$(semantics.SemanticsProperties)))();
  var ContextActionOfIntent = () => (ContextActionOfIntent = dart.constFn(actions$.ContextAction$(actions$.Intent)))();
  var InheritedElementTobool = () => (InheritedElementTobool = dart.constFn(dart.fnType(core.bool, [framework.InheritedElement])))();
  var DiagnosticsPropertyOfActionDispatcher = () => (DiagnosticsPropertyOfActionDispatcher = dart.constFn(diagnostics$.DiagnosticsProperty$(actions$.ActionDispatcher)))();
  var MapOfType$ActionOfIntent = () => (MapOfType$ActionOfIntent = dart.constFn(core.Map$(core.Type, ActionOfIntent())))();
  var DiagnosticsPropertyOfMapOfType$ActionOfIntent = () => (DiagnosticsPropertyOfMapOfType$ActionOfIntent = dart.constFn(diagnostics$.DiagnosticsProperty$(MapOfType$ActionOfIntent())))();
  var LinkedHashSetOfActionOfIntent = () => (LinkedHashSetOfActionOfIntent = dart.constFn(collection.LinkedHashSet$(ActionOfIntent())))();
  var FocusableActionDetectorTobool = () => (FocusableActionDetectorTobool = dart.constFn(dart.fnType(core.bool, [actions$.FocusableActionDetector])))();
  var VoidToBuildContext = () => (VoidToBuildContext = dart.constFn(dart.fnType(framework.BuildContext, [])))();
  var BuildContextTodynamic = () => (BuildContextTodynamic = dart.constFn(dart.fnType(dart.dynamic, [framework.BuildContext])))();
  const CT = Object.create(null);
  var L9 = "package:flutter/src/widgets/title.dart";
  var L90 = "package:flutter/src/widgets/disposable_build_context.dart";
  var L31 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/actions.dart";
  var L8 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/title.dart";
  var L16 = "package:flutter/src/widgets/semantics_debugger.dart";
  var L74 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/overscroll_indicator.dart";
  var L99 = "package:flutter/src/widgets/automatic_keep_alive.dart";
  var L65 = "package:flutter/src/widgets/scroll_position_with_single_context.dart";
  var L61 = "package:flutter/src/widgets/editable_text.dart";
  var L115 = "package:flutter/src/widgets/basic.dart";
  var L17 = "package:flutter/src/widgets/router.dart";
  var L36 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/ticker_provider.dart";
  var L92 = "package:flutter/src/widgets/image.dart";
  var L57 = "package:flutter/src/widgets/scroll_configuration.dart";
  var L70 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/scroll_notification.dart";
  var L113 = "package:flutter/src/widgets/app.dart";
  var L2 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/widget_inspector.dart";
  var L34 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/heroes.dart";
  var L30 = "package:flutter/src/widgets/routes.dart";
  var L68 = "package:flutter/src/widgets/page_storage.dart";
  var L55 = "package:flutter/src/widgets/viewport.dart";
  var L67 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/scroll_activity.dart";
  var L83 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/scrollable.dart";
  var L106 = "package:flutter/src/widgets/focus_scope.dart";
  var L51 = "package:flutter/src/widgets/inherited_theme.dart";
  var L97 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/sliver.dart";
  var L11 = "package:flutter/src/widgets/shortcuts.dart";
  var L88 = "package:flutter/src/widgets/media_query.dart";
  var L21 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/modal_barrier.dart";
  var L27 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart";
  var L80 = "package:flutter/src/widgets/scroll_controller.dart";
  var L10 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/shortcuts.dart";
  var L86 = "package:flutter/src/widgets/scroll_aware_image_provider.dart";
  var L24 = "package:flutter/src/widgets/transitions.dart";
  var L32 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/pages.dart";
  var L49 = "package:flutter/src/widgets/text_selection.dart";
  var L7 = "package:flutter/src/widgets/binding.dart";
  var L23 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/transitions.dart";
  var L18 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/router.dart";
  var L40 = "package:flutter/src/widgets/table.dart";
  var L35 = "package:flutter/src/widgets/heroes.dart";
  var L52 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text.dart";
  var L109 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/debug.dart";
  var L12 = "package:flutter/src/widgets/actions.dart";
  var L78 = "package:flutter/src/widgets/scroll_context.dart";
  var L37 = "package:flutter/src/widgets/ticker_provider.dart";
  var L101 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/autofill.dart";
  var L58 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/restoration_properties.dart";
  var L112 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart";
  var L44 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/visibility.dart";
  var L47 = "package:flutter/src/widgets/overlay.dart";
  var L60 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/editable_text.dart";
  var L98 = "package:flutter/src/widgets/sliver.dart";
  var L71 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/notification_listener.dart";
  var L39 = "package:flutter/src/widgets/restoration.dart";
  var L62 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/scroll_position_with_single_context.dart";
  var L104 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/focus_traversal.dart";
  var L79 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/scroll_controller.dart";
  var L46 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/overlay.dart";
  var L75 = "package:flutter/src/widgets/overscroll_indicator.dart";
  var L114 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/basic.dart";
  var L5 = "package:flutter/src/widgets/framework.dart";
  var L87 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/media_query.dart";
  var L108 = "package:flutter/src/widgets/focus_manager.dart";
  var L6 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/binding.dart";
  var L91 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/image.dart";
  var L72 = "package:flutter/src/widgets/notification_listener.dart";
  var L63 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/scroll_position.dart";
  var L66 = "package:flutter/src/widgets/scroll_activity.dart";
  var L33 = "package:flutter/src/widgets/pages.dart";
  var L84 = "package:flutter/src/widgets/scrollable.dart";
  var L56 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/scroll_configuration.dart";
  var L107 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/focus_manager.dart";
  var L81 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/primary_scroll_controller.dart";
  var L110 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/banner.dart";
  var L3 = "package:flutter/src/widgets/widget_inspector.dart";
  var L14 = "package:flutter/src/widgets/inherited_notifier.dart";
  var L54 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/viewport.dart";
  var L19 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/performance_overlay.dart";
  var L4 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/framework.dart";
  var L89 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/disposable_build_context.dart";
  var L76 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/scroll_physics.dart";
  var L69 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/page_storage.dart";
  var L103 = "package:flutter/src/widgets/focus_traversal.dart";
  var L77 = "package:flutter/src/widgets/scroll_physics.dart";
  var L53 = "package:flutter/src/widgets/text.dart";
  var L85 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/scroll_aware_image_provider.dart";
  var L73 = "package:flutter/src/widgets/scroll_notification.dart";
  var L15 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/semantics_debugger.dart";
  var L22 = "package:flutter/src/widgets/modal_barrier.dart";
  var L29 = "package:flutter/src/widgets/navigator.dart";
  var L45 = "package:flutter/src/widgets/visibility.dart";
  var L20 = "package:flutter/src/widgets/performance_overlay.dart";
  var L38 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/restoration.dart";
  var L59 = "package:flutter/src/widgets/restoration_properties.dart";
  var L94 = "package:flutter/src/widgets/container.dart";
  var L111 = "package:flutter/src/widgets/banner.dart";
  var L41 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/table.dart";
  var L82 = "package:flutter/src/widgets/primary_scroll_controller.dart";
  var L95 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/localizations.dart";
  var L28 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/navigator.dart";
  var L93 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/container.dart";
  var L26 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/gesture_detector.dart";
  var L50 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/inherited_theme.dart";
  var L64 = "package:flutter/src/widgets/scroll_position.dart";
  var L48 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text_selection.dart";
  var L0 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/widget_span.dart";
  var L13 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/inherited_notifier.dart";
  var L42 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/inherited_model.dart";
  var L96 = "package:flutter/src/widgets/localizations.dart";
  var L100 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/automatic_keep_alive.dart";
  var L25 = "package:flutter/src/widgets/gesture_detector.dart";
  var L102 = "package:flutter/src/widgets/autofill.dart";
  var L105 = "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/focus_scope.dart";
  var L1 = "package:flutter/src/widgets/widget_span.dart";
  var L43 = "package:flutter/src/widgets/inherited_model.dart";
  dart.defineLazy(CT, {
    get C0() {
      return C0 = dart.const({
        __proto__: ui.PlaceholderAlignment.prototype,
        [_name]: "PlaceholderAlignment.bottom",
        index: 4
      });
    },
    get C1() {
      return C1 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0
      });
    },
    get C2() {
      return C2 = dart.const({
        __proto__: ui.ClipOp.prototype,
        [_name]: "ClipOp.intersect",
        index: 1
      });
    },
    get C3() {
      return C3 = dart.constList([], _DiagnosticsPathNodeL());
    },
    get C4() {
      return C4 = dart.constList([], DiagnosticsNodeL());
    },
    get C6() {
      return C6 = dart.constList([], _LocationL());
    },
    get C5() {
      return C5 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C6 || CT.C6,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 1835,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/widget_inspector.dart"
      });
    },
    get C9() {
      return C9 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoring",
        [_Location_column]: 11,
        [_Location_line]: 2320,
        [_Location_file]: null
      });
    },
    get C10() {
      return C10 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 11,
        [_Location_line]: 2321,
        [_Location_file]: null
      });
    },
    get C11() {
      return C11 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoringSemantics",
        [_Location_column]: 11,
        [_Location_line]: 2322,
        [_Location_file]: null
      });
    },
    get C12() {
      return C12 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 2323,
        [_Location_file]: null
      });
    },
    get C8() {
      return C8 = dart.constList([C9 || CT.C9, C10 || CT.C10, C11 || CT.C11, C12 || CT.C12], _LocationL());
    },
    get C7() {
      return C7 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C8 || CT.C8,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 2319,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/widget_inspector.dart"
      });
    },
    get C15() {
      return C15 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 9,
        [_Location_line]: 2313,
        [_Location_file]: null
      });
    },
    get C16() {
      return C16 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanDown",
        [_Location_column]: 9,
        [_Location_line]: 2314,
        [_Location_file]: null
      });
    },
    get C17() {
      return C17 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanEnd",
        [_Location_column]: 9,
        [_Location_line]: 2315,
        [_Location_file]: null
      });
    },
    get C18() {
      return C18 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanUpdate",
        [_Location_column]: 9,
        [_Location_line]: 2316,
        [_Location_file]: null
      });
    },
    get C19() {
      return C19 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 9,
        [_Location_line]: 2317,
        [_Location_file]: null
      });
    },
    get C20() {
      return C20 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 9,
        [_Location_line]: 2318,
        [_Location_file]: null
      });
    },
    get C21() {
      return C21 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 2319,
        [_Location_file]: null
      });
    },
    get C14() {
      return C14 = dart.constList([C15 || CT.C15, C16 || CT.C16, C17 || CT.C17, C18 || CT.C18, C19 || CT.C19, C20 || CT.C20, C21 || CT.C21], _LocationL());
    },
    get C13() {
      return C13 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C14 || CT.C14,
        [_Location_name]: null,
        [_Location_column]: 7,
        [_Location_line]: 2312,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/widget_inspector.dart"
      });
    },
    get C24() {
      return C24 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 11,
        [_Location_line]: 2328,
        [_Location_file]: null
      });
    },
    get C25() {
      return C25 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 11,
        [_Location_line]: 2329,
        [_Location_file]: null
      });
    },
    get C26() {
      return C26 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 2330,
        [_Location_file]: null
      });
    },
    get C23() {
      return C23 = dart.constList([C24 || CT.C24, C25 || CT.C25, C26 || CT.C26], _LocationL());
    },
    get C22() {
      return C22 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C23 || CT.C23,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 2327,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/widget_inspector.dart"
      });
    },
    get C29() {
      return C29 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selection",
        [_Location_column]: 25,
        [_Location_line]: 2332,
        [_Location_file]: null
      });
    },
    get C28() {
      return C28 = dart.constList([C29 || CT.C29], _LocationL());
    },
    get C27() {
      return C27 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C28 || CT.C28,
        [_Location_name]: null,
        [_Location_column]: 7,
        [_Location_line]: 2332,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/widget_inspector.dart"
      });
    },
    get C32() {
      return C32 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 18,
        [_Location_line]: 2311,
        [_Location_file]: null
      });
    },
    get C31() {
      return C31 = dart.constList([C32 || CT.C32], _LocationL());
    },
    get C30() {
      return C30 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C31 || CT.C31,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 2311,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/widget_inspector.dart"
      });
    },
    get C33() {
      return C33 = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 1 / 0,
        [OffsetBase__dx]: 1 / 0
      });
    },
    get C34() {
      return C34 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 10,
        [OffsetBase__dx]: 10
      });
    },
    get C35() {
      return C35 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 5,
        [OffsetBase__dx]: 5
      });
    },
    get C36() {
      return C36 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 3862707260.0
      });
    },
    get C37() {
      return C37 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2155905279.0
      });
    },
    get C38() {
      return C38 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2151694464.0
      });
    },
    get C40() {
      return C40 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295.0
      });
    },
    get C39() {
      return C39 = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_height]: 1.2,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 10,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C40 || CT.C40,
        [TextStyle_inherit]: true
      });
    },
    get C41() {
      return C41 = dart.const({
        __proto__: diagnostics$._NoDefaultValue.prototype
      });
    },
    get C42() {
      return C42 = dart.const({
        __proto__: diagnostics$.DiagnosticLevel.prototype,
        [_name$]: "DiagnosticLevel.info",
        index: 3
      });
    },
    get C43() {
      return C43 = dart.const({
        __proto__: actions$.DoNothingIntent.prototype
      });
    },
    get C44() {
      return C44 = dart.constMap(LogicalKeySetL(), IntentL(), []);
    },
    get C47() {
      return C47 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "manager",
        [_Location_column]: 9,
        [_Location_line]: 597,
        [_Location_file]: null
      });
    },
    get C48() {
      return C48 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 598,
        [_Location_file]: null
      });
    },
    get C46() {
      return C46 = dart.constList([C47 || CT.C47, C48 || CT.C48], _LocationL());
    },
    get C45() {
      return C45 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C46 || CT.C46,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 596,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/shortcuts.dart"
      });
    },
    get C51() {
      return C51 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debugLabel",
        [_Location_column]: 7,
        [_Location_line]: 593,
        [_Location_file]: null
      });
    },
    get C52() {
      return C52 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canRequestFocus",
        [_Location_column]: 7,
        [_Location_line]: 594,
        [_Location_file]: null
      });
    },
    get C53() {
      return C53 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onKey",
        [_Location_column]: 7,
        [_Location_line]: 595,
        [_Location_file]: null
      });
    },
    get C54() {
      return C54 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 596,
        [_Location_file]: null
      });
    },
    get C50() {
      return C50 = dart.constList([C51 || CT.C51, C52 || CT.C52, C53 || CT.C53, C54 || CT.C54], _LocationL());
    },
    get C49() {
      return C49 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C50 || CT.C50,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 592,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/shortcuts.dart"
      });
    },
    get C56() {
      return C56 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278190080.0
      });
    },
    get C55() {
      return C55 = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_height]: 0.8,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 10,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C56 || CT.C56,
        [TextStyle_inherit]: true
      });
    },
    get C59() {
      return C59 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoringSemantics",
        [_Location_column]: 13,
        [_Location_line]: 175,
        [_Location_file]: null
      });
    },
    get C60() {
      return C60 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 176,
        [_Location_file]: null
      });
    },
    get C58() {
      return C58 = dart.constList([C59 || CT.C59, C60 || CT.C60], _LocationL());
    },
    get C57() {
      return C57 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C58 || CT.C58,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 174,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/semantics_debugger.dart"
      });
    },
    get C63() {
      return C63 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 11,
        [_Location_line]: 172,
        [_Location_file]: null
      });
    },
    get C64() {
      return C64 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 11,
        [_Location_line]: 173,
        [_Location_file]: null
      });
    },
    get C65() {
      return C65 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 174,
        [_Location_file]: null
      });
    },
    get C62() {
      return C62 = dart.constList([C63 || CT.C63, C64 || CT.C64, C65 || CT.C65], _LocationL());
    },
    get C61() {
      return C61 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C62 || CT.C62,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 171,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/semantics_debugger.dart"
      });
    },
    get C68() {
      return C68 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 9,
        [_Location_line]: 166,
        [_Location_file]: null
      });
    },
    get C69() {
      return C69 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 9,
        [_Location_line]: 167,
        [_Location_file]: null
      });
    },
    get C70() {
      return C70 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onLongPress",
        [_Location_column]: 9,
        [_Location_line]: 168,
        [_Location_file]: null
      });
    },
    get C71() {
      return C71 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanEnd",
        [_Location_column]: 9,
        [_Location_line]: 169,
        [_Location_file]: null
      });
    },
    get C72() {
      return C72 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 9,
        [_Location_line]: 170,
        [_Location_file]: null
      });
    },
    get C73() {
      return C73 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 171,
        [_Location_file]: null
      });
    },
    get C67() {
      return C67 = dart.constList([C68 || CT.C68, C69 || CT.C69, C70 || CT.C70, C71 || CT.C71, C72 || CT.C72, C73 || CT.C73], _LocationL());
    },
    get C66() {
      return C66 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C67 || CT.C67,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 165,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/semantics_debugger.dart"
      });
    },
    get C76() {
      return C76 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "foregroundPainter",
        [_Location_column]: 7,
        [_Location_line]: 158,
        [_Location_file]: null
      });
    },
    get C77() {
      return C77 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 165,
        [_Location_file]: null
      });
    },
    get C75() {
      return C75 = dart.constList([C76 || CT.C76, C77 || CT.C77], _LocationL());
    },
    get C74() {
      return C74 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C75 || CT.C75,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 157,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/semantics_debugger.dart"
      });
    },
    get C78() {
      return C78 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2130743551
      });
    },
    get C79() {
      return C79 = dart.const({
        __proto__: ui.TextDirection.prototype,
        [_name]: "TextDirection.rtl",
        index: 0
      });
    },
    get C80() {
      return C80 = dart.const({
        __proto__: ui.TextDirection.prototype,
        [_name]: "TextDirection.ltr",
        index: 1
      });
    },
    get C81() {
      return C81 = dart.const({
        __proto__: router._IntentionToReportRouteInformation.prototype,
        [_name$0]: "_IntentionToReportRouteInformation.none",
        index: 0
      });
    },
    get C82() {
      return C82 = dart.const({
        __proto__: router._IntentionToReportRouteInformation.prototype,
        [_name$0]: "_IntentionToReportRouteInformation.maybe",
        index: 1
      });
    },
    get C83() {
      return C83 = dart.const({
        __proto__: router._IntentionToReportRouteInformation.prototype,
        [_name$0]: "_IntentionToReportRouteInformation.must",
        index: 2
      });
    },
    get C84() {
      return C84 = dart.const({
        __proto__: router._IntentionToReportRouteInformation.prototype,
        [_name$0]: "_IntentionToReportRouteInformation.ignore",
        index: 3
      });
    },
    get C85() {
      return C85 = dart.constList([C81 || CT.C81, C82 || CT.C82, C83 || CT.C83, C84 || CT.C84], _IntentionToReportRouteInformationL());
    },
    get C86() {
      return C86 = dart.const({
        __proto__: assertions.FlutterErrorDetails.prototype,
        [FlutterErrorDetails_silent]: false,
        [FlutterErrorDetails_informationCollector]: null,
        [FlutterErrorDetails_stackFilter]: null,
        [FlutterErrorDetails_context]: null,
        [FlutterErrorDetails_library]: "Flutter framework",
        [FlutterErrorDetails_stack]: null,
        [FlutterErrorDetails_exception]: "Router.routeInformationParser returns a null RouteInformation. If you opt for route information reporting, the routeInformationParser must not report null for a given configuration."
      });
    },
    get C87() {
      return C87 = dart.const({
        __proto__: assertions.FlutterErrorDetails.prototype,
        [FlutterErrorDetails_silent]: false,
        [FlutterErrorDetails_informationCollector]: null,
        [FlutterErrorDetails_stackFilter]: null,
        [FlutterErrorDetails_context]: null,
        [FlutterErrorDetails_library]: "Flutter framework",
        [FlutterErrorDetails_stack]: null,
        [FlutterErrorDetails_exception]: "Both Router.navigate and Router.neglect have been called in this build cycle, and the Router cannot decide whether to report the route information. Please make sure only one of them is called within the same build cycle."
      });
    },
    get C90() {
      return C90 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 9,
        [_Location_line]: 685,
        [_Location_file]: null
      });
    },
    get C89() {
      return C89 = dart.constList([C90 || CT.C90], _LocationL());
    },
    get C88() {
      return C88 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C89 || CT.C89,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 682,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/router.dart"
      });
    },
    get C93() {
      return C93 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routeInformationProvider",
        [_Location_column]: 7,
        [_Location_line]: 677,
        [_Location_file]: null
      });
    },
    get C94() {
      return C94 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backButtonDispatcher",
        [_Location_column]: 7,
        [_Location_line]: 678,
        [_Location_file]: null
      });
    },
    get C95() {
      return C95 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routeInformationParser",
        [_Location_column]: 7,
        [_Location_line]: 679,
        [_Location_file]: null
      });
    },
    get C96() {
      return C96 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routerDelegate",
        [_Location_column]: 7,
        [_Location_line]: 680,
        [_Location_file]: null
      });
    },
    get C97() {
      return C97 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routerState",
        [_Location_column]: 7,
        [_Location_line]: 681,
        [_Location_file]: null
      });
    },
    get C98() {
      return C98 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 682,
        [_Location_file]: null
      });
    },
    get C92() {
      return C92 = dart.constList([C93 || CT.C93, C94 || CT.C94, C95 || CT.C95, C96 || CT.C96, C97 || CT.C97, C98 || CT.C98], _LocationL());
    },
    get C91() {
      return C91 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C92 || CT.C92,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 676,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/router.dart"
      });
    },
    get C99() {
      return C99 = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$1]: "TargetPlatform.android",
        index: 0
      });
    },
    get C100() {
      return C100 = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$1]: "TargetPlatform.fuchsia",
        index: 1
      });
    },
    get C101() {
      return C101 = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$1]: "TargetPlatform.linux",
        index: 3
      });
    },
    get C102() {
      return C102 = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$1]: "TargetPlatform.windows",
        index: 5
      });
    },
    get C103() {
      return C103 = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$1]: "TargetPlatform.iOS",
        index: 2
      });
    },
    get C104() {
      return C104 = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$1]: "TargetPlatform.macOS",
        index: 4
      });
    },
    get C105() {
      return C105 = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 1 / 0,
        [BoxConstraints_minHeight]: 1 / 0,
        [BoxConstraints_maxWidth]: 1 / 0,
        [BoxConstraints_minWidth]: 1 / 0
      });
    },
    get C108() {
      return C108 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 19,
        [_Location_line]: 117,
        [_Location_file]: null
      });
    },
    get C107() {
      return C107 = dart.constList([C108 || CT.C108], _LocationL());
    },
    get C106() {
      return C106 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C107 || CT.C107,
        [_Location_name]: null,
        [_Location_column]: 47,
        [_Location_line]: 116,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/modal_barrier.dart"
      });
    },
    get C111() {
      return C111 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 17,
        [_Location_line]: 115,
        [_Location_file]: null
      });
    },
    get C112() {
      return C112 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 116,
        [_Location_file]: null
      });
    },
    get C110() {
      return C110 = dart.constList([C111 || CT.C111, C112 || CT.C112], _LocationL());
    },
    get C109() {
      return C109 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C110 || CT.C110,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 114,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/modal_barrier.dart"
      });
    },
    get C115() {
      return C115 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursor",
        [_Location_column]: 15,
        [_Location_line]: 112,
        [_Location_file]: null
      });
    },
    get C116() {
      return C116 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opaque",
        [_Location_column]: 15,
        [_Location_line]: 113,
        [_Location_file]: null
      });
    },
    get C117() {
      return C117 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 114,
        [_Location_file]: null
      });
    },
    get C114() {
      return C114 = dart.constList([C115 || CT.C115, C116 || CT.C116, C117 || CT.C117], _LocationL());
    },
    get C113() {
      return C113 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C114 || CT.C114,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 111,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/modal_barrier.dart"
      });
    },
    get C120() {
      return C120 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 13,
        [_Location_line]: 109,
        [_Location_file]: null
      });
    },
    get C121() {
      return C121 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 13,
        [_Location_line]: 110,
        [_Location_file]: null
      });
    },
    get C122() {
      return C122 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 111,
        [_Location_file]: null
      });
    },
    get C119() {
      return C119 = dart.constList([C120 || CT.C120, C121 || CT.C121, C122 || CT.C122], _LocationL());
    },
    get C118() {
      return C118 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C119 || CT.C119,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 108,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/modal_barrier.dart"
      });
    },
    get C125() {
      return C125 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDismiss",
        [_Location_column]: 11,
        [_Location_line]: 102,
        [_Location_file]: null
      });
    },
    get C126() {
      return C126 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 108,
        [_Location_file]: null
      });
    },
    get C124() {
      return C124 = dart.constList([C125 || CT.C125, C126 || CT.C126], _LocationL());
    },
    get C123() {
      return C123 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C124 || CT.C124,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 101,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/modal_barrier.dart"
      });
    },
    get C129() {
      return C129 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excluding",
        [_Location_column]: 9,
        [_Location_line]: 100,
        [_Location_file]: null
      });
    },
    get C130() {
      return C130 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 101,
        [_Location_file]: null
      });
    },
    get C128() {
      return C128 = dart.constList([C129 || CT.C129, C130 || CT.C130], _LocationL());
    },
    get C127() {
      return C127 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C128 || CT.C128,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 97,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/modal_barrier.dart"
      });
    },
    get C133() {
      return C133 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 97,
        [_Location_file]: null
      });
    },
    get C132() {
      return C132 = dart.constList([C133 || CT.C133], _LocationL());
    },
    get C131() {
      return C131 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C132 || CT.C132,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 96,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/modal_barrier.dart"
      });
    },
    get C136() {
      return C136 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 193,
        [_Location_file]: null
      });
    },
    get C137() {
      return C137 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dismissible",
        [_Location_column]: 7,
        [_Location_line]: 194,
        [_Location_file]: null
      });
    },
    get C138() {
      return C138 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "semanticsLabel",
        [_Location_column]: 7,
        [_Location_line]: 195,
        [_Location_file]: null
      });
    },
    get C139() {
      return C139 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "barrierSemanticsDismissible",
        [_Location_column]: 7,
        [_Location_line]: 196,
        [_Location_file]: null
      });
    },
    get C135() {
      return C135 = dart.constList([C136 || CT.C136, C137 || CT.C137, C138 || CT.C138, C139 || CT.C139], _LocationL());
    },
    get C134() {
      return C134 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C135 || CT.C135,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 192,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/modal_barrier.dart"
      });
    },
    get C142() {
      return C142 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestures",
        [_Location_column]: 7,
        [_Location_line]: 294,
        [_Location_file]: null
      });
    },
    get C143() {
      return C143 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 295,
        [_Location_file]: null
      });
    },
    get C144() {
      return C144 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "semantics",
        [_Location_column]: 7,
        [_Location_line]: 296,
        [_Location_file]: null
      });
    },
    get C145() {
      return C145 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 297,
        [_Location_file]: null
      });
    },
    get C141() {
      return C141 = dart.constList([C142 || CT.C142, C143 || CT.C143, C144 || CT.C144, C145 || CT.C145], _LocationL());
    },
    get C140() {
      return C140 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C141 || CT.C141,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 293,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/modal_barrier.dart"
      });
    },
    get C146() {
      return C146 = dart.const({
        __proto__: navigator$.RouteSettings.prototype,
        [RouteSettings_arguments]: null,
        [RouteSettings_name]: null
      });
    },
    get C147() {
      return C147 = dart.constList([], OverlayEntryL());
    },
    get C148() {
      return C148 = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [_name$2]: "AnimationStatus.completed",
        index: 3
      });
    },
    get C149() {
      return C149 = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [_name$2]: "AnimationStatus.forward",
        index: 1
      });
    },
    get C150() {
      return C150 = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [_name$2]: "AnimationStatus.reverse",
        index: 2
      });
    },
    get C151() {
      return C151 = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [_name$2]: "AnimationStatus.dismissed",
        index: 0
      });
    },
    get C154() {
      return C154 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "restorationId",
        [_Location_column]: 11,
        [_Location_line]: 788,
        [_Location_file]: null
      });
    },
    get C155() {
      return C155 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 789,
        [_Location_file]: null
      });
    },
    get C153() {
      return C153 = dart.constList([C154 || CT.C154, C155 || CT.C155], _LocationL());
    },
    get C152() {
      return C152 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C153 || CT.C153,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 787,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C158() {
      return C158 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoring",
        [_Location_column]: 37,
        [_Location_line]: 828,
        [_Location_file]: null
      });
    },
    get C159() {
      return C159 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 37,
        [_Location_line]: 829,
        [_Location_file]: null
      });
    },
    get C157() {
      return C157 = dart.constList([C158 || CT.C158, C159 || CT.C159], _LocationL());
    },
    get C156() {
      return C156 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C157 || CT.C157,
        [_Location_name]: null,
        [_Location_column]: 42,
        [_Location_line]: 827,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C162() {
      return C162 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 33,
        [_Location_line]: 823,
        [_Location_file]: null
      });
    },
    get C163() {
      return C163 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 33,
        [_Location_line]: 824,
        [_Location_file]: null
      });
    },
    get C164() {
      return C164 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 33,
        [_Location_line]: 832,
        [_Location_file]: null
      });
    },
    get C161() {
      return C161 = dart.constList([C162 || CT.C162, C163 || CT.C163, C164 || CT.C164], _LocationL());
    },
    get C160() {
      return C160 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C161 || CT.C161,
        [_Location_name]: null,
        [_Location_column]: 31,
        [_Location_line]: 822,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C167() {
      return C167 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 31,
        [_Location_line]: 839,
        [_Location_file]: null
      });
    },
    get C166() {
      return C166 = dart.constList([C167 || CT.C167], _LocationL());
    },
    get C165() {
      return C165 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C166 || CT.C166,
        [_Location_name]: null,
        [_Location_column]: 36,
        [_Location_line]: 838,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C170() {
      return C170 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 29,
        [_Location_line]: 837,
        [_Location_file]: null
      });
    },
    get C171() {
      return C171 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 29,
        [_Location_line]: 838,
        [_Location_file]: null
      });
    },
    get C169() {
      return C169 = dart.constList([C170 || CT.C170, C171 || CT.C171], _LocationL());
    },
    get C168() {
      return C168 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C169 || CT.C169,
        [_Location_name]: null,
        [_Location_column]: 44,
        [_Location_line]: 836,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C174() {
      return C174 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 27,
        [_Location_line]: 812,
        [_Location_file]: null
      });
    },
    get C175() {
      return C175 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 27,
        [_Location_line]: 813,
        [_Location_file]: null
      });
    },
    get C176() {
      return C176 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 27,
        [_Location_line]: 836,
        [_Location_file]: null
      });
    },
    get C173() {
      return C173 = dart.constList([C174 || CT.C174, C175 || CT.C175, C176 || CT.C176], _LocationL());
    },
    get C172() {
      return C172 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C173 || CT.C173,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 811,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C179() {
      return C179 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 25,
        [_Location_line]: 811,
        [_Location_file]: null
      });
    },
    get C178() {
      return C178 = dart.constList([C179 || CT.C179], _LocationL());
    },
    get C177() {
      return C177 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C178 || CT.C178,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 810,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C182() {
      return C182 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "node",
        [_Location_column]: 23,
        [_Location_line]: 809,
        [_Location_file]: null
      });
    },
    get C183() {
      return C183 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 810,
        [_Location_file]: null
      });
    },
    get C181() {
      return C181 = dart.constList([C182 || CT.C182, C183 || CT.C183], _LocationL());
    },
    get C180() {
      return C180 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C181 || CT.C181,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 808,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C186() {
      return C186 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 21,
        [_Location_line]: 807,
        [_Location_file]: null
      });
    },
    get C187() {
      return C187 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 21,
        [_Location_line]: 808,
        [_Location_file]: null
      });
    },
    get C185() {
      return C185 = dart.constList([C186 || CT.C186, C187 || CT.C187], _LocationL());
    },
    get C184() {
      return C184 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C185 || CT.C185,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 806,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C190() {
      return C190 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actions",
        [_Location_column]: 19,
        [_Location_line]: 803,
        [_Location_file]: null
      });
    },
    get C191() {
      return C191 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 806,
        [_Location_file]: null
      });
    },
    get C189() {
      return C189 = dart.constList([C190 || CT.C190, C191 || CT.C191], _LocationL());
    },
    get C188() {
      return C188 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C189 || CT.C189,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 802,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C194() {
      return C194 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 15,
        [_Location_line]: 801,
        [_Location_file]: null
      });
    },
    get C193() {
      return C193 = dart.constList([C194 || CT.C194], _LocationL());
    },
    get C192() {
      return C192 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C193 || CT.C193,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 800,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C197() {
      return C197 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bucket",
        [_Location_column]: 13,
        [_Location_line]: 799,
        [_Location_file]: null
      });
    },
    get C198() {
      return C198 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 800,
        [_Location_file]: null
      });
    },
    get C196() {
      return C196 = dart.constList([C197 || CT.C197, C198 || CT.C198], _LocationL());
    },
    get C195() {
      return C195 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C196 || CT.C196,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 798,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C201() {
      return C201 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offstage",
        [_Location_column]: 11,
        [_Location_line]: 797,
        [_Location_file]: null
      });
    },
    get C202() {
      return C202 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 798,
        [_Location_file]: null
      });
    },
    get C200() {
      return C200 = dart.constList([C201 || CT.C201, C202 || CT.C202], _LocationL());
    },
    get C199() {
      return C199 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C200 || CT.C200,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 796,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C205() {
      return C205 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "route",
        [_Location_column]: 9,
        [_Location_line]: 793,
        [_Location_file]: null
      });
    },
    get C206() {
      return C206 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isCurrent",
        [_Location_column]: 9,
        [_Location_line]: 794,
        [_Location_file]: null
      });
    },
    get C207() {
      return C207 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canPop",
        [_Location_column]: 9,
        [_Location_line]: 795,
        [_Location_file]: null
      });
    },
    get C208() {
      return C208 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 796,
        [_Location_file]: null
      });
    },
    get C204() {
      return C204 = dart.constList([C205 || CT.C205, C206 || CT.C206, C207 || CT.C207, C208 || CT.C208], _LocationL());
    },
    get C203() {
      return C203 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C204 || CT.C204,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 792,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C211() {
      return C211 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 7,
        [_Location_line]: 784,
        [_Location_file]: null
      });
    },
    get C212() {
      return C212 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 785,
        [_Location_file]: null
      });
    },
    get C213() {
      return C213 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 792,
        [_Location_file]: null
      });
    },
    get C210() {
      return C210 = dart.constList([C211 || CT.C211, C212 || CT.C212, C213 || CT.C213], _LocationL());
    },
    get C209() {
      return C209 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C210 || CT.C210,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 783,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C216() {
      return C216 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 9,
        [_Location_line]: 1484,
        [_Location_file]: null
      });
    },
    get C217() {
      return C217 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dismissible",
        [_Location_column]: 9,
        [_Location_line]: 1485,
        [_Location_file]: null
      });
    },
    get C218() {
      return C218 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "semanticsLabel",
        [_Location_column]: 9,
        [_Location_line]: 1486,
        [_Location_file]: null
      });
    },
    get C219() {
      return C219 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "barrierSemanticsDismissible",
        [_Location_column]: 9,
        [_Location_line]: 1487,
        [_Location_file]: null
      });
    },
    get C215() {
      return C215 = dart.constList([C216 || CT.C216, C217 || CT.C217, C218 || CT.C218, C219 || CT.C219], _LocationL());
    },
    get C214() {
      return C214 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C215 || CT.C215,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 1483,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C222() {
      return C222 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dismissible",
        [_Location_column]: 9,
        [_Location_line]: 1491,
        [_Location_file]: null
      });
    },
    get C223() {
      return C223 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "semanticsLabel",
        [_Location_column]: 9,
        [_Location_line]: 1492,
        [_Location_file]: null
      });
    },
    get C224() {
      return C224 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "barrierSemanticsDismissible",
        [_Location_column]: 9,
        [_Location_line]: 1493,
        [_Location_file]: null
      });
    },
    get C221() {
      return C221 = dart.constList([C222 || CT.C222, C223 || CT.C223, C224 || CT.C224], _LocationL());
    },
    get C220() {
      return C220 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C221 || CT.C221,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 1490,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C227() {
      return C227 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "filter",
        [_Location_column]: 9,
        [_Location_line]: 1498,
        [_Location_file]: null
      });
    },
    get C228() {
      return C228 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1499,
        [_Location_file]: null
      });
    },
    get C226() {
      return C226 = dart.constList([C227 || CT.C227, C228 || CT.C228], _LocationL());
    },
    get C225() {
      return C225 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C226 || CT.C226,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 1497,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C231() {
      return C231 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoring",
        [_Location_column]: 7,
        [_Location_line]: 1503,
        [_Location_file]: null
      });
    },
    get C232() {
      return C232 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1505,
        [_Location_file]: null
      });
    },
    get C230() {
      return C230 = dart.constList([C231 || CT.C231, C232 || CT.C232], _LocationL());
    },
    get C229() {
      return C229 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C230 || CT.C230,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 1502,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C233() {
      return C233 = dart.const({
        __proto__: semantics.OrdinalSortKey.prototype,
        [SemanticsSortKey_name]: null,
        [OrdinalSortKey_order]: 1
      });
    },
    get C236() {
      return C236 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "sortKey",
        [_Location_column]: 9,
        [_Location_line]: 1510,
        [_Location_file]: null
      });
    },
    get C237() {
      return C237 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1511,
        [_Location_file]: null
      });
    },
    get C235() {
      return C235 = dart.constList([C236 || CT.C236, C237 || CT.C237], _LocationL());
    },
    get C234() {
      return C234 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C235 || CT.C235,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 1509,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C238() {
      return C238 = dart.const({
        __proto__: semantics.OrdinalSortKey.prototype,
        [SemanticsSortKey_name]: null,
        [OrdinalSortKey_order]: 0
      });
    },
    get C241() {
      return C241 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 9,
        [_Location_line]: 1527,
        [_Location_file]: null
      });
    },
    get C242() {
      return C242 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "route",
        [_Location_column]: 9,
        [_Location_line]: 1528,
        [_Location_file]: null
      });
    },
    get C240() {
      return C240 = dart.constList([C241 || CT.C241, C242 || CT.C242], _LocationL());
    },
    get C239() {
      return C239 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C240 || CT.C240,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1526,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C245() {
      return C245 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "sortKey",
        [_Location_column]: 7,
        [_Location_line]: 1525,
        [_Location_file]: null
      });
    },
    get C246() {
      return C246 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1526,
        [_Location_file]: null
      });
    },
    get C244() {
      return C244 = dart.constList([C245 || CT.C245, C246 || CT.C246], _LocationL());
    },
    get C243() {
      return C243 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C244 || CT.C244,
        [_Location_name]: null,
        [_Location_column]: 33,
        [_Location_line]: 1524,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C247() {
      return C247 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2147483648.0
      });
    },
    get C248() {
      return C248 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 200000
      });
    },
    get C251() {
      return C251 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1762,
        [_Location_file]: null
      });
    },
    get C252() {
      return C252 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scopesRoute",
        [_Location_column]: 7,
        [_Location_line]: 1763,
        [_Location_file]: null
      });
    },
    get C253() {
      return C253 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 7,
        [_Location_line]: 1764,
        [_Location_file]: null
      });
    },
    get C250() {
      return C250 = dart.constList([C251 || CT.C251, C252 || CT.C252, C253 || CT.C253], _LocationL());
    },
    get C249() {
      return C249 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C250 || CT.C250,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1761,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C256() {
      return C256 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 11,
        [_Location_line]: 1772,
        [_Location_file]: null
      });
    },
    get C257() {
      return C257 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1776,
        [_Location_file]: null
      });
    },
    get C255() {
      return C255 = dart.constList([C256 || CT.C256, C257 || CT.C257], _LocationL());
    },
    get C254() {
      return C254 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C255 || CT.C255,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1771,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/routes.dart"
      });
    },
    get C258() {
      return C258 = dart.fn(pages._defaultTransitionsBuilder, BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget());
    },
    get C259() {
      return C259 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 300000
      });
    },
    get C260() {
      return C260 = dart.const({
        __proto__: heroes.HeroFlightDirection.prototype,
        [_name$3]: "HeroFlightDirection.push",
        index: 0
      });
    },
    get C261() {
      return C261 = dart.const({
        __proto__: heroes.HeroFlightDirection.prototype,
        [_name$3]: "HeroFlightDirection.pop",
        index: 1
      });
    },
    get C262() {
      return C262 = dart.constList([C260 || CT.C260, C261 || CT.C261], HeroFlightDirectionL());
    },
    get C265() {
      return C265 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 9,
        [_Location_line]: 389,
        [_Location_file]: null
      });
    },
    get C266() {
      return C266 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 9,
        [_Location_line]: 390,
        [_Location_file]: null
      });
    },
    get C264() {
      return C264 = dart.constList([C265 || CT.C265, C266 || CT.C266], _LocationL());
    },
    get C263() {
      return C263 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C264 || CT.C264,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 388,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/heroes.dart"
      });
    },
    get C269() {
      return C269 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 31,
        [_Location_line]: 401,
        [_Location_file]: null
      });
    },
    get C270() {
      return C270 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 42,
        [_Location_line]: 401,
        [_Location_file]: null
      });
    },
    get C268() {
      return C268 = dart.constList([C269 || CT.C269, C270 || CT.C270], _LocationL());
    },
    get C267() {
      return C267 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C268 || CT.C268,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 401,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/heroes.dart"
      });
    },
    get C273() {
      return C273 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabled",
        [_Location_column]: 11,
        [_Location_line]: 400,
        [_Location_file]: null
      });
    },
    get C274() {
      return C274 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 401,
        [_Location_file]: null
      });
    },
    get C272() {
      return C272 = dart.constList([C273 || CT.C273, C274 || CT.C274], _LocationL());
    },
    get C271() {
      return C271 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C272 || CT.C272,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 399,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/heroes.dart"
      });
    },
    get C277() {
      return C277 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offstage",
        [_Location_column]: 9,
        [_Location_line]: 398,
        [_Location_file]: null
      });
    },
    get C278() {
      return C278 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 399,
        [_Location_file]: null
      });
    },
    get C276() {
      return C276 = dart.constList([C277 || CT.C277, C278 || CT.C278], _LocationL());
    },
    get C275() {
      return C275 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C276 || CT.C276,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 397,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/heroes.dart"
      });
    },
    get C281() {
      return C281 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 395,
        [_Location_file]: null
      });
    },
    get C282() {
      return C282 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 396,
        [_Location_file]: null
      });
    },
    get C283() {
      return C283 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 397,
        [_Location_file]: null
      });
    },
    get C280() {
      return C280 = dart.constList([C281 || CT.C281, C282 || CT.C282, C283 || CT.C283], _LocationL());
    },
    get C279() {
      return C279 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C280 || CT.C280,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 394,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/heroes.dart"
      });
    },
    get C286() {
      return C286 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 17,
        [_Location_line]: 529,
        [_Location_file]: null
      });
    },
    get C287() {
      return C287 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 530,
        [_Location_file]: null
      });
    },
    get C285() {
      return C285 = dart.constList([C286 || CT.C286, C287 || CT.C287], _LocationL());
    },
    get C284() {
      return C284 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C285 || CT.C285,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 528,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/heroes.dart"
      });
    },
    get C290() {
      return C290 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 528,
        [_Location_file]: null
      });
    },
    get C289() {
      return C289 = dart.constList([C290 || CT.C290], _LocationL());
    },
    get C288() {
      return C288 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C289 || CT.C289,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 527,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/heroes.dart"
      });
    },
    get C293() {
      return C293 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 527,
        [_Location_file]: null
      });
    },
    get C292() {
      return C292 = dart.constList([C293 || CT.C293], _LocationL());
    },
    get C291() {
      return C291 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C292 || CT.C292,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 526,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/heroes.dart"
      });
    },
    get C296() {
      return C296 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 11,
        [_Location_line]: 522,
        [_Location_file]: null
      });
    },
    get C297() {
      return C297 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "right",
        [_Location_column]: 11,
        [_Location_line]: 523,
        [_Location_file]: null
      });
    },
    get C298() {
      return C298 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 11,
        [_Location_line]: 524,
        [_Location_file]: null
      });
    },
    get C299() {
      return C299 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 11,
        [_Location_line]: 525,
        [_Location_file]: null
      });
    },
    get C300() {
      return C300 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 526,
        [_Location_file]: null
      });
    },
    get C295() {
      return C295 = dart.constList([C296 || CT.C296, C297 || CT.C297, C298 || CT.C298, C299 || CT.C299, C300 || CT.C300], _LocationL());
    },
    get C294() {
      return C294 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C295 || CT.C295,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 521,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/heroes.dart"
      });
    },
    get C303() {
      return C303 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 7,
        [_Location_line]: 492,
        [_Location_file]: null
      });
    },
    get C304() {
      return C304 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 493,
        [_Location_file]: null
      });
    },
    get C305() {
      return C305 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 494,
        [_Location_file]: null
      });
    },
    get C302() {
      return C302 = dart.constList([C303 || CT.C303, C304 || CT.C304, C305 || CT.C305], _LocationL());
    },
    get C301() {
      return C301 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C302 || CT.C302,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 491,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/heroes.dart"
      });
    },
    get C306() {
      return C306 = dart.const({
        __proto__: navigator$.RoutePopDisposition.prototype,
        [_name$4]: "RoutePopDisposition.pop",
        index: 0
      });
    },
    get C307() {
      return C307 = dart.const({
        __proto__: navigator$.RoutePopDisposition.prototype,
        [_name$4]: "RoutePopDisposition.doNotPop",
        index: 1
      });
    },
    get C308() {
      return C308 = dart.const({
        __proto__: navigator$.RoutePopDisposition.prototype,
        [_name$4]: "RoutePopDisposition.bubble",
        index: 2
      });
    },
    get C309() {
      return C309 = dart.constList([C306 || CT.C306, C307 || CT.C307, C308 || CT.C308], RoutePopDispositionL());
    },
    get C310() {
      return C310 = dart.constList([], PageL());
    },
    get C311() {
      return C311 = dart.fn(navigator$.Navigator.defaultGenerateInitialRoutes, NavigatorStateAndStringToListOfRoute());
    },
    get C312() {
      return C312 = dart.const({
        __proto__: navigator$.DefaultTransitionDelegate.prototype
      });
    },
    get C313() {
      return C313 = dart.constList([], NavigatorObserverL());
    },
    get C314() {
      return C314 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$4]: "_RouteLifecycle.staging",
        index: 0
      });
    },
    get C315() {
      return C315 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$4]: "_RouteLifecycle.add",
        index: 1
      });
    },
    get C316() {
      return C316 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$4]: "_RouteLifecycle.adding",
        index: 2
      });
    },
    get C317() {
      return C317 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$4]: "_RouteLifecycle.push",
        index: 3
      });
    },
    get C318() {
      return C318 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$4]: "_RouteLifecycle.pushReplace",
        index: 4
      });
    },
    get C319() {
      return C319 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$4]: "_RouteLifecycle.pushing",
        index: 5
      });
    },
    get C320() {
      return C320 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$4]: "_RouteLifecycle.replace",
        index: 6
      });
    },
    get C321() {
      return C321 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$4]: "_RouteLifecycle.idle",
        index: 7
      });
    },
    get C322() {
      return C322 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$4]: "_RouteLifecycle.pop",
        index: 8
      });
    },
    get C323() {
      return C323 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$4]: "_RouteLifecycle.remove",
        index: 9
      });
    },
    get C324() {
      return C324 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$4]: "_RouteLifecycle.popping",
        index: 10
      });
    },
    get C325() {
      return C325 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$4]: "_RouteLifecycle.removing",
        index: 11
      });
    },
    get C326() {
      return C326 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$4]: "_RouteLifecycle.dispose",
        index: 12
      });
    },
    get C327() {
      return C327 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$4]: "_RouteLifecycle.disposed",
        index: 13
      });
    },
    get C328() {
      return C328 = dart.constList([C314 || CT.C314, C315 || CT.C315, C316 || CT.C316, C317 || CT.C317, C318 || CT.C318, C319 || CT.C319, C320 || CT.C320, C321 || CT.C321, C322 || CT.C322, C323 || CT.C323, C324 || CT.C324, C325 || CT.C325, C326 || CT.C326, C327 || CT.C327], _RouteLifecycleL());
    },
    get C331() {
      return C331 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 17,
        [_Location_line]: 5160,
        [_Location_file]: null
      });
    },
    get C332() {
      return C332 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "initialEntries",
        [_Location_column]: 17,
        [_Location_line]: 5161,
        [_Location_file]: null
      });
    },
    get C330() {
      return C330 = dart.constList([C331 || CT.C331, C332 || CT.C332], _LocationL());
    },
    get C329() {
      return C329 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C330 || CT.C330,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 5159,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/navigator.dart"
      });
    },
    get C335() {
      return C335 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bucket",
        [_Location_column]: 15,
        [_Location_line]: 5158,
        [_Location_file]: null
      });
    },
    get C336() {
      return C336 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 5159,
        [_Location_file]: null
      });
    },
    get C334() {
      return C334 = dart.constList([C335 || CT.C335, C336 || CT.C336], _LocationL());
    },
    get C333() {
      return C333 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C334 || CT.C334,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 5157,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/navigator.dart"
      });
    },
    get C339() {
      return C339 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "node",
        [_Location_column]: 13,
        [_Location_line]: 5155,
        [_Location_file]: null
      });
    },
    get C340() {
      return C340 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 13,
        [_Location_line]: 5156,
        [_Location_file]: null
      });
    },
    get C341() {
      return C341 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 5157,
        [_Location_file]: null
      });
    },
    get C338() {
      return C338 = dart.constList([C339 || CT.C339, C340 || CT.C340, C341 || CT.C341], _LocationL());
    },
    get C337() {
      return C337 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C338 || CT.C338,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 5154,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/navigator.dart"
      });
    },
    get C344() {
      return C344 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "absorbing",
        [_Location_column]: 11,
        [_Location_line]: 5153,
        [_Location_file]: null
      });
    },
    get C345() {
      return C345 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 5154,
        [_Location_file]: null
      });
    },
    get C343() {
      return C343 = dart.constList([C344 || CT.C344, C345 || CT.C345], _LocationL());
    },
    get C342() {
      return C342 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C343 || CT.C343,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 5152,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/navigator.dart"
      });
    },
    get C348() {
      return C348 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 9,
        [_Location_line]: 5149,
        [_Location_file]: null
      });
    },
    get C349() {
      return C349 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerUp",
        [_Location_column]: 9,
        [_Location_line]: 5150,
        [_Location_file]: null
      });
    },
    get C350() {
      return C350 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerCancel",
        [_Location_column]: 9,
        [_Location_line]: 5151,
        [_Location_file]: null
      });
    },
    get C351() {
      return C351 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 5152,
        [_Location_file]: null
      });
    },
    get C347() {
      return C347 = dart.constList([C348 || CT.C348, C349 || CT.C349, C350 || CT.C350, C351 || CT.C351], _LocationL());
    },
    get C346() {
      return C346 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C347 || CT.C347,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 5148,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/navigator.dart"
      });
    },
    get C354() {
      return C354 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 5148,
        [_Location_file]: null
      });
    },
    get C353() {
      return C353 = dart.constList([C354 || CT.C354], _LocationL());
    },
    get C352() {
      return C352 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C353 || CT.C353,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 5147,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/navigator.dart"
      });
    },
    get C355() {
      return C355 = dart.const({
        __proto__: navigator$._RouteRestorationType.prototype,
        [_name$4]: "_RouteRestorationType.named",
        index: 0
      });
    },
    get C356() {
      return C356 = dart.const({
        __proto__: navigator$._RouteRestorationType.prototype,
        [_name$4]: "_RouteRestorationType.anonymous",
        index: 1
      });
    },
    get C357() {
      return C357 = dart.constList([C355 || CT.C355, C356 || CT.C356], _RouteRestorationTypeL());
    },
    get C358() {
      return C358 = dart.constList([], ObjectL());
    },
    get C359() {
      return C359 = dart.fn(navigator$.RestorableRouteFuture._defaultNavigatorFinder, BuildContextToNavigatorState());
    },
    get C360() {
      return C360 = dart.constList([], TableRowL());
    },
    get C361() {
      return C361 = dart.const({
        __proto__: table.FlexColumnWidth.prototype,
        [FlexColumnWidth_value]: 1
      });
    },
    get C362() {
      return C362 = dart.const({
        __proto__: table.TableCellVerticalAlignment.prototype,
        [_name$5]: "TableCellVerticalAlignment.top",
        index: 0
      });
    },
    get C363() {
      return C363 = dart.constList([], _TableElementRowL());
    },
    get C364() {
      return C364 = dart.constList([], ElementL());
    },
    get C365() {
      return C365 = dart.constList([], WidgetL());
    },
    get C366() {
      return C366 = dart.const({
        __proto__: diagnostics$.DiagnosticsTreeStyle.prototype,
        [_name$]: "DiagnosticsTreeStyle.errorProperty",
        index: 9
      });
    },
    get C367() {
      return C367 = dart.fn(framework.Element._activateRecursively, ElementTovoid());
    },
    get C369() {
      return C369 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C6 || CT.C6,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 58,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C368() {
      return C368 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [_location$]: C369 || CT.C369,
        [key$]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 0,
        [SizedBox_width]: 0
      });
    },
    get C372() {
      return C372 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 221,
        [_Location_file]: null
      });
    },
    get C373() {
      return C373 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoring",
        [_Location_column]: 11,
        [_Location_line]: 222,
        [_Location_file]: null
      });
    },
    get C374() {
      return C374 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoringSemantics",
        [_Location_column]: 11,
        [_Location_line]: 223,
        [_Location_file]: null
      });
    },
    get C371() {
      return C371 = dart.constList([C372 || CT.C372, C373 || CT.C373, C374 || CT.C374], _LocationL());
    },
    get C370() {
      return C370 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C371 || CT.C371,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 220,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C377() {
      return C377 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 9,
        [_Location_line]: 227,
        [_Location_file]: null
      });
    },
    get C378() {
      return C378 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alwaysIncludeSemantics",
        [_Location_column]: 9,
        [_Location_line]: 228,
        [_Location_file]: null
      });
    },
    get C379() {
      return C379 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 229,
        [_Location_file]: null
      });
    },
    get C376() {
      return C376 = dart.constList([C377 || CT.C377, C378 || CT.C378, C379 || CT.C379], _LocationL());
    },
    get C375() {
      return C375 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C376 || CT.C376,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 226,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C382() {
      return C382 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 29,
        [_Location_line]: 238,
        [_Location_file]: null
      });
    },
    get C383() {
      return C383 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabled",
        [_Location_column]: 43,
        [_Location_line]: 238,
        [_Location_file]: null
      });
    },
    get C381() {
      return C381 = dart.constList([C382 || CT.C382, C383 || CT.C383], _LocationL());
    },
    get C380() {
      return C380 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C381 || CT.C381,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 238,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C386() {
      return C386 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 240,
        [_Location_file]: null
      });
    },
    get C387() {
      return C387 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offstage",
        [_Location_column]: 9,
        [_Location_line]: 241,
        [_Location_file]: null
      });
    },
    get C385() {
      return C385 = dart.constList([C386 || CT.C386, C387 || CT.C387], _LocationL());
    },
    get C384() {
      return C384 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C385 || CT.C385,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 239,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C389() {
      return C389 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C6 || CT.C6,
        [_Location_name]: null,
        [_Location_column]: 36,
        [_Location_line]: 303,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C388() {
      return C388 = dart.const({
        __proto__: basic.SliverToBoxAdapter.prototype,
        [_location$]: C389 || CT.C389,
        [key$]: null,
        [SingleChildRenderObjectWidget_child]: null
      });
    },
    get C392() {
      return C392 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "sliver",
        [_Location_column]: 11,
        [_Location_line]: 459,
        [_Location_file]: null
      });
    },
    get C393() {
      return C393 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoring",
        [_Location_column]: 11,
        [_Location_line]: 460,
        [_Location_file]: null
      });
    },
    get C394() {
      return C394 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoringSemantics",
        [_Location_column]: 11,
        [_Location_line]: 461,
        [_Location_file]: null
      });
    },
    get C391() {
      return C391 = dart.constList([C392 || CT.C392, C393 || CT.C393, C394 || CT.C394], _LocationL());
    },
    get C390() {
      return C390 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C391 || CT.C391,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 458,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C397() {
      return C397 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 9,
        [_Location_line]: 465,
        [_Location_file]: null
      });
    },
    get C398() {
      return C398 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alwaysIncludeSemantics",
        [_Location_column]: 9,
        [_Location_line]: 466,
        [_Location_file]: null
      });
    },
    get C399() {
      return C399 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "sliver",
        [_Location_column]: 9,
        [_Location_line]: 467,
        [_Location_file]: null
      });
    },
    get C396() {
      return C396 = dart.constList([C397 || CT.C397, C398 || CT.C398, C399 || CT.C399], _LocationL());
    },
    get C395() {
      return C395 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C396 || CT.C396,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 464,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C402() {
      return C402 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 29,
        [_Location_line]: 476,
        [_Location_file]: null
      });
    },
    get C403() {
      return C403 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabled",
        [_Location_column]: 44,
        [_Location_line]: 476,
        [_Location_file]: null
      });
    },
    get C401() {
      return C401 = dart.constList([C402 || CT.C402, C403 || CT.C403], _LocationL());
    },
    get C400() {
      return C400 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C401 || CT.C401,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 476,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C406() {
      return C406 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "sliver",
        [_Location_column]: 9,
        [_Location_line]: 478,
        [_Location_file]: null
      });
    },
    get C407() {
      return C407 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offstage",
        [_Location_column]: 9,
        [_Location_line]: 479,
        [_Location_file]: null
      });
    },
    get C405() {
      return C405 = dart.constList([C406 || CT.C406, C407 || CT.C407], _LocationL());
    },
    get C404() {
      return C404 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C405 || CT.C405,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 477,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/visibility.dart"
      });
    },
    get C410() {
      return C410 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "translation",
        [_Location_column]: 7,
        [_Location_line]: 303,
        [_Location_file]: null
      });
    },
    get C411() {
      return C411 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transformHitTests",
        [_Location_column]: 7,
        [_Location_line]: 304,
        [_Location_file]: null
      });
    },
    get C412() {
      return C412 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 305,
        [_Location_file]: null
      });
    },
    get C409() {
      return C409 = dart.constList([C410 || CT.C410, C411 || CT.C411, C412 || CT.C412], _LocationL());
    },
    get C408() {
      return C408 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C409 || CT.C409,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 302,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/transitions.dart"
      });
    },
    get C413() {
      return C413 = dart.const({
        __proto__: alignment$.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 0
      });
    },
    get C416() {
      return C416 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transform",
        [_Location_column]: 7,
        [_Location_line]: 406,
        [_Location_file]: null
      });
    },
    get C417() {
      return C417 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 407,
        [_Location_file]: null
      });
    },
    get C418() {
      return C418 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 408,
        [_Location_file]: null
      });
    },
    get C415() {
      return C415 = dart.constList([C416 || CT.C416, C417 || CT.C417, C418 || CT.C418], _LocationL());
    },
    get C414() {
      return C414 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C415 || CT.C415,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 405,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/transitions.dart"
      });
    },
    get C421() {
      return C421 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transform",
        [_Location_column]: 7,
        [_Location_line]: 505,
        [_Location_file]: null
      });
    },
    get C422() {
      return C422 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 506,
        [_Location_file]: null
      });
    },
    get C423() {
      return C423 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 507,
        [_Location_file]: null
      });
    },
    get C420() {
      return C420 = dart.constList([C421 || CT.C421, C422 || CT.C422, C423 || CT.C423], _LocationL());
    },
    get C419() {
      return C419 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C420 || CT.C420,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 504,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/transitions.dart"
      });
    },
    get C424() {
      return C424 = dart.const({
        __proto__: basic_types.Axis.prototype,
        [_name$6]: "Axis.vertical",
        index: 1
      });
    },
    get C427() {
      return C427 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 642,
        [_Location_file]: null
      });
    },
    get C428() {
      return C428 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 9,
        [_Location_line]: 643,
        [_Location_file]: null
      });
    },
    get C429() {
      return C429 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "widthFactor",
        [_Location_column]: 9,
        [_Location_line]: 644,
        [_Location_file]: null
      });
    },
    get C430() {
      return C430 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 645,
        [_Location_file]: null
      });
    },
    get C426() {
      return C426 = dart.constList([C427 || CT.C427, C428 || CT.C428, C429 || CT.C429, C430 || CT.C430], _LocationL());
    },
    get C425() {
      return C425 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C426 || CT.C426,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 641,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/transitions.dart"
      });
    },
    get C433() {
      return C433 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 641,
        [_Location_file]: null
      });
    },
    get C432() {
      return C432 = dart.constList([C433 || CT.C433], _LocationL());
    },
    get C431() {
      return C431 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C432 || CT.C432,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 640,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/transitions.dart"
      });
    },
    get C436() {
      return C436 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "rect",
        [_Location_column]: 7,
        [_Location_line]: 997,
        [_Location_file]: null
      });
    },
    get C437() {
      return C437 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 998,
        [_Location_file]: null
      });
    },
    get C435() {
      return C435 = dart.constList([C436 || CT.C436, C437 || CT.C437], _LocationL());
    },
    get C434() {
      return C434 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C435 || CT.C435,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 996,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/transitions.dart"
      });
    },
    get C440() {
      return C440 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 7,
        [_Location_line]: 1117,
        [_Location_file]: null
      });
    },
    get C441() {
      return C441 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "right",
        [_Location_column]: 7,
        [_Location_line]: 1118,
        [_Location_file]: null
      });
    },
    get C442() {
      return C442 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 7,
        [_Location_line]: 1119,
        [_Location_file]: null
      });
    },
    get C443() {
      return C443 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 7,
        [_Location_line]: 1120,
        [_Location_file]: null
      });
    },
    get C444() {
      return C444 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1121,
        [_Location_file]: null
      });
    },
    get C439() {
      return C439 = dart.constList([C440 || CT.C440, C441 || CT.C441, C442 || CT.C442, C443 || CT.C443, C444 || CT.C444], _LocationL());
    },
    get C438() {
      return C438 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C439 || CT.C439,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1116,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/transitions.dart"
      });
    },
    get C445() {
      return C445 = dart.const({
        __proto__: proxy_box.DecorationPosition.prototype,
        [_name$7]: "DecorationPosition.background",
        index: 0
      });
    },
    get C448() {
      return C448 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 7,
        [_Location_line]: 1241,
        [_Location_file]: null
      });
    },
    get C449() {
      return C449 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 7,
        [_Location_line]: 1242,
        [_Location_file]: null
      });
    },
    get C450() {
      return C450 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1243,
        [_Location_file]: null
      });
    },
    get C447() {
      return C447 = dart.constList([C448 || CT.C448, C449 || CT.C449, C450 || CT.C450], _LocationL());
    },
    get C446() {
      return C446 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C447 || CT.C447,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1240,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/transitions.dart"
      });
    },
    get C453() {
      return C453 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 1302,
        [_Location_file]: null
      });
    },
    get C454() {
      return C454 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "widthFactor",
        [_Location_column]: 7,
        [_Location_line]: 1303,
        [_Location_file]: null
      });
    },
    get C455() {
      return C455 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 7,
        [_Location_line]: 1304,
        [_Location_file]: null
      });
    },
    get C456() {
      return C456 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1305,
        [_Location_file]: null
      });
    },
    get C452() {
      return C452 = dart.constList([C453 || CT.C453, C454 || CT.C454, C455 || CT.C455, C456 || CT.C456], _LocationL());
    },
    get C451() {
      return C451 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C452 || CT.C452,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1301,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/transitions.dart"
      });
    },
    get C457() {
      return C457 = dart.const({
        __proto__: paragraph.TextOverflow.prototype,
        [_name$8]: "TextOverflow.clip",
        index: 0
      });
    },
    get C460() {
      return C460 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 7,
        [_Location_line]: 1407,
        [_Location_file]: null
      });
    },
    get C461() {
      return C461 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 7,
        [_Location_line]: 1408,
        [_Location_file]: null
      });
    },
    get C462() {
      return C462 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "softWrap",
        [_Location_column]: 7,
        [_Location_line]: 1409,
        [_Location_file]: null
      });
    },
    get C463() {
      return C463 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 7,
        [_Location_line]: 1410,
        [_Location_file]: null
      });
    },
    get C464() {
      return C464 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLines",
        [_Location_column]: 7,
        [_Location_line]: 1411,
        [_Location_file]: null
      });
    },
    get C465() {
      return C465 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1412,
        [_Location_file]: null
      });
    },
    get C459() {
      return C459 = dart.constList([C460 || CT.C460, C461 || CT.C461, C462 || CT.C462, C463 || CT.C463, C464 || CT.C464, C465 || CT.C465], _LocationL());
    },
    get C458() {
      return C458 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C459 || CT.C459,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1406,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/transitions.dart"
      });
    },
    get C468() {
      return C468 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabled",
        [_Location_column]: 7,
        [_Location_line]: 207,
        [_Location_file]: null
      });
    },
    get C469() {
      return C469 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 208,
        [_Location_file]: null
      });
    },
    get C467() {
      return C467 = dart.constList([C468 || CT.C468, C469 || CT.C469], _LocationL());
    },
    get C466() {
      return C466 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C467 || CT.C467,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 206,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/overlay.dart"
      });
    },
    get C470() {
      return C470 = dart.const({
        __proto__: ui.Clip.prototype,
        [_name]: "Clip.hardEdge",
        index: 1
      });
    },
    get C473() {
      return C473 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 11,
        [_Location_line]: 493,
        [_Location_file]: null
      });
    },
    get C474() {
      return C474 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "entry",
        [_Location_column]: 11,
        [_Location_line]: 494,
        [_Location_file]: null
      });
    },
    get C472() {
      return C472 = dart.constList([C473 || CT.C473, C474 || CT.C474], _LocationL());
    },
    get C471() {
      return C471 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C472 || CT.C472,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 492,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/overlay.dart"
      });
    },
    get C477() {
      return C477 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 11,
        [_Location_line]: 500,
        [_Location_file]: null
      });
    },
    get C478() {
      return C478 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "entry",
        [_Location_column]: 11,
        [_Location_line]: 501,
        [_Location_file]: null
      });
    },
    get C479() {
      return C479 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "tickerEnabled",
        [_Location_column]: 11,
        [_Location_line]: 502,
        [_Location_file]: null
      });
    },
    get C476() {
      return C476 = dart.constList([C477 || CT.C477, C478 || CT.C478, C479 || CT.C479], _LocationL());
    },
    get C475() {
      return C475 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C476 || CT.C476,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 499,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/overlay.dart"
      });
    },
    get C482() {
      return C482 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "skipCount",
        [_Location_column]: 7,
        [_Location_line]: 507,
        [_Location_file]: null
      });
    },
    get C483() {
      return C483 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 508,
        [_Location_file]: null
      });
    },
    get C484() {
      return C484 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 7,
        [_Location_line]: 509,
        [_Location_file]: null
      });
    },
    get C481() {
      return C481 = dart.constList([C482 || CT.C482, C483 || CT.C483, C484 || CT.C484], _LocationL());
    },
    get C480() {
      return C480 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C481 || CT.C481,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 506,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/overlay.dart"
      });
    },
    get C485() {
      return C485 = dart.const({
        __proto__: text_selection.TextSelectionHandleType.prototype,
        [_name$9]: "TextSelectionHandleType.left",
        index: 0
      });
    },
    get C486() {
      return C486 = dart.const({
        __proto__: text_selection.TextSelectionHandleType.prototype,
        [_name$9]: "TextSelectionHandleType.right",
        index: 1
      });
    },
    get C487() {
      return C487 = dart.const({
        __proto__: text_selection.TextSelectionHandleType.prototype,
        [_name$9]: "TextSelectionHandleType.collapsed",
        index: 2
      });
    },
    get C488() {
      return C488 = dart.constList([C485 || CT.C485, C486 || CT.C486, C487 || CT.C487], TextSelectionHandleTypeL());
    },
    get C489() {
      return C489 = dart.const({
        __proto__: text_selection._TextSelectionHandlePosition.prototype,
        [_name$9]: "_TextSelectionHandlePosition.start",
        index: 0
      });
    },
    get C490() {
      return C490 = dart.const({
        __proto__: text_selection._TextSelectionHandlePosition.prototype,
        [_name$9]: "_TextSelectionHandlePosition.end",
        index: 1
      });
    },
    get C491() {
      return C491 = dart.constList([C489 || CT.C489, C490 || CT.C490], _TextSelectionHandlePositionL());
    },
    get C492() {
      return C492 = dart.const({
        __proto__: recognizer.DragStartBehavior.prototype,
        [_name$10]: "DragStartBehavior.start",
        index: 1
      });
    },
    get C493() {
      return C493 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C6 || CT.C6,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 526,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text_selection.dart"
      });
    },
    get C496() {
      return C496 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSelectionHandleChanged",
        [_Location_column]: 9,
        [_Location_line]: 530,
        [_Location_file]: null
      });
    },
    get C497() {
      return C497 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSelectionHandleTapped",
        [_Location_column]: 9,
        [_Location_line]: 531,
        [_Location_file]: null
      });
    },
    get C498() {
      return C498 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "startHandleLayerLink",
        [_Location_column]: 9,
        [_Location_line]: 532,
        [_Location_file]: null
      });
    },
    get C499() {
      return C499 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "endHandleLayerLink",
        [_Location_column]: 9,
        [_Location_line]: 533,
        [_Location_file]: null
      });
    },
    get C500() {
      return C500 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "renderObject",
        [_Location_column]: 9,
        [_Location_line]: 534,
        [_Location_file]: null
      });
    },
    get C501() {
      return C501 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selection",
        [_Location_column]: 9,
        [_Location_line]: 535,
        [_Location_file]: null
      });
    },
    get C502() {
      return C502 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionControls",
        [_Location_column]: 9,
        [_Location_line]: 536,
        [_Location_file]: null
      });
    },
    get C503() {
      return C503 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 9,
        [_Location_line]: 537,
        [_Location_file]: null
      });
    },
    get C504() {
      return C504 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 9,
        [_Location_line]: 538,
        [_Location_file]: null
      });
    },
    get C495() {
      return C495 = dart.constList([C496 || CT.C496, C497 || CT.C497, C498 || CT.C498, C499 || CT.C499, C500 || CT.C500, C501 || CT.C501, C502 || CT.C502, C503 || CT.C503, C504 || CT.C504], _LocationL());
    },
    get C494() {
      return C494 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C495 || CT.C495,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 529,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text_selection.dart"
      });
    },
    get C507() {
      return C507 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visible",
        [_Location_column]: 7,
        [_Location_line]: 528,
        [_Location_file]: null
      });
    },
    get C508() {
      return C508 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 529,
        [_Location_file]: null
      });
    },
    get C506() {
      return C506 = dart.constList([C507 || CT.C507, C508 || CT.C508], _LocationL());
    },
    get C505() {
      return C505 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C506 || CT.C506,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 527,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text_selection.dart"
      });
    },
    get C509() {
      return C509 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C6 || CT.C6,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 544,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text_selection.dart"
      });
    },
    get C512() {
      return C512 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "link",
        [_Location_column]: 9,
        [_Location_line]: 573,
        [_Location_file]: null
      });
    },
    get C513() {
      return C513 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showWhenUnlinked",
        [_Location_column]: 9,
        [_Location_line]: 574,
        [_Location_file]: null
      });
    },
    get C514() {
      return C514 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offset",
        [_Location_column]: 9,
        [_Location_line]: 575,
        [_Location_file]: null
      });
    },
    get C515() {
      return C515 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 576,
        [_Location_file]: null
      });
    },
    get C511() {
      return C511 = dart.constList([C512 || CT.C512, C513 || CT.C513, C514 || CT.C514, C515 || CT.C515], _LocationL());
    },
    get C510() {
      return C510 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C511 || CT.C511,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 572,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text_selection.dart"
      });
    },
    get C518() {
      return C518 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 7,
        [_Location_line]: 571,
        [_Location_file]: null
      });
    },
    get C519() {
      return C519 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 572,
        [_Location_file]: null
      });
    },
    get C517() {
      return C517 = dart.constList([C518 || CT.C518, C519 || CT.C519], _LocationL());
    },
    get C516() {
      return C516 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C517 || CT.C517,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 570,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text_selection.dart"
      });
    },
    get C520() {
      return C520 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 150000
      });
    },
    get C523() {
      return C523 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 15,
        [_Location_line]: 794,
        [_Location_file]: null
      });
    },
    get C524() {
      return C524 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 800,
        [_Location_file]: null
      });
    },
    get C522() {
      return C522 = dart.constList([C523 || CT.C523, C524 || CT.C524], _LocationL());
    },
    get C521() {
      return C521 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C522 || CT.C522,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 793,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text_selection.dart"
      });
    },
    get C527() {
      return C527 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 13,
        [_Location_line]: 788,
        [_Location_file]: null
      });
    },
    get C528() {
      return C528 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 13,
        [_Location_line]: 789,
        [_Location_file]: null
      });
    },
    get C529() {
      return C529 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanStart",
        [_Location_column]: 13,
        [_Location_line]: 790,
        [_Location_file]: null
      });
    },
    get C530() {
      return C530 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanUpdate",
        [_Location_column]: 13,
        [_Location_line]: 791,
        [_Location_file]: null
      });
    },
    get C531() {
      return C531 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 13,
        [_Location_line]: 792,
        [_Location_file]: null
      });
    },
    get C532() {
      return C532 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 793,
        [_Location_file]: null
      });
    },
    get C526() {
      return C526 = dart.constList([C527 || CT.C527, C528 || CT.C528, C529 || CT.C529, C530 || CT.C530, C531 || CT.C531, C532 || CT.C532], _LocationL());
    },
    get C525() {
      return C525 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C526 || CT.C526,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 787,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text_selection.dart"
      });
    },
    get C535() {
      return C535 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 11,
        [_Location_line]: 784,
        [_Location_file]: null
      });
    },
    get C536() {
      return C536 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 11,
        [_Location_line]: 785,
        [_Location_file]: null
      });
    },
    get C537() {
      return C537 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 11,
        [_Location_line]: 786,
        [_Location_file]: null
      });
    },
    get C538() {
      return C538 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 787,
        [_Location_file]: null
      });
    },
    get C534() {
      return C534 = dart.constList([C535 || CT.C535, C536 || CT.C536, C537 || CT.C537, C538 || CT.C538], _LocationL());
    },
    get C533() {
      return C533 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C534 || CT.C534,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 783,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text_selection.dart"
      });
    },
    get C541() {
      return C541 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 9,
        [_Location_line]: 782,
        [_Location_file]: null
      });
    },
    get C542() {
      return C542 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 783,
        [_Location_file]: null
      });
    },
    get C540() {
      return C540 = dart.constList([C541 || CT.C541, C542 || CT.C542], _LocationL());
    },
    get C539() {
      return C539 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C540 || CT.C540,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 781,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text_selection.dart"
      });
    },
    get C545() {
      return C545 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "link",
        [_Location_column]: 7,
        [_Location_line]: 778,
        [_Location_file]: null
      });
    },
    get C546() {
      return C546 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offset",
        [_Location_column]: 7,
        [_Location_line]: 779,
        [_Location_file]: null
      });
    },
    get C547() {
      return C547 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showWhenUnlinked",
        [_Location_column]: 7,
        [_Location_line]: 780,
        [_Location_file]: null
      });
    },
    get C548() {
      return C548 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 781,
        [_Location_file]: null
      });
    },
    get C544() {
      return C544 = dart.constList([C545 || CT.C545, C546 || CT.C546, C547 || CT.C547, C548 || CT.C548], _LocationL());
    },
    get C543() {
      return C543 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C544 || CT.C544,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 777,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text_selection.dart"
      });
    },
    get C551() {
      return C551 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 1130,
        [_Location_file]: null
      });
    },
    get C552() {
      return C552 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTapDown",
        [_Location_column]: 7,
        [_Location_line]: 1131,
        [_Location_file]: null
      });
    },
    get C553() {
      return C553 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onForcePressStart",
        [_Location_column]: 7,
        [_Location_line]: 1132,
        [_Location_file]: null
      });
    },
    get C554() {
      return C554 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onForcePressEnd",
        [_Location_column]: 7,
        [_Location_line]: 1133,
        [_Location_file]: null
      });
    },
    get C555() {
      return C555 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSingleTapUp",
        [_Location_column]: 7,
        [_Location_line]: 1134,
        [_Location_file]: null
      });
    },
    get C556() {
      return C556 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSingleTapCancel",
        [_Location_column]: 7,
        [_Location_line]: 1135,
        [_Location_file]: null
      });
    },
    get C557() {
      return C557 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSingleLongTapStart",
        [_Location_column]: 7,
        [_Location_line]: 1136,
        [_Location_file]: null
      });
    },
    get C558() {
      return C558 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSingleLongTapMoveUpdate",
        [_Location_column]: 7,
        [_Location_line]: 1137,
        [_Location_file]: null
      });
    },
    get C559() {
      return C559 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSingleLongTapEnd",
        [_Location_column]: 7,
        [_Location_line]: 1138,
        [_Location_file]: null
      });
    },
    get C560() {
      return C560 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDoubleTapDown",
        [_Location_column]: 7,
        [_Location_line]: 1139,
        [_Location_file]: null
      });
    },
    get C561() {
      return C561 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDragSelectionStart",
        [_Location_column]: 7,
        [_Location_line]: 1140,
        [_Location_file]: null
      });
    },
    get C562() {
      return C562 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDragSelectionUpdate",
        [_Location_column]: 7,
        [_Location_line]: 1141,
        [_Location_file]: null
      });
    },
    get C563() {
      return C563 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDragSelectionEnd",
        [_Location_column]: 7,
        [_Location_line]: 1142,
        [_Location_file]: null
      });
    },
    get C564() {
      return C564 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 1143,
        [_Location_file]: null
      });
    },
    get C565() {
      return C565 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1144,
        [_Location_file]: null
      });
    },
    get C550() {
      return C550 = dart.constList([C551 || CT.C551, C552 || CT.C552, C553 || CT.C553, C554 || CT.C554, C555 || CT.C555, C556 || CT.C556, C557 || CT.C557, C558 || CT.C558, C559 || CT.C559, C560 || CT.C560, C561 || CT.C561, C562 || CT.C562, C563 || CT.C563, C564 || CT.C564, C565 || CT.C565], _LocationL());
    },
    get C549() {
      return C549 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C550 || CT.C550,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1129,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text_selection.dart"
      });
    },
    get C568() {
      return C568 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestures",
        [_Location_column]: 7,
        [_Location_line]: 1462,
        [_Location_file]: null
      });
    },
    get C569() {
      return C569 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 7,
        [_Location_line]: 1463,
        [_Location_file]: null
      });
    },
    get C570() {
      return C570 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 1464,
        [_Location_file]: null
      });
    },
    get C571() {
      return C571 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1465,
        [_Location_file]: null
      });
    },
    get C567() {
      return C567 = dart.constList([C568 || CT.C568, C569 || CT.C569, C570 || CT.C570, C571 || CT.C571], _LocationL());
    },
    get C566() {
      return C566 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C567 || CT.C567,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1461,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text_selection.dart"
      });
    },
    get C572() {
      return C572 = dart.const({
        __proto__: text_selection.ClipboardStatus.prototype,
        [_name$9]: "ClipboardStatus.unknown",
        index: 1
      });
    },
    get C573() {
      return C573 = dart.const({
        __proto__: ui.AppLifecycleState.prototype,
        [_name]: "AppLifecycleState.resumed",
        index: 0
      });
    },
    get C574() {
      return C574 = dart.const({
        __proto__: ui.AppLifecycleState.prototype,
        [_name]: "AppLifecycleState.detached",
        index: 3
      });
    },
    get C575() {
      return C575 = dart.const({
        __proto__: ui.AppLifecycleState.prototype,
        [_name]: "AppLifecycleState.inactive",
        index: 1
      });
    },
    get C576() {
      return C576 = dart.const({
        __proto__: ui.AppLifecycleState.prototype,
        [_name]: "AppLifecycleState.paused",
        index: 2
      });
    },
    get C577() {
      return C577 = dart.const({
        __proto__: text_selection.ClipboardStatus.prototype,
        [_name$9]: "ClipboardStatus.pasteable",
        index: 0
      });
    },
    get C578() {
      return C578 = dart.const({
        __proto__: text_selection.ClipboardStatus.prototype,
        [_name$9]: "ClipboardStatus.notPasteable",
        index: 2
      });
    },
    get C579() {
      return C579 = dart.constList([C577 || CT.C577, C572 || CT.C572, C578 || CT.C578], ClipboardStatusL());
    },
    get C580() {
      return C580 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 50000
      });
    },
    get C581() {
      return C581 = dart.constList([], InheritedThemeL());
    },
    get C584() {
      return C584 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "themes",
        [_Location_column]: 24,
        [_Location_line]: 198,
        [_Location_file]: null
      });
    },
    get C585() {
      return C585 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 41,
        [_Location_line]: 198,
        [_Location_file]: null
      });
    },
    get C583() {
      return C583 = dart.constList([C584 || CT.C584, C585 || CT.C585], _LocationL());
    },
    get C582() {
      return C582 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C583 || CT.C583,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 198,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/inherited_theme.dart"
      });
    },
    get C586() {
      return C586 = dart.const({
        __proto__: text_painter.TextWidthBasis.prototype,
        [_name$11]: "TextWidthBasis.parent",
        index: 0
      });
    },
    get C587() {
      return C587 = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C589() {
      return C589 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C6 || CT.C6,
        [_Location_name]: null,
        [_Location_column]: 36,
        [_Location_line]: 72,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text.dart"
      });
    },
    get C588() {
      return C588 = dart.const({
        __proto__: text._NullWidget.prototype,
        [_location$]: C589 || CT.C589,
        [key$]: null
      });
    },
    get C592() {
      return C592 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 11,
        [_Location_line]: 105,
        [_Location_file]: null
      });
    },
    get C593() {
      return C593 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 11,
        [_Location_line]: 106,
        [_Location_file]: null
      });
    },
    get C594() {
      return C594 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 11,
        [_Location_line]: 107,
        [_Location_file]: null
      });
    },
    get C595() {
      return C595 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "softWrap",
        [_Location_column]: 11,
        [_Location_line]: 108,
        [_Location_file]: null
      });
    },
    get C596() {
      return C596 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 11,
        [_Location_line]: 109,
        [_Location_file]: null
      });
    },
    get C597() {
      return C597 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLines",
        [_Location_column]: 11,
        [_Location_line]: 110,
        [_Location_file]: null
      });
    },
    get C598() {
      return C598 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textWidthBasis",
        [_Location_column]: 11,
        [_Location_line]: 111,
        [_Location_file]: null
      });
    },
    get C599() {
      return C599 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 112,
        [_Location_file]: null
      });
    },
    get C591() {
      return C591 = dart.constList([C592 || CT.C592, C593 || CT.C593, C594 || CT.C594, C595 || CT.C595, C596 || CT.C596, C597 || CT.C597, C598 || CT.C598, C599 || CT.C599], _LocationL());
    },
    get C590() {
      return C590 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C591 || CT.C591,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 104,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text.dart"
      });
    },
    get C602() {
      return C602 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 102,
        [_Location_file]: null
      });
    },
    get C601() {
      return C601 = dart.constList([C602 || CT.C602], _LocationL());
    },
    get C600() {
      return C600 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C601 || CT.C601,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 101,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text.dart"
      });
    },
    get C604() {
      return C604 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C6 || CT.C6,
        [_Location_name]: null,
        [_Location_column]: 84,
        [_Location_line]: 168,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text.dart"
      });
    },
    get C603() {
      return C603 = dart.const({
        __proto__: text.DefaultTextStyle.prototype,
        [_location$]: C604 || CT.C604,
        [key$]: null,
        [child$3]: C588 || CT.C588,
        [DefaultTextStyle_textHeightBehavior]: null,
        [DefaultTextStyle_textWidthBasis]: C586 || CT.C586,
        [DefaultTextStyle_maxLines]: null,
        [DefaultTextStyle_overflow]: C457 || CT.C457,
        [DefaultTextStyle_softWrap]: true,
        [DefaultTextStyle_textAlign]: null,
        [DefaultTextStyle_style]: C587 || CT.C587
      });
    },
    get C607() {
      return C607 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 7,
        [_Location_line]: 185,
        [_Location_file]: null
      });
    },
    get C608() {
      return C608 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 7,
        [_Location_line]: 186,
        [_Location_file]: null
      });
    },
    get C609() {
      return C609 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "softWrap",
        [_Location_column]: 7,
        [_Location_line]: 187,
        [_Location_file]: null
      });
    },
    get C610() {
      return C610 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 7,
        [_Location_line]: 188,
        [_Location_file]: null
      });
    },
    get C611() {
      return C611 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLines",
        [_Location_column]: 7,
        [_Location_line]: 189,
        [_Location_file]: null
      });
    },
    get C612() {
      return C612 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textWidthBasis",
        [_Location_column]: 7,
        [_Location_line]: 190,
        [_Location_file]: null
      });
    },
    get C613() {
      return C613 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textHeightBehavior",
        [_Location_column]: 7,
        [_Location_line]: 191,
        [_Location_file]: null
      });
    },
    get C614() {
      return C614 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 192,
        [_Location_file]: null
      });
    },
    get C606() {
      return C606 = dart.constList([C607 || CT.C607, C608 || CT.C608, C609 || CT.C609, C610 || CT.C610, C611 || CT.C611, C612 || CT.C612, C613 || CT.C613, C614 || CT.C614], _LocationL());
    },
    get C605() {
      return C605 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C606 || CT.C606,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 184,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text.dart"
      });
    },
    get C617() {
      return C617 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textHeightBehavior",
        [_Location_column]: 7,
        [_Location_line]: 269,
        [_Location_file]: null
      });
    },
    get C618() {
      return C618 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 270,
        [_Location_file]: null
      });
    },
    get C616() {
      return C616 = dart.constList([C617 || CT.C617, C618 || CT.C618], _LocationL());
    },
    get C615() {
      return C615 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C616 || CT.C616,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 268,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text.dart"
      });
    },
    get C620() {
      return C620 = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_index]: 6
      });
    },
    get C619() {
      return C619 = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C620 || CT.C620,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C623() {
      return C623 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 7,
        [_Location_line]: 526,
        [_Location_file]: null
      });
    },
    get C624() {
      return C624 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 7,
        [_Location_line]: 527,
        [_Location_file]: null
      });
    },
    get C625() {
      return C625 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "locale",
        [_Location_column]: 7,
        [_Location_line]: 528,
        [_Location_file]: null
      });
    },
    get C626() {
      return C626 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "softWrap",
        [_Location_column]: 7,
        [_Location_line]: 529,
        [_Location_file]: null
      });
    },
    get C627() {
      return C627 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 7,
        [_Location_line]: 530,
        [_Location_file]: null
      });
    },
    get C628() {
      return C628 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textScaleFactor",
        [_Location_column]: 7,
        [_Location_line]: 531,
        [_Location_file]: null
      });
    },
    get C629() {
      return C629 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLines",
        [_Location_column]: 7,
        [_Location_line]: 532,
        [_Location_file]: null
      });
    },
    get C630() {
      return C630 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "strutStyle",
        [_Location_column]: 7,
        [_Location_line]: 533,
        [_Location_file]: null
      });
    },
    get C631() {
      return C631 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textWidthBasis",
        [_Location_column]: 7,
        [_Location_line]: 534,
        [_Location_file]: null
      });
    },
    get C632() {
      return C632 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textHeightBehavior",
        [_Location_column]: 7,
        [_Location_line]: 535,
        [_Location_file]: null
      });
    },
    get C633() {
      return C633 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "text",
        [_Location_column]: 7,
        [_Location_line]: 536,
        [_Location_file]: null
      });
    },
    get C622() {
      return C622 = dart.constList([C623 || CT.C623, C624 || CT.C624, C625 || CT.C625, C626 || CT.C626, C627 || CT.C627, C628 || CT.C628, C629 || CT.C629, C630 || CT.C630, C631 || CT.C631, C632 || CT.C632, C633 || CT.C633], _LocationL());
    },
    get C621() {
      return C621 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C622 || CT.C622,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 525,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text.dart"
      });
    },
    get C636() {
      return C636 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 547,
        [_Location_file]: null
      });
    },
    get C635() {
      return C635 = dart.constList([C636 || CT.C636], _LocationL());
    },
    get C634() {
      return C634 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C635 || CT.C635,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 546,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text.dart"
      });
    },
    get C639() {
      return C639 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 9,
        [_Location_line]: 544,
        [_Location_file]: null
      });
    },
    get C640() {
      return C640 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 9,
        [_Location_line]: 545,
        [_Location_file]: null
      });
    },
    get C641() {
      return C641 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 546,
        [_Location_file]: null
      });
    },
    get C638() {
      return C638 = dart.constList([C639 || CT.C639, C640 || CT.C640, C641 || CT.C641], _LocationL());
    },
    get C637() {
      return C637 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C638 || CT.C638,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 543,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/text.dart"
      });
    },
    get C642() {
      return C642 = dart.const({
        __proto__: basic_types.AxisDirection.prototype,
        [_name$6]: "AxisDirection.down",
        index: 2
      });
    },
    get C643() {
      return C643 = dart.const({
        __proto__: viewport$.CacheExtentStyle.prototype,
        [_name$12]: "CacheExtentStyle.pixel",
        index: 0
      });
    },
    get C644() {
      return C644 = dart.const({
        __proto__: basic_types.AxisDirection.prototype,
        [_name$6]: "AxisDirection.up",
        index: 0
      });
    },
    get C645() {
      return C645 = dart.const({
        __proto__: basic_types.AxisDirection.prototype,
        [_name$6]: "AxisDirection.right",
        index: 1
      });
    },
    get C646() {
      return C646 = dart.const({
        __proto__: basic_types.AxisDirection.prototype,
        [_name$6]: "AxisDirection.left",
        index: 3
      });
    },
    get C649() {
      return C649 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 46,
        [_Location_file]: null
      });
    },
    get C650() {
      return C650 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axisDirection",
        [_Location_column]: 11,
        [_Location_line]: 47,
        [_Location_file]: null
      });
    },
    get C651() {
      return C651 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 11,
        [_Location_line]: 48,
        [_Location_file]: null
      });
    },
    get C648() {
      return C648 = dart.constList([C649 || CT.C649, C650 || CT.C650, C651 || CT.C651], _LocationL());
    },
    get C647() {
      return C647 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C648 || CT.C648,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 45,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/scroll_configuration.dart"
      });
    },
    get C653() {
      return C653 = dart.const({
        __proto__: scroll_physics.RangeMaintainingScrollPhysics.prototype,
        [ScrollPhysics_parent]: null
      });
    },
    get C652() {
      return C652 = dart.const({
        __proto__: scroll_physics.BouncingScrollPhysics.prototype,
        [ScrollPhysics_parent]: C653 || CT.C653
      });
    },
    get C654() {
      return C654 = dart.const({
        __proto__: scroll_physics.ClampingScrollPhysics.prototype,
        [ScrollPhysics_parent]: C653 || CT.C653
      });
    },
    get C655() {
      return C655 = dart.const({
        __proto__: scroll_configuration.ScrollBehavior.prototype
      });
    },
    get C657() {
      return C657 = dart.const({
        __proto__: ui.TextAffinity.prototype,
        [_name]: "TextAffinity.downstream",
        index: 1
      });
    },
    get C656() {
      return C656 = dart.const({
        __proto__: text_editing.TextSelection.prototype,
        [TextRange_end]: -1,
        [TextRange_start]: -1,
        [TextSelection_isDirectional]: false,
        [TextSelection_affinity]: C657 || CT.C657,
        [TextSelection_extentOffset]: -1,
        [TextSelection_baseOffset]: -1
      });
    },
    get C659() {
      return C659 = dart.const({
        __proto__: ui.TextDecoration.prototype,
        [TextDecoration__mask]: 1
      });
    },
    get C658() {
      return C658 = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: C659 || CT.C659,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C661() {
      return C661 = dart.const({
        __proto__: ui.TextRange.prototype,
        [TextRange_end]: -1,
        [TextRange_start]: -1
      });
    },
    get C662() {
      return C662 = dart.const({
        __proto__: text_editing.TextSelection.prototype,
        [TextRange_end]: 0,
        [TextRange_start]: 0,
        [TextSelection_isDirectional]: false,
        [TextSelection_affinity]: C657 || CT.C657,
        [TextSelection_extentOffset]: 0,
        [TextSelection_baseOffset]: 0
      });
    },
    get C660() {
      return C660 = dart.const({
        __proto__: text_input.TextEditingValue.prototype,
        [TextEditingValue_composing]: C661 || CT.C661,
        [TextEditingValue_selection]: C662 || CT.C662,
        [TextEditingValue_text]: ""
      });
    },
    get C665() {
      return C665 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bucket",
        [_Location_column]: 7,
        [_Location_line]: 113,
        [_Location_file]: null
      });
    },
    get C666() {
      return C666 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 114,
        [_Location_file]: null
      });
    },
    get C664() {
      return C664 = dart.constList([C665 || CT.C665, C666 || CT.C666], _LocationL());
    },
    get C663() {
      return C663 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C664 || CT.C664,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 112,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/restoration.dart"
      });
    },
    get C668() {
      return C668 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C6 || CT.C6,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 313,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/restoration.dart"
      });
    },
    get C667() {
      return C667 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [_location$]: C668 || CT.C668,
        [key$]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 0,
        [SizedBox_width]: 0
      });
    },
    get C671() {
      return C671 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "restorationId",
        [_Location_column]: 9,
        [_Location_line]: 319,
        [_Location_file]: null
      });
    },
    get C672() {
      return C672 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 320,
        [_Location_file]: null
      });
    },
    get C670() {
      return C670 = dart.constList([C671 || CT.C671, C672 || CT.C672], _LocationL());
    },
    get C669() {
      return C669 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C670 || CT.C670,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 318,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/restoration.dart"
      });
    },
    get C675() {
      return C675 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bucket",
        [_Location_column]: 7,
        [_Location_line]: 317,
        [_Location_file]: null
      });
    },
    get C676() {
      return C676 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 318,
        [_Location_file]: null
      });
    },
    get C674() {
      return C674 = dart.constList([C675 || CT.C675, C676 || CT.C676], _LocationL());
    },
    get C673() {
      return C673 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C674 || CT.C674,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 316,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/restoration.dart"
      });
    },
    get C677() {
      return C677 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 0
      });
    },
    get C678() {
      return C678 = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.25,
        [Cubic_b]: 0.1,
        [Cubic_a]: 0.25
      });
    },
    get C679() {
      return C679 = dart.const({
        __proto__: scroll_position.ScrollPositionAlignmentPolicy.prototype,
        [_name$13]: "ScrollPositionAlignmentPolicy.explicit",
        index: 0
      });
    },
    get C680() {
      return C680 = dart.const({
        __proto__: scroll_position.ScrollPositionAlignmentPolicy.prototype,
        [_name$13]: "ScrollPositionAlignmentPolicy.keepVisibleAtEnd",
        index: 1
      });
    },
    get C681() {
      return C681 = dart.const({
        __proto__: scroll_position.ScrollPositionAlignmentPolicy.prototype,
        [_name$13]: "ScrollPositionAlignmentPolicy.keepVisibleAtStart",
        index: 2
      });
    },
    get C682() {
      return C682 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 20000
      });
    },
    get C683() {
      return C683 = dart.constList([C679 || CT.C679, C680 || CT.C680, C681 || CT.C681], ScrollPositionAlignmentPolicyL());
    },
    get C684() {
      return C684 = dart.fn(scroll_notification.defaultScrollNotificationPredicate, ScrollNotificationTobool());
    },
    get C685() {
      return C685 = dart.const({
        __proto__: basic_types.Axis.prototype,
        [_name$6]: "Axis.horizontal",
        index: 0
      });
    },
    get C688() {
      return C688 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 338,
        [_Location_file]: null
      });
    },
    get C687() {
      return C687 = dart.constList([C688 || CT.C688], _LocationL());
    },
    get C686() {
      return C686 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C687 || CT.C687,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 337,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/overscroll_indicator.dart"
      });
    },
    get C691() {
      return C691 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "foregroundPainter",
        [_Location_column]: 11,
        [_Location_line]: 331,
        [_Location_file]: null
      });
    },
    get C692() {
      return C692 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 337,
        [_Location_file]: null
      });
    },
    get C690() {
      return C690 = dart.constList([C691 || CT.C691, C692 || CT.C692], _LocationL());
    },
    get C689() {
      return C689 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C690 || CT.C690,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 330,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/overscroll_indicator.dart"
      });
    },
    get C695() {
      return C695 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 330,
        [_Location_file]: null
      });
    },
    get C694() {
      return C694 = dart.constList([C695 || CT.C695], _LocationL());
    },
    get C693() {
      return C693 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C694 || CT.C694,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 329,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/overscroll_indicator.dart"
      });
    },
    get C698() {
      return C698 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 7,
        [_Location_line]: 328,
        [_Location_file]: null
      });
    },
    get C699() {
      return C699 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 329,
        [_Location_file]: null
      });
    },
    get C697() {
      return C697 = dart.constList([C698 || CT.C698, C699 || CT.C699], _LocationL());
    },
    get C696() {
      return C696 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C697 || CT.C697,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 327,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/overscroll_indicator.dart"
      });
    },
    get C700() {
      return C700 = dart.const({
        __proto__: overscroll_indicator._GlowState.prototype,
        [_name$14]: "_GlowState.idle",
        index: 0
      });
    },
    get C701() {
      return C701 = dart.const({
        __proto__: overscroll_indicator._GlowState.prototype,
        [_name$14]: "_GlowState.absorb",
        index: 1
      });
    },
    get C702() {
      return C702 = dart.const({
        __proto__: overscroll_indicator._GlowState.prototype,
        [_name$14]: "_GlowState.pull",
        index: 2
      });
    },
    get C703() {
      return C703 = dart.const({
        __proto__: overscroll_indicator._GlowState.prototype,
        [_name$14]: "_GlowState.recede",
        index: 3
      });
    },
    get C704() {
      return C704 = dart.constList([C700 || CT.C700, C701 || CT.C701, C702 || CT.C702, C703 || CT.C703], _GlowStateL());
    },
    get C705() {
      return C705 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 600000
      });
    },
    get C706() {
      return C706 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 167000
      });
    },
    get C707() {
      return C707 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 2000000
      });
    },
    get C710() {
      return C710 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabled",
        [_Location_column]: 7,
        [_Location_line]: 68,
        [_Location_file]: null
      });
    },
    get C711() {
      return C711 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 69,
        [_Location_file]: null
      });
    },
    get C709() {
      return C709 = dart.constList([C710 || CT.C710, C711 || CT.C711], _LocationL());
    },
    get C708() {
      return C708 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C709 || CT.C709,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 67,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/ticker_provider.dart"
      });
    },
    get C714() {
      return C714 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestures",
        [_Location_column]: 7,
        [_Location_line]: 921,
        [_Location_file]: null
      });
    },
    get C715() {
      return C715 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 922,
        [_Location_file]: null
      });
    },
    get C716() {
      return C716 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 7,
        [_Location_line]: 923,
        [_Location_file]: null
      });
    },
    get C717() {
      return C717 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 924,
        [_Location_file]: null
      });
    },
    get C713() {
      return C713 = dart.constList([C714 || CT.C714, C715 || CT.C715, C716 || CT.C716, C717 || CT.C717], _LocationL());
    },
    get C712() {
      return C712 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C713 || CT.C713,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 920,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/gesture_detector.dart"
      });
    },
    get C718() {
      return C718 = dart.constMap(TypeL(), GestureRecognizerFactoryLOfGestureRecognizerL(), []);
    },
    get C719() {
      return C719 = dart.constMap(TypeL(), GestureRecognizerL(), []);
    },
    get C722() {
      return C722 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 7,
        [_Location_line]: 1219,
        [_Location_file]: null
      });
    },
    get C723() {
      return C723 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 1220,
        [_Location_file]: null
      });
    },
    get C724() {
      return C724 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1221,
        [_Location_file]: null
      });
    },
    get C721() {
      return C721 = dart.constList([C722 || CT.C722, C723 || CT.C723, C724 || CT.C724], _LocationL());
    },
    get C720() {
      return C720 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C721 || CT.C721,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 1218,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/gesture_detector.dart"
      });
    },
    get C727() {
      return C727 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1225,
        [_Location_file]: null
      });
    },
    get C728() {
      return C728 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "assignSemantics",
        [_Location_column]: 9,
        [_Location_line]: 1226,
        [_Location_file]: null
      });
    },
    get C726() {
      return C726 = dart.constList([C727 || CT.C727, C728 || CT.C728], _LocationL());
    },
    get C725() {
      return C725 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C726 || CT.C726,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1224,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/gesture_detector.dart"
      });
    },
    get C729() {
      return C729 = dart.const({
        __proto__: long_press.LongPressStartDetails.prototype,
        [LongPressStartDetails_localPosition]: C1 || CT.C1,
        [LongPressStartDetails_globalPosition]: C1 || CT.C1
      });
    },
    get C731() {
      return C731 = dart.const({
        __proto__: velocity_tracker.Velocity.prototype,
        [Velocity_pixelsPerSecond]: C1 || CT.C1
      });
    },
    get C730() {
      return C730 = dart.const({
        __proto__: long_press.LongPressEndDetails.prototype,
        [LongPressEndDetails_velocity]: C731 || CT.C731,
        [LongPressEndDetails_localPosition]: C1 || CT.C1,
        [LongPressEndDetails_globalPosition]: C1 || CT.C1
      });
    },
    get C734() {
      return C734 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 15,
        [_Location_line]: 701,
        [_Location_file]: null
      });
    },
    get C735() {
      return C735 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoring",
        [_Location_column]: 15,
        [_Location_line]: 702,
        [_Location_file]: null
      });
    },
    get C736() {
      return C736 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoringSemantics",
        [_Location_column]: 15,
        [_Location_line]: 703,
        [_Location_file]: null
      });
    },
    get C737() {
      return C737 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 704,
        [_Location_file]: null
      });
    },
    get C733() {
      return C733 = dart.constList([C734 || CT.C734, C735 || CT.C735, C736 || CT.C736, C737 || CT.C737], _LocationL());
    },
    get C732() {
      return C732 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C733 || CT.C733,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 700,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/scrollable.dart"
      });
    },
    get C740() {
      return C740 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 13,
        [_Location_line]: 699,
        [_Location_file]: null
      });
    },
    get C741() {
      return C741 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 700,
        [_Location_file]: null
      });
    },
    get C739() {
      return C739 = dart.constList([C740 || CT.C740, C741 || CT.C741], _LocationL());
    },
    get C738() {
      return C738 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C739 || CT.C739,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 698,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/scrollable.dart"
      });
    },
    get C744() {
      return C744 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 11,
        [_Location_line]: 694,
        [_Location_file]: null
      });
    },
    get C745() {
      return C745 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestures",
        [_Location_column]: 11,
        [_Location_line]: 695,
        [_Location_file]: null
      });
    },
    get C746() {
      return C746 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 11,
        [_Location_line]: 696,
        [_Location_file]: null
      });
    },
    get C747() {
      return C747 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 11,
        [_Location_line]: 697,
        [_Location_file]: null
      });
    },
    get C748() {
      return C748 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 698,
        [_Location_file]: null
      });
    },
    get C743() {
      return C743 = dart.constList([C744 || CT.C744, C745 || CT.C745, C746 || CT.C746, C747 || CT.C747, C748 || CT.C748], _LocationL());
    },
    get C742() {
      return C742 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C743 || CT.C743,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 693,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/scrollable.dart"
      });
    },
    get C751() {
      return C751 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerSignal",
        [_Location_column]: 9,
        [_Location_line]: 692,
        [_Location_file]: null
      });
    },
    get C752() {
      return C752 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 693,
        [_Location_file]: null
      });
    },
    get C750() {
      return C750 = dart.constList([C751 || CT.C751, C752 || CT.C752], _LocationL());
    },
    get C749() {
      return C749 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C750 || CT.C750,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 691,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/scrollable.dart"
      });
    },
    get C755() {
      return C755 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollable",
        [_Location_column]: 7,
        [_Location_line]: 688,
        [_Location_file]: null
      });
    },
    get C756() {
      return C756 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 7,
        [_Location_line]: 689,
        [_Location_file]: null
      });
    },
    get C757() {
      return C757 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 691,
        [_Location_file]: null
      });
    },
    get C754() {
      return C754 = dart.constList([C755 || CT.C755, C756 || CT.C756, C757 || CT.C757], _LocationL());
    },
    get C753() {
      return C753 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C754 || CT.C754,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 687,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/scrollable.dart"
      });
    },
    get C760() {
      return C760 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 9,
        [_Location_line]: 713,
        [_Location_file]: null
      });
    },
    get C761() {
      return C761 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 714,
        [_Location_file]: null
      });
    },
    get C762() {
      return C762 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 9,
        [_Location_line]: 715,
        [_Location_file]: null
      });
    },
    get C763() {
      return C763 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "allowImplicitScrolling",
        [_Location_column]: 9,
        [_Location_line]: 716,
        [_Location_file]: null
      });
    },
    get C764() {
      return C764 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "semanticChildCount",
        [_Location_column]: 9,
        [_Location_line]: 717,
        [_Location_file]: null
      });
    },
    get C759() {
      return C759 = dart.constList([C760 || CT.C760, C761 || CT.C761, C762 || CT.C762, C763 || CT.C763, C764 || CT.C764], _LocationL());
    },
    get C758() {
      return C758 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C759 || CT.C759,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 712,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/scrollable.dart"
      });
    },
    get C765() {
      return C765 = dart.const({
        __proto__: scrollable$.ScrollIncrementType.prototype,
        [_name$15]: "ScrollIncrementType.line",
        index: 0
      });
    },
    get C766() {
      return C766 = dart.const({
        __proto__: scrollable$.ScrollIncrementType.prototype,
        [_name$15]: "ScrollIncrementType.page",
        index: 1
      });
    },
    get C767() {
      return C767 = dart.constList([C765 || CT.C765, C766 || CT.C766], ScrollIncrementTypeL());
    },
    get C768() {
      return C768 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 100000
      });
    },
    get C769() {
      return C769 = dart.const({
        __proto__: media_query.Orientation.prototype,
        [_name$16]: "Orientation.portrait",
        index: 0
      });
    },
    get C770() {
      return C770 = dart.const({
        __proto__: media_query.Orientation.prototype,
        [_name$16]: "Orientation.landscape",
        index: 1
      });
    },
    get C771() {
      return C771 = dart.constList([C769 || CT.C769, C770 || CT.C770], OrientationL());
    },
    get C772() {
      return C772 = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0
      });
    },
    get C773() {
      return C773 = dart.const({
        __proto__: ui.Brightness.prototype,
        [_name]: "Brightness.light",
        index: 1
      });
    },
    get C774() {
      return C774 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C775() {
      return C775 = dart.const({
        __proto__: media_query.NavigationMode.prototype,
        [_name$16]: "NavigationMode.traditional",
        index: 0
      });
    },
    get C776() {
      return C776 = dart.const({
        __proto__: media_query.NavigationMode.prototype,
        [_name$16]: "NavigationMode.directional",
        index: 1
      });
    },
    get C777() {
      return C777 = dart.constList([C775 || CT.C775, C776 || CT.C776], NavigationModeL());
    },
    get C778() {
      return C778 = dart.const({
        __proto__: decoration_image.ImageRepeat.prototype,
        [_name$17]: "ImageRepeat.noRepeat",
        index: 3
      });
    },
    get C779() {
      return C779 = dart.const({
        __proto__: ui.FilterQuality.prototype,
        [_name]: "FilterQuality.low",
        index: 1
      });
    },
    get C782() {
      return C782 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "image",
        [_Location_column]: 7,
        [_Location_line]: 1278,
        [_Location_file]: null
      });
    },
    get C783() {
      return C783 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debugImageLabel",
        [_Location_column]: 7,
        [_Location_line]: 1279,
        [_Location_file]: null
      });
    },
    get C784() {
      return C784 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 1280,
        [_Location_file]: null
      });
    },
    get C785() {
      return C785 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 1281,
        [_Location_file]: null
      });
    },
    get C786() {
      return C786 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scale",
        [_Location_column]: 7,
        [_Location_line]: 1282,
        [_Location_file]: null
      });
    },
    get C787() {
      return C787 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 1283,
        [_Location_file]: null
      });
    },
    get C788() {
      return C788 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "colorBlendMode",
        [_Location_column]: 7,
        [_Location_line]: 1284,
        [_Location_file]: null
      });
    },
    get C789() {
      return C789 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 7,
        [_Location_line]: 1285,
        [_Location_file]: null
      });
    },
    get C790() {
      return C790 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 1286,
        [_Location_file]: null
      });
    },
    get C791() {
      return C791 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "repeat",
        [_Location_column]: 7,
        [_Location_line]: 1287,
        [_Location_file]: null
      });
    },
    get C792() {
      return C792 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "centerSlice",
        [_Location_column]: 7,
        [_Location_line]: 1288,
        [_Location_file]: null
      });
    },
    get C793() {
      return C793 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "matchTextDirection",
        [_Location_column]: 7,
        [_Location_line]: 1289,
        [_Location_file]: null
      });
    },
    get C794() {
      return C794 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "invertColors",
        [_Location_column]: 7,
        [_Location_line]: 1290,
        [_Location_file]: null
      });
    },
    get C795() {
      return C795 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isAntiAlias",
        [_Location_column]: 7,
        [_Location_line]: 1291,
        [_Location_file]: null
      });
    },
    get C796() {
      return C796 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "filterQuality",
        [_Location_column]: 7,
        [_Location_line]: 1292,
        [_Location_file]: null
      });
    },
    get C781() {
      return C781 = dart.constList([C782 || CT.C782, C783 || CT.C783, C784 || CT.C784, C785 || CT.C785, C786 || CT.C786, C787 || CT.C787, C788 || CT.C788, C789 || CT.C789, C790 || CT.C790, C791 || CT.C791, C792 || CT.C792, C793 || CT.C793, C794 || CT.C794, C795 || CT.C795, C796 || CT.C796], _LocationL());
    },
    get C780() {
      return C780 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C781 || CT.C781,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 1273,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/image.dart"
      });
    },
    get C799() {
      return C799 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 9,
        [_Location_line]: 1297,
        [_Location_file]: null
      });
    },
    get C800() {
      return C800 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "image",
        [_Location_column]: 9,
        [_Location_line]: 1298,
        [_Location_file]: null
      });
    },
    get C801() {
      return C801 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 9,
        [_Location_line]: 1299,
        [_Location_file]: null
      });
    },
    get C802() {
      return C802 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1300,
        [_Location_file]: null
      });
    },
    get C798() {
      return C798 = dart.constList([C799 || CT.C799, C800 || CT.C800, C801 || CT.C801, C802 || CT.C802], _LocationL());
    },
    get C797() {
      return C797 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C798 || CT.C798,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1296,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/image.dart"
      });
    },
    get C803() {
      return C803 = dart.const({
        __proto__: proxy_box.DecorationPosition.prototype,
        [_name$7]: "DecorationPosition.foreground",
        index: 1
      });
    },
    get C804() {
      return C804 = dart.const({
        __proto__: ui.Clip.prototype,
        [_name]: "Clip.none",
        index: 0
      });
    },
    get C807() {
      return C807 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 31,
        [_Location_line]: 391,
        [_Location_file]: null
      });
    },
    get C806() {
      return C806 = dart.constList([C807 || CT.C807], _LocationL());
    },
    get C805() {
      return C805 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C806 || CT.C806,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 391,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/container.dart"
      });
    },
    get C810() {
      return C810 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxWidth",
        [_Location_column]: 9,
        [_Location_line]: 389,
        [_Location_file]: null
      });
    },
    get C811() {
      return C811 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxHeight",
        [_Location_column]: 9,
        [_Location_line]: 390,
        [_Location_file]: null
      });
    },
    get C812() {
      return C812 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 391,
        [_Location_file]: null
      });
    },
    get C809() {
      return C809 = dart.constList([C810 || CT.C810, C811 || CT.C811, C812 || CT.C812], _LocationL());
    },
    get C808() {
      return C808 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C809 || CT.C809,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 388,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/container.dart"
      });
    },
    get C815() {
      return C815 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 23,
        [_Location_line]: 396,
        [_Location_file]: null
      });
    },
    get C816() {
      return C816 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 46,
        [_Location_line]: 396,
        [_Location_file]: null
      });
    },
    get C814() {
      return C814 = dart.constList([C815 || CT.C815, C816 || CT.C816], _LocationL());
    },
    get C813() {
      return C813 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C814 || CT.C814,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 396,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/container.dart"
      });
    },
    get C819() {
      return C819 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 25,
        [_Location_line]: 400,
        [_Location_file]: null
      });
    },
    get C820() {
      return C820 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 52,
        [_Location_line]: 400,
        [_Location_file]: null
      });
    },
    get C818() {
      return C818 = dart.constList([C819 || CT.C819, C820 || CT.C820], _LocationL());
    },
    get C817() {
      return C817 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C818 || CT.C818,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 400,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/container.dart"
      });
    },
    get C823() {
      return C823 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 28,
        [_Location_line]: 403,
        [_Location_file]: null
      });
    },
    get C824() {
      return C824 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 43,
        [_Location_line]: 403,
        [_Location_file]: null
      });
    },
    get C822() {
      return C822 = dart.constList([C823 || CT.C823, C824 || CT.C824], _LocationL());
    },
    get C821() {
      return C821 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C822 || CT.C822,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 403,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/container.dart"
      });
    },
    get C827() {
      return C827 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipper",
        [_Location_column]: 9,
        [_Location_line]: 408,
        [_Location_file]: null
      });
    },
    get C828() {
      return C828 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 9,
        [_Location_line]: 412,
        [_Location_file]: null
      });
    },
    get C829() {
      return C829 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 413,
        [_Location_file]: null
      });
    },
    get C826() {
      return C826 = dart.constList([C827 || CT.C827, C828 || CT.C828, C829 || CT.C829], _LocationL());
    },
    get C825() {
      return C825 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C826 || CT.C826,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 407,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/container.dart"
      });
    },
    get C832() {
      return C832 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 30,
        [_Location_line]: 418,
        [_Location_file]: null
      });
    },
    get C833() {
      return C833 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 55,
        [_Location_line]: 418,
        [_Location_file]: null
      });
    },
    get C831() {
      return C831 = dart.constList([C832 || CT.C832, C833 || CT.C833], _LocationL());
    },
    get C830() {
      return C830 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C831 || CT.C831,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 418,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/container.dart"
      });
    },
    get C836() {
      return C836 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 9,
        [_Location_line]: 422,
        [_Location_file]: null
      });
    },
    get C837() {
      return C837 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 9,
        [_Location_line]: 423,
        [_Location_file]: null
      });
    },
    get C838() {
      return C838 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 424,
        [_Location_file]: null
      });
    },
    get C835() {
      return C835 = dart.constList([C836 || CT.C836, C837 || CT.C837, C838 || CT.C838], _LocationL());
    },
    get C834() {
      return C834 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C835 || CT.C835,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 421,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/container.dart"
      });
    },
    get C841() {
      return C841 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 32,
        [_Location_line]: 429,
        [_Location_file]: null
      });
    },
    get C842() {
      return C842 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 59,
        [_Location_line]: 429,
        [_Location_file]: null
      });
    },
    get C840() {
      return C840 = dart.constList([C841 || CT.C841, C842 || CT.C842], _LocationL());
    },
    get C839() {
      return C839 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C840 || CT.C840,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 429,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/container.dart"
      });
    },
    get C845() {
      return C845 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 25,
        [_Location_line]: 432,
        [_Location_file]: null
      });
    },
    get C846() {
      return C846 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 43,
        [_Location_line]: 432,
        [_Location_file]: null
      });
    },
    get C844() {
      return C844 = dart.constList([C845 || CT.C845, C846 || CT.C846], _LocationL());
    },
    get C843() {
      return C843 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C844 || CT.C844,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 432,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/container.dart"
      });
    },
    get C849() {
      return C849 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transform",
        [_Location_column]: 27,
        [_Location_line]: 435,
        [_Location_file]: null
      });
    },
    get C850() {
      return C850 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 50,
        [_Location_line]: 435,
        [_Location_file]: null
      });
    },
    get C851() {
      return C851 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 66,
        [_Location_line]: 435,
        [_Location_file]: null
      });
    },
    get C848() {
      return C848 = dart.constList([C849 || CT.C849, C850 || CT.C850, C851 || CT.C851], _LocationL());
    },
    get C847() {
      return C847 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C848 || CT.C848,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 435,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/container.dart"
      });
    },
    get C852() {
      return C852 = dart.const({
        __proto__: localizations.DefaultWidgetsLocalizations.prototype
      });
    },
    get C853() {
      return C853 = dart.const({
        __proto__: localizations._WidgetsLocalizationsDelegate.prototype
      });
    },
    get C854() {
      return C854 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C6 || CT.C6,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 580,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/localizations.dart"
      });
    },
    get C857() {
      return C857 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 11,
        [_Location_line]: 589,
        [_Location_file]: null
      });
    },
    get C858() {
      return C858 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 590,
        [_Location_file]: null
      });
    },
    get C856() {
      return C856 = dart.constList([C857 || CT.C857, C858 || CT.C858], _LocationL());
    },
    get C855() {
      return C855 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C856 || CT.C856,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 588,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/localizations.dart"
      });
    },
    get C861() {
      return C861 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 9,
        [_Location_line]: 584,
        [_Location_file]: null
      });
    },
    get C862() {
      return C862 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "locale",
        [_Location_column]: 9,
        [_Location_line]: 585,
        [_Location_file]: null
      });
    },
    get C863() {
      return C863 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localizationsState",
        [_Location_column]: 9,
        [_Location_line]: 586,
        [_Location_file]: null
      });
    },
    get C864() {
      return C864 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "typeToResources",
        [_Location_column]: 9,
        [_Location_line]: 587,
        [_Location_file]: null
      });
    },
    get C865() {
      return C865 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 588,
        [_Location_file]: null
      });
    },
    get C860() {
      return C860 = dart.constList([C861 || CT.C861, C862 || CT.C862, C863 || CT.C863, C864 || CT.C864, C865 || CT.C865], _LocationL());
    },
    get C859() {
      return C859 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C860 || CT.C860,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 583,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/localizations.dart"
      });
    },
    get C868() {
      return C868 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 7,
        [_Location_line]: 582,
        [_Location_file]: null
      });
    },
    get C869() {
      return C869 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 583,
        [_Location_file]: null
      });
    },
    get C867() {
      return C867 = dart.constList([C868 || CT.C868, C869 || CT.C869], _LocationL());
    },
    get C866() {
      return C866 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C867 || CT.C867,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 581,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/localizations.dart"
      });
    },
    get C870() {
      return C870 = dart.fn(sliver$._kDefaultSemanticIndexCallback, WidgetAndintToint());
    },
    get C873() {
      return C873 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 31,
        [_Location_line]: 464,
        [_Location_file]: null
      });
    },
    get C872() {
      return C872 = dart.constList([C873 || CT.C873], _LocationL());
    },
    get C871() {
      return C871 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C872 || CT.C872,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 464,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/sliver.dart"
      });
    },
    get C876() {
      return C876 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "index",
        [_Location_column]: 34,
        [_Location_line]: 468,
        [_Location_file]: null
      });
    },
    get C877() {
      return C877 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 78,
        [_Location_line]: 468,
        [_Location_file]: null
      });
    },
    get C875() {
      return C875 = dart.constList([C876 || CT.C876, C877 || CT.C877], _LocationL());
    },
    get C874() {
      return C874 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C875 || CT.C875,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 468,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/sliver.dart"
      });
    },
    get C880() {
      return C880 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 34,
        [_Location_line]: 471,
        [_Location_file]: null
      });
    },
    get C879() {
      return C879 = dart.constList([C880 || CT.C880], _LocationL());
    },
    get C878() {
      return C878 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C879 || CT.C879,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 471,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/sliver.dart"
      });
    },
    get C883() {
      return C883 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 25,
        [_Location_line]: 472,
        [_Location_file]: null
      });
    },
    get C884() {
      return C884 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 39,
        [_Location_line]: 472,
        [_Location_file]: null
      });
    },
    get C882() {
      return C882 = dart.constList([C883 || CT.C883, C884 || CT.C884], _LocationL());
    },
    get C881() {
      return C881 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C882 || CT.C882,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 472,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/sliver.dart"
      });
    },
    get C887() {
      return C887 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 31,
        [_Location_line]: 728,
        [_Location_file]: null
      });
    },
    get C886() {
      return C886 = dart.constList([C887 || CT.C887], _LocationL());
    },
    get C885() {
      return C885 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C886 || CT.C886,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 728,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/sliver.dart"
      });
    },
    get C890() {
      return C890 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "index",
        [_Location_column]: 34,
        [_Location_line]: 732,
        [_Location_file]: null
      });
    },
    get C891() {
      return C891 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 78,
        [_Location_line]: 732,
        [_Location_file]: null
      });
    },
    get C889() {
      return C889 = dart.constList([C890 || CT.C890, C891 || CT.C891], _LocationL());
    },
    get C888() {
      return C888 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C889 || CT.C889,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 732,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/sliver.dart"
      });
    },
    get C894() {
      return C894 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 34,
        [_Location_line]: 735,
        [_Location_file]: null
      });
    },
    get C893() {
      return C893 = dart.constList([C894 || CT.C894], _LocationL());
    },
    get C892() {
      return C892 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C893 || CT.C893,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 735,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/sliver.dart"
      });
    },
    get C897() {
      return C897 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 25,
        [_Location_line]: 736,
        [_Location_file]: null
      });
    },
    get C898() {
      return C898 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 39,
        [_Location_line]: 736,
        [_Location_file]: null
      });
    },
    get C896() {
      return C896 = dart.constList([C897 || CT.C897, C898 || CT.C898], _LocationL());
    },
    get C895() {
      return C895 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C896 || CT.C896,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 736,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/sliver.dart"
      });
    },
    get C901() {
      return C901 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 7,
        [_Location_line]: 62,
        [_Location_file]: null
      });
    },
    get C902() {
      return C902 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 63,
        [_Location_file]: null
      });
    },
    get C900() {
      return C900 = dart.constList([C901 || CT.C901, C902 || CT.C902], _LocationL());
    },
    get C899() {
      return C899 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C900 || CT.C900,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 61,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/automatic_keep_alive.dart"
      });
    },
    get C905() {
      return C905 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "keepAlive",
        [_Location_column]: 7,
        [_Location_line]: 233,
        [_Location_file]: null
      });
    },
    get C906() {
      return C906 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 234,
        [_Location_file]: null
      });
    },
    get C904() {
      return C904 = dart.constList([C905 || CT.C905, C906 || CT.C906], _LocationL());
    },
    get C903() {
      return C903 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C904 || CT.C904,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 232,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/automatic_keep_alive.dart"
      });
    },
    get C908() {
      return C908 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C6 || CT.C6,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 397,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/automatic_keep_alive.dart"
      });
    },
    get C907() {
      return C907 = dart.const({
        __proto__: automatic_keep_alive._NullWidget.prototype,
        [_location$]: C908 || CT.C908,
        [key$]: null
      });
    },
    get C909() {
      return C909 = dart.const({
        __proto__: autofill$.AutofillContextAction.prototype,
        [_name$18]: "AutofillContextAction.commit",
        index: 0
      });
    },
    get C910() {
      return C910 = dart.const({
        __proto__: autofill$.AutofillContextAction.prototype,
        [_name$18]: "AutofillContextAction.cancel",
        index: 1
      });
    },
    get C911() {
      return C911 = dart.constList([C909 || CT.C909, C910 || CT.C910], AutofillContextActionL());
    },
    get C914() {
      return C914 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofillScopeState",
        [_Location_column]: 7,
        [_Location_line]: 266,
        [_Location_file]: null
      });
    },
    get C915() {
      return C915 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 267,
        [_Location_file]: null
      });
    },
    get C913() {
      return C913 = dart.constList([C914 || CT.C914, C915 || CT.C915], _LocationL());
    },
    get C912() {
      return C912 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C913 || CT.C913,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 265,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/autofill.dart"
      });
    },
    get C916() {
      return C916 = dart.const({
        __proto__: ui.TextAlign.prototype,
        [_name]: "TextAlign.start",
        index: 4
      });
    },
    get C917() {
      return C917 = dart.const({
        __proto__: text_input.TextCapitalization.prototype,
        [_name$19]: "TextCapitalization.none",
        index: 3
      });
    },
    get C918() {
      return C918 = dart.const({
        __proto__: ui.BoxHeightStyle.prototype,
        [_name]: "BoxHeightStyle.tight",
        index: 0
      });
    },
    get C919() {
      return C919 = dart.const({
        __proto__: ui.BoxWidthStyle.prototype,
        [_name]: "BoxWidthStyle.tight",
        index: 0
      });
    },
    get C920() {
      return C920 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 20,
        [EdgeInsets_right]: 20,
        [EdgeInsets_top]: 20,
        [EdgeInsets_left]: 20
      });
    },
    get C921() {
      return C921 = dart.const({
        __proto__: editable_text.ToolbarOptions.prototype,
        [selectAll$]: true,
        [paste$]: true,
        [cut$]: true,
        [copy$]: true
      });
    },
    get C922() {
      return C922 = dart.const({
        __proto__: EmptyIterableOfTextInputFormatterL().prototype
      });
    },
    get C924() {
      return C924 = dart.const({
        __proto__: text_input.TextInputType.prototype,
        [TextInputType_decimal]: null,
        [TextInputType_signed]: null,
        [TextInputType_index]: 8
      });
    },
    get C925() {
      return C925 = dart.const({
        __proto__: text_input.TextInputType.prototype,
        [TextInputType_decimal]: false,
        [TextInputType_signed]: false,
        [TextInputType_index]: 2
      });
    },
    get C926() {
      return C926 = dart.const({
        __proto__: text_input.TextInputType.prototype,
        [TextInputType_decimal]: null,
        [TextInputType_signed]: null,
        [TextInputType_index]: 5
      });
    },
    get C927() {
      return C927 = dart.const({
        __proto__: text_input.TextInputType.prototype,
        [TextInputType_decimal]: null,
        [TextInputType_signed]: null,
        [TextInputType_index]: 0
      });
    },
    get C928() {
      return C928 = dart.const({
        __proto__: text_input.TextInputType.prototype,
        [TextInputType_decimal]: null,
        [TextInputType_signed]: null,
        [TextInputType_index]: 6
      });
    },
    get C923() {
      return C923 = dart.constMap(StringL(), TextInputTypeL(), ["addressCity", C924 || CT.C924, "addressCityAndState", C924 || CT.C924, "addressState", C924 || CT.C924, "countryName", C924 || CT.C924, "creditCardNumber", C925 || CT.C925, "email", C926 || CT.C926, "familyName", C924 || CT.C924, "fullStreetAddress", C924 || CT.C924, "givenName", C924 || CT.C924, "jobTitle", C924 || CT.C924, "location", C924 || CT.C924, "middleName", C924 || CT.C924, "name", C924 || CT.C924, "namePrefix", C924 || CT.C924, "nameSuffix", C924 || CT.C924, "newPassword", C927 || CT.C927, "newUsername", C927 || CT.C927, "nickname", C924 || CT.C924, "oneTimeCode", C925 || CT.C925, "organizationName", C927 || CT.C927, "password", C927 || CT.C927, "postalCode", C924 || CT.C924, "streetAddressLine1", C924 || CT.C924, "streetAddressLine2", C924 || CT.C924, "sublocality", C924 || CT.C924, "telephoneNumber", C924 || CT.C924, "url", C928 || CT.C928, "username", C927 || CT.C927]);
    },
    get C930() {
      return C930 = dart.const({
        __proto__: text_input.TextInputType.prototype,
        [TextInputType_decimal]: null,
        [TextInputType_signed]: null,
        [TextInputType_index]: 9
      });
    },
    get C931() {
      return C931 = dart.const({
        __proto__: text_input.TextInputType.prototype,
        [TextInputType_decimal]: null,
        [TextInputType_signed]: null,
        [TextInputType_index]: 4
      });
    },
    get C932() {
      return C932 = dart.const({
        __proto__: text_input.TextInputType.prototype,
        [TextInputType_decimal]: null,
        [TextInputType_signed]: null,
        [TextInputType_index]: 3
      });
    },
    get C933() {
      return C933 = dart.const({
        __proto__: text_input.TextInputType.prototype,
        [TextInputType_decimal]: true,
        [TextInputType_signed]: false,
        [TextInputType_index]: 2
      });
    },
    get C929() {
      return C929 = dart.constMap(StringL(), TextInputTypeL(), ["addressCity", C930 || CT.C930, "addressCityAndState", C930 || CT.C930, "addressState", C930 || CT.C930, "birthday", C931 || CT.C931, "birthdayDay", C931 || CT.C931, "birthdayMonth", C931 || CT.C931, "birthdayYear", C931 || CT.C931, "countryCode", C925 || CT.C925, "countryName", C927 || CT.C927, "creditCardExpirationDate", C931 || CT.C931, "creditCardExpirationDay", C931 || CT.C931, "creditCardExpirationMonth", C931 || CT.C931, "creditCardExpirationYear", C931 || CT.C931, "creditCardFamilyName", C924 || CT.C924, "creditCardGivenName", C924 || CT.C924, "creditCardMiddleName", C924 || CT.C924, "creditCardName", C924 || CT.C924, "creditCardNumber", C925 || CT.C925, "creditCardSecurityCode", C925 || CT.C925, "creditCardType", C927 || CT.C927, "email", C926 || CT.C926, "familyName", C924 || CT.C924, "fullStreetAddress", C930 || CT.C930, "gender", C927 || CT.C927, "givenName", C924 || CT.C924, "impp", C928 || CT.C928, "jobTitle", C927 || CT.C927, "language", C927 || CT.C927, "location", C930 || CT.C930, "middleInitial", C924 || CT.C924, "middleName", C924 || CT.C924, "name", C924 || CT.C924, "namePrefix", C924 || CT.C924, "nameSuffix", C924 || CT.C924, "newPassword", C927 || CT.C927, "newUsername", C927 || CT.C927, "nickname", C927 || CT.C927, "oneTimeCode", C927 || CT.C927, "organizationName", C927 || CT.C927, "password", C927 || CT.C927, "photo", C927 || CT.C927, "postalAddress", C930 || CT.C930, "postalAddressExtended", C930 || CT.C930, "postalAddressExtendedPostalCode", C925 || CT.C925, "postalCode", C925 || CT.C925, "streetAddressLevel1", C930 || CT.C930, "streetAddressLevel2", C930 || CT.C930, "streetAddressLevel3", C930 || CT.C930, "streetAddressLevel4", C930 || CT.C930, "streetAddressLine1", C930 || CT.C930, "streetAddressLine2", C930 || CT.C930, "streetAddressLine3", C930 || CT.C930, "sublocality", C930 || CT.C930, "telephoneNumber", C932 || CT.C932, "telephoneNumberAreaCode", C932 || CT.C932, "telephoneNumberCountryCode", C932 || CT.C932, "telephoneNumberDevice", C932 || CT.C932, "telephoneNumberExtension", C932 || CT.C932, "telephoneNumberLocal", C932 || CT.C932, "telephoneNumberLocalPrefix", C932 || CT.C932, "telephoneNumberLocalSuffix", C932 || CT.C932, "telephoneNumberNational", C932 || CT.C932, "transactionAmount", C933 || CT.C933, "transactionCurrency", C927 || CT.C927, "url", C928 || CT.C928, "username", C927 || CT.C927]);
    },
    get C934() {
      return C934 = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$19]: "TextInputAction.newline",
        index: 12
      });
    },
    get C935() {
      return C935 = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$19]: "TextInputAction.done",
        index: 2
      });
    },
    get C936() {
      return C936 = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$19]: "TextInputAction.go",
        index: 3
      });
    },
    get C937() {
      return C937 = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$19]: "TextInputAction.next",
        index: 6
      });
    },
    get C938() {
      return C938 = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$19]: "TextInputAction.previous",
        index: 7
      });
    },
    get C939() {
      return C939 = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$19]: "TextInputAction.search",
        index: 4
      });
    },
    get C940() {
      return C940 = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$19]: "TextInputAction.send",
        index: 5
      });
    },
    get C941() {
      return C941 = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$19]: "TextInputAction.continueAction",
        index: 8
      });
    },
    get C942() {
      return C942 = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$19]: "TextInputAction.emergencyCall",
        index: 11
      });
    },
    get C943() {
      return C943 = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$19]: "TextInputAction.join",
        index: 9
      });
    },
    get C944() {
      return C944 = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$19]: "TextInputAction.none",
        index: 0
      });
    },
    get C945() {
      return C945 = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$19]: "TextInputAction.route",
        index: 10
      });
    },
    get C946() {
      return C946 = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$19]: "TextInputAction.unspecified",
        index: 1
      });
    },
    get C947() {
      return C947 = dart.const({
        __proto__: text_input.FloatingCursorDragState.prototype,
        [_name$19]: "FloatingCursorDragState.Start",
        index: 0
      });
    },
    get C948() {
      return C948 = dart.const({
        __proto__: text_input.FloatingCursorDragState.prototype,
        [_name$19]: "FloatingCursorDragState.Update",
        index: 1
      });
    },
    get C949() {
      return C949 = dart.const({
        __proto__: text_input.FloatingCursorDragState.prototype,
        [_name$19]: "FloatingCursorDragState.End",
        index: 2
      });
    },
    get C950() {
      return C950 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 1
      });
    },
    get C951() {
      return C951 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 1,
        [OffsetBase__dx]: 0
      });
    },
    get C954() {
      return C954 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 17,
        [_Location_line]: 2526,
        [_Location_file]: null
      });
    },
    get C955() {
      return C955 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "startHandleLayerLink",
        [_Location_column]: 17,
        [_Location_line]: 2527,
        [_Location_file]: null
      });
    },
    get C956() {
      return C956 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "endHandleLayerLink",
        [_Location_column]: 17,
        [_Location_line]: 2528,
        [_Location_file]: null
      });
    },
    get C957() {
      return C957 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textSpan",
        [_Location_column]: 17,
        [_Location_line]: 2529,
        [_Location_file]: null
      });
    },
    get C958() {
      return C958 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "value",
        [_Location_column]: 17,
        [_Location_line]: 2530,
        [_Location_file]: null
      });
    },
    get C959() {
      return C959 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursorColor",
        [_Location_column]: 17,
        [_Location_line]: 2531,
        [_Location_file]: null
      });
    },
    get C960() {
      return C960 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundCursorColor",
        [_Location_column]: 17,
        [_Location_line]: 2532,
        [_Location_file]: null
      });
    },
    get C961() {
      return C961 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showCursor",
        [_Location_column]: 17,
        [_Location_line]: 2533,
        [_Location_file]: null
      });
    },
    get C962() {
      return C962 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "forceLine",
        [_Location_column]: 17,
        [_Location_line]: 2536,
        [_Location_file]: null
      });
    },
    get C963() {
      return C963 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "readOnly",
        [_Location_column]: 17,
        [_Location_line]: 2537,
        [_Location_file]: null
      });
    },
    get C964() {
      return C964 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hasFocus",
        [_Location_column]: 17,
        [_Location_line]: 2538,
        [_Location_file]: null
      });
    },
    get C965() {
      return C965 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLines",
        [_Location_column]: 17,
        [_Location_line]: 2539,
        [_Location_file]: null
      });
    },
    get C966() {
      return C966 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minLines",
        [_Location_column]: 17,
        [_Location_line]: 2540,
        [_Location_file]: null
      });
    },
    get C967() {
      return C967 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "expands",
        [_Location_column]: 17,
        [_Location_line]: 2541,
        [_Location_file]: null
      });
    },
    get C968() {
      return C968 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "strutStyle",
        [_Location_column]: 17,
        [_Location_line]: 2542,
        [_Location_file]: null
      });
    },
    get C969() {
      return C969 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionColor",
        [_Location_column]: 17,
        [_Location_line]: 2543,
        [_Location_file]: null
      });
    },
    get C970() {
      return C970 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textScaleFactor",
        [_Location_column]: 17,
        [_Location_line]: 2544,
        [_Location_file]: null
      });
    },
    get C971() {
      return C971 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 17,
        [_Location_line]: 2545,
        [_Location_file]: null
      });
    },
    get C972() {
      return C972 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 17,
        [_Location_line]: 2546,
        [_Location_file]: null
      });
    },
    get C973() {
      return C973 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "locale",
        [_Location_column]: 17,
        [_Location_line]: 2547,
        [_Location_file]: null
      });
    },
    get C974() {
      return C974 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textHeightBehavior",
        [_Location_column]: 17,
        [_Location_line]: 2548,
        [_Location_file]: null
      });
    },
    get C975() {
      return C975 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textWidthBasis",
        [_Location_column]: 17,
        [_Location_line]: 2549,
        [_Location_file]: null
      });
    },
    get C976() {
      return C976 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "obscuringCharacter",
        [_Location_column]: 17,
        [_Location_line]: 2550,
        [_Location_file]: null
      });
    },
    get C977() {
      return C977 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "obscureText",
        [_Location_column]: 17,
        [_Location_line]: 2551,
        [_Location_file]: null
      });
    },
    get C978() {
      return C978 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autocorrect",
        [_Location_column]: 17,
        [_Location_line]: 2552,
        [_Location_file]: null
      });
    },
    get C979() {
      return C979 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "smartDashesType",
        [_Location_column]: 17,
        [_Location_line]: 2553,
        [_Location_file]: null
      });
    },
    get C980() {
      return C980 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "smartQuotesType",
        [_Location_column]: 17,
        [_Location_line]: 2554,
        [_Location_file]: null
      });
    },
    get C981() {
      return C981 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableSuggestions",
        [_Location_column]: 17,
        [_Location_line]: 2555,
        [_Location_file]: null
      });
    },
    get C982() {
      return C982 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offset",
        [_Location_column]: 17,
        [_Location_line]: 2556,
        [_Location_file]: null
      });
    },
    get C983() {
      return C983 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSelectionChanged",
        [_Location_column]: 17,
        [_Location_line]: 2557,
        [_Location_file]: null
      });
    },
    get C984() {
      return C984 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onCaretChanged",
        [_Location_column]: 17,
        [_Location_line]: 2558,
        [_Location_file]: null
      });
    },
    get C985() {
      return C985 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "rendererIgnoresPointer",
        [_Location_column]: 17,
        [_Location_line]: 2559,
        [_Location_file]: null
      });
    },
    get C986() {
      return C986 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursorWidth",
        [_Location_column]: 17,
        [_Location_line]: 2560,
        [_Location_file]: null
      });
    },
    get C987() {
      return C987 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursorHeight",
        [_Location_column]: 17,
        [_Location_line]: 2561,
        [_Location_file]: null
      });
    },
    get C988() {
      return C988 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursorRadius",
        [_Location_column]: 17,
        [_Location_line]: 2562,
        [_Location_file]: null
      });
    },
    get C989() {
      return C989 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursorOffset",
        [_Location_column]: 17,
        [_Location_line]: 2563,
        [_Location_file]: null
      });
    },
    get C990() {
      return C990 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionHeightStyle",
        [_Location_column]: 17,
        [_Location_line]: 2564,
        [_Location_file]: null
      });
    },
    get C991() {
      return C991 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionWidthStyle",
        [_Location_column]: 17,
        [_Location_line]: 2565,
        [_Location_file]: null
      });
    },
    get C992() {
      return C992 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "paintCursorAboveText",
        [_Location_column]: 17,
        [_Location_line]: 2566,
        [_Location_file]: null
      });
    },
    get C993() {
      return C993 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableInteractiveSelection",
        [_Location_column]: 17,
        [_Location_line]: 2567,
        [_Location_file]: null
      });
    },
    get C994() {
      return C994 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textSelectionDelegate",
        [_Location_column]: 17,
        [_Location_line]: 2568,
        [_Location_file]: null
      });
    },
    get C995() {
      return C995 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "devicePixelRatio",
        [_Location_column]: 17,
        [_Location_line]: 2569,
        [_Location_file]: null
      });
    },
    get C996() {
      return C996 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "promptRectRange",
        [_Location_column]: 17,
        [_Location_line]: 2570,
        [_Location_file]: null
      });
    },
    get C997() {
      return C997 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "promptRectColor",
        [_Location_column]: 17,
        [_Location_line]: 2571,
        [_Location_file]: null
      });
    },
    get C998() {
      return C998 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 17,
        [_Location_line]: 2572,
        [_Location_file]: null
      });
    },
    get C953() {
      return C953 = dart.constList([C954 || CT.C954, C955 || CT.C955, C956 || CT.C956, C957 || CT.C957, C958 || CT.C958, C959 || CT.C959, C960 || CT.C960, C961 || CT.C961, C962 || CT.C962, C963 || CT.C963, C964 || CT.C964, C965 || CT.C965, C966 || CT.C966, C967 || CT.C967, C968 || CT.C968, C969 || CT.C969, C970 || CT.C970, C971 || CT.C971, C972 || CT.C972, C973 || CT.C973, C974 || CT.C974, C975 || CT.C975, C976 || CT.C976, C977 || CT.C977, C978 || CT.C978, C979 || CT.C979, C980 || CT.C980, C981 || CT.C981, C982 || CT.C982, C983 || CT.C983, C984 || CT.C984, C985 || CT.C985, C986 || CT.C986, C987 || CT.C987, C988 || CT.C988, C989 || CT.C989, C990 || CT.C990, C991 || CT.C991, C992 || CT.C992, C993 || CT.C993, C994 || CT.C994, C995 || CT.C995, C996 || CT.C996, C997 || CT.C997, C998 || CT.C998], _LocationL());
    },
    get C952() {
      return C952 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C953 || CT.C953,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 2525,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/editable_text.dart"
      });
    },
    get C1001() {
      return C1001 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onCopy",
        [_Location_column]: 15,
        [_Location_line]: 2522,
        [_Location_file]: null
      });
    },
    get C1002() {
      return C1002 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onCut",
        [_Location_column]: 15,
        [_Location_line]: 2523,
        [_Location_file]: null
      });
    },
    get C1003() {
      return C1003 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPaste",
        [_Location_column]: 15,
        [_Location_line]: 2524,
        [_Location_file]: null
      });
    },
    get C1004() {
      return C1004 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 2525,
        [_Location_file]: null
      });
    },
    get C1000() {
      return C1000 = dart.constList([C1001 || CT.C1001, C1002 || CT.C1002, C1003 || CT.C1003, C1004 || CT.C1004], _LocationL());
    },
    get C999() {
      return C999 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1000 || CT.C1000,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 2521,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/editable_text.dart"
      });
    },
    get C1007() {
      return C1007 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "link",
        [_Location_column]: 13,
        [_Location_line]: 2520,
        [_Location_file]: null
      });
    },
    get C1008() {
      return C1008 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 2521,
        [_Location_file]: null
      });
    },
    get C1006() {
      return C1006 = dart.constList([C1007 || CT.C1007, C1008 || CT.C1008], _LocationL());
    },
    get C1005() {
      return C1005 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1006 || CT.C1006,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 2519,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/editable_text.dart"
      });
    },
    get C1011() {
      return C1011 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 9,
        [_Location_line]: 2512,
        [_Location_file]: null
      });
    },
    get C1012() {
      return C1012 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axisDirection",
        [_Location_column]: 9,
        [_Location_line]: 2513,
        [_Location_file]: null
      });
    },
    get C1013() {
      return C1013 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 9,
        [_Location_line]: 2514,
        [_Location_file]: null
      });
    },
    get C1014() {
      return C1014 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "physics",
        [_Location_column]: 9,
        [_Location_line]: 2515,
        [_Location_file]: null
      });
    },
    get C1015() {
      return C1015 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 9,
        [_Location_line]: 2516,
        [_Location_file]: null
      });
    },
    get C1016() {
      return C1016 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "restorationId",
        [_Location_column]: 9,
        [_Location_line]: 2517,
        [_Location_file]: null
      });
    },
    get C1017() {
      return C1017 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportBuilder",
        [_Location_column]: 9,
        [_Location_line]: 2518,
        [_Location_file]: null
      });
    },
    get C1010() {
      return C1010 = dart.constList([C1011 || CT.C1011, C1012 || CT.C1012, C1013 || CT.C1013, C1014 || CT.C1014, C1015 || CT.C1015, C1016 || CT.C1016, C1017 || CT.C1017], _LocationL());
    },
    get C1009() {
      return C1009 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1010 || CT.C1010,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 2511,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/editable_text.dart"
      });
    },
    get C1020() {
      return C1020 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursor",
        [_Location_column]: 7,
        [_Location_line]: 2510,
        [_Location_file]: null
      });
    },
    get C1021() {
      return C1021 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 2511,
        [_Location_file]: null
      });
    },
    get C1019() {
      return C1019 = dart.constList([C1020 || CT.C1020, C1021 || CT.C1021], _LocationL());
    },
    get C1018() {
      return C1018 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1019 || CT.C1019,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 2509,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/editable_text.dart"
      });
    },
    get C1022() {
      return C1022 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 250000
      });
    },
    get C1023() {
      return C1023 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 125000
      });
    },
    get C1024() {
      return C1024 = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.2,
        [Cubic_b]: 0,
        [Cubic_a]: 0.4
      });
    },
    get C1025() {
      return C1025 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 500000
      });
    },
    get C1026() {
      return C1026 = dart.const({
        __proto__: focus_traversal.TraversalDirection.prototype,
        [_name$20]: "TraversalDirection.up",
        index: 0
      });
    },
    get C1027() {
      return C1027 = dart.const({
        __proto__: focus_traversal.TraversalDirection.prototype,
        [_name$20]: "TraversalDirection.right",
        index: 1
      });
    },
    get C1028() {
      return C1028 = dart.const({
        __proto__: focus_traversal.TraversalDirection.prototype,
        [_name$20]: "TraversalDirection.down",
        index: 2
      });
    },
    get C1029() {
      return C1029 = dart.const({
        __proto__: focus_traversal.TraversalDirection.prototype,
        [_name$20]: "TraversalDirection.left",
        index: 3
      });
    },
    get C1030() {
      return C1030 = dart.constList([C1026 || CT.C1026, C1027 || CT.C1027, C1028 || CT.C1028, C1029 || CT.C1029], TraversalDirectionL());
    },
    get C1033() {
      return C1033 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 9,
        [_Location_line]: 1777,
        [_Location_file]: null
      });
    },
    get C1034() {
      return C1034 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canRequestFocus",
        [_Location_column]: 9,
        [_Location_line]: 1778,
        [_Location_file]: null
      });
    },
    get C1035() {
      return C1035 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "skipTraversal",
        [_Location_column]: 9,
        [_Location_line]: 1779,
        [_Location_file]: null
      });
    },
    get C1036() {
      return C1036 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "includeSemantics",
        [_Location_column]: 9,
        [_Location_line]: 1780,
        [_Location_file]: null
      });
    },
    get C1037() {
      return C1037 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "descendantsAreFocusable",
        [_Location_column]: 9,
        [_Location_line]: 1781,
        [_Location_file]: null
      });
    },
    get C1038() {
      return C1038 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1782,
        [_Location_file]: null
      });
    },
    get C1032() {
      return C1032 = dart.constList([C1033 || CT.C1033, C1034 || CT.C1034, C1035 || CT.C1035, C1036 || CT.C1036, C1037 || CT.C1037, C1038 || CT.C1038], _LocationL());
    },
    get C1031() {
      return C1031 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1032 || CT.C1032,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1776,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/focus_traversal.dart"
      });
    },
    get C1041() {
      return C1041 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "policy",
        [_Location_column]: 7,
        [_Location_line]: 1774,
        [_Location_file]: null
      });
    },
    get C1042() {
      return C1042 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 7,
        [_Location_line]: 1775,
        [_Location_file]: null
      });
    },
    get C1043() {
      return C1043 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1776,
        [_Location_file]: null
      });
    },
    get C1040() {
      return C1040 = dart.constList([C1041 || CT.C1041, C1042 || CT.C1042, C1043 || CT.C1043], _LocationL());
    },
    get C1039() {
      return C1039 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1040 || CT.C1040,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1773,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/focus_traversal.dart"
      });
    },
    get C1046() {
      return C1046 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusable",
        [_Location_column]: 9,
        [_Location_line]: 691,
        [_Location_file]: null
      });
    },
    get C1047() {
      return C1047 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focused",
        [_Location_column]: 9,
        [_Location_line]: 692,
        [_Location_file]: null
      });
    },
    get C1045() {
      return C1045 = dart.constList([C1046 || CT.C1046, C1047 || CT.C1047, C752 || CT.C752], _LocationL());
    },
    get C1044() {
      return C1044 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1045 || CT.C1045,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 690,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/focus_scope.dart"
      });
    },
    get C1050() {
      return C1050 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "node",
        [_Location_column]: 7,
        [_Location_line]: 697,
        [_Location_file]: null
      });
    },
    get C1051() {
      return C1051 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 698,
        [_Location_file]: null
      });
    },
    get C1049() {
      return C1049 = dart.constList([C1050 || CT.C1050, C1051 || CT.C1051], _LocationL());
    },
    get C1048() {
      return C1048 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1049 || CT.C1049,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 696,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/focus_scope.dart"
      });
    },
    get C1054() {
      return C1054 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "node",
        [_Location_column]: 9,
        [_Location_line]: 960,
        [_Location_file]: null
      });
    },
    get C1055() {
      return C1055 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 961,
        [_Location_file]: null
      });
    },
    get C1053() {
      return C1053 = dart.constList([C1054 || CT.C1054, C1055 || CT.C1055], _LocationL());
    },
    get C1052() {
      return C1052 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1053 || CT.C1053,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 959,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/focus_scope.dart"
      });
    },
    get C1058() {
      return C1058 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 7,
        [_Location_line]: 958,
        [_Location_file]: null
      });
    },
    get C1059() {
      return C1059 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 959,
        [_Location_file]: null
      });
    },
    get C1057() {
      return C1057 = dart.constList([C1058 || CT.C1058, C1059 || CT.C1059], _LocationL());
    },
    get C1056() {
      return C1056 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1057 || CT.C1057,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 957,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/focus_scope.dart"
      });
    },
    get C1060() {
      return C1060 = dart.constList([], FocusNodeL());
    },
    get C1061() {
      return C1061 = dart.const({
        __proto__: focus_manager.UnfocusDisposition.prototype,
        [_name$21]: "UnfocusDisposition.scope",
        index: 0
      });
    },
    get C1062() {
      return C1062 = dart.const({
        __proto__: focus_manager.UnfocusDisposition.prototype,
        [_name$21]: "UnfocusDisposition.previouslyFocusedChild",
        index: 1
      });
    },
    get C1065() {
      return C1065 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canRequestFocus",
        [_Location_column]: 7,
        [_Location_line]: 1032,
        [_Location_file]: null
      });
    },
    get C1066() {
      return C1066 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "skipTraversal",
        [_Location_column]: 7,
        [_Location_line]: 1033,
        [_Location_file]: null
      });
    },
    get C1067() {
      return C1067 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "includeSemantics",
        [_Location_column]: 7,
        [_Location_line]: 1034,
        [_Location_file]: null
      });
    },
    get C1068() {
      return C1068 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "descendantsAreFocusable",
        [_Location_column]: 7,
        [_Location_line]: 1035,
        [_Location_file]: null
      });
    },
    get C1069() {
      return C1069 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1036,
        [_Location_file]: null
      });
    },
    get C1064() {
      return C1064 = dart.constList([C1065 || CT.C1065, C1066 || CT.C1066, C1067 || CT.C1067, C1068 || CT.C1068, C1069 || CT.C1069], _LocationL());
    },
    get C1063() {
      return C1063 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1064 || CT.C1064,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1031,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/focus_scope.dart"
      });
    },
    get C1070() {
      return C1070 = dart.const({
        __proto__: focus_manager.KeyEventResult.prototype,
        [_name$21]: "KeyEventResult.handled",
        index: 0
      });
    },
    get C1071() {
      return C1071 = dart.const({
        __proto__: focus_manager.KeyEventResult.prototype,
        [_name$21]: "KeyEventResult.ignored",
        index: 1
      });
    },
    get C1072() {
      return C1072 = dart.const({
        __proto__: focus_manager.KeyEventResult.prototype,
        [_name$21]: "KeyEventResult.skipRemainingHandlers",
        index: 2
      });
    },
    get C1073() {
      return C1073 = dart.constList([C1070 || CT.C1070, C1071 || CT.C1071, C1072 || CT.C1072], KeyEventResultL());
    },
    get C1074() {
      return C1074 = dart.constList([C1061 || CT.C1061, C1062 || CT.C1062], UnfocusDispositionL());
    },
    get C1075() {
      return C1075 = dart.const({
        __proto__: focus_manager.FocusHighlightMode.prototype,
        [_name$21]: "FocusHighlightMode.touch",
        index: 0
      });
    },
    get C1076() {
      return C1076 = dart.const({
        __proto__: focus_manager.FocusHighlightMode.prototype,
        [_name$21]: "FocusHighlightMode.traditional",
        index: 1
      });
    },
    get C1077() {
      return C1077 = dart.constList([C1075 || CT.C1075, C1076 || CT.C1076], FocusHighlightModeL());
    },
    get C1078() {
      return C1078 = dart.const({
        __proto__: focus_manager.FocusHighlightStrategy.prototype,
        [_name$21]: "FocusHighlightStrategy.automatic",
        index: 0
      });
    },
    get C1079() {
      return C1079 = dart.const({
        __proto__: focus_manager.FocusHighlightStrategy.prototype,
        [_name$21]: "FocusHighlightStrategy.alwaysTouch",
        index: 1
      });
    },
    get C1080() {
      return C1080 = dart.const({
        __proto__: focus_manager.FocusHighlightStrategy.prototype,
        [_name$21]: "FocusHighlightStrategy.alwaysTraditional",
        index: 2
      });
    },
    get C1081() {
      return C1081 = dart.constList([C1078 || CT.C1078, C1079 || CT.C1079, C1080 || CT.C1080], FocusHighlightStrategyL());
    },
    get C1082() {
      return C1082 = dart.const({
        __proto__: ui.PointerDeviceKind.prototype,
        [_name]: "PointerDeviceKind.touch",
        index: 0
      });
    },
    get C1083() {
      return C1083 = dart.const({
        __proto__: ui.PointerDeviceKind.prototype,
        [_name]: "PointerDeviceKind.stylus",
        index: 2
      });
    },
    get C1084() {
      return C1084 = dart.const({
        __proto__: ui.PointerDeviceKind.prototype,
        [_name]: "PointerDeviceKind.invertedStylus",
        index: 3
      });
    },
    get C1085() {
      return C1085 = dart.const({
        __proto__: ui.PointerDeviceKind.prototype,
        [_name]: "PointerDeviceKind.mouse",
        index: 1
      });
    },
    get C1086() {
      return C1086 = dart.const({
        __proto__: ui.PointerDeviceKind.prototype,
        [_name]: "PointerDeviceKind.unknown",
        index: 4
      });
    },
    get C1087() {
      return C1087 = dart.const({
        __proto__: framework._StateLifecycle.prototype,
        [_name$22]: "_StateLifecycle.created",
        index: 0
      });
    },
    get C1088() {
      return C1088 = dart.const({
        __proto__: framework._StateLifecycle.prototype,
        [_name$22]: "_StateLifecycle.initialized",
        index: 1
      });
    },
    get C1089() {
      return C1089 = dart.const({
        __proto__: framework._StateLifecycle.prototype,
        [_name$22]: "_StateLifecycle.ready",
        index: 2
      });
    },
    get C1090() {
      return C1090 = dart.const({
        __proto__: framework._StateLifecycle.prototype,
        [_name$22]: "_StateLifecycle.defunct",
        index: 3
      });
    },
    get C1091() {
      return C1091 = dart.constList([C1087 || CT.C1087, C1088 || CT.C1088, C1089 || CT.C1089, C1090 || CT.C1090], _StateLifecycleL());
    },
    get C1092() {
      return C1092 = dart.const({
        __proto__: framework._ElementLifecycle.prototype,
        [_name$22]: "_ElementLifecycle.initial",
        index: 0
      });
    },
    get C1093() {
      return C1093 = dart.const({
        __proto__: framework._ElementLifecycle.prototype,
        [_name$22]: "_ElementLifecycle.active",
        index: 1
      });
    },
    get C1094() {
      return C1094 = dart.const({
        __proto__: framework._ElementLifecycle.prototype,
        [_name$22]: "_ElementLifecycle.inactive",
        index: 2
      });
    },
    get C1095() {
      return C1095 = dart.const({
        __proto__: framework._ElementLifecycle.prototype,
        [_name$22]: "_ElementLifecycle.defunct",
        index: 3
      });
    },
    get C1096() {
      return C1096 = dart.constList([C1092 || CT.C1092, C1093 || CT.C1093, C1094 || CT.C1094, C1095 || CT.C1095], _ElementLifecycleL());
    },
    get C1097() {
      return C1097 = dart.fn(framework.Element._sort, ElementAndElementToint());
    },
    get C1098() {
      return C1098 = dart.fn(framework._InactiveElements._deactivateRecursively, ElementTovoid());
    },
    get C1101() {
      return C1101 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "message",
        [_Location_column]: 36,
        [_Location_line]: 4539,
        [_Location_file]: null
      });
    },
    get C1102() {
      return C1102 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "error",
        [_Location_column]: 54,
        [_Location_line]: 4539,
        [_Location_file]: null
      });
    },
    get C1100() {
      return C1100 = dart.constList([C1101 || CT.C1101, C1102 || CT.C1102], _LocationL());
    },
    get C1099() {
      return C1099 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1100 || CT.C1100,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 4539,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/framework.dart"
      });
    },
    get C1103() {
      return C1103 = dart.fn(framework.ErrorWidget._defaultErrorWidgetBuilder, FlutterErrorDetailsToWidget());
    },
    get C1104() {
      return C1104 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C6 || CT.C6,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 6378,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/framework.dart"
      });
    },
    get C1105() {
      return C1105 = dart.const({
        __proto__: banner.BannerLocation.prototype,
        [_name$23]: "BannerLocation.topStart",
        index: 0
      });
    },
    get C1106() {
      return C1106 = dart.const({
        __proto__: banner.BannerLocation.prototype,
        [_name$23]: "BannerLocation.topEnd",
        index: 1
      });
    },
    get C1107() {
      return C1107 = dart.const({
        __proto__: banner.BannerLocation.prototype,
        [_name$23]: "BannerLocation.bottomStart",
        index: 2
      });
    },
    get C1108() {
      return C1108 = dart.const({
        __proto__: banner.BannerLocation.prototype,
        [_name$23]: "BannerLocation.bottomEnd",
        index: 3
      });
    },
    get C1109() {
      return C1109 = dart.constList([C1105 || CT.C1105, C1106 || CT.C1106, C1107 || CT.C1107, C1108 || CT.C1108], BannerLocationL());
    },
    get C1110() {
      return C1110 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2696354844.0
      });
    },
    get C1112() {
      return C1112 = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_index]: 8
      });
    },
    get C1111() {
      return C1111 = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_height]: 1,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C1112 || CT.C1112,
        [TextStyle_fontSize]: 10.2,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C40 || CT.C40,
        [TextStyle_inherit]: true
      });
    },
    get C1114() {
      return C1114 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2130706432
      });
    },
    get C1113() {
      return C1113 = dart.const({
        __proto__: box_shadow.BoxShadow.prototype,
        [Shadow_blurRadius]: 6,
        [Shadow_offset]: C1 || CT.C1,
        [Shadow_color]: C1114 || CT.C1114,
        [BoxShadow_spreadRadius]: 0
      });
    },
    get C1117() {
      return C1117 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "foregroundPainter",
        [_Location_column]: 7,
        [_Location_line]: 305,
        [_Location_file]: null
      });
    },
    get C1118() {
      return C1118 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 313,
        [_Location_file]: null
      });
    },
    get C1116() {
      return C1116 = dart.constList([C1117 || CT.C1117, C1118 || CT.C1118], _LocationL());
    },
    get C1115() {
      return C1115 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1116 || CT.C1116,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 304,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/banner.dart"
      });
    },
    get C1121() {
      return C1121 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 349,
        [_Location_file]: null
      });
    },
    get C1122() {
      return C1122 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "message",
        [_Location_column]: 9,
        [_Location_line]: 350,
        [_Location_file]: null
      });
    },
    get C1123() {
      return C1123 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 9,
        [_Location_line]: 351,
        [_Location_file]: null
      });
    },
    get C1124() {
      return C1124 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "location",
        [_Location_column]: 9,
        [_Location_line]: 352,
        [_Location_file]: null
      });
    },
    get C1120() {
      return C1120 = dart.constList([C1121 || CT.C1121, C1122 || CT.C1122, C1123 || CT.C1123, C1124 || CT.C1124], _LocationL());
    },
    get C1119() {
      return C1119 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1120 || CT.C1120,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 348,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/banner.dart"
      });
    },
    get C1125() {
      return C1125 = dart.const({
        __proto__: ui.Rect.prototype,
        [Rect_bottom]: 40,
        [Rect_right]: 40,
        [Rect_top]: 28,
        [Rect_left]: -40
      });
    },
    get C1126() {
      return C1126 = dart.constMap(StringL(), BuildContextLToLWidgetL(), []);
    },
    get C1128() {
      return C1128 = dart.const({
        __proto__: ui.Locale.prototype,
        [Locale__countryCode]: "US",
        [Locale_scriptCode]: null,
        [Locale__languageCode]: "en"
      });
    },
    get C1127() {
      return C1127 = dart.constList([C1128 || CT.C1128], LocaleL());
    },
    get C1129() {
      return C1129 = dart.const({
        __proto__: actions$.ActivateIntent.prototype
      });
    },
    get C1130() {
      return C1130 = dart.const({
        __proto__: actions$.DismissIntent.prototype
      });
    },
    get C1131() {
      return C1131 = dart.const({
        __proto__: focus_traversal.NextFocusIntent.prototype
      });
    },
    get C1132() {
      return C1132 = dart.const({
        __proto__: focus_traversal.PreviousFocusIntent.prototype
      });
    },
    get C1133() {
      return C1133 = dart.const({
        __proto__: focus_traversal.DirectionalFocusIntent.prototype,
        [ignoreTextFields$]: true,
        [direction$2]: C1029 || CT.C1029
      });
    },
    get C1134() {
      return C1134 = dart.const({
        __proto__: focus_traversal.DirectionalFocusIntent.prototype,
        [ignoreTextFields$]: true,
        [direction$2]: C1027 || CT.C1027
      });
    },
    get C1135() {
      return C1135 = dart.const({
        __proto__: focus_traversal.DirectionalFocusIntent.prototype,
        [ignoreTextFields$]: true,
        [direction$2]: C1028 || CT.C1028
      });
    },
    get C1136() {
      return C1136 = dart.const({
        __proto__: focus_traversal.DirectionalFocusIntent.prototype,
        [ignoreTextFields$]: true,
        [direction$2]: C1026 || CT.C1026
      });
    },
    get C1137() {
      return C1137 = dart.const({
        __proto__: scrollable$.ScrollIntent.prototype,
        [type$0]: C765 || CT.C765,
        [direction$0]: C644 || CT.C644
      });
    },
    get C1138() {
      return C1138 = dart.const({
        __proto__: scrollable$.ScrollIntent.prototype,
        [type$0]: C765 || CT.C765,
        [direction$0]: C642 || CT.C642
      });
    },
    get C1139() {
      return C1139 = dart.const({
        __proto__: scrollable$.ScrollIntent.prototype,
        [type$0]: C765 || CT.C765,
        [direction$0]: C646 || CT.C646
      });
    },
    get C1140() {
      return C1140 = dart.const({
        __proto__: scrollable$.ScrollIntent.prototype,
        [type$0]: C765 || CT.C765,
        [direction$0]: C645 || CT.C645
      });
    },
    get C1141() {
      return C1141 = dart.const({
        __proto__: scrollable$.ScrollIntent.prototype,
        [type$0]: C766 || CT.C766,
        [direction$0]: C644 || CT.C644
      });
    },
    get C1142() {
      return C1142 = dart.const({
        __proto__: scrollable$.ScrollIntent.prototype,
        [type$0]: C766 || CT.C766,
        [direction$0]: C642 || CT.C642
      });
    },
    get C1145() {
      return C1145 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routeInformationProvider",
        [_Location_column]: 9,
        [_Location_line]: 1504,
        [_Location_file]: null
      });
    },
    get C1146() {
      return C1146 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routeInformationParser",
        [_Location_column]: 9,
        [_Location_line]: 1505,
        [_Location_file]: null
      });
    },
    get C1147() {
      return C1147 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routerDelegate",
        [_Location_column]: 9,
        [_Location_line]: 1506,
        [_Location_file]: null
      });
    },
    get C1148() {
      return C1148 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backButtonDispatcher",
        [_Location_column]: 9,
        [_Location_line]: 1507,
        [_Location_file]: null
      });
    },
    get C1144() {
      return C1144 = dart.constList([C1145 || CT.C1145, C1146 || CT.C1146, C1147 || CT.C1147, C1148 || CT.C1148], _LocationL());
    },
    get C1143() {
      return C1143 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1144 || CT.C1144,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 1503,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1151() {
      return C1151 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "restorationScopeId",
        [_Location_column]: 9,
        [_Location_line]: 1512,
        [_Location_file]: null
      });
    },
    get C1152() {
      return C1152 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 9,
        [_Location_line]: 1513,
        [_Location_file]: null
      });
    },
    get C1153() {
      return C1153 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "initialRoute",
        [_Location_column]: 9,
        [_Location_line]: 1514,
        [_Location_file]: null
      });
    },
    get C1154() {
      return C1154 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onGenerateRoute",
        [_Location_column]: 9,
        [_Location_line]: 1515,
        [_Location_file]: null
      });
    },
    get C1155() {
      return C1155 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onGenerateInitialRoutes",
        [_Location_column]: 9,
        [_Location_line]: 1516,
        [_Location_file]: null
      });
    },
    get C1156() {
      return C1156 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onUnknownRoute",
        [_Location_column]: 9,
        [_Location_line]: 1521,
        [_Location_file]: null
      });
    },
    get C1157() {
      return C1157 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "observers",
        [_Location_column]: 9,
        [_Location_line]: 1522,
        [_Location_file]: null
      });
    },
    get C1158() {
      return C1158 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "reportsRouteUpdateToEngine",
        [_Location_column]: 9,
        [_Location_line]: 1523,
        [_Location_file]: null
      });
    },
    get C1150() {
      return C1150 = dart.constList([C1151 || CT.C1151, C1152 || CT.C1152, C1153 || CT.C1153, C1154 || CT.C1154, C1155 || CT.C1155, C1156 || CT.C1156, C1157 || CT.C1157, C1158 || CT.C1158], _LocationL());
    },
    get C1149() {
      return C1149 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1150 || CT.C1150,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 1511,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1161() {
      return C1161 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 9,
        [_Location_line]: 1530,
        [_Location_file]: null
      });
    },
    get C1160() {
      return C1160 = dart.constList([C1161 || CT.C1161], _LocationL());
    },
    get C1159() {
      return C1159 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1160 || CT.C1160,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1529,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1164() {
      return C1164 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 9,
        [_Location_line]: 1541,
        [_Location_file]: null
      });
    },
    get C1165() {
      return C1165 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1542,
        [_Location_file]: null
      });
    },
    get C1163() {
      return C1163 = dart.constList([C1164 || CT.C1164, C1165 || CT.C1165], _LocationL());
    },
    get C1162() {
      return C1162 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1163 || CT.C1163,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1540,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1168() {
      return C1168 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardRasterCacheImages",
        [_Location_column]: 9,
        [_Location_line]: 1551,
        [_Location_file]: null
      });
    },
    get C1169() {
      return C1169 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardOffscreenLayers",
        [_Location_column]: 9,
        [_Location_line]: 1552,
        [_Location_file]: null
      });
    },
    get C1167() {
      return C1167 = dart.constList([C1168 || CT.C1168, C1169 || CT.C1169], _LocationL());
    },
    get C1166() {
      return C1166 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1167 || CT.C1167,
        [_Location_name]: null,
        [_Location_column]: 47,
        [_Location_line]: 1550,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1172() {
      return C1172 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardRasterCacheImages",
        [_Location_column]: 9,
        [_Location_line]: 1556,
        [_Location_file]: null
      });
    },
    get C1173() {
      return C1173 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardOffscreenLayers",
        [_Location_column]: 9,
        [_Location_line]: 1557,
        [_Location_file]: null
      });
    },
    get C1171() {
      return C1171 = dart.constList([C1172 || CT.C1172, C1173 || CT.C1173], _LocationL());
    },
    get C1170() {
      return C1170 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1171 || CT.C1171,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 1555,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1176() {
      return C1176 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 22,
        [_Location_line]: 1564,
        [_Location_file]: null
      });
    },
    get C1177() {
      return C1177 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 32,
        [_Location_line]: 1564,
        [_Location_file]: null
      });
    },
    get C1178() {
      return C1178 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "right",
        [_Location_column]: 43,
        [_Location_line]: 1564,
        [_Location_file]: null
      });
    },
    get C1179() {
      return C1179 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 55,
        [_Location_line]: 1564,
        [_Location_file]: null
      });
    },
    get C1175() {
      return C1175 = dart.constList([C1176 || CT.C1176, C1177 || CT.C1177, C1178 || CT.C1178, C1179 || CT.C1179], _LocationL());
    },
    get C1174() {
      return C1174 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1175 || CT.C1175,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 1564,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1182() {
      return C1182 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 1562,
        [_Location_file]: null
      });
    },
    get C1181() {
      return C1181 = dart.constList([C1182 || CT.C1182], _LocationL());
    },
    get C1180() {
      return C1180 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1181 || CT.C1181,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1561,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1185() {
      return C1185 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1571,
        [_Location_file]: null
      });
    },
    get C1184() {
      return C1184 = dart.constList([C1185 || CT.C1185], _LocationL());
    },
    get C1183() {
      return C1183 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1184 || CT.C1184,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1570,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1188() {
      return C1188 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1578,
        [_Location_file]: null
      });
    },
    get C1189() {
      return C1189 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectButtonBuilder",
        [_Location_column]: 11,
        [_Location_line]: 1579,
        [_Location_file]: null
      });
    },
    get C1187() {
      return C1187 = dart.constList([C1188 || CT.C1188, C1189 || CT.C1189], _LocationL());
    },
    get C1186() {
      return C1186 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1187 || CT.C1187,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1577,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1192() {
      return C1192 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1584,
        [_Location_file]: null
      });
    },
    get C1191() {
      return C1191 = dart.constList([C1192 || CT.C1192], _LocationL());
    },
    get C1190() {
      return C1190 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1191 || CT.C1191,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1583,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1195() {
      return C1195 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 13,
        [_Location_line]: 1600,
        [_Location_file]: null
      });
    },
    get C1196() {
      return C1196 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 13,
        [_Location_line]: 1601,
        [_Location_file]: null
      });
    },
    get C1197() {
      return C1197 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 1602,
        [_Location_file]: null
      });
    },
    get C1194() {
      return C1194 = dart.constList([C1195 || CT.C1195, C1196 || CT.C1196, C1197 || CT.C1197], _LocationL());
    },
    get C1193() {
      return C1193 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1194 || CT.C1194,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1599,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1200() {
      return C1200 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 9,
        [_Location_line]: 1596,
        [_Location_file]: null
      });
    },
    get C1199() {
      return C1199 = dart.constList([C1200 || CT.C1200], _LocationL());
    },
    get C1198() {
      return C1198 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1199 || CT.C1199,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 1592,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1203() {
      return C1203 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 9,
        [_Location_line]: 1608,
        [_Location_file]: null
      });
    },
    get C1204() {
      return C1204 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 9,
        [_Location_line]: 1609,
        [_Location_file]: null
      });
    },
    get C1205() {
      return C1205 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1610,
        [_Location_file]: null
      });
    },
    get C1202() {
      return C1202 = dart.constList([C1203 || CT.C1203, C1204 || CT.C1204, C1205 || CT.C1205], _LocationL());
    },
    get C1201() {
      return C1201 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1202 || CT.C1202,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 1607,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1208() {
      return C1208 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "locale",
        [_Location_column]: 17,
        [_Location_line]: 1630,
        [_Location_file]: null
      });
    },
    get C1209() {
      return C1209 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegates",
        [_Location_column]: 17,
        [_Location_line]: 1631,
        [_Location_file]: null
      });
    },
    get C1210() {
      return C1210 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 1632,
        [_Location_file]: null
      });
    },
    get C1207() {
      return C1207 = dart.constList([C1208 || CT.C1208, C1209 || CT.C1209, C1210 || CT.C1210], _LocationL());
    },
    get C1206() {
      return C1206 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1207 || CT.C1207,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 1629,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1213() {
      return C1213 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 1629,
        [_Location_file]: null
      });
    },
    get C1212() {
      return C1212 = dart.constList([C1213 || CT.C1213], _LocationL());
    },
    get C1211() {
      return C1211 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1212 || CT.C1212,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 1628,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1216() {
      return C1216 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "policy",
        [_Location_column]: 13,
        [_Location_line]: 1627,
        [_Location_file]: null
      });
    },
    get C1217() {
      return C1217 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 1628,
        [_Location_file]: null
      });
    },
    get C1215() {
      return C1215 = dart.constList([C1216 || CT.C1216, C1217 || CT.C1217], _LocationL());
    },
    get C1214() {
      return C1214 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1215 || CT.C1215,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1626,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1220() {
      return C1220 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actions",
        [_Location_column]: 11,
        [_Location_line]: 1625,
        [_Location_file]: null
      });
    },
    get C1221() {
      return C1221 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1626,
        [_Location_file]: null
      });
    },
    get C1219() {
      return C1219 = dart.constList([C1220 || CT.C1220, C1221 || CT.C1221], _LocationL());
    },
    get C1218() {
      return C1218 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1219 || CT.C1219,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1624,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1224() {
      return C1224 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shortcuts",
        [_Location_column]: 9,
        [_Location_line]: 1622,
        [_Location_file]: null
      });
    },
    get C1225() {
      return C1225 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debugLabel",
        [_Location_column]: 9,
        [_Location_line]: 1623,
        [_Location_file]: null
      });
    },
    get C1226() {
      return C1226 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1624,
        [_Location_file]: null
      });
    },
    get C1223() {
      return C1223 = dart.constList([C1224 || CT.C1224, C1225 || CT.C1225, C1226 || CT.C1226], _LocationL());
    },
    get C1222() {
      return C1222 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1223 || CT.C1223,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1621,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1229() {
      return C1229 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "restorationId",
        [_Location_column]: 7,
        [_Location_line]: 1620,
        [_Location_file]: null
      });
    },
    get C1230() {
      return C1230 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1621,
        [_Location_file]: null
      });
    },
    get C1228() {
      return C1228 = dart.constList([C1229 || CT.C1229, C1230 || CT.C1230], _LocationL());
    },
    get C1227() {
      return C1227 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1228 || CT.C1228,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1619,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1233() {
      return C1233 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 7,
        [_Location_line]: 1708,
        [_Location_file]: null
      });
    },
    get C1234() {
      return C1234 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1709,
        [_Location_file]: null
      });
    },
    get C1232() {
      return C1232 = dart.constList([C1233 || CT.C1233, C1234 || CT.C1234], _LocationL());
    },
    get C1231() {
      return C1231 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1232 || CT.C1232,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1707,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/app.dart"
      });
    },
    get C1235() {
      return C1235 = dart.fn(widget_inspector.transformDebugCreator, IterableOfDiagnosticsNodeToIterableOfDiagnosticsNode());
    },
    get C1236() {
      return C1236 = dart.const({
        __proto__: assertions.PartialStackFrame.prototype,
        [PartialStackFrame_method]: "inflateWidget",
        [PartialStackFrame_className]: "Element",
        [PartialStackFrame_package]: "package:flutter/src/widgets/framework.dart"
      });
    },
    get C1237() {
      return C1237 = dart.const({
        __proto__: assertions.PartialStackFrame.prototype,
        [PartialStackFrame_method]: "updateChild",
        [PartialStackFrame_className]: "Element",
        [PartialStackFrame_package]: "package:flutter/src/widgets/framework.dart"
      });
    },
    get C1238() {
      return C1238 = dart.const({
        __proto__: assertions.PartialStackFrame.prototype,
        [PartialStackFrame_method]: "rebuild",
        [PartialStackFrame_className]: "Element",
        [PartialStackFrame_package]: "package:flutter/src/widgets/framework.dart"
      });
    },
    get C1239() {
      return C1239 = dart.const({
        __proto__: assertions.PartialStackFrame.prototype,
        [PartialStackFrame_method]: "performRebuild",
        [PartialStackFrame_className]: "ComponentElement",
        [PartialStackFrame_package]: "package:flutter/src/widgets/framework.dart"
      });
    },
    get C1240() {
      return C1240 = dart.const({
        __proto__: assertions.PartialStackFrame.prototype,
        [PartialStackFrame_method]: "_firstBuild",
        [PartialStackFrame_className]: "ComponentElement",
        [PartialStackFrame_package]: "package:flutter/src/widgets/framework.dart"
      });
    },
    get C1241() {
      return C1241 = dart.const({
        __proto__: assertions.PartialStackFrame.prototype,
        [PartialStackFrame_method]: "mount",
        [PartialStackFrame_className]: "ComponentElement",
        [PartialStackFrame_package]: "package:flutter/src/widgets/framework.dart"
      });
    },
    get C1242() {
      return C1242 = dart.const({
        __proto__: assertions.PartialStackFrame.prototype,
        [PartialStackFrame_method]: "_firstBuild",
        [PartialStackFrame_className]: "StatefulElement",
        [PartialStackFrame_package]: "package:flutter/src/widgets/framework.dart"
      });
    },
    get C1243() {
      return C1243 = dart.const({
        __proto__: assertions.PartialStackFrame.prototype,
        [PartialStackFrame_method]: "mount",
        [PartialStackFrame_className]: "SingleChildRenderObjectElement",
        [PartialStackFrame_package]: "package:flutter/src/widgets/framework.dart"
      });
    },
    get C1244() {
      return C1244 = dart.const({
        __proto__: assertions.PartialStackFrame.prototype,
        [PartialStackFrame_method]: "performRebuild",
        [PartialStackFrame_className]: "StatefulElement",
        [PartialStackFrame_package]: "package:flutter/src/widgets/framework.dart"
      });
    },
    get C1246() {
      return C1246 = dart.constList([C1236 || CT.C1236, C1237 || CT.C1237, C1239 || CT.C1239, C1238 || CT.C1238, C1240 || CT.C1240, C1241 || CT.C1241], PartialStackFrameL());
    },
    get C1245() {
      return C1245 = dart.const({
        __proto__: assertions.RepetitiveStackFrameFilter.prototype,
        [RepetitiveStackFrameFilter_replacement]: "...     Normal element mounting",
        [RepetitiveStackFrameFilter_frames]: C1246 || CT.C1246
      });
    },
    get C1248() {
      return C1248 = dart.constList([C1237 || CT.C1237, C1239 || CT.C1239, C1238 || CT.C1238, C1240 || CT.C1240, C1241 || CT.C1241], PartialStackFrameL());
    },
    get C1247() {
      return C1247 = dart.const({
        __proto__: assertions.RepetitiveStackFrameFilter.prototype,
        [RepetitiveStackFrameFilter_replacement]: "...     Normal element mounting",
        [RepetitiveStackFrameFilter_frames]: C1248 || CT.C1248
      });
    },
    get C1250() {
      return C1250 = dart.constList([C1236 || CT.C1236, C1237 || CT.C1237, C1239 || CT.C1239, C1244 || CT.C1244, C1238 || CT.C1238, C1240 || CT.C1240, C1242 || CT.C1242, C1241 || CT.C1241], PartialStackFrameL());
    },
    get C1249() {
      return C1249 = dart.const({
        __proto__: assertions.RepetitiveStackFrameFilter.prototype,
        [RepetitiveStackFrameFilter_replacement]: "...     Normal element mounting",
        [RepetitiveStackFrameFilter_frames]: C1250 || CT.C1250
      });
    },
    get C1252() {
      return C1252 = dart.constList([C1237 || CT.C1237, C1239 || CT.C1239, C1244 || CT.C1244, C1238 || CT.C1238, C1240 || CT.C1240, C1242 || CT.C1242, C1241 || CT.C1241], PartialStackFrameL());
    },
    get C1251() {
      return C1251 = dart.const({
        __proto__: assertions.RepetitiveStackFrameFilter.prototype,
        [RepetitiveStackFrameFilter_replacement]: "...     Normal element mounting",
        [RepetitiveStackFrameFilter_frames]: C1252 || CT.C1252
      });
    },
    get C1254() {
      return C1254 = dart.constList([C1236 || CT.C1236, C1237 || CT.C1237, C1243 || CT.C1243], PartialStackFrameL());
    },
    get C1253() {
      return C1253 = dart.const({
        __proto__: assertions.RepetitiveStackFrameFilter.prototype,
        [RepetitiveStackFrameFilter_replacement]: "...     Normal element mounting",
        [RepetitiveStackFrameFilter_frames]: C1254 || CT.C1254
      });
    },
    get C1256() {
      return C1256 = dart.constList([C1237 || CT.C1237, C1243 || CT.C1243], PartialStackFrameL());
    },
    get C1255() {
      return C1255 = dart.const({
        __proto__: assertions.RepetitiveStackFrameFilter.prototype,
        [RepetitiveStackFrameFilter_replacement]: "...     Normal element mounting",
        [RepetitiveStackFrameFilter_frames]: C1256 || CT.C1256
      });
    },
    get C1259() {
      return C1259 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 7,
        [_Location_line]: 957,
        [_Location_file]: null
      });
    },
    get C1260() {
      return C1260 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debugShortDescription",
        [_Location_column]: 7,
        [_Location_line]: 958,
        [_Location_file]: null
      });
    },
    get C1258() {
      return C1258 = dart.constList([C1259 || CT.C1259, C1260 || CT.C1260, C1059 || CT.C1059], _LocationL());
    },
    get C1257() {
      return C1257 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1258 || CT.C1258,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 956,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/binding.dart"
      });
    },
    get C1261() {
      return C1261 = dart.const({
        __proto__: core.Object.prototype
      });
    },
    get C1262() {
      return C1262 = dart.const({
        __proto__: ui.BlendMode.prototype,
        [_name]: "BlendMode.modulate",
        index: 13
      });
    },
    get C1264() {
      return C1264 = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 0,
        [Radius_x]: 0
      });
    },
    get C1263() {
      return C1263 = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C1264 || CT.C1264,
        [BorderRadius_bottomLeft]: C1264 || CT.C1264,
        [BorderRadius_topRight]: C1264 || CT.C1264,
        [BorderRadius_topLeft]: C1264 || CT.C1264
      });
    },
    get C1265() {
      return C1265 = dart.const({
        __proto__: ui.Clip.prototype,
        [_name]: "Clip.antiAlias",
        index: 2
      });
    },
    get C1268() {
      return C1268 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipper",
        [_Location_column]: 11,
        [_Location_line]: 860,
        [_Location_file]: null
      });
    },
    get C1269() {
      return C1269 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 11,
        [_Location_line]: 864,
        [_Location_file]: null
      });
    },
    get C1270() {
      return C1270 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 865,
        [_Location_file]: null
      });
    },
    get C1267() {
      return C1267 = dart.constList([C1268 || CT.C1268, C1269 || CT.C1269, C1270 || CT.C1270], _LocationL());
    },
    get C1266() {
      return C1266 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1267 || CT.C1267,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 859,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/basic.dart"
      });
    },
    get C1273() {
      return C1273 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 857,
        [_Location_file]: null
      });
    },
    get C1274() {
      return C1274 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 858,
        [_Location_file]: null
      });
    },
    get C1272() {
      return C1272 = dart.constList([C1273 || CT.C1273, C1274 || CT.C1274], _LocationL());
    },
    get C1271() {
      return C1271 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1272 || CT.C1272,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 856,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/basic.dart"
      });
    },
    get C1275() {
      return C1275 = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [_name$24]: "BoxShape.rectangle",
        index: 0
      });
    },
    get C1276() {
      return C1276 = dart.const({
        __proto__: alignment$.Alignment.prototype,
        [Alignment_y]: -1,
        [Alignment_x]: -1
      });
    },
    get C1277() {
      return C1277 = dart.const({
        __proto__: box_fit.BoxFit.prototype,
        [_name$25]: "BoxFit.contain",
        index: 1
      });
    },
    get C1278() {
      return C1278 = dart.const({
        __proto__: alignment$.AlignmentDirectional.prototype,
        [AlignmentDirectional_y]: -1,
        [AlignmentDirectional_start]: -1
      });
    },
    get C1279() {
      return C1279 = dart.const({
        __proto__: stack.StackFit.prototype,
        [_name$26]: "StackFit.loose",
        index: 0
      });
    },
    get C1280() {
      return C1280 = dart.const({
        __proto__: stack.Overflow.prototype,
        [_name$26]: "Overflow.clip",
        index: 1
      });
    },
    get C1283() {
      return C1283 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 7,
        [_Location_line]: 4026,
        [_Location_file]: null
      });
    },
    get C1284() {
      return C1284 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "start",
        [_Location_column]: 7,
        [_Location_line]: 4027,
        [_Location_file]: null
      });
    },
    get C1285() {
      return C1285 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 7,
        [_Location_line]: 4028,
        [_Location_file]: null
      });
    },
    get C1286() {
      return C1286 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "end",
        [_Location_column]: 7,
        [_Location_line]: 4029,
        [_Location_file]: null
      });
    },
    get C1287() {
      return C1287 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 7,
        [_Location_line]: 4030,
        [_Location_file]: null
      });
    },
    get C1288() {
      return C1288 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 4031,
        [_Location_file]: null
      });
    },
    get C1289() {
      return C1289 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 4032,
        [_Location_file]: null
      });
    },
    get C1290() {
      return C1290 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 4033,
        [_Location_file]: null
      });
    },
    get C1282() {
      return C1282 = dart.constList([C1283 || CT.C1283, C1284 || CT.C1284, C1285 || CT.C1285, C1286 || CT.C1286, C1287 || CT.C1287, C1288 || CT.C1288, C1289 || CT.C1289, C1290 || CT.C1290], _LocationL());
    },
    get C1281() {
      return C1281 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1282 || CT.C1282,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 4025,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/basic.dart"
      });
    },
    get C1291() {
      return C1291 = dart.const({
        __proto__: flex$.MainAxisAlignment.prototype,
        [_name$27]: "MainAxisAlignment.start",
        index: 0
      });
    },
    get C1292() {
      return C1292 = dart.const({
        __proto__: flex$.MainAxisSize.prototype,
        [_name$27]: "MainAxisSize.max",
        index: 1
      });
    },
    get C1293() {
      return C1293 = dart.const({
        __proto__: flex$.CrossAxisAlignment.prototype,
        [_name$27]: "CrossAxisAlignment.center",
        index: 2
      });
    },
    get C1294() {
      return C1294 = dart.const({
        __proto__: basic_types.VerticalDirection.prototype,
        [_name$6]: "VerticalDirection.down",
        index: 1
      });
    },
    get C1295() {
      return C1295 = dart.const({
        __proto__: flex$.FlexFit.prototype,
        [_name$27]: "FlexFit.loose",
        index: 1
      });
    },
    get C1296() {
      return C1296 = dart.const({
        __proto__: wrap.WrapAlignment.prototype,
        [_name$28]: "WrapAlignment.start",
        index: 0
      });
    },
    get C1297() {
      return C1297 = dart.const({
        __proto__: wrap.WrapCrossAlignment.prototype,
        [_name$28]: "WrapCrossAlignment.start",
        index: 0
      });
    },
    get C1300() {
      return C1300 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "tagForChildren",
        [_Location_column]: 11,
        [_Location_line]: 5464,
        [_Location_file]: null
      });
    },
    get C1301() {
      return C1301 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 5465,
        [_Location_file]: null
      });
    },
    get C1299() {
      return C1299 = dart.constList([C1300 || CT.C1300, C1301 || CT.C1301], _LocationL());
    },
    get C1298() {
      return C1298 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1299 || CT.C1299,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 5463,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/basic.dart"
      });
    },
    get C1302() {
      return C1302 = dart.const({
        __proto__: proxy_box.HitTestBehavior.prototype,
        [_name$7]: "HitTestBehavior.deferToChild",
        index: 0
      });
    },
    get C1303() {
      return C1303 = dart.const({
        __proto__: mouse_cursor._DeferringMouseCursor.prototype
      });
    },
    get C1306() {
      return C1306 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "owner",
        [_Location_column]: 28,
        [_Location_line]: 6499,
        [_Location_file]: null
      });
    },
    get C1305() {
      return C1305 = dart.constList([C1306 || CT.C1306], _LocationL());
    },
    get C1304() {
      return C1304 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1305 || CT.C1305,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 6499,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/basic.dart"
      });
    },
    get C1309() {
      return C1309 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 74,
        [_Location_line]: 6603,
        [_Location_file]: null
      });
    },
    get C1310() {
      return C1310 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "childIndex",
        [_Location_column]: 79,
        [_Location_line]: 6603,
        [_Location_file]: null
      });
    },
    get C1308() {
      return C1308 = dart.constList([C1309 || CT.C1309, C1310 || CT.C1310], _LocationL());
    },
    get C1307() {
      return C1307 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1308 || CT.C1308,
        [_Location_name]: null,
        [_Location_column]: 62,
        [_Location_line]: 6603,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/basic.dart"
      });
    },
    get C1313() {
      return C1313 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 49,
        [_Location_line]: 7439,
        [_Location_file]: null
      });
    },
    get C1314() {
      return C1314 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "childIndex",
        [_Location_column]: 55,
        [_Location_line]: 7439,
        [_Location_file]: null
      });
    },
    get C1312() {
      return C1312 = dart.constList([C1313 || CT.C1313, C1314 || CT.C1314], _LocationL());
    },
    get C1311() {
      return C1311 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1312 || CT.C1312,
        [_Location_name]: null,
        [_Location_column]: 44,
        [_Location_line]: 7439,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/basic.dart"
      });
    },
    get C1315() {
      return C1315 = dart.const({
        __proto__: actions$.ActionDispatcher.prototype
      });
    },
    get C1318() {
      return C1318 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actions",
        [_Location_column]: 7,
        [_Location_line]: 755,
        [_Location_file]: null
      });
    },
    get C1319() {
      return C1319 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dispatcher",
        [_Location_column]: 7,
        [_Location_line]: 756,
        [_Location_file]: null
      });
    },
    get C1320() {
      return C1320 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "rebuildKey",
        [_Location_column]: 7,
        [_Location_line]: 757,
        [_Location_file]: null
      });
    },
    get C1321() {
      return C1321 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 758,
        [_Location_file]: null
      });
    },
    get C1317() {
      return C1317 = dart.constList([C1318 || CT.C1318, C1319 || CT.C1319, C1320 || CT.C1320, C1321 || CT.C1321], _LocationL());
    },
    get C1316() {
      return C1316 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1317 || CT.C1317,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 754,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/actions.dart"
      });
    },
    get C1324() {
      return C1324 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 9,
        [_Location_line]: 1154,
        [_Location_file]: null
      });
    },
    get C1325() {
      return C1325 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 9,
        [_Location_line]: 1155,
        [_Location_file]: null
      });
    },
    get C1326() {
      return C1326 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canRequestFocus",
        [_Location_column]: 9,
        [_Location_line]: 1156,
        [_Location_file]: null
      });
    },
    get C1327() {
      return C1327 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onFocusChange",
        [_Location_column]: 9,
        [_Location_line]: 1157,
        [_Location_file]: null
      });
    },
    get C1328() {
      return C1328 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1158,
        [_Location_file]: null
      });
    },
    get C1323() {
      return C1323 = dart.constList([C1324 || CT.C1324, C1325 || CT.C1325, C1326 || CT.C1326, C1327 || CT.C1327, C1328 || CT.C1328], _LocationL());
    },
    get C1322() {
      return C1322 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1323 || CT.C1323,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1153,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/actions.dart"
      });
    },
    get C1331() {
      return C1331 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 1149,
        [_Location_file]: null
      });
    },
    get C1332() {
      return C1332 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onEnter",
        [_Location_column]: 7,
        [_Location_line]: 1150,
        [_Location_file]: null
      });
    },
    get C1333() {
      return C1333 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onExit",
        [_Location_column]: 7,
        [_Location_line]: 1151,
        [_Location_file]: null
      });
    },
    get C1334() {
      return C1334 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursor",
        [_Location_column]: 7,
        [_Location_line]: 1152,
        [_Location_file]: null
      });
    },
    get C1335() {
      return C1335 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1153,
        [_Location_file]: null
      });
    },
    get C1330() {
      return C1330 = dart.constList([C1331 || CT.C1331, C1332 || CT.C1332, C1333 || CT.C1333, C1334 || CT.C1334, C1335 || CT.C1335], _LocationL());
    },
    get C1329() {
      return C1329 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1330 || CT.C1330,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 1148,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/actions.dart"
      });
    },
    get C1338() {
      return C1338 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actions",
        [_Location_column]: 23,
        [_Location_line]: 1162,
        [_Location_file]: null
      });
    },
    get C1339() {
      return C1339 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 49,
        [_Location_line]: 1162,
        [_Location_file]: null
      });
    },
    get C1337() {
      return C1337 = dart.constList([C1338 || CT.C1338, C1339 || CT.C1339], _LocationL());
    },
    get C1336() {
      return C1336 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1337 || CT.C1337,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 1162,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/actions.dart"
      });
    },
    get C1342() {
      return C1342 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shortcuts",
        [_Location_column]: 25,
        [_Location_line]: 1165,
        [_Location_file]: null
      });
    },
    get C1343() {
      return C1343 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 55,
        [_Location_line]: 1165,
        [_Location_file]: null
      });
    },
    get C1341() {
      return C1341 = dart.constList([C1342 || CT.C1342, C1343 || CT.C1343], _LocationL());
    },
    get C1340() {
      return C1340 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1341 || CT.C1341,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 1165,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/widgets/actions.dart"
      });
    },
    get C1344() {
      return C1344 = dart.const({
        __proto__: actions$.DoNothingAndStopPropagationIntent.prototype
      });
    }
  }, false);
  var _name = dart.privateName(ui, "_name");
  var C0;
  var child$ = dart.privateName(widget_span, "WidgetSpan.child");
  widget_span.WidgetSpan = class WidgetSpan extends placeholder_span.PlaceholderSpan {
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    build(builder, opts) {
      if (builder == null) dart.nullFailed(L0, 101, 34, "builder");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : 1;
      if (textScaleFactor == null) dart.nullFailed(L0, 101, 52, "textScaleFactor");
      let dimensions = opts && 'dimensions' in opts ? opts.dimensions : null;
      if (!dart.test(this.debugAssertIsValid())) dart.assertFailed(null, L0, 102, 12, "debugAssertIsValid()");
      if (!(dimensions != null)) dart.assertFailed(null, L0, 103, 12, "dimensions != null");
      let hasStyle = this.style != null;
      if (hasStyle) {
        builder.pushStyle(dart.nullCheck(this.style).getTextStyle({textScaleFactor: textScaleFactor}));
      }
      if (!(dart.notNull(builder.placeholderCount) < dart.notNull(dart.nullCheck(dimensions)[$length]))) dart.assertFailed(null, L0, 108, 12, "builder.placeholderCount < dimensions!.length");
      let currentDimensions = dart.nullCheck(dimensions)[$_get](builder.placeholderCount);
      builder.addPlaceholder(currentDimensions.size.width, currentDimensions.size.height, this.alignment, {scale: textScaleFactor, baseline: currentDimensions.baseline, baselineOffset: currentDimensions.baselineOffset});
      if (hasStyle) {
        builder.pop();
      }
    }
    visitChildren(visitor) {
      if (visitor == null) dart.nullFailed(L0, 125, 40, "visitor");
      return visitor(this);
    }
    getSpanForPositionVisitor(position, offset) {
      if (position == null) dart.nullFailed(L0, 130, 54, "position");
      if (offset == null) dart.nullFailed(L0, 130, 76, "offset");
      if (position.offset == offset.value) {
        return this;
      }
      offset.increment(1);
      return null;
    }
    codeUnitAtVisitor(index, offset) {
      if (index == null) dart.nullFailed(L0, 139, 30, "index");
      if (offset == null) dart.nullFailed(L0, 139, 49, "offset");
      return null;
    }
    compareTo(other) {
      if (other == null) dart.nullFailed(L0, 144, 41, "other");
      if (this === other) return basic_types.RenderComparison.identical;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return basic_types.RenderComparison.layout;
      if (!(this.style == null)[$_equals](other.style == null)) return basic_types.RenderComparison.layout;
      let typedOther = widget_span.WidgetSpan.as(other);
      if (!dart.equals(this.child, typedOther.child) || !dart.equals(this.alignment, typedOther.alignment)) {
        return basic_types.RenderComparison.layout;
      }
      let result = basic_types.RenderComparison.identical;
      if (this.style != null) {
        let candidate = dart.nullCheck(this.style).compareTo(dart.nullCheck(other.style));
        if (dart.notNull(candidate.index) > dart.notNull(result.index)) result = candidate;
        if (dart.equals(result, basic_types.RenderComparison.layout)) return result;
      }
      return result;
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      if (!super._equals(other)) return false;
      return widget_span.WidgetSpan.is(other) && dart.equals(other.child, this.child) && dart.equals(other.alignment, this.alignment) && dart.equals(other.baseline, this.baseline);
    }
    get hashCode() {
      return ui.hashValues(super.hashCode, this.child, this.alignment, this.baseline);
    }
    getSpanForPosition(position) {
      if (position == null) dart.nullFailed(L0, 185, 47, "position");
      if (!dart.test(this.debugAssertIsValid())) dart.assertFailed(null, L0, 186, 12, "debugAssertIsValid()");
      return null;
    }
    debugAssertIsValid() {
      return true;
    }
  };
  (widget_span.WidgetSpan.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L0, 73, 19, "child");
    let alignment = opts && 'alignment' in opts ? opts.alignment : C0 || CT.C0;
    if (alignment == null) dart.nullFailed(L0, 74, 29, "alignment");
    let baseline = opts && 'baseline' in opts ? opts.baseline : null;
    let style = opts && 'style' in opts ? opts.style : null;
    this[child$] = child;
    if (!(child != null)) dart.assertFailed(null, L0, 77, 15, "child != null");
    if (!(baseline != null || !(alignment == ui.PlaceholderAlignment.aboveBaseline || alignment == ui.PlaceholderAlignment.belowBaseline || alignment == ui.PlaceholderAlignment.baseline))) dart.assertFailed(null, L0, 78, 15, "baseline != null || !(\r\n         identical(alignment, ui.PlaceholderAlignment.aboveBaseline) ||\r\n         identical(alignment, ui.PlaceholderAlignment.belowBaseline) ||\r\n         identical(alignment, ui.PlaceholderAlignment.baseline)\r\n       )");
    widget_span.WidgetSpan.__proto__.new.call(this, {alignment: alignment, baseline: baseline, style: style});
    ;
  }).prototype = widget_span.WidgetSpan.prototype;
  dart.addTypeTests(widget_span.WidgetSpan);
  dart.addTypeCaches(widget_span.WidgetSpan);
  dart.setMethodSignature(widget_span.WidgetSpan, () => ({
    __proto__: dart.getMethods(widget_span.WidgetSpan.__proto__),
    build: dart.fnType(dart.void, [ui.ParagraphBuilder], {dimensions: dart.nullable(core.List$(text_painter.PlaceholderDimensions)), textScaleFactor: core.double}, {}),
    visitChildren: dart.fnType(core.bool, [dart.fnType(core.bool, [inline_span.InlineSpan])]),
    getSpanForPositionVisitor: dart.fnType(dart.nullable(inline_span.InlineSpan), [ui.TextPosition, inline_span.Accumulator]),
    codeUnitAtVisitor: dart.fnType(dart.nullable(core.int), [core.int, inline_span.Accumulator]),
    compareTo: dart.fnType(basic_types.RenderComparison, [inline_span.InlineSpan])
  }));
  dart.setLibraryUri(widget_span.WidgetSpan, L1);
  dart.setFieldSignature(widget_span.WidgetSpan, () => ({
    __proto__: dart.getFields(widget_span.WidgetSpan.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  dart.defineExtensionMethods(widget_span.WidgetSpan, ['_equals']);
  dart.defineExtensionAccessors(widget_span.WidgetSpan, ['hashCode']);
  var _layer$ = dart.privateName(widget_inspector, "_layer");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  var C1;
  widget_inspector._ProxyLayer = class _ProxyLayer extends layer.Layer {
    addToScene(builder, layerOffset = C1 || CT.C1) {
      if (builder == null) dart.nullFailed(L2, 55, 35, "builder");
      if (layerOffset == null) dart.nullFailed(L2, 55, 53, "layerOffset");
      this[_layer$].addToScene(builder, layerOffset);
    }
    findAnnotations(S, result, localPosition, opts) {
      if (result == null) dart.nullFailed(L2, 62, 25, "result");
      if (localPosition == null) dart.nullFailed(L2, 63, 12, "localPosition");
      let onlyFirst = opts && 'onlyFirst' in opts ? opts.onlyFirst : null;
      if (onlyFirst == null) dart.nullFailed(L2, 64, 19, "onlyFirst");
      return this[_layer$].findAnnotations(S, result, localPosition, {onlyFirst: onlyFirst});
    }
  };
  (widget_inspector._ProxyLayer.new = function(_layer) {
    if (_layer == null) dart.nullFailed(L2, 50, 20, "_layer");
    this[_layer$] = _layer;
    widget_inspector._ProxyLayer.__proto__.new.call(this);
    ;
  }).prototype = widget_inspector._ProxyLayer.prototype;
  dart.addTypeTests(widget_inspector._ProxyLayer);
  dart.addTypeCaches(widget_inspector._ProxyLayer);
  dart.setMethodSignature(widget_inspector._ProxyLayer, () => ({
    __proto__: dart.getMethods(widget_inspector._ProxyLayer.__proto__),
    addToScene: dart.fnType(dart.void, [ui.SceneBuilder], [ui.Offset]),
    findAnnotations: dart.gFnType(S => [core.bool, [layer.AnnotationResult$(S), ui.Offset], {}, {onlyFirst: core.bool}], S => [core.Object])
  }));
  dart.setLibraryUri(widget_inspector._ProxyLayer, L3);
  dart.setFieldSignature(widget_inspector._ProxyLayer, () => ({
    __proto__: dart.getFields(widget_inspector._ProxyLayer.__proto__),
    [_layer$]: dart.finalFieldType(layer.Layer)
  }));
  var _main = dart.privateName(widget_inspector, "_main");
  var _screenshot = dart.privateName(widget_inspector, "_screenshot");
  var C2;
  widget_inspector._MulticastCanvas = class _MulticastCanvas extends core.Object {
    clipPath(path, opts) {
      if (path == null) dart.nullFailed(L2, 86, 22, "path");
      let doAntiAlias = opts && 'doAntiAlias' in opts ? opts.doAntiAlias : true;
      if (doAntiAlias == null) dart.nullFailed(L2, 86, 35, "doAntiAlias");
      this[_main].clipPath(path, {doAntiAlias: doAntiAlias});
      this[_screenshot].clipPath(path, {doAntiAlias: doAntiAlias});
    }
    clipRRect(rrect, opts) {
      if (rrect == null) dart.nullFailed(L2, 92, 24, "rrect");
      let doAntiAlias = opts && 'doAntiAlias' in opts ? opts.doAntiAlias : true;
      if (doAntiAlias == null) dart.nullFailed(L2, 92, 38, "doAntiAlias");
      this[_main].clipRRect(rrect, {doAntiAlias: doAntiAlias});
      this[_screenshot].clipRRect(rrect, {doAntiAlias: doAntiAlias});
    }
    clipRect(rect, opts) {
      if (rect == null) dart.nullFailed(L2, 98, 22, "rect");
      let clipOp = opts && 'clipOp' in opts ? opts.clipOp : C2 || CT.C2;
      if (clipOp == null) dart.nullFailed(L2, 98, 40, "clipOp");
      let doAntiAlias = opts && 'doAntiAlias' in opts ? opts.doAntiAlias : true;
      if (doAntiAlias == null) dart.nullFailed(L2, 98, 75, "doAntiAlias");
      this[_main].clipRect(rect, {clipOp: clipOp, doAntiAlias: doAntiAlias});
      this[_screenshot].clipRect(rect, {clipOp: clipOp, doAntiAlias: doAntiAlias});
    }
    drawArc(rect, startAngle, sweepAngle, useCenter, paint) {
      if (rect == null) dart.nullFailed(L2, 104, 21, "rect");
      if (startAngle == null) dart.nullFailed(L2, 104, 34, "startAngle");
      if (sweepAngle == null) dart.nullFailed(L2, 104, 53, "sweepAngle");
      if (useCenter == null) dart.nullFailed(L2, 104, 70, "useCenter");
      if (paint == null) dart.nullFailed(L2, 104, 87, "paint");
      this[_main].drawArc(rect, startAngle, sweepAngle, useCenter, paint);
      this[_screenshot].drawArc(rect, startAngle, sweepAngle, useCenter, paint);
    }
    drawAtlas(atlas, transforms, rects, colors, blendMode, cullRect, paint) {
      if (atlas == null) dart.nullFailed(L2, 110, 27, "atlas");
      if (transforms == null) dart.nullFailed(L2, 110, 52, "transforms");
      if (rects == null) dart.nullFailed(L2, 110, 75, "rects");
      if (paint == null) dart.nullFailed(L2, 110, 147, "paint");
      this[_main].drawAtlas(atlas, transforms, rects, colors, blendMode, cullRect, paint);
      this[_screenshot].drawAtlas(atlas, transforms, rects, colors, blendMode, cullRect, paint);
    }
    drawCircle(c, radius, paint) {
      if (c == null) dart.nullFailed(L2, 116, 26, "c");
      if (radius == null) dart.nullFailed(L2, 116, 36, "radius");
      if (paint == null) dart.nullFailed(L2, 116, 50, "paint");
      this[_main].drawCircle(c, radius, paint);
      this[_screenshot].drawCircle(c, radius, paint);
    }
    drawColor(color, blendMode) {
      if (color == null) dart.nullFailed(L2, 122, 24, "color");
      if (blendMode == null) dart.nullFailed(L2, 122, 41, "blendMode");
      this[_main].drawColor(color, blendMode);
      this[_screenshot].drawColor(color, blendMode);
    }
    drawDRRect(outer, inner, paint) {
      if (outer == null) dart.nullFailed(L2, 128, 25, "outer");
      if (inner == null) dart.nullFailed(L2, 128, 38, "inner");
      if (paint == null) dart.nullFailed(L2, 128, 51, "paint");
      this[_main].drawDRRect(outer, inner, paint);
      this[_screenshot].drawDRRect(outer, inner, paint);
    }
    drawImage(image, p, paint) {
      if (image == null) dart.nullFailed(L2, 134, 27, "image");
      if (p == null) dart.nullFailed(L2, 134, 41, "p");
      if (paint == null) dart.nullFailed(L2, 134, 50, "paint");
      this[_main].drawImage(image, p, paint);
      this[_screenshot].drawImage(image, p, paint);
    }
    drawImageNine(image, center, dst, paint) {
      if (image == null) dart.nullFailed(L2, 140, 31, "image");
      if (center == null) dart.nullFailed(L2, 140, 43, "center");
      if (dst == null) dart.nullFailed(L2, 140, 56, "dst");
      if (paint == null) dart.nullFailed(L2, 140, 67, "paint");
      this[_main].drawImageNine(image, center, dst, paint);
      this[_screenshot].drawImageNine(image, center, dst, paint);
    }
    drawImageRect(image, src, dst, paint) {
      if (image == null) dart.nullFailed(L2, 146, 31, "image");
      if (src == null) dart.nullFailed(L2, 146, 43, "src");
      if (dst == null) dart.nullFailed(L2, 146, 53, "dst");
      if (paint == null) dart.nullFailed(L2, 146, 64, "paint");
      this[_main].drawImageRect(image, src, dst, paint);
      this[_screenshot].drawImageRect(image, src, dst, paint);
    }
    drawLine(p1, p2, paint) {
      if (p1 == null) dart.nullFailed(L2, 152, 24, "p1");
      if (p2 == null) dart.nullFailed(L2, 152, 35, "p2");
      if (paint == null) dart.nullFailed(L2, 152, 45, "paint");
      this[_main].drawLine(p1, p2, paint);
      this[_screenshot].drawLine(p1, p2, paint);
    }
    drawOval(rect, paint) {
      if (rect == null) dart.nullFailed(L2, 158, 22, "rect");
      if (paint == null) dart.nullFailed(L2, 158, 34, "paint");
      this[_main].drawOval(rect, paint);
      this[_screenshot].drawOval(rect, paint);
    }
    drawPaint(paint) {
      if (paint == null) dart.nullFailed(L2, 164, 24, "paint");
      this[_main].drawPaint(paint);
      this[_screenshot].drawPaint(paint);
    }
    drawParagraph(paragraph, offset) {
      if (paragraph == null) dart.nullFailed(L2, 170, 35, "paragraph");
      if (offset == null) dart.nullFailed(L2, 170, 53, "offset");
      this[_main].drawParagraph(paragraph, offset);
      this[_screenshot].drawParagraph(paragraph, offset);
    }
    drawPath(path, paint) {
      if (path == null) dart.nullFailed(L2, 176, 22, "path");
      if (paint == null) dart.nullFailed(L2, 176, 34, "paint");
      this[_main].drawPath(path, paint);
      this[_screenshot].drawPath(path, paint);
    }
    drawPicture(picture) {
      if (picture == null) dart.nullFailed(L2, 182, 31, "picture");
      this[_main].drawPicture(picture);
      this[_screenshot].drawPicture(picture);
    }
    drawPoints(pointMode, points, paint) {
      if (pointMode == null) dart.nullFailed(L2, 188, 32, "pointMode");
      if (points == null) dart.nullFailed(L2, 188, 56, "points");
      if (paint == null) dart.nullFailed(L2, 188, 70, "paint");
      this[_main].drawPoints(pointMode, points, paint);
      this[_screenshot].drawPoints(pointMode, points, paint);
    }
    drawRRect(rrect, paint) {
      if (rrect == null) dart.nullFailed(L2, 194, 24, "rrect");
      if (paint == null) dart.nullFailed(L2, 194, 37, "paint");
      this[_main].drawRRect(rrect, paint);
      this[_screenshot].drawRRect(rrect, paint);
    }
    drawRawAtlas(atlas, rstTransforms, rects, colors, blendMode, cullRect, paint) {
      if (atlas == null) dart.nullFailed(L2, 200, 30, "atlas");
      if (rstTransforms == null) dart.nullFailed(L2, 200, 49, "rstTransforms");
      if (rects == null) dart.nullFailed(L2, 200, 76, "rects");
      if (paint == null) dart.nullFailed(L2, 200, 146, "paint");
      this[_main].drawRawAtlas(atlas, rstTransforms, rects, colors, blendMode, cullRect, paint);
      this[_screenshot].drawRawAtlas(atlas, rstTransforms, rects, colors, blendMode, cullRect, paint);
    }
    drawRawPoints(pointMode, points, paint) {
      if (pointMode == null) dart.nullFailed(L2, 206, 35, "pointMode");
      if (points == null) dart.nullFailed(L2, 206, 58, "points");
      if (paint == null) dart.nullFailed(L2, 206, 72, "paint");
      this[_main].drawRawPoints(pointMode, points, paint);
      this[_screenshot].drawRawPoints(pointMode, points, paint);
    }
    drawRect(rect, paint) {
      if (rect == null) dart.nullFailed(L2, 212, 22, "rect");
      if (paint == null) dart.nullFailed(L2, 212, 34, "paint");
      this[_main].drawRect(rect, paint);
      this[_screenshot].drawRect(rect, paint);
    }
    drawShadow(path, color, elevation, transparentOccluder) {
      if (path == null) dart.nullFailed(L2, 218, 24, "path");
      if (color == null) dart.nullFailed(L2, 218, 36, "color");
      if (elevation == null) dart.nullFailed(L2, 218, 50, "elevation");
      if (transparentOccluder == null) dart.nullFailed(L2, 218, 66, "transparentOccluder");
      this[_main].drawShadow(path, color, elevation, transparentOccluder);
      this[_screenshot].drawShadow(path, color, elevation, transparentOccluder);
    }
    drawVertices(vertices, blendMode, paint) {
      if (vertices == null) dart.nullFailed(L2, 224, 33, "vertices");
      if (blendMode == null) dart.nullFailed(L2, 224, 53, "blendMode");
      if (paint == null) dart.nullFailed(L2, 224, 70, "paint");
      this[_main].drawVertices(vertices, blendMode, paint);
      this[_screenshot].drawVertices(vertices, blendMode, paint);
    }
    getSaveCount() {
      return this[_main].getSaveCount();
    }
    restore() {
      this[_main].restore();
      this[_screenshot].restore();
    }
    rotate(radians) {
      if (radians == null) dart.nullFailed(L2, 245, 22, "radians");
      this[_main].rotate(radians);
      this[_screenshot].rotate(radians);
    }
    save() {
      this[_main].save();
      this[_screenshot].save();
    }
    saveLayer(bounds, paint) {
      if (paint == null) dart.nullFailed(L2, 257, 38, "paint");
      this[_main].saveLayer(bounds, paint);
      this[_screenshot].saveLayer(bounds, paint);
    }
    scale(sx, sy = null) {
      if (sx == null) dart.nullFailed(L2, 263, 21, "sx");
      this[_main].scale(sx, sy);
      this[_screenshot].scale(sx, sy);
    }
    skew(sx, sy) {
      if (sx == null) dart.nullFailed(L2, 269, 20, "sx");
      if (sy == null) dart.nullFailed(L2, 269, 31, "sy");
      this[_main].skew(sx, sy);
      this[_screenshot].skew(sx, sy);
    }
    transform(matrix4) {
      if (matrix4 == null) dart.nullFailed(L2, 275, 30, "matrix4");
      this[_main].transform(matrix4);
      this[_screenshot].transform(matrix4);
    }
    translate(dx, dy) {
      if (dx == null) dart.nullFailed(L2, 281, 25, "dx");
      if (dy == null) dart.nullFailed(L2, 281, 36, "dy");
      this[_main].translate(dx, dy);
      this[_screenshot].translate(dx, dy);
    }
  };
  (widget_inspector._MulticastCanvas.new = function(opts) {
    let main = opts && 'main' in opts ? opts.main : null;
    if (main == null) dart.nullFailed(L2, 75, 21, "main");
    let screenshot = opts && 'screenshot' in opts ? opts.screenshot : null;
    if (screenshot == null) dart.nullFailed(L2, 76, 21, "screenshot");
    if (!(main != null)) dart.assertFailed(null, L2, 77, 15, "main != null");
    if (!(screenshot != null)) dart.assertFailed(null, L2, 78, 15, "screenshot != null");
    this[_main] = main;
    this[_screenshot] = screenshot;
    ;
  }).prototype = widget_inspector._MulticastCanvas.prototype;
  dart.addTypeTests(widget_inspector._MulticastCanvas);
  dart.addTypeCaches(widget_inspector._MulticastCanvas);
  widget_inspector._MulticastCanvas[dart.implements] = () => [ui.Canvas];
  dart.setMethodSignature(widget_inspector._MulticastCanvas, () => ({
    __proto__: dart.getMethods(widget_inspector._MulticastCanvas.__proto__),
    clipPath: dart.fnType(dart.void, [ui.Path], {doAntiAlias: core.bool}, {}),
    clipRRect: dart.fnType(dart.void, [ui.RRect], {doAntiAlias: core.bool}, {}),
    clipRect: dart.fnType(dart.void, [ui.Rect], {clipOp: ui.ClipOp, doAntiAlias: core.bool}, {}),
    drawArc: dart.fnType(dart.void, [ui.Rect, core.double, core.double, core.bool, ui.Paint]),
    drawAtlas: dart.fnType(dart.void, [ui.Image, core.List$(ui.RSTransform), core.List$(ui.Rect), dart.nullable(core.List$(ui.Color)), dart.nullable(ui.BlendMode), dart.nullable(ui.Rect), ui.Paint]),
    drawCircle: dart.fnType(dart.void, [ui.Offset, core.double, ui.Paint]),
    drawColor: dart.fnType(dart.void, [ui.Color, ui.BlendMode]),
    drawDRRect: dart.fnType(dart.void, [ui.RRect, ui.RRect, ui.Paint]),
    drawImage: dart.fnType(dart.void, [ui.Image, ui.Offset, ui.Paint]),
    drawImageNine: dart.fnType(dart.void, [ui.Image, ui.Rect, ui.Rect, ui.Paint]),
    drawImageRect: dart.fnType(dart.void, [ui.Image, ui.Rect, ui.Rect, ui.Paint]),
    drawLine: dart.fnType(dart.void, [ui.Offset, ui.Offset, ui.Paint]),
    drawOval: dart.fnType(dart.void, [ui.Rect, ui.Paint]),
    drawPaint: dart.fnType(dart.void, [ui.Paint]),
    drawParagraph: dart.fnType(dart.void, [ui.Paragraph, ui.Offset]),
    drawPath: dart.fnType(dart.void, [ui.Path, ui.Paint]),
    drawPicture: dart.fnType(dart.void, [ui.Picture]),
    drawPoints: dart.fnType(dart.void, [ui.PointMode, core.List$(ui.Offset), ui.Paint]),
    drawRRect: dart.fnType(dart.void, [ui.RRect, ui.Paint]),
    drawRawAtlas: dart.fnType(dart.void, [ui.Image, typed_data.Float32List, typed_data.Float32List, dart.nullable(typed_data.Int32List), dart.nullable(ui.BlendMode), dart.nullable(ui.Rect), ui.Paint]),
    drawRawPoints: dart.fnType(dart.void, [ui.PointMode, typed_data.Float32List, ui.Paint]),
    drawRect: dart.fnType(dart.void, [ui.Rect, ui.Paint]),
    drawShadow: dart.fnType(dart.void, [ui.Path, ui.Color, core.double, core.bool]),
    drawVertices: dart.fnType(dart.void, [ui.Vertices, ui.BlendMode, ui.Paint]),
    getSaveCount: dart.fnType(core.int, []),
    restore: dart.fnType(dart.void, []),
    rotate: dart.fnType(dart.void, [core.double]),
    save: dart.fnType(dart.void, []),
    saveLayer: dart.fnType(dart.void, [dart.nullable(ui.Rect), ui.Paint]),
    scale: dart.fnType(dart.void, [core.double], [dart.nullable(core.double)]),
    skew: dart.fnType(dart.void, [core.double, core.double]),
    transform: dart.fnType(dart.void, [typed_data.Float64List]),
    translate: dart.fnType(dart.void, [core.double, core.double])
  }));
  dart.setLibraryUri(widget_inspector._MulticastCanvas, L3);
  dart.setFieldSignature(widget_inspector._MulticastCanvas, () => ({
    __proto__: dart.getFields(widget_inspector._MulticastCanvas.__proto__),
    [_main]: dart.finalFieldType(ui.Canvas),
    [_screenshot]: dart.finalFieldType(ui.Canvas)
  }));
  widget_inspector._ScreenshotContainerLayer = class _ScreenshotContainerLayer extends layer.OffsetLayer {
    addToScene(builder, layerOffset = C1 || CT.C1) {
      if (builder == null) dart.nullFailed(L2, 320, 35, "builder");
      if (layerOffset == null) dart.nullFailed(L2, 320, 53, "layerOffset");
      this.addChildrenToScene(builder, layerOffset);
    }
  };
  (widget_inspector._ScreenshotContainerLayer.new = function() {
    widget_inspector._ScreenshotContainerLayer.__proto__.new.call(this);
    ;
  }).prototype = widget_inspector._ScreenshotContainerLayer.prototype;
  dart.addTypeTests(widget_inspector._ScreenshotContainerLayer);
  dart.addTypeCaches(widget_inspector._ScreenshotContainerLayer);
  dart.setLibraryUri(widget_inspector._ScreenshotContainerLayer, L3);
  widget_inspector._ScreenshotData = class _ScreenshotData extends core.Object {
    get screenshotOffset() {
      if (!dart.test(this.foundTarget)) dart.assertFailed(null, L2, 361, 12, "foundTarget");
      return this.containerLayer.offset;
    }
    set screenshotOffset(offset) {
      if (offset == null) dart.nullFailed(L2, 364, 31, "offset");
      this.containerLayer.offset = offset;
    }
  };
  (widget_inspector._ScreenshotData.new = function(opts) {
    let target = opts && 'target' in opts ? opts.target : null;
    if (target == null) dart.nullFailed(L2, 329, 19, "target");
    this.foundTarget = false;
    this.includeInScreenshot = false;
    this.includeInRegularContext = true;
    this.target = target;
    if (!(target != null)) dart.assertFailed(null, L2, 330, 15, "target != null");
    this.containerLayer = new widget_inspector._ScreenshotContainerLayer.new();
    ;
  }).prototype = widget_inspector._ScreenshotData.prototype;
  dart.addTypeTests(widget_inspector._ScreenshotData);
  dart.addTypeCaches(widget_inspector._ScreenshotData);
  dart.setGetterSignature(widget_inspector._ScreenshotData, () => ({
    __proto__: dart.getGetters(widget_inspector._ScreenshotData.__proto__),
    screenshotOffset: ui.Offset
  }));
  dart.setSetterSignature(widget_inspector._ScreenshotData, () => ({
    __proto__: dart.getSetters(widget_inspector._ScreenshotData.__proto__),
    screenshotOffset: ui.Offset
  }));
  dart.setLibraryUri(widget_inspector._ScreenshotData, L3);
  dart.setFieldSignature(widget_inspector._ScreenshotData, () => ({
    __proto__: dart.getFields(widget_inspector._ScreenshotData.__proto__),
    target: dart.finalFieldType(object$.RenderObject),
    containerLayer: dart.finalFieldType(layer.OffsetLayer),
    foundTarget: dart.fieldType(core.bool),
    includeInScreenshot: dart.fieldType(core.bool),
    includeInRegularContext: dart.fieldType(core.bool)
  }));
  var _screenshotCurrentLayer = dart.privateName(widget_inspector, "_screenshotCurrentLayer");
  var _screenshotRecorder = dart.privateName(widget_inspector, "_screenshotRecorder");
  var _screenshotCanvas = dart.privateName(widget_inspector, "_screenshotCanvas");
  var _multicastCanvas = dart.privateName(widget_inspector, "_multicastCanvas");
  var _data = dart.privateName(widget_inspector, "_data");
  var _startRecordingScreenshot = dart.privateName(widget_inspector, "_startRecordingScreenshot");
  var _isScreenshotRecording = dart.privateName(widget_inspector, "_isScreenshotRecording");
  var _stopRecordingScreenshotIfNeeded = dart.privateName(widget_inspector, "_stopRecordingScreenshotIfNeeded");
  widget_inspector._ScreenshotPaintingContext = class _ScreenshotPaintingContext extends object$.PaintingContext {
    get canvas() {
      if (dart.test(this[_data].includeInScreenshot)) {
        if (this[_screenshotCanvas] == null) {
          this[_startRecordingScreenshot]();
        }
        if (!(this[_screenshotCanvas] != null)) dart.assertFailed(null, L2, 401, 14, "_screenshotCanvas != null");
        return dart.test(this[_data].includeInRegularContext) ? dart.nullCheck(this[_multicastCanvas]) : dart.nullCheck(this[_screenshotCanvas]);
      } else {
        if (!dart.test(this[_data].includeInRegularContext)) dart.assertFailed(null, L2, 404, 14, "_data.includeInRegularContext");
        return super.canvas;
      }
    }
    get [_isScreenshotRecording]() {
      let hasScreenshotCanvas = this[_screenshotCanvas] != null;
      if (!dart.test(dart.fn(() => {
        if (hasScreenshotCanvas) {
          if (!(this[_screenshotCurrentLayer] != null)) dart.assertFailed(null, L2, 413, 16, "_screenshotCurrentLayer != null");
          if (!(this[_screenshotRecorder] != null)) dart.assertFailed(null, L2, 414, 16, "_screenshotRecorder != null");
          if (!(this[_screenshotCanvas] != null)) dart.assertFailed(null, L2, 415, 16, "_screenshotCanvas != null");
        } else {
          if (!(this[_screenshotCurrentLayer] == null)) dart.assertFailed(null, L2, 417, 16, "_screenshotCurrentLayer == null");
          if (!(this[_screenshotRecorder] == null)) dart.assertFailed(null, L2, 418, 16, "_screenshotRecorder == null");
          if (!(this[_screenshotCanvas] == null)) dart.assertFailed(null, L2, 419, 16, "_screenshotCanvas == null");
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L2, 411, 12, "() {\r\n      if (hasScreenshotCanvas) {\r\n        assert(_screenshotCurrentLayer != null);\r\n        assert(_screenshotRecorder != null);\r\n        assert(_screenshotCanvas != null);\r\n      } else {\r\n        assert(_screenshotCurrentLayer == null);\r\n        assert(_screenshotRecorder == null);\r\n        assert(_screenshotCanvas == null);\r\n      }\r\n      return true;\r\n    }()");
      return hasScreenshotCanvas;
    }
    [_startRecordingScreenshot]() {
      if (!dart.test(this[_data].includeInScreenshot)) dart.assertFailed(null, L2, 427, 12, "_data.includeInScreenshot");
      if (!!dart.test(this[_isScreenshotRecording])) dart.assertFailed(null, L2, 428, 12, "!_isScreenshotRecording");
      this[_screenshotCurrentLayer] = new layer.PictureLayer.new(this.estimatedBounds);
      this[_screenshotRecorder] = ui.PictureRecorder.new();
      this[_screenshotCanvas] = ui.Canvas.new(dart.nullCheck(this[_screenshotRecorder]));
      this[_data].containerLayer.append(dart.nullCheck(this[_screenshotCurrentLayer]));
      if (dart.test(this[_data].includeInRegularContext)) {
        this[_multicastCanvas] = new widget_inspector._MulticastCanvas.new({main: super.canvas, screenshot: dart.nullCheck(this[_screenshotCanvas])});
      } else {
        this[_multicastCanvas] = null;
      }
    }
    stopRecordingIfNeeded() {
      super.stopRecordingIfNeeded();
      this[_stopRecordingScreenshotIfNeeded]();
    }
    [_stopRecordingScreenshotIfNeeded]() {
      if (!dart.test(this[_isScreenshotRecording])) return;
      dart.nullCheck(this[_screenshotCurrentLayer]).picture = dart.nullCheck(this[_screenshotRecorder]).endRecording();
      this[_screenshotCurrentLayer] = null;
      this[_screenshotRecorder] = null;
      this[_multicastCanvas] = null;
      this[_screenshotCanvas] = null;
    }
    appendLayer(layer) {
      if (layer == null) dart.nullFailed(L2, 461, 26, "layer");
      if (dart.test(this[_data].includeInRegularContext)) {
        super.appendLayer(layer);
        if (dart.test(this[_data].includeInScreenshot)) {
          if (!!dart.test(this[_isScreenshotRecording])) dart.assertFailed(null, L2, 465, 16, "!_isScreenshotRecording");
          this[_data].containerLayer.append(new widget_inspector._ProxyLayer.new(layer));
        }
      } else {
        if (!!dart.test(this[_isScreenshotRecording])) dart.assertFailed(null, L2, 472, 14, "!_isScreenshotRecording");
        if (!dart.test(this[_data].includeInScreenshot)) dart.assertFailed(null, L2, 473, 14, "_data.includeInScreenshot");
        layer.remove();
        this[_data].containerLayer.append(layer);
        return;
      }
    }
    createChildContext(childLayer, bounds) {
      if (childLayer == null) dart.nullFailed(L2, 481, 53, "childLayer");
      if (bounds == null) dart.nullFailed(L2, 481, 70, "bounds");
      if (dart.test(this[_data].foundTarget)) {
        return super.createChildContext(childLayer, bounds);
      } else {
        return new widget_inspector._ScreenshotPaintingContext.new({containerLayer: childLayer, estimatedBounds: bounds, screenshotData: this[_data]});
      }
    }
    paintChild(child, offset) {
      if (child == null) dart.nullFailed(L2, 496, 32, "child");
      if (offset == null) dart.nullFailed(L2, 496, 46, "offset");
      let isScreenshotTarget = child == this[_data].target;
      if (isScreenshotTarget) {
        if (!!dart.test(this[_data].includeInScreenshot)) dart.assertFailed(null, L2, 499, 14, "!_data.includeInScreenshot");
        if (!!dart.test(this[_data].foundTarget)) dart.assertFailed(null, L2, 500, 14, "!_data.foundTarget");
        this[_data].foundTarget = true;
        this[_data].screenshotOffset = offset;
        this[_data].includeInScreenshot = true;
      }
      super.paintChild(child, offset);
      if (isScreenshotTarget) {
        this[_stopRecordingScreenshotIfNeeded]();
        this[_data].includeInScreenshot = false;
      }
    }
    static toImage(renderObject, renderBounds, opts) {
      if (renderObject == null) dart.nullFailed(L2, 540, 18, "renderObject");
      if (renderBounds == null) dart.nullFailed(L2, 541, 10, "renderBounds");
      let pixelRatio = opts && 'pixelRatio' in opts ? opts.pixelRatio : 1;
      if (pixelRatio == null) dart.nullFailed(L2, 542, 12, "pixelRatio");
      let debugPaint = opts && 'debugPaint' in opts ? opts.debugPaint : false;
      if (debugPaint == null) dart.nullFailed(L2, 543, 10, "debugPaint");
      let repaintBoundary = renderObject;
      while (repaintBoundary != null && !dart.test(repaintBoundary.isRepaintBoundary)) {
        repaintBoundary = object$.RenderObject.as(dart.nullCheck(repaintBoundary.parent));
      }
      if (!(repaintBoundary != null)) dart.assertFailed(null, L2, 549, 12, "repaintBoundary != null");
      let data = new widget_inspector._ScreenshotData.new({target: renderObject});
      let context = new widget_inspector._ScreenshotPaintingContext.new({containerLayer: dart.nullCheck(repaintBoundary.debugLayer), estimatedBounds: repaintBoundary.paintBounds, screenshotData: data});
      if (renderObject == repaintBoundary) {
        data.containerLayer.append(new widget_inspector._ProxyLayer.new(dart.nullCheck(repaintBoundary.debugLayer)));
        data.foundTarget = true;
        let offsetLayer = layer.OffsetLayer.as(dart.nullCheck(repaintBoundary.debugLayer));
        data.screenshotOffset = offsetLayer.offset;
      } else {
        object$.PaintingContext.debugInstrumentRepaintCompositedChild(repaintBoundary, {customContext: context});
      }
      if (dart.test(debugPaint) && !dart.test(debug.debugPaintSizeEnabled)) {
        data.includeInRegularContext = false;
        context.stopRecordingIfNeeded();
        if (!dart.test(data.foundTarget)) dart.assertFailed(null, L2, 582, 14, "data.foundTarget");
        data.includeInScreenshot = true;
        debug.debugPaintSizeEnabled = true;
        try {
          renderObject.debugPaint(context, data.screenshotOffset);
        } finally {
          debug.debugPaintSizeEnabled = false;
          context.stopRecordingIfNeeded();
        }
      }
      dart.nullCheck(repaintBoundary.debugLayer).buildScene(ui.SceneBuilder.new());
      return data.containerLayer.toImage(renderBounds, {pixelRatio: pixelRatio});
    }
  };
  (widget_inspector._ScreenshotPaintingContext.new = function(opts) {
    let containerLayer = opts && 'containerLayer' in opts ? opts.containerLayer : null;
    if (containerLayer == null) dart.nullFailed(L2, 381, 29, "containerLayer");
    let estimatedBounds = opts && 'estimatedBounds' in opts ? opts.estimatedBounds : null;
    if (estimatedBounds == null) dart.nullFailed(L2, 382, 19, "estimatedBounds");
    let screenshotData = opts && 'screenshotData' in opts ? opts.screenshotData : null;
    if (screenshotData == null) dart.nullFailed(L2, 383, 30, "screenshotData");
    this[_screenshotCurrentLayer] = null;
    this[_screenshotRecorder] = null;
    this[_screenshotCanvas] = null;
    this[_multicastCanvas] = null;
    this[_data] = screenshotData;
    widget_inspector._ScreenshotPaintingContext.__proto__.new.call(this, containerLayer, estimatedBounds);
    ;
  }).prototype = widget_inspector._ScreenshotPaintingContext.prototype;
  dart.addTypeTests(widget_inspector._ScreenshotPaintingContext);
  dart.addTypeCaches(widget_inspector._ScreenshotPaintingContext);
  dart.setMethodSignature(widget_inspector._ScreenshotPaintingContext, () => ({
    __proto__: dart.getMethods(widget_inspector._ScreenshotPaintingContext.__proto__),
    [_startRecordingScreenshot]: dart.fnType(dart.void, []),
    [_stopRecordingScreenshotIfNeeded]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(widget_inspector._ScreenshotPaintingContext, () => ({
    __proto__: dart.getGetters(widget_inspector._ScreenshotPaintingContext.__proto__),
    [_isScreenshotRecording]: core.bool
  }));
  dart.setLibraryUri(widget_inspector._ScreenshotPaintingContext, L3);
  dart.setFieldSignature(widget_inspector._ScreenshotPaintingContext, () => ({
    __proto__: dart.getFields(widget_inspector._ScreenshotPaintingContext.__proto__),
    [_data]: dart.finalFieldType(widget_inspector._ScreenshotData),
    [_screenshotCurrentLayer]: dart.fieldType(dart.nullable(layer.PictureLayer)),
    [_screenshotRecorder]: dart.fieldType(dart.nullable(ui.PictureRecorder)),
    [_screenshotCanvas]: dart.fieldType(dart.nullable(ui.Canvas)),
    [_multicastCanvas]: dart.fieldType(dart.nullable(widget_inspector._MulticastCanvas))
  }));
  widget_inspector._DiagnosticsPathNode = class _DiagnosticsPathNode extends core.Object {};
  (widget_inspector._DiagnosticsPathNode.new = function(opts) {
    let node = opts && 'node' in opts ? opts.node : null;
    if (node == null) dart.nullFailed(L2, 614, 19, "node");
    let children = opts && 'children' in opts ? opts.children : null;
    if (children == null) dart.nullFailed(L2, 615, 19, "children");
    let childIndex = opts && 'childIndex' in opts ? opts.childIndex : null;
    this.node = node;
    this.children = children;
    this.childIndex = childIndex;
    if (!(node != null)) dart.assertFailed(null, L2, 617, 15, "node != null");
    if (!(children != null)) dart.assertFailed(null, L2, 618, 15, "children != null");
    ;
  }).prototype = widget_inspector._DiagnosticsPathNode.prototype;
  dart.addTypeTests(widget_inspector._DiagnosticsPathNode);
  dart.addTypeCaches(widget_inspector._DiagnosticsPathNode);
  dart.setLibraryUri(widget_inspector._DiagnosticsPathNode, L3);
  dart.setFieldSignature(widget_inspector._DiagnosticsPathNode, () => ({
    __proto__: dart.getFields(widget_inspector._DiagnosticsPathNode.__proto__),
    node: dart.finalFieldType(diagnostics$.DiagnosticsNode),
    children: dart.finalFieldType(core.List$(diagnostics$.DiagnosticsNode)),
    childIndex: dart.finalFieldType(dart.nullable(core.int))
  }));
  widget_inspector._InspectorReferenceData = class _InspectorReferenceData extends core.Object {};
  (widget_inspector._InspectorReferenceData.new = function(object) {
    if (object == null) dart.nullFailed(L2, 676, 32, "object");
    this.count = 1;
    this.object = object;
    ;
  }).prototype = widget_inspector._InspectorReferenceData.prototype;
  dart.addTypeTests(widget_inspector._InspectorReferenceData);
  dart.addTypeCaches(widget_inspector._InspectorReferenceData);
  dart.setLibraryUri(widget_inspector._InspectorReferenceData, L3);
  dart.setFieldSignature(widget_inspector._InspectorReferenceData, () => ({
    __proto__: dart.getFields(widget_inspector._InspectorReferenceData.__proto__),
    object: dart.finalFieldType(core.Object),
    count: dart.fieldType(core.int)
  }));
  var _serializeRing = dart.privateName(widget_inspector, "_serializeRing");
  var _serializeRingIndex = dart.privateName(widget_inspector, "_serializeRingIndex");
  var _groups = dart.privateName(widget_inspector, "_groups");
  var _idToReferenceData = dart.privateName(widget_inspector, "_idToReferenceData");
  var _objectToId = dart.privateName(widget_inspector, "_objectToId");
  var _nextId = dart.privateName(widget_inspector, "_nextId");
  var _pubRootDirectories = dart.privateName(widget_inspector, "_pubRootDirectories");
  var _trackRebuildDirtyWidgets = dart.privateName(widget_inspector, "_trackRebuildDirtyWidgets");
  var _trackRepaintWidgets = dart.privateName(widget_inspector, "_trackRepaintWidgets");
  var _structuredExceptionHandler = dart.privateName(widget_inspector, "_structuredExceptionHandler");
  var __WidgetInspectorService__registerServiceExtensionCallback = dart.privateName(widget_inspector, "_#WidgetInspectorService#_registerServiceExtensionCallback");
  var __WidgetInspectorService__registerServiceExtensionCallback_isSet = dart.privateName(widget_inspector, "_#WidgetInspectorService#_registerServiceExtensionCallback#isSet");
  var _errorsSinceReload = dart.privateName(widget_inspector, "_errorsSinceReload");
  var _widgetCreationTracked = dart.privateName(widget_inspector, "_widgetCreationTracked");
  var __WidgetInspectorService__frameStart = dart.privateName(widget_inspector, "_#WidgetInspectorService#_frameStart");
  var __WidgetInspectorService__frameStart_isSet = dart.privateName(widget_inspector, "_#WidgetInspectorService#_frameStart#isSet");
  var _rebuildStats = dart.privateName(widget_inspector, "_rebuildStats");
  var _repaintStats = dart.privateName(widget_inspector, "_repaintStats");
  var _registerServiceExtensionCallback = dart.privateName(widget_inspector, "_registerServiceExtensionCallback");
  var _registerSignalServiceExtension = dart.privateName(widget_inspector, "_registerSignalServiceExtension");
  var _registerObjectGroupServiceExtension = dart.privateName(widget_inspector, "_registerObjectGroupServiceExtension");
  var _postExtensionStateChangedEvent = dart.privateName(widget_inspector, "_postExtensionStateChangedEvent");
  var _registerBoolServiceExtension = dart.privateName(widget_inspector, "_registerBoolServiceExtension");
  var _registerServiceExtensionWithArg = dart.privateName(widget_inspector, "_registerServiceExtensionWithArg");
  var _registerServiceExtensionVarArgs = dart.privateName(widget_inspector, "_registerServiceExtensionVarArgs");
  var _nodeToJson = dart.privateName(widget_inspector, "_nodeToJson");
  var _reportError = dart.privateName(widget_inspector, "_reportError");
  var _resetErrorCount = dart.privateName(widget_inspector, "_resetErrorCount");
  var _onFrameStart = dart.privateName(widget_inspector, "_onFrameStart");
  var _onRebuildWidget = dart.privateName(widget_inspector, "_onRebuildWidget");
  var _onPaint = dart.privateName(widget_inspector, "_onPaint");
  var _getParentChain = dart.privateName(widget_inspector, "_getParentChain");
  var _getProperties = dart.privateName(widget_inspector, "_getProperties");
  var _getChildren = dart.privateName(widget_inspector, "_getChildren");
  var _getChildrenSummaryTree = dart.privateName(widget_inspector, "_getChildrenSummaryTree");
  var _getChildrenDetailsSubtree = dart.privateName(widget_inspector, "_getChildrenDetailsSubtree");
  var _getRootWidget = dart.privateName(widget_inspector, "_getRootWidget");
  var _getRootRenderObject = dart.privateName(widget_inspector, "_getRootRenderObject");
  var _getRootWidgetSummaryTree = dart.privateName(widget_inspector, "_getRootWidgetSummaryTree");
  var _getDetailsSubtree = dart.privateName(widget_inspector, "_getDetailsSubtree");
  var _getSelectedRenderObject = dart.privateName(widget_inspector, "_getSelectedRenderObject");
  var _getSelectedWidget = dart.privateName(widget_inspector, "_getSelectedWidget");
  var _getSelectedSummaryWidget = dart.privateName(widget_inspector, "_getSelectedSummaryWidget");
  var _clearStats = dart.privateName(widget_inspector, "_clearStats");
  var _decrementReferenceCount = dart.privateName(widget_inspector, "_decrementReferenceCount");
  var _safeJsonEncode = dart.privateName(widget_inspector, "_safeJsonEncode");
  var _getRenderObjectParentChain = dart.privateName(widget_inspector, "_getRenderObjectParentChain");
  var _getElementParentChain = dart.privateName(widget_inspector, "_getElementParentChain");
  var _pathNodeToJson = dart.privateName(widget_inspector, "_pathNodeToJson");
  var _nodesToJson = dart.privateName(widget_inspector, "_nodesToJson");
  var _isValueCreatedByLocalProject = dart.privateName(widget_inspector, "_isValueCreatedByLocalProject");
  var _getRawElementParentChain = dart.privateName(widget_inspector, "_getRawElementParentChain");
  var C3;
  var _isLocalCreationLocation = dart.privateName(widget_inspector, "_isLocalCreationLocation");
  var _truncateNodes = dart.privateName(widget_inspector, "_truncateNodes");
  var C4;
  var _getChildrenFiltered = dart.privateName(widget_inspector, "_getChildrenFiltered");
  var _shouldShowInSummaryTree = dart.privateName(widget_inspector, "_shouldShowInSummaryTree");
  var _filterChildren = dart.privateName(widget_inspector, "_filterChildren");
  var C6;
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var C5;
  var _frameStart = dart.privateName(widget_inspector, "_frameStart");
  var _onFrameEnd = dart.privateName(widget_inspector, "_onFrameEnd");
  var _postStatsEvent = dart.privateName(widget_inspector, "_postStatsEvent");
  var selection = dart.privateName(widget_inspector, "WidgetInspectorService.selection");
  var selectionChangedCallback = dart.privateName(widget_inspector, "WidgetInspectorService.selectionChangedCallback");
  widget_inspector.WidgetInspectorService = class WidgetInspectorService extends core.Object {
    static get instance() {
      return widget_inspector.WidgetInspectorService._instance;
    }
    static set instance(instance) {
      if (instance == null) dart.nullFailed(L2, 715, 46, "instance");
      widget_inspector.WidgetInspectorService._instance = instance;
    }
  };
  widget_inspector.WidgetInspectorService[dart.mixinOn] = Object => class WidgetInspectorService extends Object {
    get selection() {
      return this[selection];
    }
    set selection(value) {
      super.selection = value;
    }
    get selectionChangedCallback() {
      return this[selectionChangedCallback];
    }
    set selectionChangedCallback(value) {
      this[selectionChangedCallback] = value;
    }
    get [_registerServiceExtensionCallback]() {
      let t0;
      return dart.test(this[__WidgetInspectorService__registerServiceExtensionCallback_isSet]) ? (t0 = this[__WidgetInspectorService__registerServiceExtensionCallback], t0) : dart.throw(new _internal.LateError.fieldNI("_registerServiceExtensionCallback"));
    }
    set [_registerServiceExtensionCallback](t0) {
      if (t0 == null) dart.nullFailed(L2, 749, 42, "null");
      this[__WidgetInspectorService__registerServiceExtensionCallback_isSet] = true;
      this[__WidgetInspectorService__registerServiceExtensionCallback] = t0;
    }
    registerServiceExtension(opts) {
      let t2, t1;
      let name = opts && 'name' in opts ? opts.name : null;
      if (name == null) dart.nullFailed(L2, 760, 21, "name");
      let callback = opts && 'callback' in opts ? opts.callback : null;
      if (callback == null) dart.nullFailed(L2, 761, 39, "callback");
      t1 = "inspector." + dart.str(name);
      t2 = callback;
      this[_registerServiceExtensionCallback]({name: t1, callback: t2});
    }
    [_registerSignalServiceExtension](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      if (name == null) dart.nullFailed(L2, 772, 21, "name");
      let callback = opts && 'callback' in opts ? opts.callback : null;
      if (callback == null) dart.nullFailed(L2, 773, 32, "callback");
      this.registerServiceExtension({name: name, callback: dart.fn(parameters => {
          if (parameters == null) dart.nullFailed(L2, 777, 38, "parameters");
          return async.async(MapOfString$ObjectN(), function*() {
            return new (IdentityMapOfString$ObjectN()).from(["result", (yield callback())]);
          });
        }, MapOfString$StringToFutureOfMapOfString$ObjectN())});
    }
    [_registerObjectGroupServiceExtension](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      if (name == null) dart.nullFailed(L2, 790, 21, "name");
      let callback = opts && 'callback' in opts ? opts.callback : null;
      if (callback == null) dart.nullFailed(L2, 791, 32, "callback");
      this.registerServiceExtension({name: name, callback: dart.fn(parameters => {
          if (parameters == null) dart.nullFailed(L2, 795, 38, "parameters");
          return async.async(MapOfString$ObjectN(), function*() {
            return new (IdentityMapOfString$ObjectN()).from(["result", (yield callback(dart.nullCheck(parameters[$_get]("objectGroup"))))]);
          });
        }, MapOfString$StringToFutureOfMapOfString$ObjectN())});
    }
    [_registerBoolServiceExtension](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      if (name == null) dart.nullFailed(L2, 814, 21, "name");
      let getter = opts && 'getter' in opts ? opts.getter : null;
      if (getter == null) dart.nullFailed(L2, 815, 37, "getter");
      let setter = opts && 'setter' in opts ? opts.setter : null;
      if (setter == null) dart.nullFailed(L2, 816, 37, "setter");
      if (!(name != null)) dart.assertFailed(null, L2, 818, 12, "name != null");
      if (!(getter != null)) dart.assertFailed(null, L2, 819, 12, "getter != null");
      if (!(setter != null)) dart.assertFailed(null, L2, 820, 12, "setter != null");
      this.registerServiceExtension({name: name, callback: dart.fn(parameters => {
          if (parameters == null) dart.nullFailed(L2, 823, 38, "parameters");
          return async.async(MapOfString$dynamic(), (function*() {
            if (dart.test(parameters[$containsKey]("enabled"))) {
              let value = parameters[$_get]("enabled") === "true";
              yield setter(value);
              this[_postExtensionStateChangedEvent](name, value);
            }
            return new (IdentityMapOfString$dynamic()).from(["enabled", dart.test(yield getter()) ? "true" : "false"]);
          }).bind(this));
        }, MapOfString$StringToFutureOfMapOfString$dynamic())});
    }
    [_postExtensionStateChangedEvent](name, value) {
      if (name == null) dart.nullFailed(L2, 844, 47, "name");
      this.postEvent("Flutter.ServiceExtensionStateChanged", new (IdentityMapOfString$ObjectN()).from(["extension", "ext.flutter.inspector." + dart.str(name), "value", value]));
    }
    [_registerServiceExtensionWithArg](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      if (name == null) dart.nullFailed(L2, 859, 21, "name");
      let callback = opts && 'callback' in opts ? opts.callback : null;
      if (callback == null) dart.nullFailed(L2, 860, 32, "callback");
      this.registerServiceExtension({name: name, callback: dart.fn(parameters => {
          if (parameters == null) dart.nullFailed(L2, 864, 38, "parameters");
          return async.async(MapOfString$ObjectN(), function*() {
            if (!dart.test(parameters[$containsKey]("objectGroup"))) dart.assertFailed(null, L2, 865, 16, "parameters.containsKey('objectGroup')");
            return new (IdentityMapOfString$ObjectN()).from(["result", (yield callback(parameters[$_get]("arg"), dart.nullCheck(parameters[$_get]("objectGroup"))))]);
          });
        }, MapOfString$StringToFutureOfMapOfString$ObjectN())});
    }
    [_registerServiceExtensionVarArgs](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      if (name == null) dart.nullFailed(L2, 877, 21, "name");
      let callback = opts && 'callback' in opts ? opts.callback : null;
      if (callback == null) dart.nullFailed(L2, 878, 32, "callback");
      this.registerServiceExtension({name: name, callback: dart.fn(parameters => {
          if (parameters == null) dart.nullFailed(L2, 882, 38, "parameters");
          return async.async(MapOfString$ObjectN(), function*() {
            let args = JSArrayOfString().of([]);
            let index = 0;
            while (true) {
              let name = "arg" + dart.str(index);
              if (dart.test(parameters[$containsKey](name))) {
                args[$add](dart.nullCheck(parameters[$_get](name)));
              } else {
                break;
              }
              index = index + 1;
            }
            if (!(index === parameters[$length] || index === dart.notNull(parameters[$length]) - 1 && dart.test(parameters[$containsKey]("isolateId")))) dart.assertFailed(null, L2, 896, 16, "index == parameters.length || (index == parameters.length - 1 && parameters.containsKey('isolateId'))");
            return new (IdentityMapOfString$ObjectN()).from(["result", (yield callback(args))]);
          });
        }, MapOfString$StringToFutureOfMapOfString$ObjectN())});
    }
    forceRebuild() {
      let binding = dart.nullCheck(binding$5.WidgetsBinding.instance);
      if (binding.renderViewElement != null) {
        dart.nullCheck(binding.buildOwner).reassemble(dart.nullCheck(binding.renderViewElement));
        return binding.endOfFrame;
      }
      return FutureOfvoid().value();
    }
    [_reportError](details) {
      if (details == null) dart.nullFailed(L2, 921, 41, "details");
      let errorJson = dart.nullCheck(this[_nodeToJson](details.toDiagnosticsNode(), new widget_inspector.InspectorSerializationDelegate.new({groupName: "console-group", subtreeDepth: 5, includeProperties: true, expandPropertyValues: true, maxDescendentsTruncatableNode: 5, service: this})));
      errorJson[$_set]("errorsSinceReload", this[_errorsSinceReload]);
      if (this[_errorsSinceReload] === 0) {
        errorJson[$_set]("renderedErrorText", new diagnostics$.TextTreeRenderer.new({wrapWidth: 100, wrapWidthProperties: 100, maxDescendentsTruncatableNode: 5}).render(details.toDiagnosticsNode({style: diagnostics$.DiagnosticsTreeStyle.error}))[$trimRight]());
      } else {
        errorJson[$_set]("renderedErrorText", "Another exception was thrown: " + dart.str(details.summary));
      }
      this[_errorsSinceReload] = dart.notNull(this[_errorsSinceReload]) + 1;
      this.postEvent("Flutter.Error", errorJson);
    }
    [_resetErrorCount]() {
      this[_errorsSinceReload] = 0;
    }
    isStructuredErrorsEnabled() {
      return true;
    }
    initServiceExtensions(registerServiceExtensionCallback) {
      if (registerServiceExtensionCallback == null) dart.nullFailed(L2, 973, 64, "registerServiceExtensionCallback");
      this[_structuredExceptionHandler] = dart.bind(this, _reportError);
      if (dart.test(this.isStructuredErrorsEnabled())) {
        assertions.FlutterError.onError = this[_structuredExceptionHandler];
      }
      this[_registerServiceExtensionCallback] = registerServiceExtensionCallback;
      if (!!dart.test(widget_inspector.WidgetInspectorService._debugServiceExtensionsRegistered)) dart.assertFailed(null, L2, 979, 12, "!_debugServiceExtensionsRegistered");
      if (!dart.test(dart.fn(() => {
        widget_inspector.WidgetInspectorService._debugServiceExtensionsRegistered = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L2, 980, 12, "() {\r\n      _debugServiceExtensionsRegistered = true;\r\n      return true;\r\n    }()");
      dart.nullCheck(binding$.SchedulerBinding.instance).addPersistentFrameCallback(dart.bind(this, _onFrameStart));
      let defaultExceptionHandler = assertions.FlutterError.presentError;
      this[_registerBoolServiceExtension]({name: "structuredErrors", getter: dart.fn(() => async.async(core.bool, (function*() {
          return dart.equals(assertions.FlutterError.presentError, this[_structuredExceptionHandler]);
        }).bind(this)), VoidToFutureOfbool()), setter: dart.fn(value => {
          if (value == null) dart.nullFailed(L2, 992, 21, "value");
          assertions.FlutterError.presentError = dart.test(value) ? dart.nullCheck(this[_structuredExceptionHandler]) : defaultExceptionHandler;
          return FutureOfvoid().value();
        }, boolToFutureOfvoid())});
      this[_registerBoolServiceExtension]({name: "show", getter: dart.fn(() => async.async(core.bool, function*() {
          return app.WidgetsApp.debugShowWidgetInspectorOverride;
        }), VoidToFutureOfbool()), setter: dart.fn(value => {
          if (value == null) dart.nullFailed(L2, 1001, 21, "value");
          if (dart.equals(app.WidgetsApp.debugShowWidgetInspectorOverride, value)) {
            return FutureOfvoid().value();
          }
          app.WidgetsApp.debugShowWidgetInspectorOverride = value;
          return this.forceRebuild();
        }, boolToFutureOfvoid())});
      if (dart.test(this.isWidgetCreationTracked())) {
        this[_registerBoolServiceExtension]({name: "trackRebuildDirtyWidgets", getter: dart.fn(() => async.async(core.bool, (function*() {
            return this[_trackRebuildDirtyWidgets];
          }).bind(this)), VoidToFutureOfbool()), setter: dart.fn(value => {
            if (value == null) dart.nullFailed(L2, 1016, 23, "value");
            return async.async(dart.void, (function*() {
              if (dart.equals(value, this[_trackRebuildDirtyWidgets])) {
                return;
              }
              this[_rebuildStats].resetCounts();
              this[_trackRebuildDirtyWidgets] = value;
              if (dart.test(value)) {
                if (!(debug$0.debugOnRebuildDirtyWidget == null)) dart.assertFailed(null, L2, 1023, 20, "debugOnRebuildDirtyWidget == null");
                debug$0.debugOnRebuildDirtyWidget = dart.bind(this, _onRebuildWidget);
                yield this.forceRebuild();
                return;
              } else {
                debug$0.debugOnRebuildDirtyWidget = null;
                return;
              }
            }).bind(this));
          }, boolToFutureOfvoid())});
        this[_registerBoolServiceExtension]({name: "trackRepaintWidgets", getter: dart.fn(() => async.async(core.bool, (function*() {
            return this[_trackRepaintWidgets];
          }).bind(this)), VoidToFutureOfbool()), setter: dart.fn(value => {
            if (value == null) dart.nullFailed(L2, 1039, 23, "value");
            return async.async(dart.void, (function*() {
              if (dart.equals(value, this[_trackRepaintWidgets])) {
                return;
              }
              this[_repaintStats].resetCounts();
              this[_trackRepaintWidgets] = value;
              if (dart.test(value)) {
                if (!(debug.debugOnProfilePaint == null)) dart.assertFailed(null, L2, 1046, 20, "debugOnProfilePaint == null");
                debug.debugOnProfilePaint = dart.bind(this, _onPaint);
                function markTreeNeedsPaint(renderObject) {
                  if (renderObject == null) dart.nullFailed(L2, 1050, 50, "renderObject");
                  renderObject.markNeedsPaint();
                  renderObject.visitChildren(markTreeNeedsPaint);
                }
                dart.fn(markTreeNeedsPaint, RenderObjectTovoid());
                let root = dart.nullCheck(binding.RendererBinding.instance).renderView;
                markTreeNeedsPaint(root);
              } else {
                debug.debugOnProfilePaint = null;
              }
            }).bind(this));
          }, boolToFutureOfvoid())});
      }
      this[_registerSignalServiceExtension]({name: "disposeAllGroups", callback: dart.fn(() => async.async(core.Null, (function*() {
          this.disposeAllGroups();
          return null;
        }).bind(this)), VoidToFutureOfNull())});
      this[_registerObjectGroupServiceExtension]({name: "disposeGroup", callback: dart.fn(name => {
          if (name == null) dart.nullFailed(L2, 1072, 25, "name");
          return async.async(core.Null, (function*() {
            this.disposeGroup(name);
            return null;
          }).bind(this));
        }, StringToFutureOfNull())});
      this[_registerSignalServiceExtension]({name: "isWidgetTreeReady", callback: dart.bind(this, 'isWidgetTreeReady')});
      this[_registerServiceExtensionWithArg]({name: "disposeId", callback: dart.fn((objectId, objectGroup) => {
          if (objectGroup == null) dart.nullFailed(L2, 1083, 43, "objectGroup");
          return async.async(core.Null, (function*() {
            this.disposeId(objectId, objectGroup);
            return null;
          }).bind(this));
        }, StringNAndStringToFutureOfNull())});
      this[_registerServiceExtensionVarArgs]({name: "setPubRootDirectories", callback: dart.fn(args => {
          if (args == null) dart.nullFailed(L2, 1090, 31, "args");
          return async.async(core.Null, (function*() {
            this.setPubRootDirectories(args);
            return null;
          }).bind(this));
        }, ListOfStringToFutureOfNull())});
      this[_registerServiceExtensionWithArg]({name: "setSelectionById", callback: dart.bind(this, 'setSelectionById')});
      this[_registerServiceExtensionWithArg]({name: "getParentChain", callback: dart.bind(this, _getParentChain)});
      this[_registerServiceExtensionWithArg]({name: "getProperties", callback: dart.bind(this, _getProperties)});
      this[_registerServiceExtensionWithArg]({name: "getChildren", callback: dart.bind(this, _getChildren)});
      this[_registerServiceExtensionWithArg]({name: "getChildrenSummaryTree", callback: dart.bind(this, _getChildrenSummaryTree)});
      this[_registerServiceExtensionWithArg]({name: "getChildrenDetailsSubtree", callback: dart.bind(this, _getChildrenDetailsSubtree)});
      this[_registerObjectGroupServiceExtension]({name: "getRootWidget", callback: dart.bind(this, _getRootWidget)});
      this[_registerObjectGroupServiceExtension]({name: "getRootRenderObject", callback: dart.bind(this, _getRootRenderObject)});
      this[_registerObjectGroupServiceExtension]({name: "getRootWidgetSummaryTree", callback: dart.bind(this, _getRootWidgetSummaryTree)});
      this.registerServiceExtension({name: "getDetailsSubtree", callback: dart.fn(parameters => {
          if (parameters == null) dart.nullFailed(L2, 1136, 38, "parameters");
          return async.async(MapOfString$ObjectN(), (function*() {
            if (!dart.test(parameters[$containsKey]("objectGroup"))) dart.assertFailed(null, L2, 1137, 16, "parameters.containsKey('objectGroup')");
            let subtreeDepth = parameters[$_get]("subtreeDepth");
            return new (IdentityMapOfString$ObjectN()).from(["result", this[_getDetailsSubtree](parameters[$_get]("arg"), parameters[$_get]("objectGroup"), subtreeDepth != null ? core.int.parse(subtreeDepth) : 2)]);
          }).bind(this));
        }, MapOfString$StringToFutureOfMapOfString$ObjectN())});
      this[_registerServiceExtensionWithArg]({name: "getSelectedRenderObject", callback: dart.bind(this, _getSelectedRenderObject)});
      this[_registerServiceExtensionWithArg]({name: "getSelectedWidget", callback: dart.bind(this, _getSelectedWidget)});
      this[_registerServiceExtensionWithArg]({name: "getSelectedSummaryWidget", callback: dart.bind(this, _getSelectedSummaryWidget)});
      this[_registerSignalServiceExtension]({name: "isWidgetCreationTracked", callback: dart.bind(this, 'isWidgetCreationTracked')});
      this.registerServiceExtension({name: "screenshot", callback: dart.fn(parameters => {
          if (parameters == null) dart.nullFailed(L2, 1167, 38, "parameters");
          return async.async(MapOfString$ObjectN(), (function*() {
            if (!dart.test(parameters[$containsKey]("id"))) dart.assertFailed(null, L2, 1168, 16, "parameters.containsKey('id')");
            if (!dart.test(parameters[$containsKey]("width"))) dart.assertFailed(null, L2, 1169, 16, "parameters.containsKey('width')");
            if (!dart.test(parameters[$containsKey]("height"))) dart.assertFailed(null, L2, 1170, 16, "parameters.containsKey('height')");
            let image = (yield this.screenshot(this.toObject(parameters[$_get]("id")), {width: core.double.parse(dart.nullCheck(parameters[$_get]("width"))), height: core.double.parse(dart.nullCheck(parameters[$_get]("height"))), margin: dart.test(parameters[$containsKey]("margin")) ? core.double.parse(dart.nullCheck(parameters[$_get]("margin"))) : 0.0, maxPixelRatio: dart.test(parameters[$containsKey]("maxPixelRatio")) ? core.double.parse(dart.nullCheck(parameters[$_get]("maxPixelRatio"))) : 1.0, debugPaint: parameters[$_get]("debugPaint") === "true"}));
            if (image == null) {
              return new (IdentityMapOfString$ObjectN()).from(["result", null]);
            }
            let byteData = (yield image.toByteData({format: ui.ImageByteFormat.png}));
            return new (IdentityMapOfString$Object()).from(["result", convert.base64.encoder.convert(typed_data.Uint8List.view(dart.nullCheck(byteData)[$buffer]))]);
          }).bind(this));
        }, MapOfString$StringToFutureOfMapOfString$ObjectN())});
    }
    [_clearStats]() {
      this[_rebuildStats].resetCounts();
      this[_repaintStats].resetCounts();
    }
    disposeAllGroups() {
      this[_groups][$clear]();
      this[_idToReferenceData][$clear]();
      this[_objectToId][$clear]();
      this[_nextId] = 0;
    }
    disposeGroup(name) {
      if (name == null) dart.nullFailed(L2, 1216, 28, "name");
      let references = this[_groups][$remove](name);
      if (references == null) return;
      references[$forEach](dart.bind(this, _decrementReferenceCount));
    }
    [_decrementReferenceCount](reference) {
      let t1;
      if (reference == null) dart.nullFailed(L2, 1223, 57, "reference");
      t1 = reference;
      t1.count = dart.notNull(t1.count) - 1;
      if (!(dart.notNull(reference.count) >= 0)) dart.assertFailed(null, L2, 1225, 12, "reference.count >= 0");
      if (reference.count === 0) {
        let id = this[_objectToId][$remove](reference.object);
        if (!(id != null)) dart.assertFailed(null, L2, 1228, 14, "id != null");
        this[_idToReferenceData][$remove](id);
      }
    }
    toId(object, groupName) {
      let t1;
      if (groupName == null) dart.nullFailed(L2, 1236, 39, "groupName");
      if (object == null) return null;
      let group = this[_groups][$putIfAbsent](groupName, dart.fn(() => new (_IdentityHashSetOf_InspectorReferenceData()).new(), VoidToSetOf_InspectorReferenceData()));
      let id = this[_objectToId][$_get](object);
      let referenceData = null;
      if (id == null) {
        id = "inspector-" + dart.str(this[_nextId]);
        this[_nextId] = dart.notNull(this[_nextId]) + 1;
        this[_objectToId][$_set](object, id);
        referenceData = new widget_inspector._InspectorReferenceData.new(object);
        this[_idToReferenceData][$_set](id, referenceData);
        group.add(referenceData);
      } else {
        referenceData = dart.nullCheck(this[_idToReferenceData][$_get](id));
        if (dart.test(group.add(referenceData))) {
          t1 = referenceData;
          t1.count = dart.notNull(t1.count) + 1;
        }
      }
      return id;
    }
    isWidgetTreeReady(groupName = null) {
      return binding$5.WidgetsBinding.instance != null && dart.test(dart.nullCheck(binding$5.WidgetsBinding.instance).debugDidSendFirstFrameEvent);
    }
    toObject(id, groupName = null) {
      if (id == null) return null;
      let data = this[_idToReferenceData][$_get](id);
      if (data == null) {
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Id does not exist.")])));
      }
      return data.object;
    }
    toObjectForSourceLocation(id, groupName = null) {
      if (id == null) dart.nullFailed(L2, 1293, 44, "id");
      let object = this.toObject(id);
      if (framework.Element.is(object)) {
        return object.widget;
      }
      return object;
    }
    disposeId(id, groupName) {
      let t1;
      if (groupName == null) dart.nullFailed(L2, 1307, 37, "groupName");
      if (id == null) return;
      let referenceData = this[_idToReferenceData][$_get](id);
      if (referenceData == null) dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Id does not exist")])));
      if (!dart.equals((t1 = this[_groups][$_get](groupName), t1 == null ? null : t1.remove(referenceData)), true)) dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Id is not in group")])));
      this[_decrementReferenceCount](referenceData);
    }
    setPubRootDirectories(pubRootDirectories) {
      if (pubRootDirectories == null) dart.nullFailed(L2, 1325, 43, "pubRootDirectories");
      this[_pubRootDirectories] = pubRootDirectories[$map](core.String, dart.fn(directory => {
        if (directory == null) dart.nullFailed(L2, 1327, 28, "directory");
        return core.Uri.parse(directory).path;
      }, StringToString()))[$toList]();
    }
    setSelectionById(id, groupName = null) {
      return this.setSelection(this.toObject(id), groupName);
    }
    setSelection(object, groupName = null) {
      if (framework.Element.is(object) || object$.RenderObject.is(object)) {
        if (framework.Element.is(object)) {
          if (dart.equals(object, this.selection.currentElement)) {
            return false;
          }
          this.selection.currentElement = object;
          developer.inspect(this.selection.currentElement);
        } else {
          if (dart.equals(object, this.selection.current)) {
            return false;
          }
          this.selection.current = object$.RenderObject.as(dart.nullCheck(object));
          developer.inspect(this.selection.current);
        }
        if (this.selectionChangedCallback != null) {
          if (dart.equals(dart.nullCheck(binding$.SchedulerBinding.instance).schedulerPhase, binding$.SchedulerPhase.idle)) {
            dart.nullCheck(this.selectionChangedCallback)();
          } else {
            dart.nullCheck(binding$.SchedulerBinding.instance).scheduleTask(dart.void, dart.nullCheck(this.selectionChangedCallback), priority.Priority.touch);
          }
        }
        return true;
      }
      return false;
    }
    getParentChain(id, groupName) {
      if (id == null) dart.nullFailed(L2, 1389, 32, "id");
      if (groupName == null) dart.nullFailed(L2, 1389, 43, "groupName");
      return this[_safeJsonEncode](this[_getParentChain](id, groupName));
    }
    [_getParentChain](id, groupName) {
      if (groupName == null) dart.nullFailed(L2, 1393, 52, "groupName");
      let value = this.toObject(id);
      let path = null;
      if (object$.RenderObject.is(value))
        path = dart.nullCheck(this[_getRenderObjectParentChain](value, groupName));
      else if (framework.Element.is(value))
        path = this[_getElementParentChain](value, groupName);
      else
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Cannot get parent chain for node of type " + dart.str(dart.runtimeType(value)))])));
      return path[$map](ObjectN(), dart.fn(node => {
        if (node == null) dart.nullFailed(L2, 1403, 52, "node");
        return this[_pathNodeToJson](node, new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, service: this}));
      }, _DiagnosticsPathNodeToMapNOfString$ObjectN()))[$toList]();
    }
    [_pathNodeToJson](pathNode, delegate) {
      if (delegate == null) dart.nullFailed(L2, 1409, 104, "delegate");
      if (pathNode == null) return null;
      return new (IdentityMapOfString$ObjectN()).from(["node", this[_nodeToJson](pathNode.node, delegate), "children", this[_nodesToJson](pathNode.children, delegate, {parent: pathNode.node}), "childIndex", pathNode.childIndex]);
    }
    [_getRawElementParentChain](element, opts) {
      if (element == null) dart.nullFailed(L2, 1419, 51, "element");
      let numLocalParents = opts && 'numLocalParents' in opts ? opts.numLocalParents : null;
      let elements = element.debugGetDiagnosticChain();
      if (numLocalParents != null) {
        for (let i = 0; i < dart.notNull(elements[$length]); i = i + 1) {
          if (dart.test(this[_isValueCreatedByLocalProject](elements[$_get](i)))) {
            numLocalParents = dart.nullCheck(numLocalParents) - 1;
            if (dart.notNull(numLocalParents) <= 0) {
              elements = elements[$take](i + 1)[$toList]();
              break;
            }
          }
        }
      }
      return elements[$reversed][$toList]();
    }
    [_getElementParentChain](element, groupName, opts) {
      let t1;
      if (element == null) dart.nullFailed(L2, 1435, 61, "element");
      if (groupName == null) dart.nullFailed(L2, 1435, 77, "groupName");
      let numLocalParents = opts && 'numLocalParents' in opts ? opts.numLocalParents : null;
      t1 = widget_inspector._followDiagnosticableChain(this[_getRawElementParentChain](element, {numLocalParents: numLocalParents}));
      return t1 == null ? C3 || CT.C3 : t1;
    }
    [_getRenderObjectParentChain](renderObject, groupName) {
      if (groupName == null) dart.nullFailed(L2, 1441, 94, "groupName");
      let chain = JSArrayOfRenderObject().of([]);
      while (renderObject != null) {
        chain[$add](renderObject);
        renderObject = RenderObjectN().as(renderObject.parent);
      }
      return widget_inspector._followDiagnosticableChain(chain[$reversed][$toList]());
    }
    [_nodeToJson](node, delegate) {
      let t1;
      if (delegate == null) dart.nullFailed(L2, 1452, 36, "delegate");
      t1 = node;
      return t1 == null ? null : t1.toJsonMap(delegate);
    }
    [_isValueCreatedByLocalProject](value) {
      let creationLocation = widget_inspector._getCreationLocation(value);
      if (creationLocation == null) {
        return false;
      }
      return this[_isLocalCreationLocation](creationLocation);
    }
    [_isLocalCreationLocation](location) {
      if (location == null || location.file == null) {
        return false;
      }
      let file = core.Uri.parse(location.file).path;
      if (this[_pubRootDirectories] == null) {
        return !file[$contains]("packages/flutter/");
      }
      for (let directory of dart.nullCheck(this[_pubRootDirectories])) {
        if (file[$startsWith](directory)) {
          return true;
        }
      }
      return false;
    }
    [_safeJsonEncode](object) {
      let jsonString = convert.json.encode(object);
      this[_serializeRing][$_set](this[_serializeRingIndex], jsonString);
      this[_serializeRingIndex] = (dart.notNull(this[_serializeRingIndex]) + 1)[$modulo](this[_serializeRing][$length]);
      return jsonString;
    }
    [_truncateNodes](nodes, maxDescendentsTruncatableNode) {
      if (nodes == null) dart.nullFailed(L2, 1500, 66, "nodes");
      if (maxDescendentsTruncatableNode == null) dart.nullFailed(L2, 1500, 77, "maxDescendentsTruncatableNode");
      if (dart.test(nodes[$every](dart.fn(node => {
        if (node == null) dart.nullFailed(L2, 1501, 38, "node");
        return framework.Element.is(node.value);
      }, DiagnosticsNodeTobool()))) && dart.test(this.isWidgetCreationTracked())) {
        let localNodes = nodes[$where](dart.fn(node => {
          if (node == null) dart.nullFailed(L2, 1502, 77, "node");
          return this[_isValueCreatedByLocalProject](node.value);
        }, DiagnosticsNodeTobool()))[$toList]();
        if (dart.test(localNodes[$isNotEmpty])) {
          return localNodes;
        }
      }
      return nodes[$take](maxDescendentsTruncatableNode)[$toList]();
    }
    [_nodesToJson](nodes, delegate, opts) {
      if (nodes == null) dart.nullFailed(L2, 1512, 27, "nodes");
      if (delegate == null) dart.nullFailed(L2, 1513, 36, "delegate");
      let parent = opts && 'parent' in opts ? opts.parent : null;
      return diagnostics$.DiagnosticsNode.toJsonList(nodes, parent, delegate);
    }
    getProperties(diagnosticsNodeId, groupName) {
      if (diagnosticsNodeId == null) dart.nullFailed(L2, 1522, 31, "diagnosticsNodeId");
      if (groupName == null) dart.nullFailed(L2, 1522, 57, "groupName");
      return this[_safeJsonEncode](this[_getProperties](diagnosticsNodeId, groupName));
    }
    [_getProperties](diagnosticsNodeId, groupName) {
      if (groupName == null) dart.nullFailed(L2, 1526, 65, "groupName");
      let node = DiagnosticsNodeN().as(this.toObject(diagnosticsNodeId));
      return this[_nodesToJson](node == null ? C4 || CT.C4 : node.getProperties(), new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, service: this}), {parent: node});
    }
    getChildren(diagnosticsNodeId, groupName) {
      if (diagnosticsNodeId == null) dart.nullFailed(L2, 1533, 29, "diagnosticsNodeId");
      if (groupName == null) dart.nullFailed(L2, 1533, 55, "groupName");
      return this[_safeJsonEncode](this[_getChildren](diagnosticsNodeId, groupName));
    }
    [_getChildren](diagnosticsNodeId, groupName) {
      if (groupName == null) dart.nullFailed(L2, 1537, 63, "groupName");
      let node = DiagnosticsNodeN().as(this.toObject(diagnosticsNodeId));
      let delegate = new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, service: this});
      return this[_nodesToJson](node == null ? C4 || CT.C4 : this[_getChildrenFiltered](node, delegate), delegate, {parent: node});
    }
    getChildrenSummaryTree(diagnosticsNodeId, groupName) {
      if (diagnosticsNodeId == null) dart.nullFailed(L2, 1557, 40, "diagnosticsNodeId");
      if (groupName == null) dart.nullFailed(L2, 1557, 66, "groupName");
      return this[_safeJsonEncode](this[_getChildrenSummaryTree](diagnosticsNodeId, groupName));
    }
    [_getChildrenSummaryTree](diagnosticsNodeId, groupName) {
      if (groupName == null) dart.nullFailed(L2, 1561, 74, "groupName");
      let node = DiagnosticsNodeN().as(this.toObject(diagnosticsNodeId));
      let delegate = new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, summaryTree: true, service: this});
      return this[_nodesToJson](node == null ? C4 || CT.C4 : this[_getChildrenFiltered](node, delegate), delegate, {parent: node});
    }
    getChildrenDetailsSubtree(diagnosticsNodeId, groupName) {
      if (diagnosticsNodeId == null) dart.nullFailed(L2, 1573, 43, "diagnosticsNodeId");
      if (groupName == null) dart.nullFailed(L2, 1573, 69, "groupName");
      return this[_safeJsonEncode](this[_getChildrenDetailsSubtree](diagnosticsNodeId, groupName));
    }
    [_getChildrenDetailsSubtree](diagnosticsNodeId, groupName) {
      if (groupName == null) dart.nullFailed(L2, 1577, 77, "groupName");
      let node = DiagnosticsNodeN().as(this.toObject(diagnosticsNodeId));
      let delegate = new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, subtreeDepth: 1, includeProperties: true, service: this});
      return this[_nodesToJson](node == null ? C4 || CT.C4 : this[_getChildrenFiltered](node, delegate), delegate, {parent: node});
    }
    [_shouldShowInSummaryTree](node) {
      if (node == null) dart.nullFailed(L2, 1584, 49, "node");
      if (dart.equals(node.level, diagnostics$.DiagnosticLevel.error)) {
        return true;
      }
      let value = node.value;
      if (!diagnostics$.Diagnosticable.is(value)) {
        return true;
      }
      if (!framework.Element.is(value) || !dart.test(this.isWidgetCreationTracked())) {
        return true;
      }
      return this[_isValueCreatedByLocalProject](value);
    }
    [_getChildrenFiltered](node, delegate) {
      if (node == null) dart.nullFailed(L2, 1601, 21, "node");
      if (delegate == null) dart.nullFailed(L2, 1602, 36, "delegate");
      return this[_filterChildren](node.getChildren(), delegate);
    }
    [_filterChildren](nodes, delegate) {
      if (nodes == null) dart.nullFailed(L2, 1608, 27, "nodes");
      if (delegate == null) dart.nullFailed(L2, 1609, 36, "delegate");
      let children = (() => {
        let t1 = JSArrayOfDiagnosticsNode().of([]);
        for (let child of nodes)
          if (!dart.test(delegate.summaryTree) || dart.test(this[_shouldShowInSummaryTree](child)))
            t1.push(child);
          else
            for (let t2 of this[_getChildrenFiltered](child, delegate))
              t1.push(t2);
        return t1;
      })();
      return children;
    }
    getRootWidget(groupName) {
      if (groupName == null) dart.nullFailed(L2, 1623, 31, "groupName");
      return this[_safeJsonEncode](this[_getRootWidget](groupName));
    }
    [_getRootWidget](groupName) {
      let t4, t3;
      if (groupName == null) dart.nullFailed(L2, 1627, 47, "groupName");
      return this[_nodeToJson]((t3 = binding$5.WidgetsBinding.instance, t3 == null ? null : (t4 = t3.renderViewElement, t4 == null ? null : t4.toDiagnosticsNode())), new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, service: this}));
    }
    getRootWidgetSummaryTree(groupName) {
      if (groupName == null) dart.nullFailed(L2, 1633, 42, "groupName");
      return this[_safeJsonEncode](this[_getRootWidgetSummaryTree](groupName));
    }
    [_getRootWidgetSummaryTree](groupName) {
      let t4, t3;
      if (groupName == null) dart.nullFailed(L2, 1637, 58, "groupName");
      return this[_nodeToJson]((t3 = binding$5.WidgetsBinding.instance, t3 == null ? null : (t4 = t3.renderViewElement, t4 == null ? null : t4.toDiagnosticsNode())), new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, subtreeDepth: 1000000, summaryTree: true, service: this}));
    }
    getRootRenderObject(groupName) {
      if (groupName == null) dart.nullFailed(L2, 1647, 37, "groupName");
      return this[_safeJsonEncode](this[_getRootRenderObject](groupName));
    }
    [_getRootRenderObject](groupName) {
      let t3;
      if (groupName == null) dart.nullFailed(L2, 1651, 53, "groupName");
      return this[_nodeToJson]((t3 = binding.RendererBinding.instance, t3 == null ? null : t3.renderView.toDiagnosticsNode()), new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, service: this}));
    }
    getDetailsSubtree(id, groupName, opts) {
      if (id == null) dart.nullFailed(L2, 1668, 12, "id");
      if (groupName == null) dart.nullFailed(L2, 1669, 12, "groupName");
      let subtreeDepth = opts && 'subtreeDepth' in opts ? opts.subtreeDepth : 2;
      if (subtreeDepth == null) dart.nullFailed(L2, 1670, 9, "subtreeDepth");
      return this[_safeJsonEncode](this[_getDetailsSubtree](id, groupName, subtreeDepth));
    }
    [_getDetailsSubtree](id, groupName, subtreeDepth) {
      if (subtreeDepth == null) dart.nullFailed(L2, 1678, 9, "subtreeDepth");
      let root = DiagnosticsNodeN().as(this.toObject(id));
      if (root == null) {
        return null;
      }
      return this[_nodeToJson](root, new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, summaryTree: false, subtreeDepth: subtreeDepth, includeProperties: true, service: this}));
    }
    getSelectedRenderObject(previousSelectionId, groupName) {
      if (previousSelectionId == null) dart.nullFailed(L2, 1703, 41, "previousSelectionId");
      if (groupName == null) dart.nullFailed(L2, 1703, 69, "groupName");
      return this[_safeJsonEncode](this[_getSelectedRenderObject](previousSelectionId, groupName));
    }
    [_getSelectedRenderObject](previousSelectionId, groupName) {
      let t3, t3$;
      if (groupName == null) dart.nullFailed(L2, 1707, 86, "groupName");
      let previousSelection = DiagnosticsNodeN().as(this.toObject(previousSelectionId));
      let current = this.selection.current;
      return this[_nodeToJson](dart.equals(current, (t3 = previousSelection, t3 == null ? null : t3.value)) ? previousSelection : (t3$ = current, t3$ == null ? null : t3$.toDiagnosticsNode()), new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, service: this}));
    }
    getSelectedWidget(previousSelectionId, groupName) {
      if (groupName == null) dart.nullFailed(L2, 1719, 64, "groupName");
      return this[_safeJsonEncode](this[_getSelectedWidget](previousSelectionId, groupName));
    }
    screenshot(object, opts) {
      let width = opts && 'width' in opts ? opts.width : null;
      if (width == null) dart.nullFailed(L2, 1738, 21, "width");
      let height = opts && 'height' in opts ? opts.height : null;
      if (height == null) dart.nullFailed(L2, 1739, 21, "height");
      let margin = opts && 'margin' in opts ? opts.margin : 0;
      if (margin == null) dart.nullFailed(L2, 1740, 12, "margin");
      let maxPixelRatio = opts && 'maxPixelRatio' in opts ? opts.maxPixelRatio : 1;
      if (maxPixelRatio == null) dart.nullFailed(L2, 1741, 12, "maxPixelRatio");
      let debugPaint = opts && 'debugPaint' in opts ? opts.debugPaint : false;
      if (debugPaint == null) dart.nullFailed(L2, 1742, 10, "debugPaint");
      return async.async(ImageN(), function* screenshot() {
        let t3;
        if (!framework.Element.is(object) && !object$.RenderObject.is(object)) {
          return null;
        }
        let renderObject = framework.Element.is(object) ? object.renderObject : RenderObjectN().as(object);
        if (renderObject == null || !dart.test(renderObject.attached)) {
          return null;
        }
        if (dart.test(renderObject.debugNeedsLayout)) {
          let owner = dart.nullCheck(renderObject.owner);
          if (!(owner !== null)) dart.assertFailed(null, L2, 1754, 14, "owner != null");
          if (!!dart.test(owner.debugDoingLayout)) dart.assertFailed(null, L2, 1755, 14, "!owner.debugDoingLayout");
          t3 = owner;
          (() => {
            t3.flushLayout();
            t3.flushCompositingBits();
            t3.flushPaint();
            return t3;
          })();
          if (dart.test(renderObject.debugNeedsLayout)) {
            return null;
          }
        }
        let renderBounds = widget_inspector._calculateSubtreeBounds(renderObject);
        if (margin !== 0.0) {
          renderBounds = renderBounds.inflate(margin);
        }
        if (dart.test(renderBounds.isEmpty)) {
          return null;
        }
        let pixelRatio = math.min(core.double, maxPixelRatio, math.min(core.double, dart.notNull(width) / dart.notNull(renderBounds.width), dart.notNull(height) / dart.notNull(renderBounds.height)));
        return widget_inspector._ScreenshotPaintingContext.toImage(renderObject, renderBounds, {pixelRatio: pixelRatio, debugPaint: debugPaint});
      });
    }
    [_getSelectedWidget](previousSelectionId, groupName) {
      let t3, t3$;
      if (groupName == null) dart.nullFailed(L2, 1794, 80, "groupName");
      let previousSelection = DiagnosticsNodeN().as(this.toObject(previousSelectionId));
      let current = this.selection.currentElement;
      return this[_nodeToJson](dart.equals(current, (t3 = previousSelection, t3 == null ? null : t3.value)) ? previousSelection : (t3$ = current, t3$ == null ? null : t3$.toDiagnosticsNode()), new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, service: this}));
    }
    getSelectedSummaryWidget(previousSelectionId, groupName) {
      if (previousSelectionId == null) dart.nullFailed(L2, 1808, 42, "previousSelectionId");
      if (groupName == null) dart.nullFailed(L2, 1808, 70, "groupName");
      return this[_safeJsonEncode](this[_getSelectedSummaryWidget](previousSelectionId, groupName));
    }
    [_getSelectedSummaryWidget](previousSelectionId, groupName) {
      let t3, t3$;
      if (groupName == null) dart.nullFailed(L2, 1812, 87, "groupName");
      if (!dart.test(this.isWidgetCreationTracked())) {
        return this[_getSelectedWidget](previousSelectionId, groupName);
      }
      let previousSelection = DiagnosticsNodeN().as(this.toObject(previousSelectionId));
      let current = this.selection.currentElement;
      if (current != null && !dart.test(this[_isValueCreatedByLocalProject](current))) {
        let firstLocal = null;
        for (let candidate of current.debugGetDiagnosticChain()) {
          if (dart.test(this[_isValueCreatedByLocalProject](candidate))) {
            firstLocal = candidate;
            break;
          }
        }
        current = firstLocal;
      }
      return this[_nodeToJson](dart.equals(current, (t3 = previousSelection, t3 == null ? null : t3.value)) ? previousSelection : (t3$ = current, t3$ == null ? null : t3$.toDiagnosticsNode()), new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, service: this}));
    }
    isWidgetCreationTracked() {
      this[_widgetCreationTracked] == null ? this[_widgetCreationTracked] = widget_inspector._HasCreationLocation.is(new widget_inspector._WidgetForTypeTests.new({$creationLocationd_0dea112b090073317d4: C5 || CT.C5})) : null;
      return dart.nullCheck(this[_widgetCreationTracked]);
    }
    get [_frameStart]() {
      let t3;
      return dart.test(this[__WidgetInspectorService__frameStart_isSet]) ? (t3 = this[__WidgetInspectorService__frameStart], t3) : dart.throw(new _internal.LateError.fieldNI("_frameStart"));
    }
    set [_frameStart](t3) {
      if (t3 == null) dart.nullFailed(L2, 1841, 17, "null");
      this[__WidgetInspectorService__frameStart_isSet] = true;
      this[__WidgetInspectorService__frameStart] = t3;
    }
    [_onFrameStart](timeStamp) {
      if (timeStamp == null) dart.nullFailed(L2, 1843, 31, "timeStamp");
      this[_frameStart] = timeStamp;
      dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.bind(this, _onFrameEnd));
    }
    [_onFrameEnd](timeStamp) {
      if (timeStamp == null) dart.nullFailed(L2, 1848, 29, "timeStamp");
      if (dart.test(this[_trackRebuildDirtyWidgets])) {
        this[_postStatsEvent]("Flutter.RebuiltWidgets", this[_rebuildStats]);
      }
      if (dart.test(this[_trackRepaintWidgets])) {
        this[_postStatsEvent]("Flutter.RepaintWidgets", this[_repaintStats]);
      }
    }
    [_postStatsEvent](eventName, stats) {
      if (eventName == null) dart.nullFailed(L2, 1857, 31, "eventName");
      if (stats == null) dart.nullFailed(L2, 1857, 71, "stats");
      this.postEvent(eventName, stats.exportToJson(this[_frameStart]));
    }
    postEvent(eventKind, eventData) {
      if (eventKind == null) dart.nullFailed(L2, 1866, 25, "eventKind");
      if (eventData == null) dart.nullFailed(L2, 1866, 57, "eventData");
      developer.postEvent(eventKind, eventData);
    }
    [_onRebuildWidget](element, builtOnce) {
      if (element == null) dart.nullFailed(L2, 1873, 33, "element");
      if (builtOnce == null) dart.nullFailed(L2, 1873, 47, "builtOnce");
      this[_rebuildStats].add(element);
    }
    [_onPaint](renderObject) {
      let t4;
      if (renderObject == null) dart.nullFailed(L2, 1877, 30, "renderObject");
      try {
        let element = (t4 = DebugCreatorN().as(renderObject.debugCreator), t4 == null ? null : t4.element);
        if (!framework.RenderObjectElement.is(element)) {
          return;
        }
        this[_repaintStats].add(element);
        element.visitAncestorElements(dart.fn(ancestor => {
          if (ancestor == null) dart.nullFailed(L2, 1891, 46, "ancestor");
          if (framework.RenderObjectElement.is(ancestor)) {
            return false;
          }
          this[_repaintStats].add(ancestor);
          return true;
        }, ElementTobool()));
      } catch (e) {
        let exception = dart.getThrown(e);
        let stack = dart.stackTrace(e);
        if (core.Object.is(exception)) {
          assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({exception: exception, stack: stack}));
        } else
          throw e;
      }
    }
    performReassemble() {
      this[_clearStats]();
      this[_resetErrorCount]();
    }
  };
  (widget_inspector.WidgetInspectorService[dart.mixinNew] = function() {
    this[_serializeRing] = ListOfStringN().filled(20, null, {growable: false});
    this[_serializeRingIndex] = 0;
    this[selection] = new widget_inspector.InspectorSelection.new();
    this[selectionChangedCallback] = null;
    this[_groups] = new (IdentityMapOfString$SetOf_InspectorReferenceData()).new();
    this[_idToReferenceData] = new (IdentityMapOfString$_InspectorReferenceData()).new();
    this[_objectToId] = new (IdentityMapOfObject$String()).new();
    this[_nextId] = 0;
    this[_pubRootDirectories] = null;
    this[_trackRebuildDirtyWidgets] = false;
    this[_trackRepaintWidgets] = false;
    this[_structuredExceptionHandler] = null;
    this[__WidgetInspectorService__registerServiceExtensionCallback] = null;
    this[__WidgetInspectorService__registerServiceExtensionCallback_isSet] = false;
    this[_errorsSinceReload] = 0;
    this[_widgetCreationTracked] = null;
    this[__WidgetInspectorService__frameStart] = null;
    this[__WidgetInspectorService__frameStart_isSet] = false;
    this[_rebuildStats] = new widget_inspector._ElementLocationStatsTracker.new();
    this[_repaintStats] = new widget_inspector._ElementLocationStatsTracker.new();
  }).prototype = widget_inspector.WidgetInspectorService.prototype;
  dart.addTypeTests(widget_inspector.WidgetInspectorService);
  dart.addTypeCaches(widget_inspector.WidgetInspectorService);
  widget_inspector.WidgetInspectorService[dart.implements] = () => [core.Object];
  dart.setMethodSignature(widget_inspector.WidgetInspectorService, () => ({
    __proto__: dart.getMethods(widget_inspector.WidgetInspectorService.__proto__),
    registerServiceExtension: dart.fnType(dart.void, [], {}, {callback: dart.fnType(async.Future$(core.Map$(core.String, dart.dynamic)), [core.Map$(core.String, core.String)]), name: core.String}),
    [_registerSignalServiceExtension]: dart.fnType(dart.void, [], {}, {callback: dart.fnType(dart.nullable(core.Object), []), name: core.String}),
    [_registerObjectGroupServiceExtension]: dart.fnType(dart.void, [], {}, {callback: dart.fnType(dart.nullable(core.Object), [core.String]), name: core.String}),
    [_registerBoolServiceExtension]: dart.fnType(dart.void, [], {}, {getter: dart.fnType(async.Future$(core.bool), []), name: core.String, setter: dart.fnType(async.Future$(dart.void), [core.bool])}),
    [_postExtensionStateChangedEvent]: dart.fnType(dart.void, [core.String, dart.nullable(core.Object)]),
    [_registerServiceExtensionWithArg]: dart.fnType(dart.void, [], {}, {callback: dart.fnType(dart.nullable(core.Object), [dart.nullable(core.String), core.String]), name: core.String}),
    [_registerServiceExtensionVarArgs]: dart.fnType(dart.void, [], {}, {callback: dart.fnType(dart.nullable(core.Object), [core.List$(core.String)]), name: core.String}),
    forceRebuild: dart.fnType(async.Future$(dart.void), []),
    [_reportError]: dart.fnType(dart.void, [assertions.FlutterErrorDetails]),
    [_resetErrorCount]: dart.fnType(dart.void, []),
    isStructuredErrorsEnabled: dart.fnType(core.bool, []),
    initServiceExtensions: dart.fnType(dart.void, [dart.fnType(dart.void, [], {}, {callback: dart.fnType(async.Future$(core.Map$(core.String, dart.dynamic)), [core.Map$(core.String, core.String)]), name: core.String})]),
    [_clearStats]: dart.fnType(dart.void, []),
    disposeAllGroups: dart.fnType(dart.void, []),
    disposeGroup: dart.fnType(dart.void, [core.String]),
    [_decrementReferenceCount]: dart.fnType(dart.void, [widget_inspector._InspectorReferenceData]),
    toId: dart.fnType(dart.nullable(core.String), [dart.nullable(core.Object), core.String]),
    isWidgetTreeReady: dart.fnType(core.bool, [], [dart.nullable(core.String)]),
    toObject: dart.fnType(dart.nullable(core.Object), [dart.nullable(core.String)], [dart.nullable(core.String)]),
    toObjectForSourceLocation: dart.fnType(dart.nullable(core.Object), [core.String], [dart.nullable(core.String)]),
    disposeId: dart.fnType(dart.void, [dart.nullable(core.String), core.String]),
    setPubRootDirectories: dart.fnType(dart.void, [core.List$(core.String)]),
    setSelectionById: dart.fnType(core.bool, [dart.nullable(core.String)], [dart.nullable(core.String)]),
    setSelection: dart.fnType(core.bool, [dart.nullable(core.Object)], [dart.nullable(core.String)]),
    getParentChain: dart.fnType(core.String, [core.String, core.String]),
    [_getParentChain]: dart.fnType(core.List$(dart.nullable(core.Object)), [dart.nullable(core.String), core.String]),
    [_pathNodeToJson]: dart.fnType(dart.nullable(core.Map$(core.String, dart.nullable(core.Object))), [dart.nullable(widget_inspector._DiagnosticsPathNode), widget_inspector.InspectorSerializationDelegate]),
    [_getRawElementParentChain]: dart.fnType(core.List$(framework.Element), [framework.Element], {}, {numLocalParents: dart.nullable(core.int)}),
    [_getElementParentChain]: dart.fnType(core.List$(widget_inspector._DiagnosticsPathNode), [framework.Element, core.String], {numLocalParents: dart.nullable(core.int)}, {}),
    [_getRenderObjectParentChain]: dart.fnType(dart.nullable(core.List$(widget_inspector._DiagnosticsPathNode)), [dart.nullable(object$.RenderObject), core.String]),
    [_nodeToJson]: dart.fnType(dart.nullable(core.Map$(core.String, dart.nullable(core.Object))), [dart.nullable(diagnostics$.DiagnosticsNode), widget_inspector.InspectorSerializationDelegate]),
    [_isValueCreatedByLocalProject]: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    [_isLocalCreationLocation]: dart.fnType(core.bool, [dart.nullable(widget_inspector._Location)]),
    [_safeJsonEncode]: dart.fnType(core.String, [dart.nullable(core.Object)]),
    [_truncateNodes]: dart.fnType(core.List$(diagnostics$.DiagnosticsNode), [core.Iterable$(diagnostics$.DiagnosticsNode), core.int]),
    [_nodesToJson]: dart.fnType(core.List$(core.Map$(core.String, dart.nullable(core.Object))), [core.List$(diagnostics$.DiagnosticsNode), widget_inspector.InspectorSerializationDelegate], {}, {parent: dart.nullable(diagnostics$.DiagnosticsNode)}),
    getProperties: dart.fnType(core.String, [core.String, core.String]),
    [_getProperties]: dart.fnType(core.List$(core.Object), [dart.nullable(core.String), core.String]),
    getChildren: dart.fnType(core.String, [core.String, core.String]),
    [_getChildren]: dart.fnType(core.List$(core.Object), [dart.nullable(core.String), core.String]),
    getChildrenSummaryTree: dart.fnType(core.String, [core.String, core.String]),
    [_getChildrenSummaryTree]: dart.fnType(core.List$(core.Object), [dart.nullable(core.String), core.String]),
    getChildrenDetailsSubtree: dart.fnType(core.String, [core.String, core.String]),
    [_getChildrenDetailsSubtree]: dart.fnType(core.List$(core.Object), [dart.nullable(core.String), core.String]),
    [_shouldShowInSummaryTree]: dart.fnType(core.bool, [diagnostics$.DiagnosticsNode]),
    [_getChildrenFiltered]: dart.fnType(core.List$(diagnostics$.DiagnosticsNode), [diagnostics$.DiagnosticsNode, widget_inspector.InspectorSerializationDelegate]),
    [_filterChildren]: dart.fnType(core.List$(diagnostics$.DiagnosticsNode), [core.List$(diagnostics$.DiagnosticsNode), widget_inspector.InspectorSerializationDelegate]),
    getRootWidget: dart.fnType(core.String, [core.String]),
    [_getRootWidget]: dart.fnType(dart.nullable(core.Map$(core.String, dart.nullable(core.Object))), [core.String]),
    getRootWidgetSummaryTree: dart.fnType(core.String, [core.String]),
    [_getRootWidgetSummaryTree]: dart.fnType(dart.nullable(core.Map$(core.String, dart.nullable(core.Object))), [core.String]),
    getRootRenderObject: dart.fnType(core.String, [core.String]),
    [_getRootRenderObject]: dart.fnType(dart.nullable(core.Map$(core.String, dart.nullable(core.Object))), [core.String]),
    getDetailsSubtree: dart.fnType(core.String, [core.String, core.String], {subtreeDepth: core.int}, {}),
    [_getDetailsSubtree]: dart.fnType(dart.nullable(core.Map$(core.String, dart.nullable(core.Object))), [dart.nullable(core.String), dart.nullable(core.String), core.int]),
    getSelectedRenderObject: dart.fnType(core.String, [core.String, core.String]),
    [_getSelectedRenderObject]: dart.fnType(dart.nullable(core.Map$(core.String, dart.nullable(core.Object))), [dart.nullable(core.String), core.String]),
    getSelectedWidget: dart.fnType(core.String, [dart.nullable(core.String), core.String]),
    screenshot: dart.fnType(async.Future$(dart.nullable(ui.Image)), [dart.nullable(core.Object)], {debugPaint: core.bool, margin: core.double, maxPixelRatio: core.double}, {height: core.double, width: core.double}),
    [_getSelectedWidget]: dart.fnType(dart.nullable(core.Map$(core.String, dart.nullable(core.Object))), [dart.nullable(core.String), core.String]),
    getSelectedSummaryWidget: dart.fnType(core.String, [core.String, core.String]),
    [_getSelectedSummaryWidget]: dart.fnType(dart.nullable(core.Map$(core.String, dart.nullable(core.Object))), [dart.nullable(core.String), core.String]),
    isWidgetCreationTracked: dart.fnType(core.bool, []),
    [_onFrameStart]: dart.fnType(dart.void, [core.Duration]),
    [_onFrameEnd]: dart.fnType(dart.void, [core.Duration]),
    [_postStatsEvent]: dart.fnType(dart.void, [core.String, widget_inspector._ElementLocationStatsTracker]),
    postEvent: dart.fnType(dart.void, [core.String, core.Map$(core.Object, dart.nullable(core.Object))]),
    [_onRebuildWidget]: dart.fnType(dart.void, [framework.Element, core.bool]),
    [_onPaint]: dart.fnType(dart.void, [object$.RenderObject]),
    performReassemble: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(widget_inspector.WidgetInspectorService, () => ({
    __proto__: dart.getGetters(widget_inspector.WidgetInspectorService.__proto__),
    [_registerServiceExtensionCallback]: dart.fnType(dart.void, [], {}, {callback: dart.fnType(async.Future$(core.Map$(core.String, dart.dynamic)), [core.Map$(core.String, core.String)]), name: core.String}),
    [_frameStart]: core.Duration
  }));
  dart.setSetterSignature(widget_inspector.WidgetInspectorService, () => ({
    __proto__: dart.getSetters(widget_inspector.WidgetInspectorService.__proto__),
    [_registerServiceExtensionCallback]: dart.fnType(dart.void, [], {}, {callback: dart.fnType(async.Future$(core.Map$(core.String, dart.dynamic)), [core.Map$(core.String, core.String)]), name: core.String}),
    [_frameStart]: core.Duration
  }));
  dart.setLibraryUri(widget_inspector.WidgetInspectorService, L3);
  dart.setFieldSignature(widget_inspector.WidgetInspectorService, () => ({
    __proto__: dart.getFields(widget_inspector.WidgetInspectorService.__proto__),
    [_serializeRing]: dart.finalFieldType(core.List$(dart.nullable(core.String))),
    [_serializeRingIndex]: dart.fieldType(core.int),
    selection: dart.finalFieldType(widget_inspector.InspectorSelection),
    selectionChangedCallback: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
    [_groups]: dart.finalFieldType(core.Map$(core.String, core.Set$(widget_inspector._InspectorReferenceData))),
    [_idToReferenceData]: dart.finalFieldType(core.Map$(core.String, widget_inspector._InspectorReferenceData)),
    [_objectToId]: dart.finalFieldType(core.Map$(core.Object, core.String)),
    [_nextId]: dart.fieldType(core.int),
    [_pubRootDirectories]: dart.fieldType(dart.nullable(core.List$(core.String))),
    [_trackRebuildDirtyWidgets]: dart.fieldType(core.bool),
    [_trackRepaintWidgets]: dart.fieldType(core.bool),
    [_structuredExceptionHandler]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [assertions.FlutterErrorDetails]))),
    [__WidgetInspectorService__registerServiceExtensionCallback]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [], {}, {callback: dart.fnType(async.Future$(core.Map$(core.String, dart.dynamic)), [core.Map$(core.String, core.String)]), name: core.String}))),
    [__WidgetInspectorService__registerServiceExtensionCallback_isSet]: dart.fieldType(core.bool),
    [_errorsSinceReload]: dart.fieldType(core.int),
    [_widgetCreationTracked]: dart.fieldType(dart.nullable(core.bool)),
    [__WidgetInspectorService__frameStart]: dart.fieldType(dart.nullable(core.Duration)),
    [__WidgetInspectorService__frameStart_isSet]: dart.fieldType(core.bool),
    [_rebuildStats]: dart.finalFieldType(widget_inspector._ElementLocationStatsTracker),
    [_repaintStats]: dart.finalFieldType(widget_inspector._ElementLocationStatsTracker)
  }));
  dart.defineLazy(widget_inspector.WidgetInspectorService, {
    /*widget_inspector.WidgetInspectorService._instance*/get _instance() {
      return new widget_inspector._WidgetInspectorService.new();
    },
    set _instance(_) {},
    /*widget_inspector.WidgetInspectorService._debugServiceExtensionsRegistered*/get _debugServiceExtensionsRegistered() {
      return false;
    },
    set _debugServiceExtensionsRegistered(_) {},
    /*widget_inspector.WidgetInspectorService._consoleObjectGroup*/get _consoleObjectGroup() {
      return "console-group";
    }
  }, false);
  widget_inspector._WidgetInspectorService = class _WidgetInspectorService extends core.Object {};
  dart.applyMixin(widget_inspector._WidgetInspectorService, widget_inspector.WidgetInspectorService);
  (widget_inspector._WidgetInspectorService.new = function() {
    widget_inspector.WidgetInspectorService[dart.mixinNew].call(this);
  }).prototype = widget_inspector._WidgetInspectorService.prototype;
  dart.addTypeTests(widget_inspector._WidgetInspectorService);
  dart.addTypeCaches(widget_inspector._WidgetInspectorService);
  dart.setLibraryUri(widget_inspector._WidgetInspectorService, L3);
  var _count = dart.privateName(widget_inspector, "_count");
  widget_inspector._LocationCount = class _LocationCount extends core.Object {
    get count() {
      return this[_count];
    }
    reset() {
      this[_count] = 0;
    }
    increment() {
      this[_count] = dart.notNull(this[_count]) + 1;
    }
  };
  (widget_inspector._LocationCount.new = function(opts) {
    let location = opts && 'location' in opts ? opts.location : null;
    if (location == null) dart.nullFailed(L2, 1928, 19, "location");
    let id = opts && 'id' in opts ? opts.id : null;
    if (id == null) dart.nullFailed(L2, 1929, 19, "id");
    let local = opts && 'local' in opts ? opts.local : null;
    if (local == null) dart.nullFailed(L2, 1930, 19, "local");
    this[_count] = 0;
    this.location = location;
    this.id = id;
    this.local = local;
    ;
  }).prototype = widget_inspector._LocationCount.prototype;
  dart.addTypeTests(widget_inspector._LocationCount);
  dart.addTypeCaches(widget_inspector._LocationCount);
  dart.setMethodSignature(widget_inspector._LocationCount, () => ({
    __proto__: dart.getMethods(widget_inspector._LocationCount.__proto__),
    reset: dart.fnType(dart.void, []),
    increment: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(widget_inspector._LocationCount, () => ({
    __proto__: dart.getGetters(widget_inspector._LocationCount.__proto__),
    count: core.int
  }));
  dart.setLibraryUri(widget_inspector._LocationCount, L3);
  dart.setFieldSignature(widget_inspector._LocationCount, () => ({
    __proto__: dart.getFields(widget_inspector._LocationCount.__proto__),
    id: dart.finalFieldType(core.int),
    local: dart.finalFieldType(core.bool),
    location: dart.finalFieldType(widget_inspector._Location),
    [_count]: dart.fieldType(core.int)
  }));
  var _stats = dart.privateName(widget_inspector, "_stats");
  var _location = dart.privateName(widget_inspector, "_location");
  widget_inspector._ElementLocationStatsTracker = class _ElementLocationStatsTracker extends core.Object {
    add(element) {
      if (element == null) dart.nullFailed(L2, 1989, 20, "element");
      let widget = element.widget;
      if (!widget_inspector._HasCreationLocation.is(widget)) {
        return;
      }
      let creationLocationSource = widget;
      let location = creationLocationSource[_location];
      let id = widget_inspector._toLocationId(location);
      let entry = null;
      if (dart.notNull(id) >= dart.notNull(this[_stats][$length]) || this[_stats][$_get](id) == null) {
        while (dart.notNull(id) >= dart.notNull(this[_stats][$length])) {
          this[_stats][$add](null);
        }
        entry = new widget_inspector._LocationCount.new({location: location, id: id, local: widget_inspector.WidgetInspectorService.instance[_isLocalCreationLocation](location)});
        if (dart.test(entry.local)) {
          this.newLocations[$add](entry);
        }
        this[_stats][$_set](id, entry);
      } else {
        entry = dart.nullCheck(this[_stats][$_get](id));
      }
      if (dart.test(entry.local)) {
        if (entry.count === 0) {
          this.active[$add](entry);
        }
        entry.increment();
      }
    }
    resetCounts() {
      for (let entry of this.active) {
        entry.reset();
      }
      this.active[$clear]();
    }
    exportToJson(startTime) {
      let t5, t5$, t5$0;
      if (startTime == null) dart.nullFailed(L2, 2047, 46, "startTime");
      let events = ListOfint().filled(dart.notNull(this.active[$length]) * 2, 0);
      let j = 0;
      for (let stat of this.active) {
        events[$_set]((t5 = j, j = t5 + 1, t5), stat.id);
        events[$_set]((t5$ = j, j = t5$ + 1, t5$), stat.count);
      }
      let json = new (IdentityMapOfString$dynamic()).from(["startTime", startTime.inMicroseconds, "events", events]);
      if (dart.test(this.newLocations[$isNotEmpty])) {
        let locationsJson = new (IdentityMapOfString$ListOfint()).new();
        for (let entry of this.newLocations) {
          let location = entry.location;
          let jsonForFile = locationsJson[$putIfAbsent](location.file, dart.fn(() => JSArrayOfint().of([]), VoidToListOfint()));
          t5$0 = jsonForFile;
          (() => {
            t5$0[$add](entry.id);
            t5$0[$add](location.line);
            t5$0[$add](location.column);
            return t5$0;
          })();
        }
        json[$_set]("newLocations", locationsJson);
      }
      this.resetCounts();
      this.newLocations[$clear]();
      return json;
    }
  };
  (widget_inspector._ElementLocationStatsTracker.new = function() {
    this[_stats] = JSArrayOf_LocationCountN().of([]);
    this.active = JSArrayOf_LocationCount().of([]);
    this.newLocations = JSArrayOf_LocationCount().of([]);
    ;
  }).prototype = widget_inspector._ElementLocationStatsTracker.prototype;
  dart.addTypeTests(widget_inspector._ElementLocationStatsTracker);
  dart.addTypeCaches(widget_inspector._ElementLocationStatsTracker);
  dart.setMethodSignature(widget_inspector._ElementLocationStatsTracker, () => ({
    __proto__: dart.getMethods(widget_inspector._ElementLocationStatsTracker.__proto__),
    add: dart.fnType(dart.void, [framework.Element]),
    resetCounts: dart.fnType(dart.void, []),
    exportToJson: dart.fnType(core.Map$(core.String, dart.dynamic), [core.Duration])
  }));
  dart.setLibraryUri(widget_inspector._ElementLocationStatsTracker, L3);
  dart.setFieldSignature(widget_inspector._ElementLocationStatsTracker, () => ({
    __proto__: dart.getFields(widget_inspector._ElementLocationStatsTracker.__proto__),
    [_stats]: dart.finalFieldType(core.List$(dart.nullable(widget_inspector._LocationCount))),
    active: dart.finalFieldType(core.List$(widget_inspector._LocationCount)),
    newLocations: dart.finalFieldType(core.List$(widget_inspector._LocationCount))
  }));
  var key$ = dart.privateName(framework, "Widget.key");
  var _location$ = dart.privateName(framework, "Widget._location");
  framework.Widget = class Widget extends diagnostics$.DiagnosticableTree {
    get key() {
      return this[key$];
    }
    set key(value) {
      super.key = value;
    }
    get [_location]() {
      return this[_location$];
    }
    set [_location](value) {
      super[_location] = value;
    }
    toStringShort() {
      let type = object.objectRuntimeType(this, "Widget");
      return this.key == null ? type : dart.str(type) + "-" + dart.str(this.key);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L4, 523, 56, "properties");
      super.debugFillProperties(properties);
      properties.defaultDiagnosticsTreeStyle = diagnostics$.DiagnosticsTreeStyle.dense;
    }
    _equals(other) {
      if (other == null) return false;
      return super[$_equals](other);
    }
    get hashCode() {
      return super[$hashCode];
    }
    static canUpdate(oldWidget, newWidget) {
      if (oldWidget == null) dart.nullFailed(L4, 546, 32, "oldWidget");
      if (newWidget == null) dart.nullFailed(L4, 546, 50, "newWidget");
      return dart.equals(dart.runtimeType(oldWidget), dart.runtimeType(newWidget)) && dart.equals(oldWidget.key, newWidget.key);
    }
    static _debugConcreteSubtype(widget) {
      if (widget == null) dart.nullFailed(L4, 555, 43, "widget");
      return framework.StatefulWidget.is(widget) ? 1 : framework.StatelessWidget.is(widget) ? 2 : 0;
    }
  };
  (framework.Widget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[key$] = key;
    this[_location$] = $36creationLocationd_0dea112b090073317d4;
    framework.Widget.__proto__.new.call(this);
    ;
  }).prototype = framework.Widget.prototype;
  dart.addTypeTests(framework.Widget);
  dart.addTypeCaches(framework.Widget);
  framework.Widget[dart.implements] = () => [widget_inspector._HasCreationLocation];
  dart.setLibraryUri(framework.Widget, L5);
  dart.setFieldSignature(framework.Widget, () => ({
    __proto__: dart.getFields(framework.Widget.__proto__),
    key: dart.finalFieldType(dart.nullable(key.Key)),
    [_location]: dart.finalFieldType(dart.nullable(widget_inspector._Location))
  }));
  dart.defineExtensionMethods(framework.Widget, ['_equals']);
  dart.defineExtensionAccessors(framework.Widget, ['hashCode']);
  widget_inspector._WidgetForTypeTests = class _WidgetForTypeTests extends framework.Widget {
    createElement() {
      return dart.throw(new core.UnimplementedError.new());
    }
  };
  (widget_inspector._WidgetForTypeTests.new = function(opts) {
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    widget_inspector._WidgetForTypeTests.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = widget_inspector._WidgetForTypeTests.prototype;
  dart.addTypeTests(widget_inspector._WidgetForTypeTests);
  dart.addTypeCaches(widget_inspector._WidgetForTypeTests);
  dart.setMethodSignature(widget_inspector._WidgetForTypeTests, () => ({
    __proto__: dart.getMethods(widget_inspector._WidgetForTypeTests.__proto__),
    createElement: dart.fnType(framework.Element, [])
  }));
  dart.setLibraryUri(widget_inspector._WidgetForTypeTests, L3);
  framework.StatefulWidget = class StatefulWidget extends framework.Widget {
    createElement() {
      return new framework.StatefulElement.new(this);
    }
  };
  (framework.StatefulWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    framework.StatefulWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.StatefulWidget.prototype;
  dart.addTypeTests(framework.StatefulWidget);
  dart.addTypeCaches(framework.StatefulWidget);
  dart.setMethodSignature(framework.StatefulWidget, () => ({
    __proto__: dart.getMethods(framework.StatefulWidget.__proto__),
    createElement: dart.fnType(framework.StatefulElement, [])
  }));
  dart.setLibraryUri(framework.StatefulWidget, L5);
  var child$0 = dart.privateName(widget_inspector, "WidgetInspector.child");
  var selectButtonBuilder$ = dart.privateName(widget_inspector, "WidgetInspector.selectButtonBuilder");
  widget_inspector.WidgetInspector = class WidgetInspector extends framework.StatefulWidget {
    get child() {
      return this[child$0];
    }
    set child(value) {
      super.child = value;
    }
    get selectButtonBuilder() {
      return this[selectButtonBuilder$];
    }
    set selectButtonBuilder(value) {
      super.selectButtonBuilder = value;
    }
    createState() {
      return new widget_inspector._WidgetInspectorState.new();
    }
  };
  (widget_inspector.WidgetInspector.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L2, 2112, 19, "child");
    let selectButtonBuilder = opts && 'selectButtonBuilder' in opts ? opts.selectButtonBuilder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$0] = child;
    this[selectButtonBuilder$] = selectButtonBuilder;
    if (!(child != null)) dart.assertFailed(null, L2, 2114, 15, "child != null");
    widget_inspector.WidgetInspector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = widget_inspector.WidgetInspector.prototype;
  dart.addTypeTests(widget_inspector.WidgetInspector);
  dart.addTypeCaches(widget_inspector.WidgetInspector);
  dart.setMethodSignature(widget_inspector.WidgetInspector, () => ({
    __proto__: dart.getMethods(widget_inspector.WidgetInspector.__proto__),
    createState: dart.fnType(widget_inspector._WidgetInspectorState, [])
  }));
  dart.setLibraryUri(widget_inspector.WidgetInspector, L3);
  dart.setFieldSignature(widget_inspector.WidgetInspector, () => ({
    __proto__: dart.getFields(widget_inspector.WidgetInspector.__proto__),
    child: dart.finalFieldType(framework.Widget),
    selectButtonBuilder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, dart.fnType(dart.void, [])])))
  }));
  var _lastPointerLocation = dart.privateName(widget_inspector, "_lastPointerLocation");
  var _ignorePointerKey = dart.privateName(widget_inspector, "_ignorePointerKey");
  var _selectionChangedCallback = dart.privateName(widget_inspector, "_selectionChangedCallback");
  var _hitTestHelper = dart.privateName(widget_inspector, "_hitTestHelper");
  var _inspectAt = dart.privateName(widget_inspector, "_inspectAt");
  var _handlePanDown = dart.privateName(widget_inspector, "_handlePanDown");
  var _handlePanUpdate = dart.privateName(widget_inspector, "_handlePanUpdate");
  var _handlePanEnd = dart.privateName(widget_inspector, "_handlePanEnd");
  var _handleTap = dart.privateName(widget_inspector, "_handleTap");
  var _handleEnableSelect = dart.privateName(widget_inspector, "_handleEnableSelect");
  var C9;
  var C10;
  var C11;
  var C12;
  var C8;
  var C7;
  var C15;
  var C16;
  var C17;
  var C18;
  var C19;
  var C20;
  var C21;
  var C14;
  var C13;
  var C24;
  var C25;
  var C26;
  var C23;
  var C22;
  var C29;
  var C28;
  var C27;
  var C32;
  var C31;
  var C30;
  var _debugLifecycleState = dart.privateName(framework, "_debugLifecycleState");
  var _element = dart.privateName(framework, "_element");
  var _widget = dart.privateName(framework, "_widget");
  var _debugTypesAreRight = dart.privateName(framework, "_debugTypesAreRight");
  const _is_State_default = Symbol('_is_State_default');
  var _widget$ = dart.privateName(framework, "State._widget");
  framework.State$ = dart.generic(T => {
    var TN = () => (TN = dart.constFn(dart.nullable(T)))();
    var ObjectFlagPropertyOfT = () => (ObjectFlagPropertyOfT = dart.constFn(diagnostics$.ObjectFlagProperty$(T)))();
    const Object_Diagnosticable$36 = class Object_Diagnosticable extends core.Object {};
    (Object_Diagnosticable$36.new = function() {
    }).prototype = Object_Diagnosticable$36.prototype;
    dart.applyMixin(Object_Diagnosticable$36, diagnostics$.Diagnosticable);
    class State extends Object_Diagnosticable$36 {
      get [_widget]() {
        return this[_widget$];
      }
      set [_widget](value) {
        this[_widget$] = TN().as(value);
      }
      get widget() {
        return dart.nullCheck(this[_widget]);
      }
      [_debugTypesAreRight](widget) {
        if (widget == null) dart.nullFailed(L4, 1075, 35, "widget");
        return T.is(widget);
      }
      get context() {
        if (!dart.test(dart.fn(() => {
          if (this[_element] == null) {
            dart.throw(assertions.FlutterError.new("This widget has been unmounted, so the State no longer has a context (and should be considered defunct). \n" + "Consider canceling any active work during \"dispose\" or using the \"mounted\" getter to determine if the State is still active."));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 1088, 12, "() {\r\n      if (_element == null) {\r\n        throw FlutterError(\r\n          'This widget has been unmounted, so the State no longer has a context (and should be considered defunct). \\n'\r\n          'Consider canceling any active work during \"dispose\" or using the \"mounted\" getter to determine if the State is still active.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
        return dart.nullCheck(this[_element]);
      }
      get mounted() {
        return this[_element] != null;
      }
      initState() {
        if (!dart.equals(this[_debugLifecycleState], framework._StateLifecycle.created)) dart.assertFailed(null, L4, 1146, 12, "_debugLifecycleState == _StateLifecycle.created");
      }
      didUpdateWidget(oldWidget) {
        T.as(oldWidget);
        if (oldWidget == null) dart.nullFailed(L4, 1169, 36, "oldWidget");
      }
      reassemble() {
      }
      setState(fn) {
        if (fn == null) dart.nullFailed(L4, 1229, 30, "fn");
        if (!(fn != null)) dart.assertFailed(null, L4, 1230, 12, "fn != null");
        if (!dart.test(dart.fn(() => {
          if (dart.equals(this[_debugLifecycleState], framework._StateLifecycle.defunct)) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("setState() called after dispose(): " + dart.str(this)), new assertions.ErrorDescription.new("This error happens if you call setState() on a State object for a widget that " + "no longer appears in the widget tree (e.g., whose parent widget no longer " + "includes the widget in its build). This error can occur when code calls " + "setState() from a timer or an animation callback."), new assertions.ErrorHint.new("The preferred solution is " + "to cancel the timer or stop listening to the animation in the dispose() " + "callback. Another solution is to check the \"mounted\" property of this " + "object before calling setState() to ensure the object is still in the " + "tree."), new assertions.ErrorHint.new("This error might indicate a memory leak if setState() is being called " + "because another object is retaining a reference to this State object " + "after it has been removed from the tree. To avoid memory leaks, " + "consider breaking the reference to this object during dispose().")])));
          }
          if (dart.equals(this[_debugLifecycleState], framework._StateLifecycle.created) && !dart.test(this.mounted)) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("setState() called in constructor: " + dart.str(this)), new assertions.ErrorHint.new("This happens when you call setState() on a State object for a widget that " + "hasn't been inserted into the widget tree yet. It is not necessary to call " + "setState() in the constructor, since the state is already assumed to be dirty " + "when it is initially created.")])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 1231, 12, "() {\r\n      if (_debugLifecycleState == _StateLifecycle.defunct) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('setState() called after dispose(): $this'),\r\n          ErrorDescription(\r\n            'This error happens if you call setState() on a State object for a widget that '\r\n            'no longer appears in the widget tree (e.g., whose parent widget no longer '\r\n            'includes the widget in its build). This error can occur when code calls '\r\n            'setState() from a timer or an animation callback.'\r\n          ),\r\n          ErrorHint(\r\n            'The preferred solution is '\r\n            'to cancel the timer or stop listening to the animation in the dispose() '\r\n            'callback. Another solution is to check the \"mounted\" property of this '\r\n            'object before calling setState() to ensure the object is still in the '\r\n            'tree.'\r\n          ),\r\n          ErrorHint(\r\n            'This error might indicate a memory leak if setState() is being called '\r\n            'because another object is retaining a reference to this State object '\r\n            'after it has been removed from the tree. To avoid memory leaks, '\r\n            'consider breaking the reference to this object during dispose().'\r\n          ),\r\n        ]);\r\n      }\r\n      if (_debugLifecycleState == _StateLifecycle.created && !mounted) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('setState() called in constructor: $this'),\r\n          ErrorHint(\r\n            'This happens when you call setState() on a State object for a widget that '\r\n            \"hasn't been inserted into the widget tree yet. It is not necessary to call \"\r\n            'setState() in the constructor, since the state is already assumed to be dirty '\r\n            'when it is initially created.'\r\n          ),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
        let result = fn();
        if (!dart.test(dart.fn(() => {
          if (async.Future.is(result)) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("setState() callback argument returned a Future."), new assertions.ErrorDescription.new("The setState() method on " + dart.str(this) + " was called with a closure or method that " + "returned a Future. Maybe it is marked as \"async\"."), new assertions.ErrorHint.new("Instead of performing asynchronous work inside a call to setState(), first " + "execute the work (without updating the widget state), and then synchronously " + "update the state inside a call to setState().")])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 1270, 12, "() {\r\n      if (result is Future) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('setState() callback argument returned a Future.'),\r\n          ErrorDescription(\r\n            'The setState() method on $this was called with a closure or method that '\r\n            'returned a Future. Maybe it is marked as \"async\".'\r\n          ),\r\n          ErrorHint(\r\n            'Instead of performing asynchronous work inside a call to setState(), first '\r\n            'execute the work (without updating the widget state), and then synchronously '\r\n           'update the state inside a call to setState().'\r\n          ),\r\n        ]);\r\n      }\r\n      // We ignore other types of return values so that you can do things like:\r\n      //   setState(() => x = 3);\r\n      return true;\r\n    }()");
        dart.nullCheck(this[_element]).markNeedsBuild();
      }
      deactivate() {
      }
      dispose() {
        if (!dart.equals(this[_debugLifecycleState], framework._StateLifecycle.ready)) dart.assertFailed(null, L4, 1342, 12, "_debugLifecycleState == _StateLifecycle.ready");
        if (!dart.test(dart.fn(() => {
          this[_debugLifecycleState] = framework._StateLifecycle.defunct;
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 1343, 12, "() {\r\n      _debugLifecycleState = _StateLifecycle.defunct;\r\n      return true;\r\n    }()");
      }
      didChangeDependencies() {
      }
      debugFillProperties(properties) {
        if (properties == null) dart.nullFailed(L4, 1474, 56, "properties");
        super.debugFillProperties(properties);
        if (!dart.test(dart.fn(() => {
          properties.add(new (EnumPropertyOf_StateLifecycle()).new("lifecycle state", this[_debugLifecycleState], {defaultValue: framework._StateLifecycle.ready}));
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 1476, 12, "() {\r\n      properties.add(EnumProperty<_StateLifecycle>('lifecycle state', _debugLifecycleState, defaultValue: _StateLifecycle.ready));\r\n      return true;\r\n    }()");
        properties.add(new (ObjectFlagPropertyOfT()).new("_widget", this[_widget], {ifNull: "no widget"}));
        properties.add(new (ObjectFlagPropertyOfStatefulElement()).new("_element", this[_element], {ifNull: "not mounted"}));
      }
    }
    (State.new = function() {
      this[_widget$] = null;
      this[_debugLifecycleState] = framework._StateLifecycle.created;
      this[_element] = null;
      ;
    }).prototype = State.prototype;
    dart.addTypeTests(State);
    State.prototype[_is_State_default] = true;
    dart.addTypeCaches(State);
    dart.setMethodSignature(State, () => ({
      __proto__: dart.getMethods(State.__proto__),
      [_debugTypesAreRight]: dart.fnType(core.bool, [framework.Widget]),
      initState: dart.fnType(dart.void, []),
      didUpdateWidget: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      reassemble: dart.fnType(dart.void, []),
      setState: dart.fnType(dart.void, [dart.fnType(dart.void, [])]),
      deactivate: dart.fnType(dart.void, []),
      dispose: dart.fnType(dart.void, []),
      didChangeDependencies: dart.fnType(dart.void, [])
    }));
    dart.setGetterSignature(State, () => ({
      __proto__: dart.getGetters(State.__proto__),
      widget: T,
      context: framework.BuildContext,
      mounted: core.bool
    }));
    dart.setLibraryUri(State, L5);
    dart.setFieldSignature(State, () => ({
      __proto__: dart.getFields(State.__proto__),
      [_widget]: dart.fieldType(dart.nullable(T)),
      [_debugLifecycleState]: dart.fieldType(framework._StateLifecycle),
      [_element]: dart.fieldType(dart.nullable(framework.StatefulElement))
    }));
    return State;
  });
  framework.State = framework.State$();
  dart.addTypeTests(framework.State, _is_State_default);
  binding$5.WidgetsBindingObserver = class WidgetsBindingObserver extends core.Object {
    didPopRoute() {
      return FutureOfbool().value(false);
    }
    didPushRoute(route) {
      if (route == null) dart.nullFailed(L6, 106, 36, "route");
      return FutureOfbool().value(false);
    }
    didPushRouteInformation(routeInformation) {
      if (routeInformation == null) dart.nullFailed(L6, 120, 57, "routeInformation");
      return this.didPushRoute(dart.nullCheck(routeInformation.location));
    }
    didChangeMetrics() {
    }
    didChangeTextScaleFactor() {
    }
    didChangePlatformBrightness() {
    }
    didChangeLocales(locales) {
    }
    didChangeAppLifecycleState(state) {
      if (state == null) dart.nullFailed(L6, 257, 53, "state");
    }
    didHaveMemoryPressure() {
    }
    didChangeAccessibilityFeatures() {
    }
  };
  (binding$5.WidgetsBindingObserver.new = function() {
    ;
  }).prototype = binding$5.WidgetsBindingObserver.prototype;
  dart.addTypeTests(binding$5.WidgetsBindingObserver);
  dart.addTypeCaches(binding$5.WidgetsBindingObserver);
  dart.setMethodSignature(binding$5.WidgetsBindingObserver, () => ({
    __proto__: dart.getMethods(binding$5.WidgetsBindingObserver.__proto__),
    didPopRoute: dart.fnType(async.Future$(core.bool), []),
    didPushRoute: dart.fnType(async.Future$(core.bool), [core.String]),
    didPushRouteInformation: dart.fnType(async.Future$(core.bool), [router.RouteInformation]),
    didChangeMetrics: dart.fnType(dart.void, []),
    didChangeTextScaleFactor: dart.fnType(dart.void, []),
    didChangePlatformBrightness: dart.fnType(dart.void, []),
    didChangeLocales: dart.fnType(dart.void, [dart.nullable(core.List$(ui.Locale))]),
    didChangeAppLifecycleState: dart.fnType(dart.void, [ui.AppLifecycleState]),
    didHaveMemoryPressure: dart.fnType(dart.void, []),
    didChangeAccessibilityFeatures: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(binding$5.WidgetsBindingObserver, L7);
  const State_WidgetsBindingObserver$36 = class State_WidgetsBindingObserver extends framework.State$(widget_inspector.WidgetInspector) {};
  (State_WidgetsBindingObserver$36.new = function() {
    State_WidgetsBindingObserver$36.__proto__.new.call(this);
  }).prototype = State_WidgetsBindingObserver$36.prototype;
  dart.applyMixin(State_WidgetsBindingObserver$36, binding$5.WidgetsBindingObserver);
  widget_inspector._WidgetInspectorState = class _WidgetInspectorState extends State_WidgetsBindingObserver$36 {
    initState() {
      super.initState();
      this[_selectionChangedCallback] = dart.fn(() => {
        this.setState(dart.fn(() => {
        }, VoidTovoid()));
      }, VoidTovoid());
      widget_inspector.WidgetInspectorService.instance.selectionChangedCallback = this[_selectionChangedCallback];
    }
    dispose() {
      if (dart.equals(widget_inspector.WidgetInspectorService.instance.selectionChangedCallback, this[_selectionChangedCallback])) {
        widget_inspector.WidgetInspectorService.instance.selectionChangedCallback = null;
      }
      super.dispose();
    }
    [_hitTestHelper](hits, edgeHits, position, object, transform) {
      if (hits == null) dart.nullFailed(L2, 2175, 24, "hits");
      if (edgeHits == null) dart.nullFailed(L2, 2176, 24, "edgeHits");
      if (position == null) dart.nullFailed(L2, 2177, 12, "position");
      if (object == null) dart.nullFailed(L2, 2178, 18, "object");
      if (transform == null) dart.nullFailed(L2, 2179, 13, "transform");
      let hit = false;
      let inverse = vector_math_64.Matrix4.tryInvert(transform);
      if (inverse == null) {
        return false;
      }
      let localPosition = matrix_utils.MatrixUtils.transformPoint(inverse, position);
      let children = object.debugDescribeChildren();
      for (let i = dart.notNull(children[$length]) - 1; i >= 0; i = i - 1) {
        let diagnostics = children[$_get](i);
        if (!(diagnostics != null)) dart.assertFailed(null, L2, 2193, 14, "diagnostics != null");
        if (dart.equals(diagnostics.style, diagnostics$.DiagnosticsTreeStyle.offstage) || !object$.RenderObject.is(diagnostics.value)) continue;
        let child = object$.RenderObject.as(dart.nullCheck(diagnostics.value));
        let paintClip = object.describeApproximatePaintClip(child);
        if (paintClip != null && !dart.test(paintClip.contains(localPosition))) continue;
        let childTransform = transform.clone();
        object.applyPaintTransform(child, childTransform);
        if (dart.test(this[_hitTestHelper](hits, edgeHits, position, child, childTransform))) hit = true;
      }
      let bounds = object.semanticBounds;
      if (dart.test(bounds.contains(localPosition))) {
        hit = true;
        if (!dart.test(bounds.deflate(2).contains(localPosition))) edgeHits[$add](object);
      }
      if (hit) hits[$add](object);
      return hit;
    }
    hitTest(position, root) {
      if (position == null) dart.nullFailed(L2, 2229, 37, "position");
      if (root == null) dart.nullFailed(L2, 2229, 60, "root");
      let regularHits = JSArrayOfRenderObject().of([]);
      let edgeHits = JSArrayOfRenderObject().of([]);
      this[_hitTestHelper](regularHits, edgeHits, position, root, root.getTransformTo(null));
      function _area(object) {
        if (object == null) dart.nullFailed(L2, 2235, 31, "object");
        let size = object.semanticBounds.size;
        return dart.notNull(size.width) * dart.notNull(size.height);
      }
      dart.fn(_area, RenderObjectTodouble());
      regularHits[$sort](dart.fn((a, b) => {
        if (a == null) dart.nullFailed(L2, 2239, 36, "a");
        if (b == null) dart.nullFailed(L2, 2239, 52, "b");
        return _area(a)[$compareTo](_area(b));
      }, RenderObjectAndRenderObjectToint()));
      let hits = (() => {
        let t5 = new (_HashSetOfRenderObject()).new();
        for (let t6 of edgeHits)
          t5.add(t6);
        for (let t7 of regularHits)
          t5.add(t7);
        return t5;
      })();
      return hits[$toList]();
    }
    [_inspectAt](position) {
      if (position == null) dart.nullFailed(L2, 2247, 26, "position");
      if (!dart.test(this.isSelectMode)) return;
      let ignorePointer = proxy_box.RenderIgnorePointer.as(dart.nullCheck(dart.nullCheck(this[_ignorePointerKey].currentContext).findRenderObject()));
      let userRender = dart.nullCheck(ignorePointer.child);
      let selected = this.hitTest(position, userRender);
      this.setState(dart.fn(() => {
        this.selection.candidates = selected;
      }, VoidTovoid()));
    }
    [_handlePanDown](event) {
      if (event == null) dart.nullFailed(L2, 2260, 39, "event");
      this[_lastPointerLocation] = event.globalPosition;
      this[_inspectAt](event.globalPosition);
    }
    [_handlePanUpdate](event) {
      if (event == null) dart.nullFailed(L2, 2265, 43, "event");
      this[_lastPointerLocation] = event.globalPosition;
      this[_inspectAt](event.globalPosition);
    }
    [_handlePanEnd](details) {
      if (details == null) dart.nullFailed(L2, 2270, 37, "details");
      let bounds = ui.Offset.zero['&'](dart.nullCheck(binding$5.WidgetsBinding.instance).window.physicalSize['/'](dart.nullCheck(binding$5.WidgetsBinding.instance).window.devicePixelRatio)).deflate(1);
      if (!dart.test(bounds.contains(dart.nullCheck(this[_lastPointerLocation])))) {
        this.setState(dart.fn(() => {
          this.selection.clear();
        }, VoidTovoid()));
      }
    }
    [_handleTap]() {
      if (!dart.test(this.isSelectMode)) return;
      if (this[_lastPointerLocation] != null) {
        this[_inspectAt](dart.nullCheck(this[_lastPointerLocation]));
        developer.inspect(this.selection.current);
      }
      this.setState(dart.fn(() => {
        if (this.widget.selectButtonBuilder != null) this.isSelectMode = false;
      }, VoidTovoid()));
    }
    [_handleEnableSelect]() {
      this.setState(dart.fn(() => {
        this.isSelectMode = true;
      }, VoidTovoid()));
    }
    build(context) {
      if (context == null) dart.nullFailed(L2, 2307, 29, "context");
      return new basic.Stack.new({children: (() => {
          let t8 = JSArrayOfWidget().of([]);
          t8.push(new gesture_detector.GestureDetector.new({onTap: dart.bind(this, _handleTap), onPanDown: dart.bind(this, _handlePanDown), onPanEnd: dart.bind(this, _handlePanEnd), onPanUpdate: dart.bind(this, _handlePanUpdate), behavior: proxy_box.HitTestBehavior.opaque, excludeFromSemantics: true, child: new basic.IgnorePointer.new({ignoring: this.isSelectMode, key: this[_ignorePointerKey], ignoringSemantics: false, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C7 || CT.C7}), $creationLocationd_0dea112b090073317d4: C13 || CT.C13}));
          if (!dart.test(this.isSelectMode) && this.widget.selectButtonBuilder != null) t8.push(new basic.Positioned.new({left: 10, bottom: 10, child: dart.nullCheck(this.widget.selectButtonBuilder)(context, dart.bind(this, _handleEnableSelect)), $creationLocationd_0dea112b090073317d4: C22 || CT.C22}));
          t8.push(new widget_inspector._InspectorOverlay.new({selection: this.selection, $creationLocationd_0dea112b090073317d4: C27 || CT.C27}));
          return t8;
        })(), $creationLocationd_0dea112b090073317d4: C30 || CT.C30});
    }
  };
  (widget_inspector._WidgetInspectorState.new = function() {
    this[_lastPointerLocation] = null;
    this.isSelectMode = true;
    this[_ignorePointerKey] = GlobalKeyOfStateOfStatefulWidget().new();
    this[_selectionChangedCallback] = null;
    this.selection = widget_inspector.WidgetInspectorService.instance.selection;
    widget_inspector._WidgetInspectorState.__proto__.new.call(this);
    ;
  }).prototype = widget_inspector._WidgetInspectorState.prototype;
  dart.addTypeTests(widget_inspector._WidgetInspectorState);
  dart.addTypeCaches(widget_inspector._WidgetInspectorState);
  dart.setMethodSignature(widget_inspector._WidgetInspectorState, () => ({
    __proto__: dart.getMethods(widget_inspector._WidgetInspectorState.__proto__),
    [_hitTestHelper]: dart.fnType(core.bool, [core.List$(object$.RenderObject), core.List$(object$.RenderObject), ui.Offset, object$.RenderObject, vector_math_64.Matrix4]),
    hitTest: dart.fnType(core.List$(object$.RenderObject), [ui.Offset, object$.RenderObject]),
    [_inspectAt]: dart.fnType(dart.void, [ui.Offset]),
    [_handlePanDown]: dart.fnType(dart.void, [drag_details.DragDownDetails]),
    [_handlePanUpdate]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [_handlePanEnd]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    [_handleTap]: dart.fnType(dart.void, []),
    [_handleEnableSelect]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(widget_inspector._WidgetInspectorState, L3);
  dart.setFieldSignature(widget_inspector._WidgetInspectorState, () => ({
    __proto__: dart.getFields(widget_inspector._WidgetInspectorState.__proto__),
    [_lastPointerLocation]: dart.fieldType(dart.nullable(ui.Offset)),
    selection: dart.finalFieldType(widget_inspector.InspectorSelection),
    isSelectMode: dart.fieldType(core.bool),
    [_ignorePointerKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_selectionChangedCallback]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  dart.defineLazy(widget_inspector._WidgetInspectorState, {
    /*widget_inspector._WidgetInspectorState._edgeHitMargin*/get _edgeHitMargin() {
      return 2;
    }
  }, false);
  var _candidates = dart.privateName(widget_inspector, "_candidates");
  var _index = dart.privateName(widget_inspector, "_index");
  var _current = dart.privateName(widget_inspector, "_current");
  var _currentElement = dart.privateName(widget_inspector, "_currentElement");
  var _computeCurrent = dart.privateName(widget_inspector, "_computeCurrent");
  widget_inspector.InspectorSelection = class InspectorSelection extends core.Object {
    get candidates() {
      return this[_candidates];
    }
    set candidates(value) {
      if (value == null) dart.nullFailed(L2, 2344, 37, "value");
      this[_candidates] = value;
      this[_index] = 0;
      this[_computeCurrent]();
    }
    get index() {
      return this[_index];
    }
    set index(value) {
      if (value == null) dart.nullFailed(L2, 2353, 17, "value");
      this[_index] = value;
      this[_computeCurrent]();
    }
    clear() {
      this[_candidates] = JSArrayOfRenderObject().of([]);
      this[_index] = 0;
      this[_computeCurrent]();
    }
    get current() {
      return this[_current];
    }
    set current(value) {
      let t9, t9$;
      if (!dart.equals(this[_current], value)) {
        this[_current] = value;
        this[_currentElement] = (t9$ = DebugCreatorN().as((t9 = value, t9 == null ? null : t9.debugCreator)), t9$ == null ? null : t9$.element);
      }
    }
    get currentElement() {
      return this[_currentElement];
    }
    set currentElement(element) {
      if (!dart.equals(this.currentElement, element)) {
        this[_currentElement] = element;
        this[_current] = dart.nullCheck(element).findRenderObject();
      }
    }
    [_computeCurrent]() {
      let t9, t9$;
      if (dart.notNull(this[_index]) < dart.notNull(this.candidates[$length])) {
        this[_current] = this.candidates[$_get](this.index);
        this[_currentElement] = (t9$ = DebugCreatorN().as((t9 = this[_current], t9 == null ? null : t9.debugCreator)), t9$ == null ? null : t9$.element);
      } else {
        this[_current] = null;
        this[_currentElement] = null;
      }
    }
    get active() {
      return this[_current] != null && dart.test(dart.nullCheck(this[_current]).attached);
    }
  };
  (widget_inspector.InspectorSelection.new = function() {
    this[_candidates] = JSArrayOfRenderObject().of([]);
    this[_index] = 0;
    this[_current] = null;
    this[_currentElement] = null;
    ;
  }).prototype = widget_inspector.InspectorSelection.prototype;
  dart.addTypeTests(widget_inspector.InspectorSelection);
  dart.addTypeCaches(widget_inspector.InspectorSelection);
  dart.setMethodSignature(widget_inspector.InspectorSelection, () => ({
    __proto__: dart.getMethods(widget_inspector.InspectorSelection.__proto__),
    clear: dart.fnType(dart.void, []),
    [_computeCurrent]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(widget_inspector.InspectorSelection, () => ({
    __proto__: dart.getGetters(widget_inspector.InspectorSelection.__proto__),
    candidates: core.List$(object$.RenderObject),
    index: core.int,
    current: dart.nullable(object$.RenderObject),
    currentElement: dart.nullable(framework.Element),
    active: core.bool
  }));
  dart.setSetterSignature(widget_inspector.InspectorSelection, () => ({
    __proto__: dart.getSetters(widget_inspector.InspectorSelection.__proto__),
    candidates: core.List$(object$.RenderObject),
    index: core.int,
    current: dart.nullable(object$.RenderObject),
    currentElement: dart.nullable(framework.Element)
  }));
  dart.setLibraryUri(widget_inspector.InspectorSelection, L3);
  dart.setFieldSignature(widget_inspector.InspectorSelection, () => ({
    __proto__: dart.getFields(widget_inspector.InspectorSelection.__proto__),
    [_candidates]: dart.fieldType(core.List$(object$.RenderObject)),
    [_index]: dart.fieldType(core.int),
    [_current]: dart.fieldType(dart.nullable(object$.RenderObject)),
    [_currentElement]: dart.fieldType(dart.nullable(framework.Element))
  }));
  framework.RenderObjectWidget = class RenderObjectWidget extends framework.Widget {
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L4, 1856, 40, "context");
      object$.RenderObject.as(renderObject);
      if (renderObject == null) dart.nullFailed(L4, 1856, 72, "renderObject");
    }
    didUnmountRenderObject(renderObject) {
      object$.RenderObject.as(renderObject);
      if (renderObject == null) dart.nullFailed(L4, 1862, 54, "renderObject");
    }
  };
  (framework.RenderObjectWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    framework.RenderObjectWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.RenderObjectWidget.prototype;
  dart.addTypeTests(framework.RenderObjectWidget);
  dart.addTypeCaches(framework.RenderObjectWidget);
  dart.setMethodSignature(framework.RenderObjectWidget, () => ({
    __proto__: dart.getMethods(framework.RenderObjectWidget.__proto__),
    updateRenderObject: dart.fnType(dart.void, [framework.BuildContext, dart.nullable(core.Object)]),
    didUnmountRenderObject: dart.fnType(dart.void, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(framework.RenderObjectWidget, L5);
  framework.LeafRenderObjectWidget = class LeafRenderObjectWidget extends framework.RenderObjectWidget {
    createElement() {
      return new framework.LeafRenderObjectElement.new(this);
    }
  };
  (framework.LeafRenderObjectWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    framework.LeafRenderObjectWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.LeafRenderObjectWidget.prototype;
  dart.addTypeTests(framework.LeafRenderObjectWidget);
  dart.addTypeCaches(framework.LeafRenderObjectWidget);
  dart.setMethodSignature(framework.LeafRenderObjectWidget, () => ({
    __proto__: dart.getMethods(framework.LeafRenderObjectWidget.__proto__),
    createElement: dart.fnType(framework.LeafRenderObjectElement, [])
  }));
  dart.setLibraryUri(framework.LeafRenderObjectWidget, L5);
  var selection$ = dart.privateName(widget_inspector, "_InspectorOverlay.selection");
  widget_inspector._InspectorOverlay = class _InspectorOverlay extends framework.LeafRenderObjectWidget {
    get selection() {
      return this[selection$];
    }
    set selection(value) {
      super.selection = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L2, 2417, 59, "context");
      return new widget_inspector._RenderInspectorOverlay.new({selection: this.selection});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L2, 2422, 40, "context");
      widget_inspector._RenderInspectorOverlay.as(renderObject);
      if (renderObject == null) dart.nullFailed(L2, 2422, 73, "renderObject");
      renderObject.selection = this.selection;
    }
  };
  (widget_inspector._InspectorOverlay.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let selection = opts && 'selection' in opts ? opts.selection : null;
    if (selection == null) dart.nullFailed(L2, 2411, 19, "selection");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[selection$] = selection;
    widget_inspector._InspectorOverlay.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = widget_inspector._InspectorOverlay.prototype;
  dart.addTypeTests(widget_inspector._InspectorOverlay);
  dart.addTypeCaches(widget_inspector._InspectorOverlay);
  dart.setMethodSignature(widget_inspector._InspectorOverlay, () => ({
    __proto__: dart.getMethods(widget_inspector._InspectorOverlay.__proto__),
    createRenderObject: dart.fnType(widget_inspector._RenderInspectorOverlay, [framework.BuildContext])
  }));
  dart.setLibraryUri(widget_inspector._InspectorOverlay, L3);
  dart.setFieldSignature(widget_inspector._InspectorOverlay, () => ({
    __proto__: dart.getFields(widget_inspector._InspectorOverlay.__proto__),
    selection: dart.finalFieldType(widget_inspector.InspectorSelection)
  }));
  var _selection = dart.privateName(widget_inspector, "_selection");
  var C33;
  widget_inspector._RenderInspectorOverlay = class _RenderInspectorOverlay extends box$.RenderBox {
    get selection() {
      return this[_selection];
    }
    set selection(value) {
      if (value == null) dart.nullFailed(L2, 2435, 36, "value");
      if (!dart.equals(value, this[_selection])) {
        this[_selection] = value;
      }
      this.markNeedsPaint();
    }
    get sizedByParent() {
      return true;
    }
    get alwaysNeedsCompositing() {
      return true;
    }
    computeDryLayout(constraints) {
      if (constraints == null) dart.nullFailed(L2, 2449, 40, "constraints");
      return constraints.constrain(C33 || CT.C33);
    }
    paint(context, offset) {
      if (context == null) dart.nullFailed(L2, 2454, 30, "context");
      if (offset == null) dart.nullFailed(L2, 2454, 46, "offset");
      if (!dart.test(this.needsCompositing)) dart.assertFailed(null, L2, 2455, 12, "needsCompositing");
      context.addLayer(new widget_inspector._InspectorOverlayLayer.new({overlayRect: new ui.Rect.fromLTWH(offset.dx, offset.dy, this.size.width, this.size.height), selection: this.selection, rootRenderObject: object$.RenderObject.is(this.parent) ? object$.RenderObject.as(dart.nullCheck(this.parent)) : null}));
    }
  };
  (widget_inspector._RenderInspectorOverlay.new = function(opts) {
    let selection = opts && 'selection' in opts ? opts.selection : null;
    if (selection == null) dart.nullFailed(L2, 2429, 57, "selection");
    this[_selection] = selection;
    if (!(selection != null)) dart.assertFailed(null, L2, 2431, 14, "selection != null");
    widget_inspector._RenderInspectorOverlay.__proto__.new.call(this);
    ;
  }).prototype = widget_inspector._RenderInspectorOverlay.prototype;
  dart.addTypeTests(widget_inspector._RenderInspectorOverlay);
  dart.addTypeCaches(widget_inspector._RenderInspectorOverlay);
  dart.setGetterSignature(widget_inspector._RenderInspectorOverlay, () => ({
    __proto__: dart.getGetters(widget_inspector._RenderInspectorOverlay.__proto__),
    selection: widget_inspector.InspectorSelection
  }));
  dart.setSetterSignature(widget_inspector._RenderInspectorOverlay, () => ({
    __proto__: dart.getSetters(widget_inspector._RenderInspectorOverlay.__proto__),
    selection: widget_inspector.InspectorSelection
  }));
  dart.setLibraryUri(widget_inspector._RenderInspectorOverlay, L3);
  dart.setFieldSignature(widget_inspector._RenderInspectorOverlay, () => ({
    __proto__: dart.getFields(widget_inspector._RenderInspectorOverlay.__proto__),
    [_selection]: dart.fieldType(widget_inspector.InspectorSelection)
  }));
  widget_inspector._TransformedRect = class _TransformedRect extends core.Object {
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      return widget_inspector._TransformedRect.is(other) && dart.equals(other.rect, this.rect) && dart.equals(other.transform, this.transform);
    }
    get hashCode() {
      return ui.hashValues(this.rect, this.transform);
    }
  };
  (widget_inspector._TransformedRect.new = function(object, ancestor) {
    if (object == null) dart.nullFailed(L2, 2466, 33, "object");
    this.rect = object.semanticBounds;
    this.transform = object.getTransformTo(ancestor);
    ;
  }).prototype = widget_inspector._TransformedRect.prototype;
  dart.addTypeTests(widget_inspector._TransformedRect);
  dart.addTypeCaches(widget_inspector._TransformedRect);
  dart.setLibraryUri(widget_inspector._TransformedRect, L3);
  dart.setFieldSignature(widget_inspector._TransformedRect, () => ({
    __proto__: dart.getFields(widget_inspector._TransformedRect.__proto__),
    rect: dart.finalFieldType(ui.Rect),
    transform: dart.finalFieldType(vector_math_64.Matrix4)
  }));
  dart.defineExtensionMethods(widget_inspector._TransformedRect, ['_equals']);
  dart.defineExtensionAccessors(widget_inspector._TransformedRect, ['hashCode']);
  var overlayRect$ = dart.privateName(widget_inspector, "_InspectorOverlayRenderState.overlayRect");
  var selected$ = dart.privateName(widget_inspector, "_InspectorOverlayRenderState.selected");
  var candidates$ = dart.privateName(widget_inspector, "_InspectorOverlayRenderState.candidates");
  var tooltip$ = dart.privateName(widget_inspector, "_InspectorOverlayRenderState.tooltip");
  var textDirection$ = dart.privateName(widget_inspector, "_InspectorOverlayRenderState.textDirection");
  widget_inspector._InspectorOverlayRenderState = class _InspectorOverlayRenderState extends core.Object {
    get overlayRect() {
      return this[overlayRect$];
    }
    set overlayRect(value) {
      super.overlayRect = value;
    }
    get selected() {
      return this[selected$];
    }
    set selected(value) {
      super.selected = value;
    }
    get candidates() {
      return this[candidates$];
    }
    set candidates(value) {
      super.candidates = value;
    }
    get tooltip() {
      return this[tooltip$];
    }
    set tooltip(value) {
      super.tooltip = value;
    }
    get textDirection() {
      return this[textDirection$];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      return widget_inspector._InspectorOverlayRenderState.is(other) && dart.equals(other.overlayRect, this.overlayRect) && dart.equals(other.selected, this.selected) && dart.test(collections.listEquals(widget_inspector._TransformedRect, other.candidates, this.candidates)) && other.tooltip == this.tooltip;
    }
    get hashCode() {
      return ui.hashValues(this.overlayRect, this.selected, ui.hashList(this.candidates), this.tooltip);
    }
  };
  (widget_inspector._InspectorOverlayRenderState.new = function(opts) {
    let overlayRect = opts && 'overlayRect' in opts ? opts.overlayRect : null;
    if (overlayRect == null) dart.nullFailed(L2, 2493, 19, "overlayRect");
    let selected = opts && 'selected' in opts ? opts.selected : null;
    if (selected == null) dart.nullFailed(L2, 2494, 19, "selected");
    let candidates = opts && 'candidates' in opts ? opts.candidates : null;
    if (candidates == null) dart.nullFailed(L2, 2495, 19, "candidates");
    let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
    if (tooltip == null) dart.nullFailed(L2, 2496, 19, "tooltip");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(L2, 2497, 19, "textDirection");
    this[overlayRect$] = overlayRect;
    this[selected$] = selected;
    this[candidates$] = candidates;
    this[tooltip$] = tooltip;
    this[textDirection$] = textDirection;
    ;
  }).prototype = widget_inspector._InspectorOverlayRenderState.prototype;
  dart.addTypeTests(widget_inspector._InspectorOverlayRenderState);
  dart.addTypeCaches(widget_inspector._InspectorOverlayRenderState);
  dart.setLibraryUri(widget_inspector._InspectorOverlayRenderState, L3);
  dart.setFieldSignature(widget_inspector._InspectorOverlayRenderState, () => ({
    __proto__: dart.getFields(widget_inspector._InspectorOverlayRenderState.__proto__),
    overlayRect: dart.finalFieldType(ui.Rect),
    selected: dart.finalFieldType(widget_inspector._TransformedRect),
    candidates: dart.finalFieldType(core.List$(widget_inspector._TransformedRect)),
    tooltip: dart.finalFieldType(core.String),
    textDirection: dart.finalFieldType(ui.TextDirection)
  }));
  dart.defineExtensionMethods(widget_inspector._InspectorOverlayRenderState, ['_equals']);
  dart.defineExtensionAccessors(widget_inspector._InspectorOverlayRenderState, ['hashCode']);
  var _lastState = dart.privateName(widget_inspector, "_lastState");
  var ___InspectorOverlayLayer__picture = dart.privateName(widget_inspector, "_#_InspectorOverlayLayer#_picture");
  var ___InspectorOverlayLayer__picture_isSet = dart.privateName(widget_inspector, "_#_InspectorOverlayLayer#_picture#isSet");
  var _textPainter = dart.privateName(widget_inspector, "_textPainter");
  var _textPainterMaxWidth = dart.privateName(widget_inspector, "_textPainterMaxWidth");
  var _picture = dart.privateName(widget_inspector, "_picture");
  var _isInInspectorRenderObjectTree = dart.privateName(widget_inspector, "_isInInspectorRenderObjectTree");
  var _buildPicture = dart.privateName(widget_inspector, "_buildPicture");
  var _paintDescription = dart.privateName(widget_inspector, "_paintDescription");
  var C34;
  var C35;
  widget_inspector._InspectorOverlayLayer = class _InspectorOverlayLayer extends layer.Layer {
    get [_picture]() {
      let t9;
      return dart.test(this[___InspectorOverlayLayer__picture_isSet]) ? (t9 = this[___InspectorOverlayLayer__picture], t9) : dart.throw(new _internal.LateError.fieldNI("_picture"));
    }
    set [_picture](t9) {
      if (t9 == null) dart.nullFailed(L2, 2570, 19, "null");
      this[___InspectorOverlayLayer__picture_isSet] = true;
      this[___InspectorOverlayLayer__picture] = t9;
    }
    addToScene(builder, layerOffset = C1 || CT.C1) {
      if (builder == null) dart.nullFailed(L2, 2576, 35, "builder");
      if (layerOffset == null) dart.nullFailed(L2, 2576, 53, "layerOffset");
      if (!dart.test(this.selection.active)) return;
      let selected = dart.nullCheck(this.selection.current);
      if (!dart.test(this[_isInInspectorRenderObjectTree](selected))) return;
      let candidates = JSArrayOf_TransformedRect().of([]);
      for (let candidate of this.selection.candidates) {
        if (dart.equals(candidate, selected) || !dart.test(candidate.attached) || !dart.test(this[_isInInspectorRenderObjectTree](candidate))) continue;
        candidates[$add](new widget_inspector._TransformedRect.new(candidate, this.rootRenderObject));
      }
      let state = new widget_inspector._InspectorOverlayRenderState.new({overlayRect: this.overlayRect, selected: new widget_inspector._TransformedRect.new(selected, this.rootRenderObject), tooltip: dart.nullCheck(this.selection.currentElement).toStringShort(), textDirection: ui.TextDirection.ltr, candidates: candidates});
      if (!state._equals(this[_lastState])) {
        this[_lastState] = state;
        this[_picture] = this[_buildPicture](state);
      }
      builder.addPicture(layerOffset, this[_picture]);
    }
    [_buildPicture](state) {
      let t10, t10$, t10$0, t10$1;
      if (state == null) dart.nullFailed(L2, 2608, 57, "state");
      let recorder = ui.PictureRecorder.new();
      let canvas = ui.Canvas.new(recorder, state.overlayRect);
      let size = state.overlayRect.size;
      canvas.translate(state.overlayRect.left, state.overlayRect.top);
      let fillPaint = (t10 = ui.Paint.new(), (() => {
        t10.style = ui.PaintingStyle.fill;
        t10.color = widget_inspector._kHighlightedRenderObjectFillColor;
        return t10;
      })());
      let borderPaint = (t10$ = ui.Paint.new(), (() => {
        t10$.style = ui.PaintingStyle.stroke;
        t10$.strokeWidth = 1.0;
        t10$.color = widget_inspector._kHighlightedRenderObjectBorderColor;
        return t10$;
      })());
      let selectedPaintRect = state.selected.rect.deflate(0.5);
      t10$0 = canvas;
      (() => {
        t10$0.save();
        t10$0.transform(state.selected.transform.storage);
        t10$0.drawRect(selectedPaintRect, fillPaint);
        t10$0.drawRect(selectedPaintRect, borderPaint);
        t10$0.restore();
        return t10$0;
      })();
      for (let transformedRect of state.candidates) {
        t10$1 = canvas;
        (() => {
          t10$1.save();
          t10$1.transform(transformedRect.transform.storage);
          t10$1.drawRect(transformedRect.rect.deflate(0.5), borderPaint);
          t10$1.restore();
          return t10$1;
        })();
      }
      let targetRect = matrix_utils.MatrixUtils.transformRect(state.selected.transform, state.selected.rect);
      let target = new ui.Offset.new(targetRect.left, targetRect.center.dy);
      let verticalOffset = dart.notNull(targetRect.height) / 2 + 9;
      this[_paintDescription](canvas, state.tooltip, state.textDirection, target, verticalOffset, size, targetRect);
      return recorder.endRecording();
    }
    [_paintDescription](canvas, message, textDirection, target, verticalOffset, size, targetRect) {
      let t10, t10$, t10$0, t10$1;
      if (canvas == null) dart.nullFailed(L2, 2659, 12, "canvas");
      if (message == null) dart.nullFailed(L2, 2660, 12, "message");
      if (textDirection == null) dart.nullFailed(L2, 2661, 19, "textDirection");
      if (target == null) dart.nullFailed(L2, 2662, 12, "target");
      if (verticalOffset == null) dart.nullFailed(L2, 2663, 12, "verticalOffset");
      if (size == null) dart.nullFailed(L2, 2664, 10, "size");
      if (targetRect == null) dart.nullFailed(L2, 2665, 10, "targetRect");
      canvas.save();
      let maxWidth = dart.notNull(size.width) - 2 * (10 + 5);
      let textSpan = TextSpanN().as((t10 = this[_textPainter], t10 == null ? null : t10.text));
      if (this[_textPainter] == null || dart.nullCheck(textSpan).text != message || this[_textPainterMaxWidth] !== maxWidth) {
        this[_textPainterMaxWidth] = maxWidth;
        this[_textPainter] = (t10$ = new text_painter.TextPainter.new(), (() => {
          t10$.maxLines = 5;
          t10$.ellipsis = "...";
          t10$.text = new text_span.TextSpan.new({style: widget_inspector._messageStyle, text: message});
          t10$.textDirection = textDirection;
          t10$.layout({maxWidth: maxWidth});
          return t10$;
        })());
      }
      let tooltipSize = dart.nullCheck(this[_textPainter]).size['+'](C34 || CT.C34);
      let tipOffset = geometry.positionDependentBox({size: size, childSize: tooltipSize, target: target, verticalOffset: verticalOffset, preferBelow: false});
      let tooltipBackground = (t10$0 = ui.Paint.new(), (() => {
        t10$0.style = ui.PaintingStyle.fill;
        t10$0.color = widget_inspector._kTooltipBackgroundColor;
        return t10$0;
      })());
      canvas.drawRect(new ui.Rect.fromPoints(tipOffset, tipOffset.translate(tooltipSize.width, tooltipSize.height)), tooltipBackground);
      let wedgeY = tipOffset.dy;
      let tooltipBelow = dart.notNull(tipOffset.dy) > dart.notNull(target.dy);
      if (!tooltipBelow) wedgeY = dart.notNull(wedgeY) + dart.notNull(tooltipSize.height);
      let wedgeX = math.max(core.double, tipOffset.dx, target.dx) + 10 * 2;
      wedgeX = math.min(core.double, wedgeX, dart.notNull(tipOffset.dx) + dart.notNull(tooltipSize.width) - 10 * 2);
      let wedge = JSArrayOfOffset().of([new ui.Offset.new(wedgeX - 10, wedgeY), new ui.Offset.new(wedgeX + 10, wedgeY), new ui.Offset.new(wedgeX, dart.notNull(wedgeY) + (tooltipBelow ? -10 : 10))]);
      canvas.drawPath((t10$1 = ui.Path.new(), (() => {
        t10$1.addPolygon(wedge, true);
        return t10$1;
      })()), tooltipBackground);
      dart.nullCheck(this[_textPainter]).paint(canvas, tipOffset['+'](C35 || CT.C35));
      canvas.restore();
    }
    findAnnotations(S, result, localPosition, opts) {
      if (result == null) dart.nullFailed(L2, 2721, 25, "result");
      if (localPosition == null) dart.nullFailed(L2, 2722, 12, "localPosition");
      let onlyFirst = opts && 'onlyFirst' in opts ? opts.onlyFirst : null;
      return false;
    }
    [_isInInspectorRenderObjectTree](child) {
      if (child == null) dart.nullFailed(L2, 2733, 52, "child");
      let current = RenderObjectN().as(child.parent);
      while (current != null) {
        if (stack.RenderStack.is(current) && widget_inspector._RenderInspectorOverlay.is(current.lastChild)) {
          return dart.equals(this.rootRenderObject, current);
        }
        current = RenderObjectN().as(current.parent);
      }
      return false;
    }
  };
  (widget_inspector._InspectorOverlayLayer.new = function(opts) {
    let overlayRect = opts && 'overlayRect' in opts ? opts.overlayRect : null;
    if (overlayRect == null) dart.nullFailed(L2, 2534, 19, "overlayRect");
    let selection = opts && 'selection' in opts ? opts.selection : null;
    if (selection == null) dart.nullFailed(L2, 2535, 19, "selection");
    let rootRenderObject = opts && 'rootRenderObject' in opts ? opts.rootRenderObject : null;
    this[_lastState] = null;
    this[___InspectorOverlayLayer__picture] = null;
    this[___InspectorOverlayLayer__picture_isSet] = false;
    this[_textPainter] = null;
    this[_textPainterMaxWidth] = null;
    this.overlayRect = overlayRect;
    this.selection = selection;
    this.rootRenderObject = rootRenderObject;
    if (!(overlayRect != null)) dart.assertFailed(null, L2, 2537, 15, "overlayRect != null");
    if (!(selection != null)) dart.assertFailed(null, L2, 2538, 15, "selection != null");
    widget_inspector._InspectorOverlayLayer.__proto__.new.call(this);
    let inDebugMode = false;
    if (!dart.test(dart.fn(() => {
      inDebugMode = true;
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L2, 2540, 12, "() {\r\n      inDebugMode = true;\r\n      return true;\r\n    }()");
    if (inDebugMode[$_equals](false)) {
      dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("The inspector should never be used in production mode due to the " + "negative performance impact.")])));
    }
  }).prototype = widget_inspector._InspectorOverlayLayer.prototype;
  dart.addTypeTests(widget_inspector._InspectorOverlayLayer);
  dart.addTypeCaches(widget_inspector._InspectorOverlayLayer);
  dart.setMethodSignature(widget_inspector._InspectorOverlayLayer, () => ({
    __proto__: dart.getMethods(widget_inspector._InspectorOverlayLayer.__proto__),
    addToScene: dart.fnType(dart.void, [ui.SceneBuilder], [ui.Offset]),
    [_buildPicture]: dart.fnType(ui.Picture, [widget_inspector._InspectorOverlayRenderState]),
    [_paintDescription]: dart.fnType(dart.void, [ui.Canvas, core.String, ui.TextDirection, ui.Offset, core.double, ui.Size, ui.Rect]),
    findAnnotations: dart.gFnType(S => [core.bool, [layer.AnnotationResult$(S), ui.Offset], {onlyFirst: dart.nullable(core.bool)}, {}], S => [core.Object]),
    [_isInInspectorRenderObjectTree]: dart.fnType(core.bool, [object$.RenderObject])
  }));
  dart.setGetterSignature(widget_inspector._InspectorOverlayLayer, () => ({
    __proto__: dart.getGetters(widget_inspector._InspectorOverlayLayer.__proto__),
    [_picture]: ui.Picture
  }));
  dart.setSetterSignature(widget_inspector._InspectorOverlayLayer, () => ({
    __proto__: dart.getSetters(widget_inspector._InspectorOverlayLayer.__proto__),
    [_picture]: ui.Picture
  }));
  dart.setLibraryUri(widget_inspector._InspectorOverlayLayer, L3);
  dart.setFieldSignature(widget_inspector._InspectorOverlayLayer, () => ({
    __proto__: dart.getFields(widget_inspector._InspectorOverlayLayer.__proto__),
    selection: dart.fieldType(widget_inspector.InspectorSelection),
    overlayRect: dart.finalFieldType(ui.Rect),
    rootRenderObject: dart.finalFieldType(dart.nullable(object$.RenderObject)),
    [_lastState]: dart.fieldType(dart.nullable(widget_inspector._InspectorOverlayRenderState)),
    [___InspectorOverlayLayer__picture]: dart.fieldType(dart.nullable(ui.Picture)),
    [___InspectorOverlayLayer__picture_isSet]: dart.fieldType(core.bool),
    [_textPainter]: dart.fieldType(dart.nullable(text_painter.TextPainter)),
    [_textPainterMaxWidth]: dart.fieldType(dart.nullable(core.double))
  }));
  widget_inspector._HasCreationLocation = class _HasCreationLocation extends core.Object {};
  (widget_inspector._HasCreationLocation.new = function() {
    ;
  }).prototype = widget_inspector._HasCreationLocation.prototype;
  dart.addTypeTests(widget_inspector._HasCreationLocation);
  dart.addTypeCaches(widget_inspector._HasCreationLocation);
  dart.setLibraryUri(widget_inspector._HasCreationLocation, L3);
  widget_inspector._Location = class _Location extends core.Object {
    get file() {
      return this[file$];
    }
    set file(value) {
      super.file = value;
    }
    get line() {
      return this[line$];
    }
    set line(value) {
      super.line = value;
    }
    get column() {
      return this[column$];
    }
    set column(value) {
      super.column = value;
    }
    get name() {
      return this[name$];
    }
    set name(value) {
      super.name = value;
    }
    get parameterLocations() {
      return this[parameterLocations$];
    }
    set parameterLocations(value) {
      super.parameterLocations = value;
    }
    toJsonMap() {
      let json = new (IdentityMapOfString$ObjectN()).from(["file", this.file, "line", this.line, "column", this.column]);
      if (this.name != null) {
        json[$_set]("name", this.name);
      }
      if (this.parameterLocations != null) {
        json[$_set]("parameterLocations", dart.nullCheck(this.parameterLocations)[$map](MapOfString$ObjectN(), dart.fn(location => {
          if (location == null) dart.nullFailed(L2, 2806, 22, "location");
          return location.toJsonMap();
        }, _LocationToMapOfString$ObjectN()))[$toList]());
      }
      return json;
    }
    toString() {
      let t10;
      let parts = JSArrayOfString().of([]);
      if (this.name != null) {
        parts[$add](dart.nullCheck(this.name));
      }
      parts[$add](this.file);
      t10 = parts;
      (() => {
        t10[$add](dart.str(this.line));
        t10[$add](dart.str(this.column));
        return t10;
      })();
      return parts[$join](":");
    }
  };
  (widget_inspector._Location.new = function(opts) {
    let file = opts && 'file' in opts ? opts.file : null;
    if (file == null) dart.nullFailed(L2, 2774, 19, "file");
    let line = opts && 'line' in opts ? opts.line : null;
    if (line == null) dart.nullFailed(L2, 2775, 19, "line");
    let column = opts && 'column' in opts ? opts.column : null;
    if (column == null) dart.nullFailed(L2, 2776, 19, "column");
    let name = opts && 'name' in opts ? opts.name : null;
    let parameterLocations = opts && 'parameterLocations' in opts ? opts.parameterLocations : null;
    this[file$] = file;
    this[line$] = line;
    this[column$] = column;
    this[name$] = name;
    this[parameterLocations$] = parameterLocations;
    ;
  }).prototype = widget_inspector._Location.prototype;
  dart.addTypeTests(widget_inspector._Location);
  dart.addTypeCaches(widget_inspector._Location);
  const file$ = _Location_file;
  const line$ = _Location_line;
  const column$ = _Location_column;
  const name$ = _Location_name;
  const parameterLocations$ = _Location_parameterLocations;
  dart.setMethodSignature(widget_inspector._Location, () => ({
    __proto__: dart.getMethods(widget_inspector._Location.__proto__),
    toJsonMap: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [])
  }));
  dart.setLibraryUri(widget_inspector._Location, L3);
  dart.setFieldSignature(widget_inspector._Location, () => ({
    __proto__: dart.getFields(widget_inspector._Location.__proto__),
    file: dart.finalFieldType(core.String),
    line: dart.finalFieldType(core.int),
    column: dart.finalFieldType(core.int),
    name: dart.finalFieldType(dart.nullable(core.String)),
    parameterLocations: dart.finalFieldType(dart.nullable(core.List$(widget_inspector._Location)))
  }));
  dart.defineExtensionMethods(widget_inspector._Location, ['toString']);
  var _nodesCreatedByLocalProject = dart.privateName(widget_inspector, "_nodesCreatedByLocalProject");
  var _interactive = dart.privateName(widget_inspector, "_interactive");
  var service$ = dart.privateName(widget_inspector, "InspectorSerializationDelegate.service");
  var groupName$ = dart.privateName(widget_inspector, "InspectorSerializationDelegate.groupName");
  var summaryTree$ = dart.privateName(widget_inspector, "InspectorSerializationDelegate.summaryTree");
  var maxDescendentsTruncatableNode$ = dart.privateName(widget_inspector, "InspectorSerializationDelegate.maxDescendentsTruncatableNode");
  var includeProperties$ = dart.privateName(widget_inspector, "InspectorSerializationDelegate.includeProperties");
  var subtreeDepth$ = dart.privateName(widget_inspector, "InspectorSerializationDelegate.subtreeDepth");
  var expandPropertyValues$ = dart.privateName(widget_inspector, "InspectorSerializationDelegate.expandPropertyValues");
  var addAdditionalPropertiesCallback$ = dart.privateName(widget_inspector, "InspectorSerializationDelegate.addAdditionalPropertiesCallback");
  widget_inspector.InspectorSerializationDelegate = class InspectorSerializationDelegate extends core.Object {
    get service() {
      return this[service$];
    }
    set service(value) {
      super.service = value;
    }
    get groupName() {
      return this[groupName$];
    }
    set groupName(value) {
      super.groupName = value;
    }
    get summaryTree() {
      return this[summaryTree$];
    }
    set summaryTree(value) {
      super.summaryTree = value;
    }
    get maxDescendentsTruncatableNode() {
      return this[maxDescendentsTruncatableNode$];
    }
    set maxDescendentsTruncatableNode(value) {
      super.maxDescendentsTruncatableNode = value;
    }
    get includeProperties() {
      return this[includeProperties$];
    }
    set includeProperties(value) {
      super.includeProperties = value;
    }
    get subtreeDepth() {
      return this[subtreeDepth$];
    }
    set subtreeDepth(value) {
      super.subtreeDepth = value;
    }
    get expandPropertyValues() {
      return this[expandPropertyValues$];
    }
    set expandPropertyValues(value) {
      super.expandPropertyValues = value;
    }
    get addAdditionalPropertiesCallback() {
      return this[addAdditionalPropertiesCallback$];
    }
    set addAdditionalPropertiesCallback(value) {
      super.addAdditionalPropertiesCallback = value;
    }
    get [_interactive]() {
      return this.groupName != null;
    }
    additionalNodeProperties(node) {
      let t10;
      if (node == null) dart.nullFailed(L2, 3045, 65, "node");
      let result = new (IdentityMapOfString$ObjectN()).new();
      let value = node.value;
      if (dart.test(this[_interactive])) {
        result[$_set]("objectId", this.service.toId(node, dart.nullCheck(this.groupName)));
        result[$_set]("valueId", this.service.toId(value, dart.nullCheck(this.groupName)));
      }
      if (dart.test(this.summaryTree)) {
        result[$_set]("summaryTree", true);
      }
      let creationLocation = widget_inspector._getCreationLocation(value);
      if (creationLocation != null) {
        result[$_set]("locationId", widget_inspector._toLocationId(creationLocation));
        result[$_set]("creationLocation", creationLocation.toJsonMap());
        if (dart.test(this.service[_isLocalCreationLocation](creationLocation))) {
          this[_nodesCreatedByLocalProject][$add](node);
          result[$_set]("createdByLocalProject", true);
        }
      }
      if (this.addAdditionalPropertiesCallback != null) {
        result[$addAll]((t10 = dart.nullCheck(this.addAdditionalPropertiesCallback)(node, this), t10 == null ? new (IdentityMapOfString$Object()).new() : t10));
      }
      return result;
    }
    delegateForNode(node) {
      if (node == null) dart.nullFailed(L2, 3071, 68, "node");
      return dart.test(this.summaryTree) || dart.notNull(this.subtreeDepth) > 1 || dart.test(this.service[_shouldShowInSummaryTree](node)) ? this.copyWith({subtreeDepth: dart.notNull(this.subtreeDepth) - 1}) : this;
    }
    filterChildren(children, owner) {
      if (children == null) dart.nullFailed(L2, 3083, 62, "children");
      if (owner == null) dart.nullFailed(L2, 3083, 88, "owner");
      return this.service[_filterChildren](children, this);
    }
    filterProperties(properties, owner) {
      if (properties == null) dart.nullFailed(L2, 3088, 64, "properties");
      if (owner == null) dart.nullFailed(L2, 3088, 92, "owner");
      let createdByLocalProject = this[_nodesCreatedByLocalProject][$contains](owner);
      return properties[$where](dart.fn(node => {
        if (node == null) dart.nullFailed(L2, 3090, 46, "node");
        return !dart.test(node.isFiltered(dart.test(createdByLocalProject) ? diagnostics$.DiagnosticLevel.fine : diagnostics$.DiagnosticLevel.info));
      }, DiagnosticsNodeTobool()))[$toList]();
    }
    truncateNodesList(nodes, owner) {
      if (nodes == null) dart.nullFailed(L2, 3096, 65, "nodes");
      if (dart.notNull(this.maxDescendentsTruncatableNode) >= 0 && dart.equals(dart.nullCheck(owner).allowTruncate, true) && dart.notNull(nodes[$length]) > dart.notNull(this.maxDescendentsTruncatableNode)) {
        nodes = this.service[_truncateNodes](nodes, this.maxDescendentsTruncatableNode);
      }
      return nodes;
    }
    copyWith(opts) {
      let t10, t10$;
      let subtreeDepth = opts && 'subtreeDepth' in opts ? opts.subtreeDepth : null;
      let includeProperties = opts && 'includeProperties' in opts ? opts.includeProperties : null;
      return new widget_inspector.InspectorSerializationDelegate.new({groupName: this.groupName, summaryTree: this.summaryTree, maxDescendentsTruncatableNode: this.maxDescendentsTruncatableNode, expandPropertyValues: this.expandPropertyValues, subtreeDepth: (t10 = subtreeDepth, t10 == null ? this.subtreeDepth : t10), includeProperties: (t10$ = includeProperties, t10$ == null ? this.includeProperties : t10$), service: this.service, addAdditionalPropertiesCallback: this.addAdditionalPropertiesCallback});
    }
  };
  (widget_inspector.InspectorSerializationDelegate.new = function(opts) {
    let groupName = opts && 'groupName' in opts ? opts.groupName : null;
    let summaryTree = opts && 'summaryTree' in opts ? opts.summaryTree : false;
    if (summaryTree == null) dart.nullFailed(L2, 2960, 10, "summaryTree");
    let maxDescendentsTruncatableNode = opts && 'maxDescendentsTruncatableNode' in opts ? opts.maxDescendentsTruncatableNode : -1;
    if (maxDescendentsTruncatableNode == null) dart.nullFailed(L2, 2961, 10, "maxDescendentsTruncatableNode");
    let expandPropertyValues = opts && 'expandPropertyValues' in opts ? opts.expandPropertyValues : true;
    if (expandPropertyValues == null) dart.nullFailed(L2, 2962, 10, "expandPropertyValues");
    let subtreeDepth = opts && 'subtreeDepth' in opts ? opts.subtreeDepth : 1;
    if (subtreeDepth == null) dart.nullFailed(L2, 2963, 10, "subtreeDepth");
    let includeProperties = opts && 'includeProperties' in opts ? opts.includeProperties : false;
    if (includeProperties == null) dart.nullFailed(L2, 2964, 10, "includeProperties");
    let service = opts && 'service' in opts ? opts.service : null;
    if (service == null) dart.nullFailed(L2, 2965, 19, "service");
    let addAdditionalPropertiesCallback = opts && 'addAdditionalPropertiesCallback' in opts ? opts.addAdditionalPropertiesCallback : null;
    this[_nodesCreatedByLocalProject] = JSArrayOfDiagnosticsNode().of([]);
    this[groupName$] = groupName;
    this[summaryTree$] = summaryTree;
    this[maxDescendentsTruncatableNode$] = maxDescendentsTruncatableNode;
    this[expandPropertyValues$] = expandPropertyValues;
    this[subtreeDepth$] = subtreeDepth;
    this[includeProperties$] = includeProperties;
    this[service$] = service;
    this[addAdditionalPropertiesCallback$] = addAdditionalPropertiesCallback;
    ;
  }).prototype = widget_inspector.InspectorSerializationDelegate.prototype;
  dart.addTypeTests(widget_inspector.InspectorSerializationDelegate);
  dart.addTypeCaches(widget_inspector.InspectorSerializationDelegate);
  widget_inspector.InspectorSerializationDelegate[dart.implements] = () => [diagnostics$.DiagnosticsSerializationDelegate];
  dart.setMethodSignature(widget_inspector.InspectorSerializationDelegate, () => ({
    __proto__: dart.getMethods(widget_inspector.InspectorSerializationDelegate.__proto__),
    additionalNodeProperties: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [diagnostics$.DiagnosticsNode]),
    delegateForNode: dart.fnType(diagnostics$.DiagnosticsSerializationDelegate, [diagnostics$.DiagnosticsNode]),
    filterChildren: dart.fnType(core.List$(diagnostics$.DiagnosticsNode), [core.List$(diagnostics$.DiagnosticsNode), diagnostics$.DiagnosticsNode]),
    filterProperties: dart.fnType(core.List$(diagnostics$.DiagnosticsNode), [core.List$(diagnostics$.DiagnosticsNode), diagnostics$.DiagnosticsNode]),
    truncateNodesList: dart.fnType(core.List$(diagnostics$.DiagnosticsNode), [core.List$(diagnostics$.DiagnosticsNode), dart.nullable(diagnostics$.DiagnosticsNode)]),
    copyWith: dart.fnType(diagnostics$.DiagnosticsSerializationDelegate, [], {includeProperties: dart.nullable(core.bool), subtreeDepth: dart.nullable(core.int)}, {})
  }));
  dart.setGetterSignature(widget_inspector.InspectorSerializationDelegate, () => ({
    __proto__: dart.getGetters(widget_inspector.InspectorSerializationDelegate.__proto__),
    [_interactive]: core.bool
  }));
  dart.setLibraryUri(widget_inspector.InspectorSerializationDelegate, L3);
  dart.setFieldSignature(widget_inspector.InspectorSerializationDelegate, () => ({
    __proto__: dart.getFields(widget_inspector.InspectorSerializationDelegate.__proto__),
    service: dart.finalFieldType(widget_inspector.WidgetInspectorService),
    groupName: dart.finalFieldType(dart.nullable(core.String)),
    summaryTree: dart.finalFieldType(core.bool),
    maxDescendentsTruncatableNode: dart.finalFieldType(core.int),
    includeProperties: dart.finalFieldType(core.bool),
    subtreeDepth: dart.finalFieldType(core.int),
    expandPropertyValues: dart.finalFieldType(core.bool),
    addAdditionalPropertiesCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(core.Map$(core.String, core.Object)), [diagnostics$.DiagnosticsNode, widget_inspector.InspectorSerializationDelegate]))),
    [_nodesCreatedByLocalProject]: dart.finalFieldType(core.List$(diagnostics$.DiagnosticsNode))
  }));
  widget_inspector._calculateSubtreeBoundsHelper = function _calculateSubtreeBoundsHelper(object, transform) {
    if (object == null) dart.nullFailed(L2, 287, 49, "object");
    if (transform == null) dart.nullFailed(L2, 287, 65, "transform");
    let bounds = matrix_utils.MatrixUtils.transformRect(transform, object.semanticBounds);
    object.visitChildren(dart.fn(child => {
      if (child == null) dart.nullFailed(L2, 290, 38, "child");
      let childTransform = transform.clone();
      object.applyPaintTransform(child, childTransform);
      let childBounds = widget_inspector._calculateSubtreeBoundsHelper(child, childTransform);
      let paintClip = object.describeApproximatePaintClip(child);
      if (paintClip != null) {
        let transformedPaintClip = matrix_utils.MatrixUtils.transformRect(transform, paintClip);
        childBounds = childBounds.intersect(transformedPaintClip);
      }
      if (dart.test(childBounds.isFinite) && !dart.test(childBounds.isEmpty)) {
        bounds = dart.test(bounds.isEmpty) ? childBounds : bounds.expandToInclude(childBounds);
      }
    }, RenderObjectTovoid()));
    return bounds;
  };
  widget_inspector._calculateSubtreeBounds = function _calculateSubtreeBounds(object) {
    if (object == null) dart.nullFailed(L2, 312, 43, "object");
    return widget_inspector._calculateSubtreeBoundsHelper(object, vector_math_64.Matrix4.identity());
  };
  widget_inspector._followDiagnosticableChain = function _followDiagnosticableChain(chain, opts) {
    if (chain == null) dart.nullFailed(L2, 638, 24, "chain");
    let name = opts && 'name' in opts ? opts.name : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let path = JSArrayOf_DiagnosticsPathNode().of([]);
    if (dart.test(chain[$isEmpty])) return path;
    let diagnostic = chain[$first].toDiagnosticsNode({name: name, style: style});
    for (let i = 1; i < dart.notNull(chain[$length]); i = i + 1) {
      let target = chain[$_get](i);
      let foundMatch = false;
      let children = diagnostic.getChildren();
      for (let j = 0; j < dart.notNull(children[$length]); j = j + 1) {
        let child = children[$_get](j);
        if (dart.equals(child.value, target)) {
          foundMatch = true;
          path[$add](new widget_inspector._DiagnosticsPathNode.new({node: diagnostic, children: children, childIndex: j}));
          diagnostic = child;
          break;
        }
      }
      if (!foundMatch) dart.assertFailed(null, L2, 663, 12, "foundMatch");
    }
    path[$add](new widget_inspector._DiagnosticsPathNode.new({node: diagnostic, children: diagnostic.getChildren()}));
    return path;
  };
  widget_inspector._isDebugCreator = function _isDebugCreator(node) {
    if (node == null) dart.nullFailed(L2, 2823, 38, "node");
    return object$.DiagnosticsDebugCreator.is(node);
  };
  widget_inspector.transformDebugCreator = function transformDebugCreator(properties) {
    if (properties == null) dart.nullFailed(L2, 2829, 75, "properties");
    return new (SyncIterableOfDiagnosticsNode()).new(function* transformDebugCreator() {
      let pending = JSArrayOfDiagnosticsNode().of([]);
      let foundStackTrace = false;
      for (let node of properties) {
        if (!foundStackTrace && assertions.DiagnosticsStackTrace.is(node)) foundStackTrace = true;
        if (dart.test(widget_inspector._isDebugCreator(node))) {
          yield* dart.nullCheck(widget_inspector._parseDiagnosticsNode(node));
        } else {
          if (foundStackTrace) {
            pending[$add](node);
          } else {
            yield node;
          }
        }
      }
      yield* pending;
    });
  };
  widget_inspector._parseDiagnosticsNode = function _parseDiagnosticsNode(node) {
    if (node == null) dart.nullFailed(L2, 2851, 66, "node");
    if (!dart.test(widget_inspector._isDebugCreator(node))) return null;
    let debugCreator = framework.DebugCreator.as(dart.nullCheck(node.value));
    let element = debugCreator.element;
    return widget_inspector._describeRelevantUserCode(element);
  };
  widget_inspector._describeRelevantUserCode = function _describeRelevantUserCode(element) {
    if (element == null) dart.nullFailed(L2, 2859, 61, "element");
    if (!dart.test(widget_inspector.WidgetInspectorService.instance.isWidgetCreationTracked())) {
      return JSArrayOfDiagnosticsNode().of([new assertions.ErrorDescription.new("Widget creation tracking is currently disabled. Enabling " + "it enables improved error messages. It can be enabled by passing " + "`--track-widget-creation` to `flutter run` or `flutter test`."), new assertions.ErrorSpacer.new()]);
    }
    let nodes = JSArrayOfDiagnosticsNode().of([]);
    function processElement(target) {
      if (target == null) dart.nullFailed(L2, 2871, 31, "target");
      if (dart.test(widget_inspector.debugIsLocalCreationLocation(target))) {
        nodes[$add](new diagnostics$.DiagnosticsBlock.new({name: "The relevant error-causing widget was", children: JSArrayOfDiagnosticsNode().of([new assertions.ErrorDescription.new(dart.str(target.widget.toStringShort()) + " " + dart.str(widget_inspector._describeCreationLocation(target)))])}));
        nodes[$add](new assertions.ErrorSpacer.new());
        return false;
      }
      return true;
    }
    dart.fn(processElement, ElementTobool());
    if (dart.test(processElement(element))) element.visitAncestorElements(processElement);
    return nodes;
  };
  widget_inspector.debugIsLocalCreationLocation = function debugIsLocalCreationLocation(object) {
    if (object == null) dart.nullFailed(L2, 2901, 42, "object");
    let isLocal = false;
    if (!dart.test(dart.fn(() => {
      let location = widget_inspector._getCreationLocation(object);
      if (location == null) isLocal = false;
      isLocal = widget_inspector.WidgetInspectorService.instance[_isLocalCreationLocation](location);
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L2, 2903, 10, "() {\r\n    final _Location? location = _getCreationLocation(object);\r\n    if (location == null)\r\n      isLocal =  false;\r\n    isLocal = WidgetInspectorService.instance._isLocalCreationLocation(location);\r\n    return true;\r\n  }()");
    return isLocal;
  };
  widget_inspector._describeCreationLocation = function _describeCreationLocation(object) {
    let t10;
    if (object == null) dart.nullFailed(L2, 2920, 42, "object");
    let location = widget_inspector._getCreationLocation(object);
    t10 = location;
    return t10 == null ? null : dart.toString(t10);
  };
  widget_inspector._getCreationLocation = function _getCreationLocation(object) {
    let candidate = framework.Element.is(object) ? object.widget : object;
    return widget_inspector._HasCreationLocation.is(candidate) ? candidate[_location] : null;
  };
  widget_inspector._toLocationId = function _toLocationId(location) {
    if (location == null) dart.nullFailed(L2, 2941, 29, "location");
    let id = widget_inspector._locationToId[$_get](location);
    if (id != null) {
      return id;
    }
    id = widget_inspector._locations[$length];
    widget_inspector._locations[$add](location);
    widget_inspector._locationToId[$_set](location, id);
    return id;
  };
  var Color_value = dart.privateName(ui, "Color.value");
  var C36;
  var C37;
  var C38;
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var C40;
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var C39;
  dart.defineLazy(widget_inspector, {
    /*widget_inspector._kMaxTooltipLines*/get _kMaxTooltipLines() {
      return 5;
    },
    /*widget_inspector._kTooltipBackgroundColor*/get _kTooltipBackgroundColor() {
      return C36 || CT.C36;
    },
    /*widget_inspector._kHighlightedRenderObjectFillColor*/get _kHighlightedRenderObjectFillColor() {
      return C37 || CT.C37;
    },
    /*widget_inspector._kHighlightedRenderObjectBorderColor*/get _kHighlightedRenderObjectBorderColor() {
      return C38 || CT.C38;
    },
    /*widget_inspector._kScreenEdgeMargin*/get _kScreenEdgeMargin() {
      return 10;
    },
    /*widget_inspector._kTooltipPadding*/get _kTooltipPadding() {
      return 5;
    },
    /*widget_inspector._kInspectButtonMargin*/get _kInspectButtonMargin() {
      return 10;
    },
    /*widget_inspector._kOffScreenMargin*/get _kOffScreenMargin() {
      return 1;
    },
    /*widget_inspector._messageStyle*/get _messageStyle() {
      return C39 || CT.C39;
    },
    /*widget_inspector._locationToId*/get _locationToId() {
      return new (LinkedMapOf_Location$int()).new();
    },
    /*widget_inspector._locations*/get _locations() {
      return JSArrayOf_Location().of([]);
    }
  }, false);
  framework.StatelessWidget = class StatelessWidget extends framework.Widget {
    createElement() {
      return new framework.StatelessElement.new(this);
    }
  };
  (framework.StatelessWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    framework.StatelessWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.StatelessWidget.prototype;
  dart.addTypeTests(framework.StatelessWidget);
  dart.addTypeCaches(framework.StatelessWidget);
  dart.setMethodSignature(framework.StatelessWidget, () => ({
    __proto__: dart.getMethods(framework.StatelessWidget.__proto__),
    createElement: dart.fnType(framework.StatelessElement, [])
  }));
  dart.setLibraryUri(framework.StatelessWidget, L5);
  var title$0 = dart.privateName(title$, "Title.title");
  var color$ = dart.privateName(title$, "Title.color");
  var child$1 = dart.privateName(title$, "Title.child");
  title$.Title = class Title extends framework.StatelessWidget {
    get title() {
      return this[title$0];
    }
    set title(value) {
      super.title = value;
    }
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    get child() {
      return this[child$1];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(L8, 42, 29, "context");
      system_chrome.SystemChrome.setApplicationSwitcherDescription(new system_chrome.ApplicationSwitcherDescription.new({label: this.title, primaryColor: this.color.value}));
      return this.child;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L8, 53, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.StringProperty.new("title", this.title, {defaultValue: ""}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
    }
  };
  (title$.Title.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let title = opts && 'title' in opts ? opts.title : "";
    if (title == null) dart.nullFailed(L8, 20, 10, "title");
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(L8, 21, 19, "color");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L8, 22, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[title$0] = title;
    this[color$] = color;
    this[child$1] = child;
    if (!(title != null)) dart.assertFailed(null, L8, 23, 15, "title != null");
    if (!(color != null && color.alpha === 255)) dart.assertFailed(null, L8, 24, 15, "color != null && color.alpha == 0xFF");
    title$.Title.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = title$.Title.prototype;
  dart.addTypeTests(title$.Title);
  dart.addTypeCaches(title$.Title);
  dart.setMethodSignature(title$.Title, () => ({
    __proto__: dart.getMethods(title$.Title.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(title$.Title, L9);
  dart.setFieldSignature(title$.Title, () => ({
    __proto__: dart.getFields(title$.Title.__proto__),
    title: dart.finalFieldType(core.String),
    color: dart.finalFieldType(ui.Color),
    child: dart.finalFieldType(framework.Widget)
  }));
  var _hashCode = dart.privateName(shortcuts$, "_hashCode");
  var _keys = dart.privateName(shortcuts$, "_keys");
  const _is_KeySet_default = Symbol('_is_KeySet_default');
  shortcuts$.KeySet$ = dart.generic(T => {
    var _HashSetOfT = () => (_HashSetOfT = dart.constFn(collection._HashSet$(T)))();
    var HashSetOfT = () => (HashSetOfT = dart.constFn(collection.HashSet$(T)))();
    var KeySetOfT = () => (KeySetOfT = dart.constFn(shortcuts$.KeySet$(T)))();
    class KeySet extends core.Object {
      get keys() {
        return this[_keys].toSet();
      }
      _equals(other) {
        if (other == null) return false;
        if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) {
          return false;
        }
        return KeySetOfT().is(other) && dart.test(collections.setEquals(T, other[_keys], this[_keys]));
      }
      get hashCode() {
        if (this[_hashCode] != null) {
          return dart.nullCheck(this[_hashCode]);
        }
        let length = this[_keys][$length];
        let iterator = this[_keys].iterator;
        iterator.moveNext();
        let h1 = dart.hashCode(iterator.current);
        if (length === 1) {
          return this[_hashCode] = h1;
        }
        iterator.moveNext();
        let h2 = dart.hashCode(iterator.current);
        if (length === 2) {
          return this[_hashCode] = dart.notNull(h1) < dart.notNull(h2) ? ui.hashValues(h1, h2) : ui.hashValues(h2, h1);
        }
        let sortedHashes = length === 3 ? shortcuts$.KeySet._tempHashStore3 : shortcuts$.KeySet._tempHashStore4;
        sortedHashes[$_set](0, h1);
        sortedHashes[$_set](1, h2);
        iterator.moveNext();
        sortedHashes[$_set](2, dart.hashCode(iterator.current));
        if (length === 4) {
          iterator.moveNext();
          sortedHashes[$_set](3, dart.hashCode(iterator.current));
        }
        sortedHashes[$sort]();
        return this[_hashCode] = ui.hashList(sortedHashes);
      }
    }
    (KeySet.new = function(key1, key2 = null, key3 = null, key4 = null) {
      let t10;
      if (key1 == null) dart.nullFailed(L10, 37, 7, "key1");
      this[_hashCode] = null;
      if (!(key1 != null)) dart.assertFailed(null, L10, 41, 16, "key1 != null");
      this[_keys] = (t10 = new (_HashSetOfT()).new(), (() => {
        t10.add(key1);
        return t10;
      })());
      let count = 1;
      if (key2 != null) {
        this[_keys].add(key2);
        if (!dart.test(dart.fn(() => {
          count = count + 1;
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L10, 46, 14, "() {\r\n        count++;\r\n        return true;\r\n      }()");
      }
      if (key3 != null) {
        this[_keys].add(key3);
        if (!dart.test(dart.fn(() => {
          count = count + 1;
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L10, 53, 14, "() {\r\n        count++;\r\n        return true;\r\n      }()");
      }
      if (key4 != null) {
        this[_keys].add(key4);
        if (!dart.test(dart.fn(() => {
          count = count + 1;
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L10, 60, 14, "() {\r\n        count++;\r\n        return true;\r\n      }()");
      }
      if (!(this[_keys][$length] === count)) dart.assertFailed("Two or more provided keys are identical. Each key must appear only once.", L10, 65, 12, "_keys.length == count");
    }).prototype = KeySet.prototype;
    (KeySet.fromSet = function(keys) {
      if (keys == null) dart.nullFailed(L10, 73, 25, "keys");
      this[_hashCode] = null;
      if (!(keys != null)) dart.assertFailed(null, L10, 74, 16, "keys != null");
      if (!dart.test(keys[$isNotEmpty])) dart.assertFailed(null, L10, 75, 16, "keys.isNotEmpty");
      if (!!dart.test(keys.contains(null))) dart.assertFailed(null, L10, 76, 16, "!keys.contains(null)");
      this[_keys] = HashSetOfT().from(keys);
      ;
    }).prototype = KeySet.prototype;
    dart.addTypeTests(KeySet);
    KeySet.prototype[_is_KeySet_default] = true;
    dart.addTypeCaches(KeySet);
    dart.setGetterSignature(KeySet, () => ({
      __proto__: dart.getGetters(KeySet.__proto__),
      keys: core.Set$(T)
    }));
    dart.setLibraryUri(KeySet, L11);
    dart.setFieldSignature(KeySet, () => ({
      __proto__: dart.getFields(KeySet.__proto__),
      [_keys]: dart.finalFieldType(collection.HashSet$(T)),
      [_hashCode]: dart.fieldType(dart.nullable(core.int))
    }));
    dart.defineExtensionMethods(KeySet, ['_equals']);
    dart.defineExtensionAccessors(KeySet, ['hashCode']);
    return KeySet;
  });
  shortcuts$.KeySet = shortcuts$.KeySet$();
  dart.defineLazy(shortcuts$.KeySet, {
    /*shortcuts$.KeySet._tempHashStore3*/get _tempHashStore3() {
      return JSArrayOfint().of([0, 0, 0]);
    },
    /*shortcuts$.KeySet._tempHashStore4*/get _tempHashStore4() {
      return JSArrayOfint().of([0, 0, 0, 0]);
    }
  }, false);
  dart.addTypeTests(shortcuts$.KeySet, _is_KeySet_default);
  const KeySet_Diagnosticable$36 = class KeySet_Diagnosticable extends shortcuts$.KeySet$(keyboard_key.LogicalKeyboardKey) {};
  (KeySet_Diagnosticable$36.new = function(key1, key2, key3, key4) {
    KeySet_Diagnosticable$36.__proto__.new.call(this, key1, key2, key3, key4);
  }).prototype = KeySet_Diagnosticable$36.prototype;
  (KeySet_Diagnosticable$36.fromSet = function(keys) {
    KeySet_Diagnosticable$36.__proto__.fromSet.call(this, keys);
  }).prototype = KeySet_Diagnosticable$36.prototype;
  dart.applyMixin(KeySet_Diagnosticable$36, diagnostics$.Diagnosticable);
  shortcuts$.LogicalKeySet = class LogicalKeySet extends KeySet_Diagnosticable$36 {
    debugDescribeKeys() {
      let t10;
      let sortedKeys = (t10 = this.keys[$toList](), (() => {
        t10[$sort](dart.fn((a, b) => {
          if (a == null) dart.nullFailed(L10, 193, 33, "a");
          if (b == null) dart.nullFailed(L10, 193, 55, "b");
          let aIsModifier = dart.test(a.synonyms[$isNotEmpty]) || dart.test(shortcuts$.LogicalKeySet._modifiers.contains(a));
          let bIsModifier = dart.test(b.synonyms[$isNotEmpty]) || dart.test(shortcuts$.LogicalKeySet._modifiers.contains(b));
          if (aIsModifier && !bIsModifier) {
            return -1;
          } else if (bIsModifier && !aIsModifier) {
            return 1;
          }
          return dart.nullCheck(a.debugName)[$compareTo](dart.nullCheck(b.debugName));
        }, LogicalKeyboardKeyAndLogicalKeyboardKeyToint()));
        return t10;
      })());
      return sortedKeys[$map](core.String, dart.fn(key => {
        if (key == null) dart.nullFailed(L10, 206, 55, "key");
        return dart.toString(key.debugName);
      }, LogicalKeyboardKeyToString()))[$join](" + ");
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L10, 210, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfSetOfLogicalKeyboardKey()).new("keys", this[_keys], {description: this.debugDescribeKeys()}));
    }
  };
  (shortcuts$.LogicalKeySet.new = function(key1, key2 = null, key3 = null, key4 = null) {
    if (key1 == null) dart.nullFailed(L10, 168, 24, "key1");
    shortcuts$.LogicalKeySet.__proto__.new.call(this, key1, key2, key3, key4);
    ;
  }).prototype = shortcuts$.LogicalKeySet.prototype;
  (shortcuts$.LogicalKeySet.fromSet = function(keys) {
    if (keys == null) dart.nullFailed(L10, 179, 49, "keys");
    shortcuts$.LogicalKeySet.__proto__.fromSet.call(this, keys);
    ;
  }).prototype = shortcuts$.LogicalKeySet.prototype;
  dart.addTypeTests(shortcuts$.LogicalKeySet);
  dart.addTypeCaches(shortcuts$.LogicalKeySet);
  dart.setMethodSignature(shortcuts$.LogicalKeySet, () => ({
    __proto__: dart.getMethods(shortcuts$.LogicalKeySet.__proto__),
    debugDescribeKeys: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(shortcuts$.LogicalKeySet, L11);
  dart.defineLazy(shortcuts$.LogicalKeySet, {
    /*shortcuts$.LogicalKeySet._modifiers*/get _modifiers() {
      return LinkedHashSetOfLogicalKeyboardKey().from([keyboard_key.LogicalKeyboardKey.alt, keyboard_key.LogicalKeyboardKey.control, keyboard_key.LogicalKeyboardKey.meta, keyboard_key.LogicalKeyboardKey.shift]);
    }
  }, false);
  var C41;
  var _name$ = dart.privateName(diagnostics$, "_name");
  var C42;
  var C43;
  const Object_Diagnosticable$36 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36.new = function() {
  }).prototype = Object_Diagnosticable$36.prototype;
  dart.applyMixin(Object_Diagnosticable$36, diagnostics$.Diagnosticable);
  actions$.Intent = class Intent extends Object_Diagnosticable$36 {};
  (actions$.Intent.new = function() {
    ;
  }).prototype = actions$.Intent.prototype;
  dart.addTypeTests(actions$.Intent);
  dart.addTypeCaches(actions$.Intent);
  dart.setLibraryUri(actions$.Intent, L12);
  dart.defineLazy(actions$.Intent, {
    /*actions$.Intent.doNothing*/get doNothing() {
      return C43 || CT.C43;
    }
  }, false);
  shortcuts$.ShortcutMapProperty = class ShortcutMapProperty extends diagnostics$.DiagnosticsProperty$(core.Map$(shortcuts$.LogicalKeySet, actions$.Intent)) {
    get value() {
      return dart.nullCheck(super.value);
    }
    valueToString(opts) {
      let parentConfiguration = opts && 'parentConfiguration' in opts ? opts.parentConfiguration : null;
      return "{" + dart.str(this.value[$keys][$map](core.String, dart.fn(keySet => {
        if (keySet == null) dart.nullFailed(L10, 246, 54, "keySet");
        return "{" + dart.str(keySet.debugDescribeKeys()) + "}: " + dart.str(this.value[$_get](keySet));
      }, LogicalKeySetToString()))[$join](", ")) + "}";
    }
  };
  (shortcuts$.ShortcutMapProperty.new = function(name, value, opts) {
    if (name == null) dart.nullFailed(L10, 224, 12, "name");
    if (value == null) dart.nullFailed(L10, 225, 32, "value");
    let showName = opts && 'showName' in opts ? opts.showName : true;
    if (showName == null) dart.nullFailed(L10, 226, 10, "showName");
    let defaultValue = opts && 'defaultValue' in opts ? opts.defaultValue : C41 || CT.C41;
    if (defaultValue == null) dart.nullFailed(L10, 227, 12, "defaultValue");
    let level = opts && 'level' in opts ? opts.level : C42 || CT.C42;
    if (level == null) dart.nullFailed(L10, 228, 21, "level");
    let description = opts && 'description' in opts ? opts.description : null;
    if (!(showName != null)) dart.assertFailed(null, L10, 230, 15, "showName != null");
    if (!(level != null)) dart.assertFailed(null, L10, 231, 15, "level != null");
    shortcuts$.ShortcutMapProperty.__proto__.new.call(this, name, value, {showName: showName, defaultValue: defaultValue, level: level, description: description});
    ;
  }).prototype = shortcuts$.ShortcutMapProperty.prototype;
  dart.addTypeTests(shortcuts$.ShortcutMapProperty);
  dart.addTypeCaches(shortcuts$.ShortcutMapProperty);
  dart.setGetterSignature(shortcuts$.ShortcutMapProperty, () => ({
    __proto__: dart.getGetters(shortcuts$.ShortcutMapProperty.__proto__),
    value: core.Map$(shortcuts$.LogicalKeySet, actions$.Intent)
  }));
  dart.setLibraryUri(shortcuts$.ShortcutMapProperty, L11);
  var C44;
  var _shortcuts = dart.privateName(shortcuts$, "_shortcuts");
  var _find = dart.privateName(shortcuts$, "_find");
  var modal$ = dart.privateName(shortcuts$, "ShortcutManager.modal");
  const ChangeNotifier_Diagnosticable$36 = class ChangeNotifier_Diagnosticable extends change_notifier.ChangeNotifier {};
  (ChangeNotifier_Diagnosticable$36.new = function() {
    ChangeNotifier_Diagnosticable$36.__proto__.new.call(this);
  }).prototype = ChangeNotifier_Diagnosticable$36.prototype;
  dart.applyMixin(ChangeNotifier_Diagnosticable$36, diagnostics$.Diagnosticable);
  shortcuts$.ShortcutManager = class ShortcutManager extends ChangeNotifier_Diagnosticable$36 {
    get modal() {
      return this[modal$];
    }
    set modal(value) {
      super.modal = value;
    }
    get shortcuts() {
      return this[_shortcuts];
    }
    set shortcuts(value) {
      if (value == null) dart.nullFailed(L10, 283, 44, "value");
      if (!(value != null)) dart.assertFailed(null, L10, 284, 12, "value != null");
      if (!dart.test(collections.mapEquals(shortcuts$.LogicalKeySet, actions$.Intent, this[_shortcuts], value))) {
        this[_shortcuts] = value;
        this.notifyListeners();
      }
    }
    [_find](opts) {
      let keysPressed = opts && 'keysPressed' in opts ? opts.keysPressed : null;
      if (keysPressed == null && dart.test(raw_keyboard.RawKeyboard.instance.keysPressed[$isEmpty])) {
        return null;
      }
      keysPressed == null ? keysPressed = new shortcuts$.LogicalKeySet.fromSet(raw_keyboard.RawKeyboard.instance.keysPressed) : null;
      let matchedIntent = this[_shortcuts][$_get](keysPressed);
      if (matchedIntent == null) {
        let pseudoKeys = LinkedHashSetOfLogicalKeyboardKey().new();
        for (let setKey of keysPressed.keys) {
          if (keyboard_key.LogicalKeyboardKey.is(setKey)) {
            let synonyms = setKey.synonyms;
            if (dart.test(synonyms[$isNotEmpty])) {
              if (!(synonyms[$length] === 1)) dart.assertFailed("Unexpectedly encountered a key synonym with more than one key.", L10, 314, 20, "synonyms.length == 1");
              pseudoKeys.add(synonyms[$first]);
            } else {
              pseudoKeys.add(setKey);
            }
          }
        }
        matchedIntent = this[_shortcuts][$_get](new shortcuts$.LogicalKeySet.fromSet(pseudoKeys));
      }
      return matchedIntent;
    }
    handleKeypress(context, event, opts) {
      if (context == null) dart.nullFailed(L10, 346, 18, "context");
      if (event == null) dart.nullFailed(L10, 347, 17, "event");
      let keysPressed = opts && 'keysPressed' in opts ? opts.keysPressed : null;
      if (!raw_keyboard.RawKeyDownEvent.is(event)) {
        return focus_manager.KeyEventResult.ignored;
      }
      if (!(context != null)) dart.assertFailed(null, L10, 353, 12, "context != null");
      if (!(keysPressed != null || dart.test(raw_keyboard.RawKeyboard.instance.keysPressed[$isNotEmpty]))) dart.assertFailed("Received a key down event when no keys are in keysPressed. " + "This state can occur if the key event being sent doesn't properly " + "set its modifier flags. This was the event: " + dart.str(event) + " and its data: " + dart.str(event.data), L10, 354, 12, "keysPressed != null || RawKeyboard.instance.keysPressed.isNotEmpty");
      let matchedIntent = this[_find]({keysPressed: keysPressed});
      if (matchedIntent != null) {
        let primaryContext = dart.nullCheck(dart.nullCheck(focus_manager.primaryFocus).context);
        if (!(primaryContext !== null)) dart.assertFailed(null, L10, 362, 15, "primaryContext != null");
        let action = actions$.Actions.maybeFind(actions$.Intent, primaryContext, {intent: matchedIntent});
        if (action != null && dart.test(action.isEnabled(matchedIntent))) {
          actions$.Actions.of(primaryContext).invokeAction(action, matchedIntent, primaryContext);
          return dart.test(action.consumesKey(matchedIntent)) ? focus_manager.KeyEventResult.handled : focus_manager.KeyEventResult.skipRemainingHandlers;
        }
      }
      return dart.test(this.modal) ? focus_manager.KeyEventResult.skipRemainingHandlers : focus_manager.KeyEventResult.ignored;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L10, 378, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfMapOfLogicalKeySet$Intent()).new("shortcuts", this[_shortcuts]));
      properties.add(new diagnostics$.FlagProperty.new("modal", {value: this.modal, ifTrue: "modal", defaultValue: false}));
    }
  };
  (shortcuts$.ShortcutManager.new = function(opts) {
    let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : C44 || CT.C44;
    if (shortcuts == null) dart.nullFailed(L10, 259, 32, "shortcuts");
    let modal = opts && 'modal' in opts ? opts.modal : false;
    if (modal == null) dart.nullFailed(L10, 260, 10, "modal");
    this[modal$] = modal;
    if (!(shortcuts != null)) dart.assertFailed(null, L10, 261, 16, "shortcuts != null");
    this[_shortcuts] = shortcuts;
    shortcuts$.ShortcutManager.__proto__.new.call(this);
    ;
  }).prototype = shortcuts$.ShortcutManager.prototype;
  dart.addTypeTests(shortcuts$.ShortcutManager);
  dart.addTypeCaches(shortcuts$.ShortcutManager);
  dart.setMethodSignature(shortcuts$.ShortcutManager, () => ({
    __proto__: dart.getMethods(shortcuts$.ShortcutManager.__proto__),
    [_find]: dart.fnType(dart.nullable(actions$.Intent), [], {keysPressed: dart.nullable(shortcuts$.LogicalKeySet)}, {}),
    handleKeypress: dart.fnType(focus_manager.KeyEventResult, [framework.BuildContext, raw_keyboard.RawKeyEvent], {keysPressed: dart.nullable(shortcuts$.LogicalKeySet)}, {})
  }));
  dart.setGetterSignature(shortcuts$.ShortcutManager, () => ({
    __proto__: dart.getGetters(shortcuts$.ShortcutManager.__proto__),
    shortcuts: core.Map$(shortcuts$.LogicalKeySet, actions$.Intent)
  }));
  dart.setSetterSignature(shortcuts$.ShortcutManager, () => ({
    __proto__: dart.getSetters(shortcuts$.ShortcutManager.__proto__),
    shortcuts: core.Map$(shortcuts$.LogicalKeySet, actions$.Intent)
  }));
  dart.setLibraryUri(shortcuts$.ShortcutManager, L11);
  dart.setFieldSignature(shortcuts$.ShortcutManager, () => ({
    __proto__: dart.getFields(shortcuts$.ShortcutManager.__proto__),
    modal: dart.finalFieldType(core.bool),
    [_shortcuts]: dart.fieldType(core.Map$(shortcuts$.LogicalKeySet, actions$.Intent))
  }));
  var manager$ = dart.privateName(shortcuts$, "Shortcuts.manager");
  var shortcuts$0 = dart.privateName(shortcuts$, "Shortcuts.shortcuts");
  var child$2 = dart.privateName(shortcuts$, "Shortcuts.child");
  var debugLabel$ = dart.privateName(shortcuts$, "Shortcuts.debugLabel");
  shortcuts$.Shortcuts = class Shortcuts extends framework.StatefulWidget {
    get manager() {
      return this[manager$];
    }
    set manager(value) {
      super.manager = value;
    }
    get shortcuts() {
      return this[shortcuts$0];
    }
    set shortcuts(value) {
      super.shortcuts = value;
    }
    get child() {
      return this[child$2];
    }
    set child(value) {
      super.child = value;
    }
    get debugLabel() {
      return this[debugLabel$];
    }
    set debugLabel(value) {
      super.debugLabel = value;
    }
    static of(context) {
      if (context == null) dart.nullFailed(L10, 503, 42, "context");
      if (!(context != null)) dart.assertFailed(null, L10, 504, 12, "context != null");
      let inherited = context.dependOnInheritedWidgetOfExactType(shortcuts$._ShortcutsMarker);
      if (!dart.test(dart.fn(() => {
        if (inherited == null) {
          dart.throw(assertions.FlutterError.new("Unable to find a " + dart.str(dart.wrapType(shortcuts$.Shortcuts)) + " widget in the context.\n" + dart.str(dart.wrapType(shortcuts$.Shortcuts)) + ".of() was called with a context that does not contain a " + dart.str(dart.wrapType(shortcuts$.Shortcuts)) + " widget.\n" + "No " + dart.str(dart.wrapType(shortcuts$.Shortcuts)) + " ancestor could be found starting from the context that was " + "passed to " + dart.str(dart.wrapType(shortcuts$.Shortcuts)) + ".of().\n" + "The context used was:\n" + "  " + dart.str(context)));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L10, 506, 12, "() {\r\n      if (inherited == null) {\r\n        throw FlutterError('Unable to find a $Shortcuts widget in the context.\\n'\r\n            '$Shortcuts.of() was called with a context that does not contain a '\r\n            '$Shortcuts widget.\\n'\r\n            'No $Shortcuts ancestor could be found starting from the context that was '\r\n            'passed to $Shortcuts.of().\\n'\r\n            'The context used was:\\n'\r\n            '  $context');\r\n      }\r\n      return true;\r\n    }()");
      return dart.nullCheck(inherited).manager;
    }
    static maybeOf(context) {
      let t10;
      if (context == null) dart.nullFailed(L10, 533, 48, "context");
      if (!(context != null)) dart.assertFailed(null, L10, 534, 12, "context != null");
      let inherited = context.dependOnInheritedWidgetOfExactType(shortcuts$._ShortcutsMarker);
      t10 = inherited;
      return t10 == null ? null : t10.manager;
    }
    createState() {
      return new shortcuts$._ShortcutsState.new();
    }
    debugFillProperties(properties) {
      let t10, t10$;
      if (properties == null) dart.nullFailed(L10, 543, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfShortcutManager()).new("manager", this.manager, {defaultValue: null}));
      properties.add(new shortcuts$.ShortcutMapProperty.new("shortcuts", this.shortcuts, {description: dart.test((t10$ = (t10 = this.debugLabel, t10 == null ? null : t10[$isNotEmpty]), t10$ == null ? false : t10$)) ? this.debugLabel : null}));
    }
  };
  (shortcuts$.Shortcuts.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let manager = opts && 'manager' in opts ? opts.manager : null;
    let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
    if (shortcuts == null) dart.nullFailed(L10, 452, 19, "shortcuts");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L10, 453, 19, "child");
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[manager$] = manager;
    this[shortcuts$0] = shortcuts;
    this[child$2] = child;
    this[debugLabel$] = debugLabel;
    if (!(shortcuts != null)) dart.assertFailed(null, L10, 455, 15, "shortcuts != null");
    if (!(child != null)) dart.assertFailed(null, L10, 456, 15, "child != null");
    shortcuts$.Shortcuts.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = shortcuts$.Shortcuts.prototype;
  dart.addTypeTests(shortcuts$.Shortcuts);
  dart.addTypeCaches(shortcuts$.Shortcuts);
  dart.setMethodSignature(shortcuts$.Shortcuts, () => ({
    __proto__: dart.getMethods(shortcuts$.Shortcuts.__proto__),
    createState: dart.fnType(shortcuts$._ShortcutsState, [])
  }));
  dart.setLibraryUri(shortcuts$.Shortcuts, L11);
  dart.setFieldSignature(shortcuts$.Shortcuts, () => ({
    __proto__: dart.getFields(shortcuts$.Shortcuts.__proto__),
    manager: dart.finalFieldType(dart.nullable(shortcuts$.ShortcutManager)),
    shortcuts: dart.finalFieldType(core.Map$(shortcuts$.LogicalKeySet, actions$.Intent)),
    child: dart.finalFieldType(framework.Widget),
    debugLabel: dart.finalFieldType(dart.nullable(core.String))
  }));
  var _internalManager = dart.privateName(shortcuts$, "_internalManager");
  var _handleOnKey = dart.privateName(shortcuts$, "_handleOnKey");
  var C47;
  var C48;
  var C46;
  var C45;
  var C51;
  var C52;
  var C53;
  var C54;
  var C50;
  var C49;
  shortcuts$._ShortcutsState = class _ShortcutsState extends framework.State$(shortcuts$.Shortcuts) {
    get manager() {
      let t10;
      t10 = this.widget.manager;
      return t10 == null ? dart.nullCheck(this[_internalManager]) : t10;
    }
    dispose() {
      let t10;
      t10 = this[_internalManager];
      t10 == null ? null : t10.dispose();
      super.dispose();
    }
    initState() {
      super.initState();
      if (this.widget.manager == null) {
        this[_internalManager] = new shortcuts$.ShortcutManager.new();
      }
      this.manager.shortcuts = this.widget.shortcuts;
    }
    didUpdateWidget(oldWidget) {
      let t10;
      shortcuts$.Shortcuts.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L10, 570, 34, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.manager, oldWidget.manager)) {
        if (this.widget.manager != null) {
          t10 = this[_internalManager];
          t10 == null ? null : t10.dispose();
          this[_internalManager] = null;
        } else {
          this[_internalManager] == null ? this[_internalManager] = new shortcuts$.ShortcutManager.new() : null;
        }
      }
      this.manager.shortcuts = this.widget.shortcuts;
    }
    [_handleOnKey](node, event) {
      if (node == null) dart.nullFailed(L10, 583, 41, "node");
      if (event == null) dart.nullFailed(L10, 583, 59, "event");
      if (node.context == null) {
        return focus_manager.KeyEventResult.ignored;
      }
      return this.manager.handleKeypress(dart.nullCheck(node.context), event);
    }
    build(context) {
      if (context == null) dart.nullFailed(L10, 591, 29, "context");
      return new focus_scope.Focus.new({debugLabel: dart.str(dart.wrapType(shortcuts$.Shortcuts)), canRequestFocus: false, onKey: dart.bind(this, _handleOnKey), child: new shortcuts$._ShortcutsMarker.new({manager: this.manager, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C45 || CT.C45}), $creationLocationd_0dea112b090073317d4: C49 || CT.C49});
    }
  };
  (shortcuts$._ShortcutsState.new = function() {
    this[_internalManager] = null;
    shortcuts$._ShortcutsState.__proto__.new.call(this);
    ;
  }).prototype = shortcuts$._ShortcutsState.prototype;
  dart.addTypeTests(shortcuts$._ShortcutsState);
  dart.addTypeCaches(shortcuts$._ShortcutsState);
  dart.setMethodSignature(shortcuts$._ShortcutsState, () => ({
    __proto__: dart.getMethods(shortcuts$._ShortcutsState.__proto__),
    [_handleOnKey]: dart.fnType(focus_manager.KeyEventResult, [focus_manager.FocusNode, raw_keyboard.RawKeyEvent]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(shortcuts$._ShortcutsState, () => ({
    __proto__: dart.getGetters(shortcuts$._ShortcutsState.__proto__),
    manager: shortcuts$.ShortcutManager
  }));
  dart.setLibraryUri(shortcuts$._ShortcutsState, L11);
  dart.setFieldSignature(shortcuts$._ShortcutsState, () => ({
    __proto__: dart.getFields(shortcuts$._ShortcutsState.__proto__),
    [_internalManager]: dart.fieldType(dart.nullable(shortcuts$.ShortcutManager))
  }));
  var child$3 = dart.privateName(framework, "ProxyWidget.child");
  framework.ProxyWidget = class ProxyWidget extends framework.Widget {
    get child() {
      return this[child$3];
    }
    set child(value) {
      super.child = value;
    }
  };
  (framework.ProxyWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L4, 1505, 47, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$3] = child;
    framework.ProxyWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.ProxyWidget.prototype;
  dart.addTypeTests(framework.ProxyWidget);
  dart.addTypeCaches(framework.ProxyWidget);
  dart.setLibraryUri(framework.ProxyWidget, L5);
  dart.setFieldSignature(framework.ProxyWidget, () => ({
    __proto__: dart.getFields(framework.ProxyWidget.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  framework.InheritedWidget = class InheritedWidget extends framework.ProxyWidget {
    createElement() {
      return new framework.InheritedElement.new(this);
    }
  };
  (framework.InheritedWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L4, 1798, 53, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    framework.InheritedWidget.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.InheritedWidget.prototype;
  dart.addTypeTests(framework.InheritedWidget);
  dart.addTypeCaches(framework.InheritedWidget);
  dart.setMethodSignature(framework.InheritedWidget, () => ({
    __proto__: dart.getMethods(framework.InheritedWidget.__proto__),
    createElement: dart.fnType(framework.InheritedElement, [])
  }));
  dart.setLibraryUri(framework.InheritedWidget, L5);
  const _is_InheritedNotifier_default = Symbol('_is_InheritedNotifier_default');
  var notifier$ = dart.privateName(inherited_notifier, "InheritedNotifier.notifier");
  inherited_notifier.InheritedNotifier$ = dart.generic(T => {
    var InheritedNotifierOfT = () => (InheritedNotifierOfT = dart.constFn(inherited_notifier.InheritedNotifier$(T)))();
    var _InheritedNotifierElementOfT = () => (_InheritedNotifierElementOfT = dart.constFn(inherited_notifier._InheritedNotifierElement$(T)))();
    class InheritedNotifier extends framework.InheritedWidget {
      get notifier() {
        return this[notifier$];
      }
      set notifier(value) {
        super.notifier = value;
      }
      updateShouldNotify(oldWidget) {
        InheritedNotifierOfT().as(oldWidget);
        if (oldWidget == null) dart.nullFailed(L13, 155, 48, "oldWidget");
        return !dart.equals(oldWidget.notifier, this.notifier);
      }
      createElement() {
        return new (_InheritedNotifierElementOfT()).new(this);
      }
    }
    (InheritedNotifier.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let notifier = opts && 'notifier' in opts ? opts.notifier : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(L13, 136, 21, "child");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[notifier$] = notifier;
      if (!(child != null)) dart.assertFailed(null, L13, 137, 15, "child != null");
      InheritedNotifier.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = InheritedNotifier.prototype;
    dart.addTypeTests(InheritedNotifier);
    InheritedNotifier.prototype[_is_InheritedNotifier_default] = true;
    dart.addTypeCaches(InheritedNotifier);
    dart.setMethodSignature(InheritedNotifier, () => ({
      __proto__: dart.getMethods(InheritedNotifier.__proto__),
      updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)]),
      createElement: dart.fnType(inherited_notifier._InheritedNotifierElement$(T), [])
    }));
    dart.setLibraryUri(InheritedNotifier, L14);
    dart.setFieldSignature(InheritedNotifier, () => ({
      __proto__: dart.getFields(InheritedNotifier.__proto__),
      notifier: dart.finalFieldType(dart.nullable(T))
    }));
    return InheritedNotifier;
  });
  inherited_notifier.InheritedNotifier = inherited_notifier.InheritedNotifier$();
  dart.addTypeTests(inherited_notifier.InheritedNotifier, _is_InheritedNotifier_default);
  shortcuts$._ShortcutsMarker = class _ShortcutsMarker extends inherited_notifier.InheritedNotifier$(shortcuts$.ShortcutManager) {
    get manager() {
      return dart.nullCheck(super.notifier);
    }
  };
  (shortcuts$._ShortcutsMarker.new = function(opts) {
    let manager = opts && 'manager' in opts ? opts.manager : null;
    if (manager == null) dart.nullFailed(L10, 606, 30, "manager");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L10, 607, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(manager != null)) dart.assertFailed(null, L10, 608, 16, "manager != null");
    if (!(child != null)) dart.assertFailed(null, L10, 609, 16, "child != null");
    shortcuts$._ShortcutsMarker.__proto__.new.call(this, {notifier: manager, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = shortcuts$._ShortcutsMarker.prototype;
  dart.addTypeTests(shortcuts$._ShortcutsMarker);
  dart.addTypeCaches(shortcuts$._ShortcutsMarker);
  dart.setGetterSignature(shortcuts$._ShortcutsMarker, () => ({
    __proto__: dart.getGetters(shortcuts$._ShortcutsMarker.__proto__),
    manager: shortcuts$.ShortcutManager
  }));
  dart.setLibraryUri(shortcuts$._ShortcutsMarker, L11);
  var C56;
  var C55;
  var child$4 = dart.privateName(semantics_debugger, "SemanticsDebugger.child");
  var labelStyle$ = dart.privateName(semantics_debugger, "SemanticsDebugger.labelStyle");
  semantics_debugger.SemanticsDebugger = class SemanticsDebugger extends framework.StatefulWidget {
    get child() {
      return this[child$4];
    }
    set child(value) {
      super.child = value;
    }
    get labelStyle() {
      return this[labelStyle$];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    createState() {
      return new semantics_debugger._SemanticsDebuggerState.new();
    }
  };
  (semantics_debugger.SemanticsDebugger.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L15, 29, 19, "child");
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : C55 || CT.C55;
    if (labelStyle == null) dart.nullFailed(L15, 30, 10, "labelStyle");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$4] = child;
    this[labelStyle$] = labelStyle;
    if (!(child != null)) dart.assertFailed(null, L15, 35, 15, "child != null");
    if (!(labelStyle != null)) dart.assertFailed(null, L15, 36, 15, "labelStyle != null");
    semantics_debugger.SemanticsDebugger.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = semantics_debugger.SemanticsDebugger.prototype;
  dart.addTypeTests(semantics_debugger.SemanticsDebugger);
  dart.addTypeCaches(semantics_debugger.SemanticsDebugger);
  dart.setMethodSignature(semantics_debugger.SemanticsDebugger, () => ({
    __proto__: dart.getMethods(semantics_debugger.SemanticsDebugger.__proto__),
    createState: dart.fnType(semantics_debugger._SemanticsDebuggerState, [])
  }));
  dart.setLibraryUri(semantics_debugger.SemanticsDebugger, L16);
  dart.setFieldSignature(semantics_debugger.SemanticsDebugger, () => ({
    __proto__: dart.getFields(semantics_debugger.SemanticsDebugger.__proto__),
    child: dart.finalFieldType(framework.Widget),
    labelStyle: dart.finalFieldType(text_style.TextStyle)
  }));
  var ___SemanticsDebuggerState__client = dart.privateName(semantics_debugger, "_#_SemanticsDebuggerState#_client");
  var ___SemanticsDebuggerState__client_isSet = dart.privateName(semantics_debugger, "_#_SemanticsDebuggerState#_client#isSet");
  var _lastPointerDownLocation = dart.privateName(semantics_debugger, "_lastPointerDownLocation");
  var _client = dart.privateName(semantics_debugger, "_client");
  var _update = dart.privateName(semantics_debugger, "_update");
  var _handlePointerDown = dart.privateName(semantics_debugger, "_handlePointerDown");
  var _performAction = dart.privateName(semantics_debugger, "_performAction");
  var _handleTap$ = dart.privateName(semantics_debugger, "_handleTap");
  var _handleLongPress = dart.privateName(semantics_debugger, "_handleLongPress");
  var _handlePanEnd$ = dart.privateName(semantics_debugger, "_handlePanEnd");
  var _pipelineOwner = dart.privateName(semantics_debugger, "_pipelineOwner");
  var C59;
  var C60;
  var C58;
  var C57;
  var C63;
  var C64;
  var C65;
  var C62;
  var C61;
  var C68;
  var C69;
  var C70;
  var C71;
  var C72;
  var C73;
  var C67;
  var C66;
  var C76;
  var C77;
  var C75;
  var C74;
  const State_WidgetsBindingObserver$36$ = class State_WidgetsBindingObserver extends framework.State$(semantics_debugger.SemanticsDebugger) {};
  (State_WidgetsBindingObserver$36$.new = function() {
    State_WidgetsBindingObserver$36$.__proto__.new.call(this);
  }).prototype = State_WidgetsBindingObserver$36$.prototype;
  dart.applyMixin(State_WidgetsBindingObserver$36$, binding$5.WidgetsBindingObserver);
  semantics_debugger._SemanticsDebuggerState = class _SemanticsDebuggerState extends State_WidgetsBindingObserver$36$ {
    get [_client]() {
      let t10;
      return dart.test(this[___SemanticsDebuggerState__client_isSet]) ? (t10 = this[___SemanticsDebuggerState__client], t10) : dart.throw(new _internal.LateError.fieldNI("_client"));
    }
    set [_client](t10) {
      if (t10 == null) dart.nullFailed(L15, 52, 25, "null");
      this[___SemanticsDebuggerState__client_isSet] = true;
      this[___SemanticsDebuggerState__client] = t10;
    }
    initState() {
      let t11;
      super.initState();
      this[_client] = (t11 = new semantics_debugger._SemanticsClient.new(dart.nullCheck(binding$5.WidgetsBinding.instance).pipelineOwner), (() => {
        t11.addListener(dart.bind(this, _update));
        return t11;
      })());
      dart.nullCheck(binding$5.WidgetsBinding.instance).addObserver(this);
    }
    dispose() {
      let t11;
      t11 = this[_client];
      (() => {
        t11.removeListener(dart.bind(this, _update));
        t11.dispose();
        return t11;
      })();
      dart.nullCheck(binding$5.WidgetsBinding.instance).removeObserver(this);
      super.dispose();
    }
    didChangeMetrics() {
      this.setState(dart.fn(() => {
      }, VoidTovoid()));
    }
    [_update]() {
      dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.fn(timeStamp => {
        if (timeStamp == null) dart.nullFailed(L15, 83, 63, "timeStamp");
        if (dart.test(this.mounted)) {
          this.setState(dart.fn(() => {
          }, VoidTovoid()));
        }
      }, DurationTovoid()));
    }
    [_handlePointerDown](event) {
      if (event == null) dart.nullFailed(L15, 99, 44, "event");
      this.setState(dart.fn(() => {
        this[_lastPointerDownLocation] = event.position['*'](dart.nullCheck(binding$5.WidgetsBinding.instance).window.devicePixelRatio);
      }, VoidTovoid()));
    }
    [_handleTap$]() {
      if (!(this[_lastPointerDownLocation] != null)) dart.assertFailed(null, L15, 108, 12, "_lastPointerDownLocation != null");
      this[_performAction](dart.nullCheck(this[_lastPointerDownLocation]), ui.SemanticsAction.tap);
      this.setState(dart.fn(() => {
        this[_lastPointerDownLocation] = null;
      }, VoidTovoid()));
    }
    [_handleLongPress]() {
      if (!(this[_lastPointerDownLocation] != null)) dart.assertFailed(null, L15, 116, 12, "_lastPointerDownLocation != null");
      this[_performAction](dart.nullCheck(this[_lastPointerDownLocation]), ui.SemanticsAction.longPress);
      this.setState(dart.fn(() => {
        this[_lastPointerDownLocation] = null;
      }, VoidTovoid()));
    }
    [_handlePanEnd$](details) {
      if (details == null) dart.nullFailed(L15, 123, 37, "details");
      let vx = details.velocity.pixelsPerSecond.dx;
      let vy = details.velocity.pixelsPerSecond.dy;
      if (vx[$abs]() === vy[$abs]()) return;
      if (vx[$abs]() > vy[$abs]()) {
        if (vx[$sign] < 0) {
          this[_performAction](dart.nullCheck(this[_lastPointerDownLocation]), ui.SemanticsAction.decrease);
          this[_performAction](dart.nullCheck(this[_lastPointerDownLocation]), ui.SemanticsAction.scrollLeft);
        } else {
          this[_performAction](dart.nullCheck(this[_lastPointerDownLocation]), ui.SemanticsAction.increase);
          this[_performAction](dart.nullCheck(this[_lastPointerDownLocation]), ui.SemanticsAction.scrollRight);
        }
      } else {
        if (vy[$sign] < 0)
          this[_performAction](dart.nullCheck(this[_lastPointerDownLocation]), ui.SemanticsAction.scrollUp);
        else
          this[_performAction](dart.nullCheck(this[_lastPointerDownLocation]), ui.SemanticsAction.scrollDown);
      }
      this.setState(dart.fn(() => {
        this[_lastPointerDownLocation] = null;
      }, VoidTovoid()));
    }
    [_performAction](position, action) {
      let t11;
      if (position == null) dart.nullFailed(L15, 147, 30, "position");
      if (action == null) dart.nullFailed(L15, 147, 56, "action");
      t11 = this[_pipelineOwner].semanticsOwner;
      t11 == null ? null : t11.performActionAt(position, action);
    }
    get [_pipelineOwner]() {
      return dart.nullCheck(binding$5.WidgetsBinding.instance).pipelineOwner;
    }
    build(context) {
      if (context == null) dart.nullFailed(L15, 156, 29, "context");
      return new basic.CustomPaint.new({foregroundPainter: new semantics_debugger._SemanticsDebuggerPainter.new(this[_pipelineOwner], this[_client].generation, this[_lastPointerDownLocation], dart.nullCheck(binding$5.WidgetsBinding.instance).window.devicePixelRatio, this.widget.labelStyle), child: new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.opaque, onTap: dart.bind(this, _handleTap$), onLongPress: dart.bind(this, _handleLongPress), onPanEnd: dart.bind(this, _handlePanEnd$), excludeFromSemantics: true, child: new basic.Listener.new({onPointerDown: dart.bind(this, _handlePointerDown), behavior: proxy_box.HitTestBehavior.opaque, child: new basic.IgnorePointer.new({ignoringSemantics: false, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C57 || CT.C57}), $creationLocationd_0dea112b090073317d4: C61 || CT.C61}), $creationLocationd_0dea112b090073317d4: C66 || CT.C66}), $creationLocationd_0dea112b090073317d4: C74 || CT.C74});
    }
  };
  (semantics_debugger._SemanticsDebuggerState.new = function() {
    this[___SemanticsDebuggerState__client] = null;
    this[___SemanticsDebuggerState__client_isSet] = false;
    this[_lastPointerDownLocation] = null;
    semantics_debugger._SemanticsDebuggerState.__proto__.new.call(this);
    ;
  }).prototype = semantics_debugger._SemanticsDebuggerState.prototype;
  dart.addTypeTests(semantics_debugger._SemanticsDebuggerState);
  dart.addTypeCaches(semantics_debugger._SemanticsDebuggerState);
  dart.setMethodSignature(semantics_debugger._SemanticsDebuggerState, () => ({
    __proto__: dart.getMethods(semantics_debugger._SemanticsDebuggerState.__proto__),
    [_update]: dart.fnType(dart.void, []),
    [_handlePointerDown]: dart.fnType(dart.void, [events.PointerDownEvent]),
    [_handleTap$]: dart.fnType(dart.void, []),
    [_handleLongPress]: dart.fnType(dart.void, []),
    [_handlePanEnd$]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    [_performAction]: dart.fnType(dart.void, [ui.Offset, ui.SemanticsAction]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(semantics_debugger._SemanticsDebuggerState, () => ({
    __proto__: dart.getGetters(semantics_debugger._SemanticsDebuggerState.__proto__),
    [_client]: semantics_debugger._SemanticsClient,
    [_pipelineOwner]: object$.PipelineOwner
  }));
  dart.setSetterSignature(semantics_debugger._SemanticsDebuggerState, () => ({
    __proto__: dart.getSetters(semantics_debugger._SemanticsDebuggerState.__proto__),
    [_client]: semantics_debugger._SemanticsClient
  }));
  dart.setLibraryUri(semantics_debugger._SemanticsDebuggerState, L16);
  dart.setFieldSignature(semantics_debugger._SemanticsDebuggerState, () => ({
    __proto__: dart.getFields(semantics_debugger._SemanticsDebuggerState.__proto__),
    [___SemanticsDebuggerState__client]: dart.fieldType(dart.nullable(semantics_debugger._SemanticsClient)),
    [___SemanticsDebuggerState__client_isSet]: dart.fieldType(core.bool),
    [_lastPointerDownLocation]: dart.fieldType(dart.nullable(ui.Offset))
  }));
  var _semanticsHandle = dart.privateName(semantics_debugger, "_semanticsHandle");
  var _didUpdateSemantics = dart.privateName(semantics_debugger, "_didUpdateSemantics");
  semantics_debugger._SemanticsClient = class _SemanticsClient extends change_notifier.ChangeNotifier {
    dispose() {
      dart.nullCheck(this[_semanticsHandle]).dispose();
      this[_semanticsHandle] = null;
      super.dispose();
    }
    [_didUpdateSemantics]() {
      this.generation = dart.notNull(this.generation) + 1;
      this.notifyListeners();
    }
  };
  (semantics_debugger._SemanticsClient.new = function(pipelineOwner) {
    if (pipelineOwner == null) dart.nullFailed(L15, 185, 34, "pipelineOwner");
    this[_semanticsHandle] = null;
    this.generation = 0;
    semantics_debugger._SemanticsClient.__proto__.new.call(this);
    this[_semanticsHandle] = pipelineOwner.ensureSemantics({listener: dart.bind(this, _didUpdateSemantics)});
  }).prototype = semantics_debugger._SemanticsClient.prototype;
  dart.addTypeTests(semantics_debugger._SemanticsClient);
  dart.addTypeCaches(semantics_debugger._SemanticsClient);
  dart.setMethodSignature(semantics_debugger._SemanticsClient, () => ({
    __proto__: dart.getMethods(semantics_debugger._SemanticsClient.__proto__),
    [_didUpdateSemantics]: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(semantics_debugger._SemanticsClient, L16);
  dart.setFieldSignature(semantics_debugger._SemanticsClient, () => ({
    __proto__: dart.getFields(semantics_debugger._SemanticsClient.__proto__),
    [_semanticsHandle]: dart.fieldType(dart.nullable(object$.SemanticsHandle)),
    generation: dart.fieldType(core.int)
  }));
  var _rootSemanticsNode = dart.privateName(semantics_debugger, "_rootSemanticsNode");
  var _findDepth = dart.privateName(semantics_debugger, "_findDepth");
  var _paint = dart.privateName(semantics_debugger, "_paint");
  var C78;
  var C79;
  var C80;
  var _paintMessage = dart.privateName(semantics_debugger, "_paintMessage");
  var owner$ = dart.privateName(semantics_debugger, "_SemanticsDebuggerPainter.owner");
  var generation$ = dart.privateName(semantics_debugger, "_SemanticsDebuggerPainter.generation");
  var pointerPosition$ = dart.privateName(semantics_debugger, "_SemanticsDebuggerPainter.pointerPosition");
  var devicePixelRatio$ = dart.privateName(semantics_debugger, "_SemanticsDebuggerPainter.devicePixelRatio");
  var labelStyle$0 = dart.privateName(semantics_debugger, "_SemanticsDebuggerPainter.labelStyle");
  semantics_debugger._SemanticsDebuggerPainter = class _SemanticsDebuggerPainter extends custom_paint.CustomPainter {
    get owner() {
      return this[owner$];
    }
    set owner(value) {
      super.owner = value;
    }
    get generation() {
      return this[generation$];
    }
    set generation(value) {
      super.generation = value;
    }
    get pointerPosition() {
      return this[pointerPosition$];
    }
    set pointerPosition(value) {
      super.pointerPosition = value;
    }
    get devicePixelRatio() {
      return this[devicePixelRatio$];
    }
    set devicePixelRatio(value) {
      super.devicePixelRatio = value;
    }
    get labelStyle() {
      return this[labelStyle$0];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get [_rootSemanticsNode]() {
      let t11;
      t11 = this.owner.semanticsOwner;
      return t11 == null ? null : t11.rootSemanticsNode;
    }
    paint(canvas, size) {
      if (canvas == null) dart.nullFailed(L15, 222, 21, "canvas");
      if (size == null) dart.nullFailed(L15, 222, 34, "size");
      let rootNode = this[_rootSemanticsNode];
      canvas.save();
      canvas.scale(1.0 / dart.notNull(this.devicePixelRatio), 1.0 / dart.notNull(this.devicePixelRatio));
      if (rootNode != null) this[_paint](canvas, rootNode, this[_findDepth](rootNode));
      if (this.pointerPosition != null) {
        let paint = ui.Paint.new();
        paint.color = C78 || CT.C78;
        canvas.drawCircle(dart.nullCheck(this.pointerPosition), 10.0 * dart.notNull(this.devicePixelRatio), paint);
      }
      canvas.restore();
    }
    shouldRepaint(oldDelegate) {
      semantics_debugger._SemanticsDebuggerPainter.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(L15, 237, 48, "oldDelegate");
      return !dart.equals(this.owner, oldDelegate.owner) || this.generation != oldDelegate.generation || !dart.equals(this.pointerPosition, oldDelegate.pointerPosition);
    }
    getMessage(node) {
      if (node == null) dart.nullFailed(L15, 244, 35, "node");
      let data = node.getSemanticsData();
      let annotations = JSArrayOfString().of([]);
      let wantsTap = false;
      if (dart.test(data.hasFlag(ui.SemanticsFlag.hasCheckedState))) {
        annotations[$add](dart.test(data.hasFlag(ui.SemanticsFlag.isChecked)) ? "checked" : "unchecked");
        wantsTap = true;
      }
      if (dart.test(data.hasFlag(ui.SemanticsFlag.isTextField))) {
        annotations[$add]("textfield");
        wantsTap = true;
      }
      if (dart.test(data.hasAction(ui.SemanticsAction.tap))) {
        if (!wantsTap) annotations[$add]("button");
      } else {
        if (wantsTap) annotations[$add]("disabled");
      }
      if (dart.test(data.hasAction(ui.SemanticsAction.longPress))) annotations[$add]("long-pressable");
      let isScrollable = dart.test(data.hasAction(ui.SemanticsAction.scrollLeft)) || dart.test(data.hasAction(ui.SemanticsAction.scrollRight)) || dart.test(data.hasAction(ui.SemanticsAction.scrollUp)) || dart.test(data.hasAction(ui.SemanticsAction.scrollDown));
      let isAdjustable = dart.test(data.hasAction(ui.SemanticsAction.increase)) || dart.test(data.hasAction(ui.SemanticsAction.decrease));
      if (isScrollable) annotations[$add]("scrollable");
      if (isAdjustable) annotations[$add]("adjustable");
      if (!(data.label != null)) dart.assertFailed(null, L15, 283, 12, "data.label != null");
      let message = null;
      if (data.label[$isEmpty]) {
        message = annotations[$join]("; ");
      } else {
        let label = null;
        if (data.textDirection == null) {
          label = "⁨" + dart.str(data.label) + "⁩";
          annotations[$insert](0, "MISSING TEXT DIRECTION");
        } else {
          switch (dart.nullCheck(data.textDirection)) {
            case C79 || CT.C79:
            {
              label = "⁧" + dart.str(data.label) + "‬";
              break;
            }
            case C80 || CT.C80:
            {
              label = data.label;
              break;
            }
            default:
            {
              dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
            }
          }
        }
        if (dart.test(annotations[$isEmpty])) {
          message = label;
        } else {
          message = dart.str(label) + " (" + dart.str(annotations[$join]("; ")) + ")";
        }
      }
      return message[$trim]();
    }
    [_paintMessage](canvas, node) {
      let t11;
      if (canvas == null) dart.nullFailed(L15, 312, 29, "canvas");
      if (node == null) dart.nullFailed(L15, 312, 51, "node");
      let message = this.getMessage(node);
      if (message[$isEmpty]) return;
      let rect = node.rect;
      canvas.save();
      canvas.clipRect(rect);
      let textPainter = (t11 = new text_painter.TextPainter.new(), (() => {
        t11.text = new text_span.TextSpan.new({style: this.labelStyle, text: message});
        t11.textDirection = ui.TextDirection.ltr;
        t11.textAlign = ui.TextAlign.center;
        t11.layout({maxWidth: rect.width});
        return t11;
      })());
      textPainter.paint(canvas, alignment$.Alignment.center.inscribe(textPainter.size, rect).topLeft);
      canvas.restore();
    }
    [_findDepth](node) {
      if (node == null) dart.nullFailed(L15, 332, 32, "node");
      if (!dart.test(node.hasChildren) || dart.test(node.mergeAllDescendantsIntoThisNode)) return 1;
      let childrenDepth = 0;
      node.visitChildren(dart.fn(child => {
        if (child == null) dart.nullFailed(L15, 336, 39, "child");
        childrenDepth = math.max(core.int, childrenDepth, this[_findDepth](child));
        return true;
      }, SemanticsNodeTobool()));
      return childrenDepth + 1;
    }
    [_paint](canvas, node, rank) {
      let t11, t11$, t11$0;
      if (canvas == null) dart.nullFailed(L15, 343, 22, "canvas");
      if (node == null) dart.nullFailed(L15, 343, 44, "node");
      if (rank == null) dart.nullFailed(L15, 343, 54, "rank");
      canvas.save();
      if (node.transform != null) canvas.transform(dart.nullCheck(node.transform).storage);
      let rect = node.rect;
      if (!dart.test(rect.isEmpty)) {
        let lineColor = new ui.Color.new(4278190080 + dart.notNull(math.Random.new(node.id).nextInt(16777215)));
        let innerRect = rect.deflate(dart.notNull(rank) * 1.0);
        if (dart.test(innerRect.isEmpty)) {
          let fill = (t11 = ui.Paint.new(), (() => {
            t11.color = lineColor;
            t11.style = ui.PaintingStyle.fill;
            return t11;
          })());
          canvas.drawRect(rect, fill);
        } else {
          let fill = (t11$ = ui.Paint.new(), (() => {
            t11$.color = C40 || CT.C40;
            t11$.style = ui.PaintingStyle.fill;
            return t11$;
          })());
          canvas.drawRect(rect, fill);
          let line = (t11$0 = ui.Paint.new(), (() => {
            t11$0.strokeWidth = dart.notNull(rank) * 2.0;
            t11$0.color = lineColor;
            t11$0.style = ui.PaintingStyle.stroke;
            return t11$0;
          })());
          canvas.drawRect(innerRect, line);
        }
        this[_paintMessage](canvas, node);
      }
      if (!dart.test(node.mergeAllDescendantsIntoThisNode)) {
        let childRank = dart.notNull(rank) - 1;
        node.visitChildren(dart.fn(child => {
          if (child == null) dart.nullFailed(L15, 371, 41, "child");
          this[_paint](canvas, child, childRank);
          return true;
        }, SemanticsNodeTobool()));
      }
      canvas.restore();
    }
  };
  (semantics_debugger._SemanticsDebuggerPainter.new = function(owner, generation, pointerPosition, devicePixelRatio, labelStyle) {
    if (owner == null) dart.nullFailed(L15, 209, 40, "owner");
    if (generation == null) dart.nullFailed(L15, 209, 52, "generation");
    if (devicePixelRatio == null) dart.nullFailed(L15, 209, 91, "devicePixelRatio");
    if (labelStyle == null) dart.nullFailed(L15, 209, 114, "labelStyle");
    this[owner$] = owner;
    this[generation$] = generation;
    this[pointerPosition$] = pointerPosition;
    this[devicePixelRatio$] = devicePixelRatio;
    this[labelStyle$0] = labelStyle;
    semantics_debugger._SemanticsDebuggerPainter.__proto__.new.call(this);
    ;
  }).prototype = semantics_debugger._SemanticsDebuggerPainter.prototype;
  dart.addTypeTests(semantics_debugger._SemanticsDebuggerPainter);
  dart.addTypeCaches(semantics_debugger._SemanticsDebuggerPainter);
  dart.setMethodSignature(semantics_debugger._SemanticsDebuggerPainter, () => ({
    __proto__: dart.getMethods(semantics_debugger._SemanticsDebuggerPainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    getMessage: dart.fnType(core.String, [semantics.SemanticsNode]),
    [_paintMessage]: dart.fnType(dart.void, [ui.Canvas, semantics.SemanticsNode]),
    [_findDepth]: dart.fnType(core.int, [semantics.SemanticsNode]),
    [_paint]: dart.fnType(dart.void, [ui.Canvas, semantics.SemanticsNode, core.int])
  }));
  dart.setGetterSignature(semantics_debugger._SemanticsDebuggerPainter, () => ({
    __proto__: dart.getGetters(semantics_debugger._SemanticsDebuggerPainter.__proto__),
    [_rootSemanticsNode]: dart.nullable(semantics.SemanticsNode)
  }));
  dart.setLibraryUri(semantics_debugger._SemanticsDebuggerPainter, L16);
  dart.setFieldSignature(semantics_debugger._SemanticsDebuggerPainter, () => ({
    __proto__: dart.getFields(semantics_debugger._SemanticsDebuggerPainter.__proto__),
    owner: dart.finalFieldType(object$.PipelineOwner),
    generation: dart.finalFieldType(core.int),
    pointerPosition: dart.finalFieldType(dart.nullable(ui.Offset)),
    devicePixelRatio: dart.finalFieldType(core.double),
    labelStyle: dart.finalFieldType(text_style.TextStyle)
  }));
  var location$ = dart.privateName(router, "RouteInformation.location");
  var state$ = dart.privateName(router, "RouteInformation.state");
  router.RouteInformation = class RouteInformation extends core.Object {
    get location() {
      return this[location$];
    }
    set location(value) {
      super.location = value;
    }
    get state() {
      return this[state$];
    }
    set state(value) {
      super.state = value;
    }
  };
  (router.RouteInformation.new = function(opts) {
    let location = opts && 'location' in opts ? opts.location : null;
    let state = opts && 'state' in opts ? opts.state : null;
    this[location$] = location;
    this[state$] = state;
    ;
  }).prototype = router.RouteInformation.prototype;
  dart.addTypeTests(router.RouteInformation);
  dart.addTypeCaches(router.RouteInformation);
  dart.setLibraryUri(router.RouteInformation, L17);
  dart.setFieldSignature(router.RouteInformation, () => ({
    __proto__: dart.getFields(router.RouteInformation.__proto__),
    location: dart.finalFieldType(dart.nullable(core.String)),
    state: dart.finalFieldType(dart.nullable(core.Object))
  }));
  var _setStateWithExplicitReportStatus = dart.privateName(router, "_setStateWithExplicitReportStatus");
  const _is_Router_default = Symbol('_is_Router_default');
  var routeInformationProvider$ = dart.privateName(router, "Router.routeInformationProvider");
  var routeInformationParser$ = dart.privateName(router, "Router.routeInformationParser");
  var routerDelegate$ = dart.privateName(router, "Router.routerDelegate");
  var backButtonDispatcher$ = dart.privateName(router, "Router.backButtonDispatcher");
  router.Router$ = dart.generic(T => {
    var _RouterStateOfT = () => (_RouterStateOfT = dart.constFn(router._RouterState$(T)))();
    class Router extends framework.StatefulWidget {
      get routeInformationProvider() {
        return this[routeInformationProvider$];
      }
      set routeInformationProvider(value) {
        super.routeInformationProvider = value;
      }
      get routeInformationParser() {
        return this[routeInformationParser$];
      }
      set routeInformationParser(value) {
        super.routeInformationParser = value;
      }
      get routerDelegate() {
        return this[routerDelegate$];
      }
      set routerDelegate(value) {
        super.routerDelegate = value;
      }
      get backButtonDispatcher() {
        return this[backButtonDispatcher$];
      }
      set backButtonDispatcher(value) {
        super.backButtonDispatcher = value;
      }
      static of(context) {
        if (context == null) dart.nullFailed(L18, 309, 42, "context");
        let scope = context.dependOnInheritedWidgetOfExactType(router._RouterScope);
        if (!dart.test(dart.fn(() => {
          if (scope == null) {
            dart.throw(assertions.FlutterError.new("Router operation requested with a context that does not include a Router.\n" + "The context used to retrieve the Router must be that of a widget that " + "is a descendant of a Router widget."));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L18, 311, 12, "() {\r\n      if (scope == null) {\r\n        throw FlutterError(\r\n          'Router operation requested with a context that does not include a Router.\\n'\r\n          'The context used to retrieve the Router must be that of a widget that '\r\n          'is a descendant of a Router widget.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
        return dart.nullCheck(scope).routerState.widget;
      }
      static maybeOf(context) {
        let t11;
        if (context == null) dart.nullFailed(L18, 337, 48, "context");
        let scope = context.dependOnInheritedWidgetOfExactType(router._RouterScope);
        t11 = scope;
        return t11 == null ? null : t11.routerState.widget;
      }
      static navigate(context, callback) {
        if (context == null) dart.nullFailed(L18, 366, 37, "context");
        if (callback == null) dart.nullFailed(L18, 366, 59, "callback");
        let scope = router._RouterScope.as(dart.nullCheck(context.getElementForInheritedWidgetOfExactType(router._RouterScope)).widget);
        scope.routerState[_setStateWithExplicitReportStatus](router._IntentionToReportRouteInformation.must, callback);
      }
      static neglect(context, callback) {
        if (context == null) dart.nullFailed(L18, 392, 36, "context");
        if (callback == null) dart.nullFailed(L18, 392, 58, "callback");
        let scope = router._RouterScope.as(dart.nullCheck(context.getElementForInheritedWidgetOfExactType(router._RouterScope)).widget);
        scope.routerState[_setStateWithExplicitReportStatus](router._IntentionToReportRouteInformation.ignore, callback);
      }
      createState() {
        return new (_RouterStateOfT()).new();
      }
    }
    (Router.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let routeInformationProvider = opts && 'routeInformationProvider' in opts ? opts.routeInformationProvider : null;
      let routeInformationParser = opts && 'routeInformationParser' in opts ? opts.routeInformationParser : null;
      let routerDelegate = opts && 'routerDelegate' in opts ? opts.routerDelegate : null;
      if (routerDelegate == null) dart.nullFailed(L18, 244, 19, "routerDelegate");
      let backButtonDispatcher = opts && 'backButtonDispatcher' in opts ? opts.backButtonDispatcher : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[routeInformationProvider$] = routeInformationProvider;
      this[routeInformationParser$] = routeInformationParser;
      this[routerDelegate$] = routerDelegate;
      this[backButtonDispatcher$] = backButtonDispatcher;
      if (!(routeInformationProvider == null)[$_equals](routeInformationParser == null)) dart.assertFailed("Both routeInformationProvider and routeInformationParser must be provided " + "if this router parses route information. Otherwise, they should both " + "be null.", L18, 247, 11, "(routeInformationProvider == null) == (routeInformationParser == null)");
      if (!(routerDelegate != null)) dart.assertFailed(null, L18, 252, 16, "routerDelegate != null");
      Router.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = Router.prototype;
    dart.addTypeTests(Router);
    Router.prototype[_is_Router_default] = true;
    dart.addTypeCaches(Router);
    dart.setMethodSignature(Router, () => ({
      __proto__: dart.getMethods(Router.__proto__),
      createState: dart.fnType(framework.State$(router.Router$(T)), [])
    }));
    dart.setLibraryUri(Router, L17);
    dart.setFieldSignature(Router, () => ({
      __proto__: dart.getFields(Router.__proto__),
      routeInformationProvider: dart.finalFieldType(dart.nullable(router.RouteInformationProvider)),
      routeInformationParser: dart.finalFieldType(dart.nullable(router.RouteInformationParser$(T))),
      routerDelegate: dart.finalFieldType(router.RouterDelegate$(T)),
      backButtonDispatcher: dart.finalFieldType(dart.nullable(router.BackButtonDispatcher))
    }));
    return Router;
  });
  router.Router = router.Router$();
  dart.addTypeTests(router.Router, _is_Router_default);
  var _name$0 = dart.privateName(router, "_name");
  var C81;
  var C82;
  var C83;
  var C84;
  var C85;
  router._IntentionToReportRouteInformation = class _IntentionToReportRouteInformation extends core.Object {
    toString() {
      return this[_name$0];
    }
  };
  (router._IntentionToReportRouteInformation.new = function(index, _name) {
    if (index == null) dart.nullFailed(L18, 406, 6, "index");
    if (_name == null) dart.nullFailed(L18, 406, 6, "_name");
    this.index = index;
    this[_name$0] = _name;
    ;
  }).prototype = router._IntentionToReportRouteInformation.prototype;
  dart.addTypeTests(router._IntentionToReportRouteInformation);
  dart.addTypeCaches(router._IntentionToReportRouteInformation);
  dart.setLibraryUri(router._IntentionToReportRouteInformation, L17);
  dart.setFieldSignature(router._IntentionToReportRouteInformation, () => ({
    __proto__: dart.getFields(router._IntentionToReportRouteInformation.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$0]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(router._IntentionToReportRouteInformation, ['toString']);
  router._IntentionToReportRouteInformation.none = C81 || CT.C81;
  router._IntentionToReportRouteInformation.maybe = C82 || CT.C82;
  router._IntentionToReportRouteInformation.must = C83 || CT.C83;
  router._IntentionToReportRouteInformation.ignore = C84 || CT.C84;
  router._IntentionToReportRouteInformation.values = C85 || CT.C85;
  var _currentRouteInformationParserTransaction = dart.privateName(router, "_currentRouteInformationParserTransaction");
  var _currentRouterDelegateTransaction = dart.privateName(router, "_currentRouterDelegateTransaction");
  var ___RouterState__currentIntentionToReport = dart.privateName(router, "_#_RouterState#_currentIntentionToReport");
  var ___RouterState__currentIntentionToReport_isSet = dart.privateName(router, "_#_RouterState#_currentIntentionToReport#isSet");
  var _routeInformationReportingTaskScheduled = dart.privateName(router, "_routeInformationReportingTaskScheduled");
  var _lastSeenLocation = dart.privateName(router, "_lastSeenLocation");
  var _currentIntentionToReport = dart.privateName(router, "_currentIntentionToReport");
  var _handleRouteInformationProviderNotification = dart.privateName(router, "_handleRouteInformationProviderNotification");
  var _handleBackButtonDispatcherNotification = dart.privateName(router, "_handleBackButtonDispatcherNotification");
  var _handleRouterDelegateNotification = dart.privateName(router, "_handleRouterDelegateNotification");
  var _processInitialRoute = dart.privateName(router, "_processInitialRoute");
  var _reportRouteInformation = dart.privateName(router, "_reportRouteInformation");
  var _scheduleRouteInformationReportingTask = dart.privateName(router, "_scheduleRouteInformationReportingTask");
  var _retrieveNewRouteInformation = dart.privateName(router, "_retrieveNewRouteInformation");
  var FlutterErrorDetails_silent = dart.privateName(assertions, "FlutterErrorDetails.silent");
  var FlutterErrorDetails_informationCollector = dart.privateName(assertions, "FlutterErrorDetails.informationCollector");
  var FlutterErrorDetails_stackFilter = dart.privateName(assertions, "FlutterErrorDetails.stackFilter");
  var FlutterErrorDetails_context = dart.privateName(assertions, "FlutterErrorDetails.context");
  var FlutterErrorDetails_library = dart.privateName(assertions, "FlutterErrorDetails.library");
  var FlutterErrorDetails_stack = dart.privateName(assertions, "FlutterErrorDetails.stack");
  var FlutterErrorDetails_exception = dart.privateName(assertions, "FlutterErrorDetails.exception");
  var C86;
  var C87;
  var _maybeNeedToReportRouteInformation = dart.privateName(router, "_maybeNeedToReportRouteInformation");
  var _verifyRouteInformationParserStillCurrent = dart.privateName(router, "_verifyRouteInformationParserStillCurrent");
  var _verifyRouterDelegatePushStillCurrent = dart.privateName(router, "_verifyRouterDelegatePushStillCurrent");
  var _rebuild = dart.privateName(router, "_rebuild");
  var _verifyRouterDelegatePopStillCurrent = dart.privateName(router, "_verifyRouterDelegatePopStillCurrent");
  var C90;
  var C89;
  var C88;
  var C93;
  var C94;
  var C95;
  var C96;
  var C97;
  var C98;
  var C92;
  var C91;
  const _is__RouterState_default = Symbol('_is__RouterState_default');
  router._RouterState$ = dart.generic(T => {
    var RouterOfT = () => (RouterOfT = dart.constFn(router.Router$(T)))();
    var SynchronousFutureOfT = () => (SynchronousFutureOfT = dart.constFn(synchronous_future.SynchronousFuture$(T)))();
    var FutureOfT = () => (FutureOfT = dart.constFn(async.Future$(T)))();
    var TToFutureOfT = () => (TToFutureOfT = dart.constFn(dart.fnType(FutureOfT(), [T])))();
    class _RouterState extends framework.State$(router.Router$(T)) {
      get [_currentIntentionToReport]() {
        let t11;
        return dart.test(this[___RouterState__currentIntentionToReport_isSet]) ? (t11 = this[___RouterState__currentIntentionToReport], t11) : dart.throw(new _internal.LateError.fieldNI("_currentIntentionToReport"));
      }
      set [_currentIntentionToReport](t11) {
        if (t11 == null) dart.nullFailed(L18, 420, 43, "null");
        this[___RouterState__currentIntentionToReport_isSet] = true;
        this[___RouterState__currentIntentionToReport] = t11;
      }
      initState() {
        let t12, t12$;
        super.initState();
        t12 = this.widget.routeInformationProvider;
        t12 == null ? null : t12.addListener(dart.bind(this, _handleRouteInformationProviderNotification));
        t12$ = this.widget.backButtonDispatcher;
        t12$ == null ? null : t12$.addCallback(dart.bind(this, _handleBackButtonDispatcherNotification));
        this.widget.routerDelegate.addListener(dart.bind(this, _handleRouterDelegateNotification));
        this[_currentIntentionToReport] = router._IntentionToReportRouteInformation.none;
        if (this.widget.routeInformationProvider != null) {
          this[_processInitialRoute]();
        }
      }
      [_scheduleRouteInformationReportingTask]() {
        if (dart.test(this[_routeInformationReportingTaskScheduled])) return;
        if (!!dart.equals(this[_currentIntentionToReport], router._IntentionToReportRouteInformation.none)) dart.assertFailed(null, L18, 441, 12, "_currentIntentionToReport != _IntentionToReportRouteInformation.none");
        this[_routeInformationReportingTaskScheduled] = true;
        dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.bind(this, _reportRouteInformation));
      }
      [_reportRouteInformation](timestamp) {
        if (timestamp == null) dart.nullFailed(L18, 446, 41, "timestamp");
        if (!dart.test(this[_routeInformationReportingTaskScheduled])) dart.assertFailed(null, L18, 447, 12, "_routeInformationReportingTaskScheduled");
        this[_routeInformationReportingTaskScheduled] = false;
        switch (this[_currentIntentionToReport]) {
          case C81 || CT.C81:
          {
            if (!false) dart.assertFailed(null, L18, 452, 16, "false");
            return;
          }
          case C84 || CT.C84:
          {
            let routeInformation = this[_retrieveNewRouteInformation]();
            if (routeInformation != null) {
              this[_lastSeenLocation] = routeInformation.location;
            }
            this[_currentIntentionToReport] = router._IntentionToReportRouteInformation.none;
            return;
          }
          case C82 || CT.C82:
          {
            let routeInformation = this[_retrieveNewRouteInformation]();
            if (routeInformation != null) {
              if (this[_lastSeenLocation] != routeInformation.location) {
                dart.nullCheck(this.widget.routeInformationProvider).routerReportsNewRouteInformation(routeInformation);
                this[_lastSeenLocation] = routeInformation.location;
              }
            }
            this[_currentIntentionToReport] = router._IntentionToReportRouteInformation.none;
            return;
          }
          case C83 || CT.C83:
          {
            let routeInformation = this[_retrieveNewRouteInformation]();
            if (routeInformation != null) {
              dart.nullCheck(this.widget.routeInformationProvider).routerReportsNewRouteInformation(routeInformation);
              this[_lastSeenLocation] = routeInformation.location;
            }
            this[_currentIntentionToReport] = router._IntentionToReportRouteInformation.none;
            return;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      [_retrieveNewRouteInformation]() {
        let configuration = this.widget.routerDelegate.currentConfiguration;
        if (configuration == null) return null;
        let routeInformation = dart.nullCheck(this.widget.routeInformationParser).restoreRouteInformation(configuration);
        if (!dart.test(dart.fn(() => {
          if (routeInformation == null) {
            assertions.FlutterError.reportError(C86 || CT.C86);
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L18, 491, 12, "(){\r\n      if (routeInformation == null) {\r\n        FlutterError.reportError(\r\n          const FlutterErrorDetails(\r\n            exception:\r\n              'Router.routeInformationParser returns a null RouteInformation. '\r\n              'If you opt for route information reporting, the '\r\n              'routeInformationParser must not report null for a given '\r\n              'configuration.'\r\n          ),\r\n        );\r\n      }\r\n      return true;\r\n    }()");
        return routeInformation;
      }
      [_setStateWithExplicitReportStatus](status, fn) {
        if (status == null) dart.nullFailed(L18, 509, 40, "status");
        if (fn == null) dart.nullFailed(L18, 510, 18, "fn");
        if (!(status != null)) dart.assertFailed(null, L18, 512, 12, "status != null");
        if (!(dart.notNull(status.index) >= dart.notNull(router._IntentionToReportRouteInformation.must.index))) dart.assertFailed(null, L18, 513, 12, "status.index >= _IntentionToReportRouteInformation.must.index");
        if (!dart.test(dart.fn(() => {
          if (dart.notNull(this[_currentIntentionToReport].index) >= dart.notNull(router._IntentionToReportRouteInformation.must.index) && !dart.equals(this[_currentIntentionToReport], status)) {
            assertions.FlutterError.reportError(C87 || CT.C87);
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L18, 514, 12, "() {\r\n      if (_currentIntentionToReport.index >= _IntentionToReportRouteInformation.must.index &&\r\n          _currentIntentionToReport != status) {\r\n        FlutterError.reportError(\r\n          const FlutterErrorDetails(\r\n            exception:\r\n              'Both Router.navigate and Router.neglect have been called in this '\r\n              'build cycle, and the Router cannot decide whether to report the '\r\n              'route information. Please make sure only one of them is called '\r\n              'within the same build cycle.'\r\n          ),\r\n        );\r\n      }\r\n      return true;\r\n    }()");
        this[_currentIntentionToReport] = status;
        this[_scheduleRouteInformationReportingTask]();
        fn();
      }
      [_maybeNeedToReportRouteInformation]() {
        this[_currentIntentionToReport] = !dart.equals(this[_currentIntentionToReport], router._IntentionToReportRouteInformation.none) ? this[_currentIntentionToReport] : router._IntentionToReportRouteInformation.maybe;
        this[_scheduleRouteInformationReportingTask]();
      }
      didChangeDependencies() {
        super.didChangeDependencies();
        this[_maybeNeedToReportRouteInformation]();
      }
      didUpdateWidget(oldWidget) {
        let t12, t12$, t12$0, t12$1, t12$2, t12$3;
        RouterOfT().as(oldWidget);
        if (oldWidget == null) dart.nullFailed(L18, 548, 34, "oldWidget");
        super.didUpdateWidget(oldWidget);
        if (!dart.equals(this.widget.routeInformationProvider, oldWidget.routeInformationProvider) || !dart.equals(this.widget.backButtonDispatcher, oldWidget.backButtonDispatcher) || !dart.equals(this.widget.routeInformationParser, oldWidget.routeInformationParser) || !dart.equals(this.widget.routerDelegate, oldWidget.routerDelegate)) {
          this[_currentRouteInformationParserTransaction] = new core.Object.new();
          this[_currentRouterDelegateTransaction] = new core.Object.new();
        }
        if (!dart.equals(this.widget.routeInformationProvider, oldWidget.routeInformationProvider)) {
          t12 = oldWidget.routeInformationProvider;
          t12 == null ? null : t12.removeListener(dart.bind(this, _handleRouteInformationProviderNotification));
          t12$ = this.widget.routeInformationProvider;
          t12$ == null ? null : t12$.addListener(dart.bind(this, _handleRouteInformationProviderNotification));
          if (!dart.equals((t12$0 = oldWidget.routeInformationProvider, t12$0 == null ? null : t12$0.value), (t12$1 = this.widget.routeInformationProvider, t12$1 == null ? null : t12$1.value))) {
            this[_handleRouteInformationProviderNotification]();
          }
        }
        if (!dart.equals(this.widget.backButtonDispatcher, oldWidget.backButtonDispatcher)) {
          t12$2 = oldWidget.backButtonDispatcher;
          t12$2 == null ? null : t12$2.removeCallback(dart.bind(this, _handleBackButtonDispatcherNotification));
          t12$3 = this.widget.backButtonDispatcher;
          t12$3 == null ? null : t12$3.addCallback(dart.bind(this, _handleBackButtonDispatcherNotification));
        }
        if (!dart.equals(this.widget.routerDelegate, oldWidget.routerDelegate)) {
          oldWidget.routerDelegate.removeListener(dart.bind(this, _handleRouterDelegateNotification));
          this.widget.routerDelegate.addListener(dart.bind(this, _handleRouterDelegateNotification));
          this[_maybeNeedToReportRouteInformation]();
        }
      }
      dispose() {
        let t12, t12$;
        t12 = this.widget.routeInformationProvider;
        t12 == null ? null : t12.removeListener(dart.bind(this, _handleRouteInformationProviderNotification));
        t12$ = this.widget.backButtonDispatcher;
        t12$ == null ? null : t12$.removeCallback(dart.bind(this, _handleBackButtonDispatcherNotification));
        this.widget.routerDelegate.removeListener(dart.bind(this, _handleRouterDelegateNotification));
        this[_currentRouteInformationParserTransaction] = null;
        this[_currentRouterDelegateTransaction] = null;
        super.dispose();
      }
      [_processInitialRoute]() {
        this[_currentRouteInformationParserTransaction] = new core.Object.new();
        this[_currentRouterDelegateTransaction] = new core.Object.new();
        this[_lastSeenLocation] = dart.nullCheck(dart.nullCheck(this.widget.routeInformationProvider).value).location;
        dart.nullCheck(this.widget.routeInformationParser).parseRouteInformation(dart.nullCheck(dart.nullCheck(this.widget.routeInformationProvider).value)).then(T, this[_verifyRouteInformationParserStillCurrent](this[_currentRouteInformationParserTransaction], this.widget)).then(dart.void, dart.bind(this.widget.routerDelegate, 'setInitialRoutePath')).then(dart.void, this[_verifyRouterDelegatePushStillCurrent](this[_currentRouterDelegateTransaction], this.widget)).then(dart.void, dart.bind(this, _rebuild));
      }
      [_handleRouteInformationProviderNotification]() {
        this[_currentRouteInformationParserTransaction] = new core.Object.new();
        this[_currentRouterDelegateTransaction] = new core.Object.new();
        this[_lastSeenLocation] = dart.nullCheck(dart.nullCheck(this.widget.routeInformationProvider).value).location;
        dart.nullCheck(this.widget.routeInformationParser).parseRouteInformation(dart.nullCheck(dart.nullCheck(this.widget.routeInformationProvider).value)).then(T, this[_verifyRouteInformationParserStillCurrent](this[_currentRouteInformationParserTransaction], this.widget)).then(dart.void, dart.bind(this.widget.routerDelegate, 'setNewRoutePath')).then(dart.void, this[_verifyRouterDelegatePushStillCurrent](this[_currentRouterDelegateTransaction], this.widget)).then(dart.void, dart.bind(this, _rebuild));
      }
      [_handleBackButtonDispatcherNotification]() {
        this[_currentRouteInformationParserTransaction] = new core.Object.new();
        this[_currentRouterDelegateTransaction] = new core.Object.new();
        return this.widget.routerDelegate.popRoute().then(core.bool, this[_verifyRouterDelegatePopStillCurrent](this[_currentRouterDelegateTransaction], this.widget)).then(core.bool, dart.fn(data => {
          if (data == null) dart.nullFailed(L18, 615, 25, "data");
          this[_rebuild]();
          this[_maybeNeedToReportRouteInformation]();
          return new (SynchronousFutureOfbool()).new(data);
        }, boolToSynchronousFutureOfbool()));
      }
      [_verifyRouteInformationParserStillCurrent](transaction, originalWidget) {
        if (originalWidget == null) dart.nullFailed(L18, 624, 97, "originalWidget");
        return dart.fn(data => {
          if (dart.equals(transaction, this[_currentRouteInformationParserTransaction]) && dart.equals(this.widget.routeInformationProvider, originalWidget.routeInformationProvider) && dart.equals(this.widget.backButtonDispatcher, originalWidget.backButtonDispatcher) && dart.equals(this.widget.routeInformationParser, originalWidget.routeInformationParser) && dart.equals(this.widget.routerDelegate, originalWidget.routerDelegate)) {
            return new (SynchronousFutureOfT()).new(data);
          }
          return FutureOfT().as(router._RouterState._never);
        }, TToFutureOfT());
      }
      [_verifyRouterDelegatePushStillCurrent](transaction, originalWidget) {
        if (originalWidget == null) dart.nullFailed(L18, 637, 96, "originalWidget");
        return dart.fn(data => {
          if (dart.equals(transaction, this[_currentRouterDelegateTransaction]) && dart.equals(this.widget.routeInformationProvider, originalWidget.routeInformationProvider) && dart.equals(this.widget.backButtonDispatcher, originalWidget.backButtonDispatcher) && dart.equals(this.widget.routeInformationParser, originalWidget.routeInformationParser) && dart.equals(this.widget.routerDelegate, originalWidget.routerDelegate)) return new (SynchronousFutureOfvoid()).new(data);
          return router._RouterState._never;
        }, voidToFuture());
      }
      [_verifyRouterDelegatePopStillCurrent](transaction, originalWidget) {
        if (originalWidget == null) dart.nullFailed(L18, 649, 95, "originalWidget");
        return dart.fn(data => {
          if (data == null) dart.nullFailed(L18, 650, 18, "data");
          if (dart.equals(transaction, this[_currentRouterDelegateTransaction]) && dart.equals(this.widget.routeInformationProvider, originalWidget.routeInformationProvider) && dart.equals(this.widget.backButtonDispatcher, originalWidget.backButtonDispatcher) && dart.equals(this.widget.routeInformationParser, originalWidget.routeInformationParser) && dart.equals(this.widget.routerDelegate, originalWidget.routerDelegate)) {
            return new (SynchronousFutureOfbool()).new(data);
          }
          return new (SynchronousFutureOfbool()).new(true);
        }, boolToSynchronousFutureOfbool());
      }
      [_rebuild](value = null) {
        this.setState(dart.fn(() => {
        }, VoidTovoid()));
        return new (SynchronousFutureOfvoid()).new(value);
      }
      [_handleRouterDelegateNotification]() {
        this.setState(dart.fn(() => {
        }, VoidTovoid()));
        this[_maybeNeedToReportRouteInformation]();
      }
      build(context) {
        if (context == null) dart.nullFailed(L18, 675, 29, "context");
        return new router._RouterScope.new({routeInformationProvider: this.widget.routeInformationProvider, backButtonDispatcher: this.widget.backButtonDispatcher, routeInformationParser: this.widget.routeInformationParser, routerDelegate: this.widget.routerDelegate, routerState: this, child: new basic.Builder.new({builder: dart.bind(this.widget.routerDelegate, 'build'), $creationLocationd_0dea112b090073317d4: C88 || CT.C88}), $creationLocationd_0dea112b090073317d4: C91 || CT.C91});
      }
    }
    (_RouterState.new = function() {
      this[_currentRouteInformationParserTransaction] = null;
      this[_currentRouterDelegateTransaction] = null;
      this[___RouterState__currentIntentionToReport] = null;
      this[___RouterState__currentIntentionToReport_isSet] = false;
      this[_routeInformationReportingTaskScheduled] = false;
      this[_lastSeenLocation] = null;
      _RouterState.__proto__.new.call(this);
      ;
    }).prototype = _RouterState.prototype;
    dart.addTypeTests(_RouterState);
    _RouterState.prototype[_is__RouterState_default] = true;
    dart.addTypeCaches(_RouterState);
    dart.setMethodSignature(_RouterState, () => ({
      __proto__: dart.getMethods(_RouterState.__proto__),
      [_scheduleRouteInformationReportingTask]: dart.fnType(dart.void, []),
      [_reportRouteInformation]: dart.fnType(dart.void, [core.Duration]),
      [_retrieveNewRouteInformation]: dart.fnType(dart.nullable(router.RouteInformation), []),
      [_setStateWithExplicitReportStatus]: dart.fnType(dart.void, [router._IntentionToReportRouteInformation, dart.fnType(dart.void, [])]),
      [_maybeNeedToReportRouteInformation]: dart.fnType(dart.void, []),
      [_processInitialRoute]: dart.fnType(dart.void, []),
      [_handleRouteInformationProviderNotification]: dart.fnType(dart.void, []),
      [_handleBackButtonDispatcherNotification]: dart.fnType(async.Future$(core.bool), []),
      [_verifyRouteInformationParserStillCurrent]: dart.fnType(dart.fnType(async.Future$(T), [T]), [dart.nullable(core.Object), router.Router$(T)]),
      [_verifyRouterDelegatePushStillCurrent]: dart.fnType(dart.fnType(async.Future$(dart.void), [dart.void]), [dart.nullable(core.Object), router.Router$(T)]),
      [_verifyRouterDelegatePopStillCurrent]: dart.fnType(dart.fnType(async.Future$(core.bool), [core.bool]), [dart.nullable(core.Object), router.Router$(T)]),
      [_rebuild]: dart.fnType(async.Future$(dart.void), [], [dart.void]),
      [_handleRouterDelegateNotification]: dart.fnType(dart.void, []),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setGetterSignature(_RouterState, () => ({
      __proto__: dart.getGetters(_RouterState.__proto__),
      [_currentIntentionToReport]: router._IntentionToReportRouteInformation
    }));
    dart.setSetterSignature(_RouterState, () => ({
      __proto__: dart.getSetters(_RouterState.__proto__),
      [_currentIntentionToReport]: router._IntentionToReportRouteInformation
    }));
    dart.setLibraryUri(_RouterState, L17);
    dart.setFieldSignature(_RouterState, () => ({
      __proto__: dart.getFields(_RouterState.__proto__),
      [_currentRouteInformationParserTransaction]: dart.fieldType(dart.nullable(core.Object)),
      [_currentRouterDelegateTransaction]: dart.fieldType(dart.nullable(core.Object)),
      [___RouterState__currentIntentionToReport]: dart.fieldType(dart.nullable(router._IntentionToReportRouteInformation)),
      [___RouterState__currentIntentionToReport_isSet]: dart.fieldType(core.bool),
      [_routeInformationReportingTaskScheduled]: dart.fieldType(core.bool),
      [_lastSeenLocation]: dart.fieldType(dart.nullable(core.String))
    }));
    return _RouterState;
  });
  router._RouterState = router._RouterState$();
  dart.defineLazy(router._RouterState, {
    /*router._RouterState._never*/get _never() {
      return async.Completer.new().future;
    }
  }, false);
  dart.addTypeTests(router._RouterState, _is__RouterState_default);
  var routeInformationProvider$0 = dart.privateName(router, "_RouterScope.routeInformationProvider");
  var backButtonDispatcher$0 = dart.privateName(router, "_RouterScope.backButtonDispatcher");
  var routeInformationParser$0 = dart.privateName(router, "_RouterScope.routeInformationParser");
  var routerDelegate$0 = dart.privateName(router, "_RouterScope.routerDelegate");
  var routerState$ = dart.privateName(router, "_RouterScope.routerState");
  router._RouterScope = class _RouterScope extends framework.InheritedWidget {
    get routeInformationProvider() {
      return this[routeInformationProvider$0];
    }
    set routeInformationProvider(value) {
      super.routeInformationProvider = value;
    }
    get backButtonDispatcher() {
      return this[backButtonDispatcher$0];
    }
    set backButtonDispatcher(value) {
      super.backButtonDispatcher = value;
    }
    get routeInformationParser() {
      return this[routeInformationParser$0];
    }
    set routeInformationParser(value) {
      super.routeInformationParser = value;
    }
    get routerDelegate() {
      return this[routerDelegate$0];
    }
    set routerDelegate(value) {
      super.routerDelegate = value;
    }
    get routerState() {
      return this[routerState$];
    }
    set routerState(value) {
      super.routerState = value;
    }
    updateShouldNotify(oldWidget) {
      router._RouterScope.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L18, 712, 40, "oldWidget");
      return !dart.equals(this.routeInformationProvider, oldWidget.routeInformationProvider) || !dart.equals(this.backButtonDispatcher, oldWidget.backButtonDispatcher) || !dart.equals(this.routeInformationParser, oldWidget.routeInformationParser) || !dart.equals(this.routerDelegate, oldWidget.routerDelegate) || !dart.equals(this.routerState, oldWidget.routerState);
    }
  };
  (router._RouterScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let routeInformationProvider = opts && 'routeInformationProvider' in opts ? opts.routeInformationProvider : null;
    let backButtonDispatcher = opts && 'backButtonDispatcher' in opts ? opts.backButtonDispatcher : null;
    let routeInformationParser = opts && 'routeInformationParser' in opts ? opts.routeInformationParser : null;
    let routerDelegate = opts && 'routerDelegate' in opts ? opts.routerDelegate : null;
    if (routerDelegate == null) dart.nullFailed(L18, 697, 19, "routerDelegate");
    let routerState = opts && 'routerState' in opts ? opts.routerState : null;
    if (routerState == null) dart.nullFailed(L18, 698, 19, "routerState");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L18, 699, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[routeInformationProvider$0] = routeInformationProvider;
    this[backButtonDispatcher$0] = backButtonDispatcher;
    this[routeInformationParser$0] = routeInformationParser;
    this[routerDelegate$0] = routerDelegate;
    this[routerState$] = routerState;
    if (!(routeInformationProvider == null || routeInformationParser != null)) dart.assertFailed(null, L18, 700, 16, "routeInformationProvider == null || routeInformationParser != null");
    if (!(routerDelegate != null)) dart.assertFailed(null, L18, 701, 16, "routerDelegate != null");
    if (!(routerState != null)) dart.assertFailed(null, L18, 702, 16, "routerState != null");
    router._RouterScope.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = router._RouterScope.prototype;
  dart.addTypeTests(router._RouterScope);
  dart.addTypeCaches(router._RouterScope);
  dart.setMethodSignature(router._RouterScope, () => ({
    __proto__: dart.getMethods(router._RouterScope.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(router._RouterScope, L17);
  dart.setFieldSignature(router._RouterScope, () => ({
    __proto__: dart.getFields(router._RouterScope.__proto__),
    routeInformationProvider: dart.finalFieldType(dart.nullable(change_notifier.ValueListenable$(dart.nullable(router.RouteInformation)))),
    backButtonDispatcher: dart.finalFieldType(dart.nullable(router.BackButtonDispatcher)),
    routeInformationParser: dart.finalFieldType(dart.nullable(router.RouteInformationParser)),
    routerDelegate: dart.finalFieldType(router.RouterDelegate),
    routerState: dart.finalFieldType(router._RouterState)
  }));
  var _callbacks = dart.privateName(router, "_callbacks");
  const _is__CallbackHookProvider_default = Symbol('_is__CallbackHookProvider_default');
  router._CallbackHookProvider$ = dart.generic(T => {
    var VoidToT = () => (VoidToT = dart.constFn(dart.fnType(T, [])))();
    var ObserverListOfVoidToT = () => (ObserverListOfVoidToT = dart.constFn(observer_list.ObserverList$(VoidToT())))();
    var _CallbackHookProviderOfT = () => (_CallbackHookProviderOfT = dart.constFn(router._CallbackHookProvider$(T)))();
    var DiagnosticsPropertyOf_CallbackHookProviderOfT = () => (DiagnosticsPropertyOf_CallbackHookProviderOfT = dart.constFn(diagnostics$.DiagnosticsProperty$(_CallbackHookProviderOfT())))();
    class _CallbackHookProvider extends core.Object {
      get hasCallbacks() {
        return this[_callbacks].isNotEmpty;
      }
      addCallback(callback) {
        VoidToT().as(callback);
        if (callback == null) dart.nullFailed(L18, 745, 35, "callback");
        return this[_callbacks].add(callback);
      }
      removeCallback(callback) {
        VoidToT().as(callback);
        if (callback == null) dart.nullFailed(L18, 750, 38, "callback");
        return this[_callbacks].remove(callback);
      }
      invokeCallback(defaultValue) {
        T.as(defaultValue);
        if (dart.test(this[_callbacks].isEmpty)) return defaultValue;
        try {
          return this[_callbacks][$single]();
        } catch (e) {
          let exception = dart.getThrown(e);
          let stack = dart.stackTrace(e);
          if (core.Object.is(exception)) {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({exception: exception, stack: stack, library: "widget library", context: new assertions.ErrorDescription.new("while invoking the callback for " + dart.str(this[$runtimeType])), informationCollector: dart.fn(() => new (SyncIterableOfDiagnosticsNode()).new((function*() {
                yield new (DiagnosticsPropertyOf_CallbackHookProviderOfT()).new("The " + dart.str(this[$runtimeType]) + " that invoked the callback was:", this, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty});
              }).bind(this)), VoidToIterableOfDiagnosticsNode())}));
            return defaultValue;
          } else
            throw e;
        }
      }
    }
    (_CallbackHookProvider.new = function() {
      this[_callbacks] = new (ObserverListOfVoidToT()).new();
      ;
    }).prototype = _CallbackHookProvider.prototype;
    dart.addTypeTests(_CallbackHookProvider);
    _CallbackHookProvider.prototype[_is__CallbackHookProvider_default] = true;
    dart.addTypeCaches(_CallbackHookProvider);
    dart.setMethodSignature(_CallbackHookProvider, () => ({
      __proto__: dart.getMethods(_CallbackHookProvider.__proto__),
      addCallback: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      removeCallback: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      invokeCallback: dart.fnType(T, [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(_CallbackHookProvider, () => ({
      __proto__: dart.getGetters(_CallbackHookProvider.__proto__),
      hasCallbacks: core.bool
    }));
    dart.setLibraryUri(_CallbackHookProvider, L17);
    dart.setFieldSignature(_CallbackHookProvider, () => ({
      __proto__: dart.getFields(_CallbackHookProvider.__proto__),
      [_callbacks]: dart.finalFieldType(observer_list.ObserverList$(dart.fnType(T, [])))
    }));
    return _CallbackHookProvider;
  });
  router._CallbackHookProvider = router._CallbackHookProvider$();
  dart.addTypeTests(router._CallbackHookProvider, _is__CallbackHookProvider_default);
  var __BackButtonDispatcher__children = dart.privateName(router, "_#BackButtonDispatcher#_children");
  var __BackButtonDispatcher__children_isSet = dart.privateName(router, "_#BackButtonDispatcher#_children#isSet");
  var _children = dart.privateName(router, "_children");
  router.BackButtonDispatcher = class BackButtonDispatcher extends router._CallbackHookProvider$(async.Future$(core.bool)) {
    get [_children]() {
      let t14;
      if (!dart.test(this[__BackButtonDispatcher__children_isSet])) {
        let t13 = LinkedHashSetOfChildBackButtonDispatcher().as(LinkedHashSetOfChildBackButtonDispatcher().new());
        if (dart.test(this[__BackButtonDispatcher__children_isSet])) dart.throw(new _internal.LateError.fieldADI("_children"));
        this[__BackButtonDispatcher__children] = t13;
        this[__BackButtonDispatcher__children_isSet] = true;
      }
      t14 = this[__BackButtonDispatcher__children];
      return t14;
    }
    get hasCallbacks() {
      return dart.test(super.hasCallbacks) || dart.test(this[_children][$isNotEmpty]);
    }
    invokeCallback(defaultValue) {
      FutureOfbool().as(defaultValue);
      if (defaultValue == null) dart.nullFailed(L18, 826, 44, "defaultValue");
      if (dart.test(this[_children][$isNotEmpty])) {
        let children = this[_children][$toList]();
        let childIndex = dart.notNull(children[$length]) - 1;
        const notifyNextChild = result => {
          if (result == null) dart.nullFailed(L18, 831, 41, "result");
          if (dart.test(result)) return new (SynchronousFutureOfbool()).new(result);
          if (childIndex > 0) {
            childIndex = childIndex - 1;
            return children[$_get](childIndex).notifiedByParent(defaultValue).then(core.bool, notifyNextChild);
          }
          return super.invokeCallback(defaultValue);
        };
        dart.fn(notifyNextChild, boolToFutureOfbool());
        return children[$_get](childIndex).notifiedByParent(defaultValue).then(core.bool, notifyNextChild);
      }
      return super.invokeCallback(defaultValue);
    }
    createChildBackButtonDispatcher() {
      return new router.ChildBackButtonDispatcher.new(this);
    }
    takePriority() {
      return this[_children].clear();
    }
    deferTo(child) {
      if (child == null) dart.nullFailed(L18, 899, 42, "child");
      if (!dart.test(this.hasCallbacks)) dart.assertFailed(null, L18, 900, 12, "hasCallbacks");
      this[_children].remove(child);
      this[_children].add(child);
    }
    forget(child) {
      if (child == null) dart.nullFailed(L18, 917, 41, "child");
      return this[_children].remove(child);
    }
  };
  (router.BackButtonDispatcher.new = function() {
    this[__BackButtonDispatcher__children] = null;
    this[__BackButtonDispatcher__children_isSet] = false;
    router.BackButtonDispatcher.__proto__.new.call(this);
    ;
  }).prototype = router.BackButtonDispatcher.prototype;
  dart.addTypeTests(router.BackButtonDispatcher);
  dart.addTypeCaches(router.BackButtonDispatcher);
  dart.setMethodSignature(router.BackButtonDispatcher, () => ({
    __proto__: dart.getMethods(router.BackButtonDispatcher.__proto__),
    createChildBackButtonDispatcher: dart.fnType(router.ChildBackButtonDispatcher, []),
    takePriority: dart.fnType(dart.void, []),
    deferTo: dart.fnType(dart.void, [router.ChildBackButtonDispatcher]),
    forget: dart.fnType(dart.void, [router.ChildBackButtonDispatcher])
  }));
  dart.setGetterSignature(router.BackButtonDispatcher, () => ({
    __proto__: dart.getGetters(router.BackButtonDispatcher.__proto__),
    [_children]: collection.LinkedHashSet$(router.ChildBackButtonDispatcher)
  }));
  dart.setLibraryUri(router.BackButtonDispatcher, L17);
  dart.setFieldSignature(router.BackButtonDispatcher, () => ({
    __proto__: dart.getFields(router.BackButtonDispatcher.__proto__),
    [__BackButtonDispatcher__children]: dart.fieldType(dart.nullable(collection.LinkedHashSet$(router.ChildBackButtonDispatcher))),
    [__BackButtonDispatcher__children_isSet]: dart.fieldType(core.bool)
  }));
  const BackButtonDispatcher_WidgetsBindingObserver$36 = class BackButtonDispatcher_WidgetsBindingObserver extends router.BackButtonDispatcher {};
  (BackButtonDispatcher_WidgetsBindingObserver$36.new = function() {
    BackButtonDispatcher_WidgetsBindingObserver$36.__proto__.new.call(this);
  }).prototype = BackButtonDispatcher_WidgetsBindingObserver$36.prototype;
  dart.applyMixin(BackButtonDispatcher_WidgetsBindingObserver$36, binding$5.WidgetsBindingObserver);
  router.RootBackButtonDispatcher = class RootBackButtonDispatcher extends BackButtonDispatcher_WidgetsBindingObserver$36 {
    addCallback(callback) {
      VoidToFutureOfbool().as(callback);
      if (callback == null) dart.nullFailed(L18, 930, 46, "callback");
      if (!dart.test(this.hasCallbacks)) dart.nullCheck(binding$5.WidgetsBinding.instance).addObserver(this);
      super.addCallback(callback);
    }
    removeCallback(callback) {
      VoidToFutureOfbool().as(callback);
      if (callback == null) dart.nullFailed(L18, 937, 49, "callback");
      super.removeCallback(callback);
      if (!dart.test(this.hasCallbacks)) dart.nullCheck(binding$5.WidgetsBinding.instance).removeObserver(this);
    }
    didPopRoute() {
      return this.invokeCallback(FutureOfbool().value(false));
    }
  };
  (router.RootBackButtonDispatcher.new = function() {
    router.RootBackButtonDispatcher.__proto__.new.call(this);
    ;
  }).prototype = router.RootBackButtonDispatcher.prototype;
  dart.addTypeTests(router.RootBackButtonDispatcher);
  dart.addTypeCaches(router.RootBackButtonDispatcher);
  dart.setLibraryUri(router.RootBackButtonDispatcher, L17);
  var parent$ = dart.privateName(router, "ChildBackButtonDispatcher.parent");
  router.ChildBackButtonDispatcher = class ChildBackButtonDispatcher extends router.BackButtonDispatcher {
    get parent() {
      return this[parent$];
    }
    set parent(value) {
      super.parent = value;
    }
    notifiedByParent(defaultValue) {
      if (defaultValue == null) dart.nullFailed(L18, 976, 46, "defaultValue");
      return this.invokeCallback(defaultValue);
    }
    takePriority() {
      this.parent.deferTo(this);
      super.takePriority();
    }
    deferTo(child) {
      if (child == null) dart.nullFailed(L18, 987, 42, "child");
      if (!dart.test(this.hasCallbacks)) dart.assertFailed(null, L18, 988, 12, "hasCallbacks");
      this.parent.deferTo(this);
      super.deferTo(child);
    }
    removeCallback(callback) {
      VoidToFutureOfbool().as(callback);
      if (callback == null) dart.nullFailed(L18, 994, 49, "callback");
      super.removeCallback(callback);
      if (!dart.test(this.hasCallbacks)) this.parent.forget(this);
    }
  };
  (router.ChildBackButtonDispatcher.new = function(parent) {
    if (parent == null) dart.nullFailed(L18, 960, 34, "parent");
    this[parent$] = parent;
    if (!(parent != null)) dart.assertFailed(null, L18, 960, 51, "parent != null");
    router.ChildBackButtonDispatcher.__proto__.new.call(this);
    ;
  }).prototype = router.ChildBackButtonDispatcher.prototype;
  dart.addTypeTests(router.ChildBackButtonDispatcher);
  dart.addTypeCaches(router.ChildBackButtonDispatcher);
  dart.setMethodSignature(router.ChildBackButtonDispatcher, () => ({
    __proto__: dart.getMethods(router.ChildBackButtonDispatcher.__proto__),
    notifiedByParent: dart.fnType(async.Future$(core.bool), [async.Future$(core.bool)])
  }));
  dart.setLibraryUri(router.ChildBackButtonDispatcher, L17);
  dart.setFieldSignature(router.ChildBackButtonDispatcher, () => ({
    __proto__: dart.getFields(router.ChildBackButtonDispatcher.__proto__),
    parent: dart.finalFieldType(router.BackButtonDispatcher)
  }));
  const _is_RouteInformationParser_default = Symbol('_is_RouteInformationParser_default');
  router.RouteInformationParser$ = dart.generic(T => {
    class RouteInformationParser extends core.Object {
      restoreRouteInformation(configuration) {
        T.as(configuration);
        return null;
      }
    }
    (RouteInformationParser.new = function() {
      ;
    }).prototype = RouteInformationParser.prototype;
    dart.addTypeTests(RouteInformationParser);
    RouteInformationParser.prototype[_is_RouteInformationParser_default] = true;
    dart.addTypeCaches(RouteInformationParser);
    dart.setMethodSignature(RouteInformationParser, () => ({
      __proto__: dart.getMethods(RouteInformationParser.__proto__),
      restoreRouteInformation: dart.fnType(dart.nullable(router.RouteInformation), [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(RouteInformationParser, L17);
    return RouteInformationParser;
  });
  router.RouteInformationParser = router.RouteInformationParser$();
  dart.addTypeTests(router.RouteInformationParser, _is_RouteInformationParser_default);
  const _is_RouterDelegate_default = Symbol('_is_RouterDelegate_default');
  router.RouterDelegate$ = dart.generic(T => {
    class RouterDelegate extends change_notifier.Listenable {
      setInitialRoutePath(configuration) {
        T.as(configuration);
        return this.setNewRoutePath(configuration);
      }
      get currentConfiguration() {
        return null;
      }
    }
    (RouterDelegate.new = function() {
      RouterDelegate.__proto__.new.call(this);
      ;
    }).prototype = RouterDelegate.prototype;
    dart.addTypeTests(RouterDelegate);
    RouterDelegate.prototype[_is_RouterDelegate_default] = true;
    dart.addTypeCaches(RouterDelegate);
    dart.setMethodSignature(RouterDelegate, () => ({
      __proto__: dart.getMethods(RouterDelegate.__proto__),
      setInitialRoutePath: dart.fnType(async.Future$(dart.void), [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(RouterDelegate, () => ({
      __proto__: dart.getGetters(RouterDelegate.__proto__),
      currentConfiguration: dart.nullable(T)
    }));
    dart.setLibraryUri(RouterDelegate, L17);
    return RouterDelegate;
  });
  router.RouterDelegate = router.RouterDelegate$();
  dart.addTypeTests(router.RouterDelegate, _is_RouterDelegate_default);
  router.RouteInformationProvider = class RouteInformationProvider extends change_notifier.ValueListenable$(dart.nullable(router.RouteInformation)) {
    routerReportsNewRouteInformation(routeInformation) {
      if (routeInformation == null) dart.nullFailed(L18, 1173, 58, "routeInformation");
    }
  };
  (router.RouteInformationProvider.new = function() {
    router.RouteInformationProvider.__proto__.new.call(this);
    ;
  }).prototype = router.RouteInformationProvider.prototype;
  dart.addTypeTests(router.RouteInformationProvider);
  dart.addTypeCaches(router.RouteInformationProvider);
  dart.setMethodSignature(router.RouteInformationProvider, () => ({
    __proto__: dart.getMethods(router.RouteInformationProvider.__proto__),
    routerReportsNewRouteInformation: dart.fnType(dart.void, [router.RouteInformation])
  }));
  dart.setLibraryUri(router.RouteInformationProvider, L17);
  var _value = dart.privateName(router, "_value");
  var _platformReportsNewRouteInformation = dart.privateName(router, "_platformReportsNewRouteInformation");
  const RouteInformationProvider_WidgetsBindingObserver$36 = class RouteInformationProvider_WidgetsBindingObserver extends router.RouteInformationProvider {};
  (RouteInformationProvider_WidgetsBindingObserver$36.new = function() {
    RouteInformationProvider_WidgetsBindingObserver$36.__proto__.new.call(this);
  }).prototype = RouteInformationProvider_WidgetsBindingObserver$36.prototype;
  dart.applyMixin(RouteInformationProvider_WidgetsBindingObserver$36, binding$5.WidgetsBindingObserver);
  const RouteInformationProvider_ChangeNotifier$36 = class RouteInformationProvider_ChangeNotifier extends RouteInformationProvider_WidgetsBindingObserver$36 {};
  (RouteInformationProvider_ChangeNotifier$36.new = function() {
    change_notifier.ChangeNotifier.new.call(this);
    RouteInformationProvider_ChangeNotifier$36.__proto__.new.call(this);
  }).prototype = RouteInformationProvider_ChangeNotifier$36.prototype;
  dart.applyMixin(RouteInformationProvider_ChangeNotifier$36, change_notifier.ChangeNotifier);
  router.PlatformRouteInformationProvider = class PlatformRouteInformationProvider extends RouteInformationProvider_ChangeNotifier$36 {
    routerReportsNewRouteInformation(routeInformation) {
      if (routeInformation == null) dart.nullFailed(L18, 1191, 58, "routeInformation");
      system_navigator.SystemNavigator.routeInformationUpdated({location: dart.nullCheck(routeInformation.location), state: routeInformation.state});
      this[_value] = routeInformation;
    }
    get value() {
      return this[_value];
    }
    [_platformReportsNewRouteInformation](routeInformation) {
      if (routeInformation == null) dart.nullFailed(L18, 1203, 61, "routeInformation");
      if (dart.equals(this[_value], routeInformation)) return;
      this[_value] = routeInformation;
      this.notifyListeners();
    }
    addListener(listener) {
      if (listener == null) dart.nullFailed(L18, 1211, 33, "listener");
      if (!dart.test(this.hasListeners)) dart.nullCheck(binding$5.WidgetsBinding.instance).addObserver(this);
      super.addListener(listener);
    }
    removeListener(listener) {
      if (listener == null) dart.nullFailed(L18, 1218, 36, "listener");
      super.removeListener(listener);
      if (!dart.test(this.hasListeners)) dart.nullCheck(binding$5.WidgetsBinding.instance).removeObserver(this);
    }
    dispose() {
      if (dart.test(this.hasListeners)) dart.nullCheck(binding$5.WidgetsBinding.instance).removeObserver(this);
      super.dispose();
    }
    didPushRouteInformation(routeInformation) {
      if (routeInformation == null) dart.nullFailed(L18, 1236, 57, "routeInformation");
      return async.async(core.bool, (function* didPushRouteInformation() {
        if (!dart.test(this.hasListeners)) dart.assertFailed(null, L18, 1237, 12, "hasListeners");
        this[_platformReportsNewRouteInformation](routeInformation);
        return true;
      }).bind(this));
    }
    didPushRoute(route) {
      if (route == null) dart.nullFailed(L18, 1243, 36, "route");
      return async.async(core.bool, (function* didPushRoute() {
        if (!dart.test(this.hasListeners)) dart.assertFailed(null, L18, 1244, 12, "hasListeners");
        this[_platformReportsNewRouteInformation](new router.RouteInformation.new({location: route}));
        return true;
      }).bind(this));
    }
  };
  (router.PlatformRouteInformationProvider.new = function(opts) {
    let initialRouteInformation = opts && 'initialRouteInformation' in opts ? opts.initialRouteInformation : null;
    this[_value] = initialRouteInformation;
    router.PlatformRouteInformationProvider.__proto__.new.call(this);
    ;
  }).prototype = router.PlatformRouteInformationProvider.prototype;
  dart.addTypeTests(router.PlatformRouteInformationProvider);
  dart.addTypeCaches(router.PlatformRouteInformationProvider);
  dart.setMethodSignature(router.PlatformRouteInformationProvider, () => ({
    __proto__: dart.getMethods(router.PlatformRouteInformationProvider.__proto__),
    [_platformReportsNewRouteInformation]: dart.fnType(dart.void, [router.RouteInformation])
  }));
  dart.setGetterSignature(router.PlatformRouteInformationProvider, () => ({
    __proto__: dart.getGetters(router.PlatformRouteInformationProvider.__proto__),
    value: dart.nullable(router.RouteInformation)
  }));
  dart.setLibraryUri(router.PlatformRouteInformationProvider, L17);
  dart.setFieldSignature(router.PlatformRouteInformationProvider, () => ({
    __proto__: dart.getFields(router.PlatformRouteInformationProvider.__proto__),
    [_value]: dart.fieldType(dart.nullable(router.RouteInformation))
  }));
  const _is_PopNavigatorRouterDelegateMixin_default = Symbol('_is_PopNavigatorRouterDelegateMixin_default');
  router.PopNavigatorRouterDelegateMixin$ = dart.generic(T => {
    class PopNavigatorRouterDelegateMixin extends router.RouterDelegate$(T) {}
    PopNavigatorRouterDelegateMixin[dart.mixinOn] = RouterDelegate => class PopNavigatorRouterDelegateMixin extends RouterDelegate {
      popRoute() {
        let t14;
        let navigator = (t14 = this.navigatorKey, t14 == null ? null : t14.currentState);
        if (navigator == null) return new (SynchronousFutureOfbool()).new(false);
        return navigator.maybePop(ObjectN());
      }
    };
    dart.addTypeTests(PopNavigatorRouterDelegateMixin);
    PopNavigatorRouterDelegateMixin.prototype[_is_PopNavigatorRouterDelegateMixin_default] = true;
    dart.addTypeCaches(PopNavigatorRouterDelegateMixin);
    PopNavigatorRouterDelegateMixin[dart.implements] = () => [router.RouterDelegate$(T)];
    dart.setMethodSignature(PopNavigatorRouterDelegateMixin, () => ({
      __proto__: dart.getMethods(PopNavigatorRouterDelegateMixin.__proto__),
      popRoute: dart.fnType(async.Future$(core.bool), [])
    }));
    dart.setLibraryUri(PopNavigatorRouterDelegateMixin, L17);
    return PopNavigatorRouterDelegateMixin;
  });
  router.PopNavigatorRouterDelegateMixin = router.PopNavigatorRouterDelegateMixin$();
  dart.addTypeTests(router.PopNavigatorRouterDelegateMixin, _is_PopNavigatorRouterDelegateMixin_default);
  var optionsMask$ = dart.privateName(performance_overlay$, "PerformanceOverlay.optionsMask");
  var rasterizerThreshold$ = dart.privateName(performance_overlay$, "PerformanceOverlay.rasterizerThreshold");
  var checkerboardRasterCacheImages$ = dart.privateName(performance_overlay$, "PerformanceOverlay.checkerboardRasterCacheImages");
  var checkerboardOffscreenLayers$ = dart.privateName(performance_overlay$, "PerformanceOverlay.checkerboardOffscreenLayers");
  performance_overlay$.PerformanceOverlay = class PerformanceOverlay extends framework.LeafRenderObjectWidget {
    get optionsMask() {
      return this[optionsMask$];
    }
    set optionsMask(value) {
      super.optionsMask = value;
    }
    get rasterizerThreshold() {
      return this[rasterizerThreshold$];
    }
    set rasterizerThreshold(value) {
      super.rasterizerThreshold = value;
    }
    get checkerboardRasterCacheImages() {
      return this[checkerboardRasterCacheImages$];
    }
    set checkerboardRasterCacheImages(value) {
      super.checkerboardRasterCacheImages = value;
    }
    get checkerboardOffscreenLayers() {
      return this[checkerboardOffscreenLayers$];
    }
    set checkerboardOffscreenLayers(value) {
      super.checkerboardOffscreenLayers = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L19, 108, 60, "context");
      return new performance_overlay.RenderPerformanceOverlay.new({optionsMask: this.optionsMask, rasterizerThreshold: this.rasterizerThreshold, checkerboardRasterCacheImages: this.checkerboardRasterCacheImages, checkerboardOffscreenLayers: this.checkerboardOffscreenLayers});
    }
    updateRenderObject(context, renderObject) {
      let t14;
      if (context == null) dart.nullFailed(L19, 116, 40, "context");
      performance_overlay.RenderPerformanceOverlay.as(renderObject);
      if (renderObject == null) dart.nullFailed(L19, 116, 74, "renderObject");
      t14 = renderObject;
      (() => {
        t14.optionsMask = this.optionsMask;
        t14.rasterizerThreshold = this.rasterizerThreshold;
        return t14;
      })();
    }
  };
  (performance_overlay$.PerformanceOverlay.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let optionsMask = opts && 'optionsMask' in opts ? opts.optionsMask : 0;
    if (optionsMask == null) dart.nullFailed(L19, 33, 10, "optionsMask");
    let rasterizerThreshold = opts && 'rasterizerThreshold' in opts ? opts.rasterizerThreshold : 0;
    if (rasterizerThreshold == null) dart.nullFailed(L19, 34, 10, "rasterizerThreshold");
    let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
    if (checkerboardRasterCacheImages == null) dart.nullFailed(L19, 35, 10, "checkerboardRasterCacheImages");
    let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
    if (checkerboardOffscreenLayers == null) dart.nullFailed(L19, 36, 10, "checkerboardOffscreenLayers");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[optionsMask$] = optionsMask;
    this[rasterizerThreshold$] = rasterizerThreshold;
    this[checkerboardRasterCacheImages$] = checkerboardRasterCacheImages;
    this[checkerboardOffscreenLayers$] = checkerboardOffscreenLayers;
    performance_overlay$.PerformanceOverlay.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = performance_overlay$.PerformanceOverlay.prototype;
  (performance_overlay$.PerformanceOverlay.allEnabled = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let rasterizerThreshold = opts && 'rasterizerThreshold' in opts ? opts.rasterizerThreshold : 0;
    if (rasterizerThreshold == null) dart.nullFailed(L19, 42, 10, "rasterizerThreshold");
    let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
    if (checkerboardRasterCacheImages == null) dart.nullFailed(L19, 43, 10, "checkerboardRasterCacheImages");
    let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
    if (checkerboardOffscreenLayers == null) dart.nullFailed(L19, 44, 10, "checkerboardOffscreenLayers");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[rasterizerThreshold$] = rasterizerThreshold;
    this[checkerboardRasterCacheImages$] = checkerboardRasterCacheImages;
    this[checkerboardOffscreenLayers$] = checkerboardOffscreenLayers;
    this[optionsMask$] = ((1)[$leftShift](performance_overlay.PerformanceOverlayOption.displayRasterizerStatistics.index) | (1)[$leftShift](performance_overlay.PerformanceOverlayOption.visualizeRasterizerStatistics.index) | (1)[$leftShift](performance_overlay.PerformanceOverlayOption.displayEngineStatistics.index) | (1)[$leftShift](performance_overlay.PerformanceOverlayOption.visualizeEngineStatistics.index)) >>> 0;
    performance_overlay$.PerformanceOverlay.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = performance_overlay$.PerformanceOverlay.prototype;
  dart.addTypeTests(performance_overlay$.PerformanceOverlay);
  dart.addTypeCaches(performance_overlay$.PerformanceOverlay);
  dart.setMethodSignature(performance_overlay$.PerformanceOverlay, () => ({
    __proto__: dart.getMethods(performance_overlay$.PerformanceOverlay.__proto__),
    createRenderObject: dart.fnType(performance_overlay.RenderPerformanceOverlay, [framework.BuildContext])
  }));
  dart.setLibraryUri(performance_overlay$.PerformanceOverlay, L20);
  dart.setFieldSignature(performance_overlay$.PerformanceOverlay, () => ({
    __proto__: dart.getFields(performance_overlay$.PerformanceOverlay.__proto__),
    optionsMask: dart.finalFieldType(core.int),
    rasterizerThreshold: dart.finalFieldType(core.int),
    checkerboardRasterCacheImages: dart.finalFieldType(core.bool),
    checkerboardOffscreenLayers: dart.finalFieldType(core.bool)
  }));
  var _name$1 = dart.privateName(platform, "_name");
  var C99;
  var C100;
  var C101;
  var C102;
  var C103;
  var C104;
  var BoxConstraints_maxHeight = dart.privateName(box$, "BoxConstraints.maxHeight");
  var BoxConstraints_minHeight = dart.privateName(box$, "BoxConstraints.minHeight");
  var BoxConstraints_maxWidth = dart.privateName(box$, "BoxConstraints.maxWidth");
  var BoxConstraints_minWidth = dart.privateName(box$, "BoxConstraints.minWidth");
  var C105;
  var C108;
  var C107;
  var C106;
  var C111;
  var C112;
  var C110;
  var C109;
  var C115;
  var C116;
  var C117;
  var C114;
  var C113;
  var C120;
  var C121;
  var C122;
  var C119;
  var C118;
  var C125;
  var C126;
  var C124;
  var C123;
  var C129;
  var C130;
  var C128;
  var C127;
  var C133;
  var C132;
  var C131;
  var color$0 = dart.privateName(modal_barrier, "ModalBarrier.color");
  var dismissible$ = dart.privateName(modal_barrier, "ModalBarrier.dismissible");
  var barrierSemanticsDismissible$ = dart.privateName(modal_barrier, "ModalBarrier.barrierSemanticsDismissible");
  var semanticsLabel$ = dart.privateName(modal_barrier, "ModalBarrier.semanticsLabel");
  modal_barrier.ModalBarrier = class ModalBarrier extends framework.StatelessWidget {
    get color() {
      return this[color$0];
    }
    set color(value) {
      super.color = value;
    }
    get dismissible() {
      return this[dismissible$];
    }
    set dismissible(value) {
      super.dismissible = value;
    }
    get barrierSemanticsDismissible() {
      return this[barrierSemanticsDismissible$];
    }
    set barrierSemanticsDismissible(value) {
      super.barrierSemanticsDismissible = value;
    }
    get semanticsLabel() {
      return this[semanticsLabel$];
    }
    set semanticsLabel(value) {
      super.semanticsLabel = value;
    }
    build(context) {
      let t14;
      if (context == null) dart.nullFailed(L21, 78, 29, "context");
      if (!(!dart.test(this.dismissible) || this.semanticsLabel == null || dart.test(debug$0.debugCheckHasDirectionality(context)))) dart.assertFailed(null, L21, 79, 12, "!dismissible || semanticsLabel == null || debugCheckHasDirectionality(context)");
      let platformSupportsDismissingBarrier = null;
      switch (platform.defaultTargetPlatform) {
        case C99 || CT.C99:
        case C100 || CT.C100:
        case C101 || CT.C101:
        case C102 || CT.C102:
        {
          platformSupportsDismissingBarrier = false;
          break;
        }
        case C103 || CT.C103:
        case C104 || CT.C104:
        {
          platformSupportsDismissingBarrier = true;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      if (!(platformSupportsDismissingBarrier != null)) dart.assertFailed(null, L21, 93, 12, "platformSupportsDismissingBarrier != null");
      let semanticsDismissible = dart.test(this.dismissible) && dart.test(platformSupportsDismissingBarrier);
      let modalBarrierSemanticsDismissible = (t14 = this.barrierSemanticsDismissible, t14 == null ? semanticsDismissible : t14);
      return new basic.BlockSemantics.new({child: new basic.ExcludeSemantics.new({excluding: !semanticsDismissible || !dart.test(modalBarrierSemanticsDismissible), child: new modal_barrier._ModalBarrierGestureDetector.new({onDismiss: dart.fn(() => {
              if (dart.test(this.dismissible))
                navigator$.Navigator.maybePop(ObjectN(), context);
              else
                system_sound.SystemSound.play(system_sound.SystemSoundType.alert);
            }, VoidTovoid()), child: new basic.Semantics.new({label: semanticsDismissible ? this.semanticsLabel : null, textDirection: semanticsDismissible && this.semanticsLabel != null ? basic.Directionality.of(context) : null, child: new basic.MouseRegion.new({cursor: mouse_cursor.SystemMouseCursors.basic, opaque: true, child: new basic.ConstrainedBox.new({constraints: C105 || CT.C105, child: this.color == null ? null : new container.DecoratedBox.new({decoration: new box_decoration.BoxDecoration.new({color: this.color}), $creationLocationd_0dea112b090073317d4: C106 || CT.C106}), $creationLocationd_0dea112b090073317d4: C109 || CT.C109}), $creationLocationd_0dea112b090073317d4: C113 || CT.C113}), $creationLocationd_0dea112b090073317d4: C118 || CT.C118}), $creationLocationd_0dea112b090073317d4: C123 || CT.C123}), $creationLocationd_0dea112b090073317d4: C127 || CT.C127}), $creationLocationd_0dea112b090073317d4: C131 || CT.C131});
    }
  };
  (modal_barrier.ModalBarrier.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let dismissible = opts && 'dismissible' in opts ? opts.dismissible : true;
    if (dismissible == null) dart.nullFailed(L21, 37, 10, "dismissible");
    let semanticsLabel = opts && 'semanticsLabel' in opts ? opts.semanticsLabel : null;
    let barrierSemanticsDismissible = opts && 'barrierSemanticsDismissible' in opts ? opts.barrierSemanticsDismissible : true;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[color$0] = color;
    this[dismissible$] = dismissible;
    this[semanticsLabel$] = semanticsLabel;
    this[barrierSemanticsDismissible$] = barrierSemanticsDismissible;
    modal_barrier.ModalBarrier.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = modal_barrier.ModalBarrier.prototype;
  dart.addTypeTests(modal_barrier.ModalBarrier);
  dart.addTypeCaches(modal_barrier.ModalBarrier);
  dart.setMethodSignature(modal_barrier.ModalBarrier, () => ({
    __proto__: dart.getMethods(modal_barrier.ModalBarrier.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(modal_barrier.ModalBarrier, L22);
  dart.setFieldSignature(modal_barrier.ModalBarrier, () => ({
    __proto__: dart.getFields(modal_barrier.ModalBarrier.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    dismissible: dart.finalFieldType(core.bool),
    barrierSemanticsDismissible: dart.finalFieldType(dart.nullable(core.bool)),
    semanticsLabel: dart.finalFieldType(dart.nullable(core.String))
  }));
  var C136;
  var C137;
  var C138;
  var C139;
  var C135;
  var C134;
  var listenable$ = dart.privateName(transitions, "AnimatedWidget.listenable");
  transitions.AnimatedWidget = class AnimatedWidget extends framework.StatefulWidget {
    get listenable() {
      return this[listenable$];
    }
    set listenable(value) {
      super.listenable = value;
    }
    createState() {
      return new transitions._AnimatedState.new();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L23, 144, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfListenable()).new("animation", this.listenable));
    }
  };
  (transitions.AnimatedWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let listenable = opts && 'listenable' in opts ? opts.listenable : null;
    if (listenable == null) dart.nullFailed(L23, 125, 19, "listenable");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[listenable$] = listenable;
    if (!(listenable != null)) dart.assertFailed(null, L23, 126, 15, "listenable != null");
    transitions.AnimatedWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.AnimatedWidget.prototype;
  dart.addTypeTests(transitions.AnimatedWidget);
  dart.addTypeCaches(transitions.AnimatedWidget);
  dart.setMethodSignature(transitions.AnimatedWidget, () => ({
    __proto__: dart.getMethods(transitions.AnimatedWidget.__proto__),
    createState: dart.fnType(transitions._AnimatedState, [])
  }));
  dart.setLibraryUri(transitions.AnimatedWidget, L24);
  dart.setFieldSignature(transitions.AnimatedWidget, () => ({
    __proto__: dart.getFields(transitions.AnimatedWidget.__proto__),
    listenable: dart.finalFieldType(change_notifier.Listenable)
  }));
  var dismissible$0 = dart.privateName(modal_barrier, "AnimatedModalBarrier.dismissible");
  var semanticsLabel$0 = dart.privateName(modal_barrier, "AnimatedModalBarrier.semanticsLabel");
  var barrierSemanticsDismissible$0 = dart.privateName(modal_barrier, "AnimatedModalBarrier.barrierSemanticsDismissible");
  modal_barrier.AnimatedModalBarrier = class AnimatedModalBarrier extends transitions.AnimatedWidget {
    get dismissible() {
      return this[dismissible$0];
    }
    set dismissible(value) {
      super.dismissible = value;
    }
    get semanticsLabel() {
      return this[semanticsLabel$0];
    }
    set semanticsLabel(value) {
      super.semanticsLabel = value;
    }
    get barrierSemanticsDismissible() {
      return this[barrierSemanticsDismissible$0];
    }
    set barrierSemanticsDismissible(value) {
      super.barrierSemanticsDismissible = value;
    }
    get color() {
      return AnimationOfColorN().as(this.listenable);
    }
    build(context) {
      if (context == null) dart.nullFailed(L21, 191, 29, "context");
      return new modal_barrier.ModalBarrier.new({color: this.color.value, dismissible: this.dismissible, semanticsLabel: this.semanticsLabel, barrierSemanticsDismissible: this.barrierSemanticsDismissible, $creationLocationd_0dea112b090073317d4: C134 || CT.C134});
    }
  };
  (modal_barrier.AnimatedModalBarrier.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(L21, 150, 32, "color");
    let dismissible = opts && 'dismissible' in opts ? opts.dismissible : true;
    if (dismissible == null) dart.nullFailed(L21, 151, 10, "dismissible");
    let semanticsLabel = opts && 'semanticsLabel' in opts ? opts.semanticsLabel : null;
    let barrierSemanticsDismissible = opts && 'barrierSemanticsDismissible' in opts ? opts.barrierSemanticsDismissible : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[dismissible$0] = dismissible;
    this[semanticsLabel$0] = semanticsLabel;
    this[barrierSemanticsDismissible$0] = barrierSemanticsDismissible;
    modal_barrier.AnimatedModalBarrier.__proto__.new.call(this, {key: key, listenable: color, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = modal_barrier.AnimatedModalBarrier.prototype;
  dart.addTypeTests(modal_barrier.AnimatedModalBarrier);
  dart.addTypeCaches(modal_barrier.AnimatedModalBarrier);
  dart.setMethodSignature(modal_barrier.AnimatedModalBarrier, () => ({
    __proto__: dart.getMethods(modal_barrier.AnimatedModalBarrier.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(modal_barrier.AnimatedModalBarrier, () => ({
    __proto__: dart.getGetters(modal_barrier.AnimatedModalBarrier.__proto__),
    color: animation.Animation$(dart.nullable(ui.Color))
  }));
  dart.setLibraryUri(modal_barrier.AnimatedModalBarrier, L22);
  dart.setFieldSignature(modal_barrier.AnimatedModalBarrier, () => ({
    __proto__: dart.getFields(modal_barrier.AnimatedModalBarrier.__proto__),
    dismissible: dart.finalFieldType(core.bool),
    semanticsLabel: dart.finalFieldType(dart.nullable(core.String)),
    barrierSemanticsDismissible: dart.finalFieldType(dart.nullable(core.bool))
  }));
  modal_barrier._AnyTapGestureRecognizer = class _AnyTapGestureRecognizer extends tap$.BaseTapGestureRecognizer {
    isPointerAllowed(event) {
      if (event == null) dart.nullFailed(L21, 213, 42, "event");
      if (this.onAnyTapUp == null) return false;
      return super.isPointerAllowed(event);
    }
    handleTapDown(opts) {
      let down = opts && 'down' in opts ? opts.down : null;
    }
    handleTapUp(opts) {
      let down = opts && 'down' in opts ? opts.down : null;
      let up = opts && 'up' in opts ? opts.up : null;
      if (this.onAnyTapUp != null) dart.nullCheck(this.onAnyTapUp)();
    }
    handleTapCancel(opts) {
      let down = opts && 'down' in opts ? opts.down : null;
      let cancel = opts && 'cancel' in opts ? opts.cancel : null;
      let reason = opts && 'reason' in opts ? opts.reason : null;
    }
    get debugDescription() {
      return "any tap";
    }
  };
  (modal_barrier._AnyTapGestureRecognizer.new = function(opts) {
    let debugOwner = opts && 'debugOwner' in opts ? opts.debugOwner : null;
    this.onAnyTapUp = null;
    modal_barrier._AnyTapGestureRecognizer.__proto__.new.call(this, {debugOwner: debugOwner});
    ;
  }).prototype = modal_barrier._AnyTapGestureRecognizer.prototype;
  dart.addTypeTests(modal_barrier._AnyTapGestureRecognizer);
  dart.addTypeCaches(modal_barrier._AnyTapGestureRecognizer);
  dart.setMethodSignature(modal_barrier._AnyTapGestureRecognizer, () => ({
    __proto__: dart.getMethods(modal_barrier._AnyTapGestureRecognizer.__proto__),
    handleTapDown: dart.fnType(dart.void, [], {down: dart.nullable(events.PointerDownEvent)}, {}),
    handleTapUp: dart.fnType(dart.void, [], {down: dart.nullable(events.PointerDownEvent), up: dart.nullable(events.PointerUpEvent)}, {}),
    handleTapCancel: dart.fnType(dart.void, [], {cancel: dart.nullable(events.PointerCancelEvent), down: dart.nullable(events.PointerDownEvent), reason: dart.nullable(core.String)}, {})
  }));
  dart.setLibraryUri(modal_barrier._AnyTapGestureRecognizer, L22);
  dart.setFieldSignature(modal_barrier._AnyTapGestureRecognizer, () => ({
    __proto__: dart.getFields(modal_barrier._AnyTapGestureRecognizer.__proto__),
    onAnyTapUp: dart.fieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  gesture_detector.SemanticsGestureDelegate = class SemanticsGestureDelegate extends core.Object {
    toString() {
      return dart.str(object.objectRuntimeType(this, "SemanticsGestureDelegate")) + "()";
    }
  };
  (gesture_detector.SemanticsGestureDelegate.new = function() {
    ;
  }).prototype = gesture_detector.SemanticsGestureDelegate.prototype;
  dart.addTypeTests(gesture_detector.SemanticsGestureDelegate);
  dart.addTypeCaches(gesture_detector.SemanticsGestureDelegate);
  dart.setLibraryUri(gesture_detector.SemanticsGestureDelegate, L25);
  dart.defineExtensionMethods(gesture_detector.SemanticsGestureDelegate, ['toString']);
  var onDismiss$ = dart.privateName(modal_barrier, "_ModalBarrierSemanticsDelegate.onDismiss");
  modal_barrier._ModalBarrierSemanticsDelegate = class _ModalBarrierSemanticsDelegate extends gesture_detector.SemanticsGestureDelegate {
    get onDismiss() {
      return this[onDismiss$];
    }
    set onDismiss(value) {
      super.onDismiss = value;
    }
    assignSemantics(renderObject) {
      if (renderObject == null) dart.nullFailed(L21, 248, 54, "renderObject");
      renderObject.onTap = this.onDismiss;
    }
  };
  (modal_barrier._ModalBarrierSemanticsDelegate.new = function(opts) {
    let onDismiss = opts && 'onDismiss' in opts ? opts.onDismiss : null;
    this[onDismiss$] = onDismiss;
    modal_barrier._ModalBarrierSemanticsDelegate.__proto__.new.call(this);
    ;
  }).prototype = modal_barrier._ModalBarrierSemanticsDelegate.prototype;
  dart.addTypeTests(modal_barrier._ModalBarrierSemanticsDelegate);
  dart.addTypeCaches(modal_barrier._ModalBarrierSemanticsDelegate);
  dart.setMethodSignature(modal_barrier._ModalBarrierSemanticsDelegate, () => ({
    __proto__: dart.getMethods(modal_barrier._ModalBarrierSemanticsDelegate.__proto__),
    assignSemantics: dart.fnType(dart.void, [proxy_box.RenderSemanticsGestureHandler])
  }));
  dart.setLibraryUri(modal_barrier._ModalBarrierSemanticsDelegate, L22);
  dart.setFieldSignature(modal_barrier._ModalBarrierSemanticsDelegate, () => ({
    __proto__: dart.getFields(modal_barrier._ModalBarrierSemanticsDelegate.__proto__),
    onDismiss: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  var _debugAssertTypeMatches = dart.privateName(gesture_detector, "_debugAssertTypeMatches");
  const _is_GestureRecognizerFactory_default = Symbol('_is_GestureRecognizerFactory_default');
  gesture_detector.GestureRecognizerFactory$ = dart.generic(T => {
    class GestureRecognizerFactory extends core.Object {
      [_debugAssertTypeMatches](type) {
        if (type == null) dart.nullFailed(L26, 76, 37, "type");
        if (!dart.equals(type, dart.wrapType(T))) dart.assertFailed("GestureRecognizerFactory of type " + dart.str(dart.wrapType(T)) + " was used where type " + dart.str(type) + " was specified.", L26, 77, 12, "type == T");
        return true;
      }
    }
    (GestureRecognizerFactory.new = function() {
      ;
    }).prototype = GestureRecognizerFactory.prototype;
    dart.addTypeTests(GestureRecognizerFactory);
    GestureRecognizerFactory.prototype[_is_GestureRecognizerFactory_default] = true;
    dart.addTypeCaches(GestureRecognizerFactory);
    dart.setMethodSignature(GestureRecognizerFactory, () => ({
      __proto__: dart.getMethods(GestureRecognizerFactory.__proto__),
      [_debugAssertTypeMatches]: dart.fnType(core.bool, [core.Type])
    }));
    dart.setLibraryUri(GestureRecognizerFactory, L25);
    return GestureRecognizerFactory;
  });
  gesture_detector.GestureRecognizerFactory = gesture_detector.GestureRecognizerFactory$();
  dart.addTypeTests(gesture_detector.GestureRecognizerFactory, _is_GestureRecognizerFactory_default);
  var onAnyTapUp$ = dart.privateName(modal_barrier, "_AnyTapGestureRecognizerFactory.onAnyTapUp");
  modal_barrier._AnyTapGestureRecognizerFactory = class _AnyTapGestureRecognizerFactory extends gesture_detector.GestureRecognizerFactory$(modal_barrier._AnyTapGestureRecognizer) {
    get onAnyTapUp() {
      return this[onAnyTapUp$];
    }
    set onAnyTapUp(value) {
      super.onAnyTapUp = value;
    }
    _constructor() {
      return new modal_barrier._AnyTapGestureRecognizer.new();
    }
    initializer(instance) {
      modal_barrier._AnyTapGestureRecognizer.as(instance);
      if (instance == null) dart.nullFailed(L21, 263, 45, "instance");
      instance.onAnyTapUp = this.onAnyTapUp;
    }
  };
  (modal_barrier._AnyTapGestureRecognizerFactory.new = function(opts) {
    let onAnyTapUp = opts && 'onAnyTapUp' in opts ? opts.onAnyTapUp : null;
    this[onAnyTapUp$] = onAnyTapUp;
    modal_barrier._AnyTapGestureRecognizerFactory.__proto__.new.call(this);
    ;
  }).prototype = modal_barrier._AnyTapGestureRecognizerFactory.prototype;
  dart.addTypeTests(modal_barrier._AnyTapGestureRecognizerFactory);
  dart.addTypeCaches(modal_barrier._AnyTapGestureRecognizerFactory);
  dart.setMethodSignature(modal_barrier._AnyTapGestureRecognizerFactory, () => ({
    __proto__: dart.getMethods(modal_barrier._AnyTapGestureRecognizerFactory.__proto__),
    _constructor: dart.fnType(modal_barrier._AnyTapGestureRecognizer, []),
    initializer: dart.fnType(dart.void, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(modal_barrier._AnyTapGestureRecognizerFactory, L22);
  dart.setFieldSignature(modal_barrier._AnyTapGestureRecognizerFactory, () => ({
    __proto__: dart.getFields(modal_barrier._AnyTapGestureRecognizerFactory.__proto__),
    onAnyTapUp: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  var C142;
  var C143;
  var C144;
  var C145;
  var C141;
  var C140;
  var child$5 = dart.privateName(modal_barrier, "_ModalBarrierGestureDetector.child");
  var onDismiss$0 = dart.privateName(modal_barrier, "_ModalBarrierGestureDetector.onDismiss");
  modal_barrier._ModalBarrierGestureDetector = class _ModalBarrierGestureDetector extends framework.StatelessWidget {
    get child() {
      return this[child$5];
    }
    set child(value) {
      super.child = value;
    }
    get onDismiss() {
      return this[onDismiss$0];
    }
    set onDismiss(value) {
      super.onDismiss = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(L21, 288, 29, "context");
      let gestures = new (LinkedMapOfType$GestureRecognizerFactoryOfGestureRecognizer()).from([dart.wrapType(modal_barrier._AnyTapGestureRecognizer), new modal_barrier._AnyTapGestureRecognizerFactory.new({onAnyTapUp: this.onDismiss})]);
      return new gesture_detector.RawGestureDetector.new({gestures: gestures, behavior: proxy_box.HitTestBehavior.opaque, semantics: new modal_barrier._ModalBarrierSemanticsDelegate.new({onDismiss: this.onDismiss}), child: this.child, $creationLocationd_0dea112b090073317d4: C140 || CT.C140});
    }
  };
  (modal_barrier._ModalBarrierGestureDetector.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L21, 273, 19, "child");
    let onDismiss = opts && 'onDismiss' in opts ? opts.onDismiss : null;
    if (onDismiss == null) dart.nullFailed(L21, 274, 19, "onDismiss");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$5] = child;
    this[onDismiss$0] = onDismiss;
    if (!(child != null)) dart.assertFailed(null, L21, 275, 15, "child != null");
    if (!(onDismiss != null)) dart.assertFailed(null, L21, 276, 15, "onDismiss != null");
    modal_barrier._ModalBarrierGestureDetector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = modal_barrier._ModalBarrierGestureDetector.prototype;
  dart.addTypeTests(modal_barrier._ModalBarrierGestureDetector);
  dart.addTypeCaches(modal_barrier._ModalBarrierGestureDetector);
  dart.setMethodSignature(modal_barrier._ModalBarrierGestureDetector, () => ({
    __proto__: dart.getMethods(modal_barrier._ModalBarrierGestureDetector.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(modal_barrier._ModalBarrierGestureDetector, L22);
  dart.setFieldSignature(modal_barrier._ModalBarrierGestureDetector, () => ({
    __proto__: dart.getFields(modal_barrier._ModalBarrierGestureDetector.__proto__),
    child: dart.finalFieldType(framework.Widget),
    onDismiss: dart.finalFieldType(dart.fnType(dart.void, []))
  }));
  var _overlayEntries = dart.privateName(routes, "_overlayEntries");
  var _navigator = dart.privateName(navigator$, "_navigator");
  var _restorationScopeId = dart.privateName(navigator$, "_restorationScopeId");
  var _popCompleter = dart.privateName(navigator$, "_popCompleter");
  var _settings = dart.privateName(navigator$, "_settings");
  var RouteSettings_arguments = dart.privateName(navigator$, "RouteSettings.arguments");
  var RouteSettings_name = dart.privateName(navigator$, "RouteSettings.name");
  var C146;
  var _updateSettings = dart.privateName(navigator$, "_updateSettings");
  var _updateRestorationId = dart.privateName(navigator$, "_updateRestorationId");
  var C147;
  var _history = dart.privateName(navigator$, "_history");
  const _is_Route_default = Symbol('_is_Route_default');
  navigator$.Route$ = dart.generic(T => {
    var TN = () => (TN = dart.constFn(dart.nullable(T)))();
    var CompleterOfTN = () => (CompleterOfTN = dart.constFn(async.Completer$(TN())))();
    class Route extends core.Object {
      get navigator() {
        return this[_navigator];
      }
      get settings() {
        return this[_settings];
      }
      get restorationScopeId() {
        return this[_restorationScopeId];
      }
      [_updateSettings](newSettings) {
        if (newSettings == null) dart.nullFailed(L28, 170, 38, "newSettings");
        if (!(newSettings != null)) dart.assertFailed(null, L28, 171, 12, "newSettings != null");
        if (!dart.equals(this[_settings], newSettings)) {
          this[_settings] = newSettings;
          this.changedInternalState();
        }
      }
      [_updateRestorationId](restorationId) {
        this[_restorationScopeId].value = restorationId;
      }
      get overlayEntries() {
        return C147 || CT.C147;
      }
      install() {
      }
      didPush() {
        let t14;
        t14 = new ticker.TickerFuture.complete();
        return (() => {
          t14.then(dart.void, dart.fn(_ => {
            let t15;
            t15 = this.navigator;
            t15 == null ? null : t15.focusScopeNode.requestFocus();
          }, voidToNull()));
          return t14;
        })();
      }
      didAdd() {
        new ticker.TickerFuture.complete().then(dart.void, dart.fn(_ => {
          let t14;
          t14 = this.navigator;
          t14 == null ? null : t14.focusScopeNode.requestFocus();
        }, voidToNull()));
      }
      didReplace(oldRoute) {
      }
      willPop() {
        return async.async(navigator$.RoutePopDisposition, (function* willPop() {
          return dart.test(this.isFirst) ? navigator$.RoutePopDisposition.bubble : navigator$.RoutePopDisposition.pop;
        }).bind(this));
      }
      get willHandlePopInternally() {
        return false;
      }
      get currentResult() {
        return null;
      }
      get popped() {
        return this[_popCompleter].future;
      }
      didPop(result) {
        TN().as(result);
        this.didComplete(result);
        return true;
      }
      didComplete(result) {
        let t14;
        TN().as(result);
        this[_popCompleter].complete((t14 = result, t14 == null ? this.currentResult : t14));
      }
      didPopNext(nextRoute) {
        if (nextRoute == null) dart.nullFailed(L28, 365, 34, "nextRoute");
      }
      didChangeNext(nextRoute) {
      }
      didChangePrevious(previousRoute) {
      }
      changedInternalState() {
      }
      changedExternalState() {
      }
      dispose() {
        this[_navigator] = null;
      }
      get isCurrent() {
        if (this[_navigator] == null) return false;
        let currentRouteEntry = dart.nullCheck(this[_navigator])[_history][$cast](_RouteEntryN())[$lastWhere](dart.fn(e => e != null && dart.test(navigator$._RouteEntry.isPresentPredicate(e)), _RouteEntryNTobool()), {orElse: dart.fn(() => null, VoidToNull())});
        if (currentRouteEntry == null) return false;
        return dart.equals(currentRouteEntry.route, this);
      }
      get isFirst() {
        if (this[_navigator] == null) return false;
        let currentRouteEntry = dart.nullCheck(this[_navigator])[_history][$cast](_RouteEntryN())[$firstWhere](dart.fn(e => e != null && dart.test(navigator$._RouteEntry.isPresentPredicate(e)), _RouteEntryNTobool()), {orElse: dart.fn(() => null, VoidToNull())});
        if (currentRouteEntry == null) return false;
        return dart.equals(currentRouteEntry.route, this);
      }
      get isActive() {
        let t14;
        if (this[_navigator] == null) return false;
        return dart.equals((t14 = dart.nullCheck(this[_navigator])[_history][$cast](_RouteEntryN())[$firstWhere](dart.fn(e => e != null && dart.test(navigator$._RouteEntry.isRoutePredicate(this)(e)), _RouteEntryNTobool()), {orElse: dart.fn(() => null, VoidToNull())}), t14 == null ? null : t14.isPresent), true);
      }
    }
    (Route.new = function(opts) {
      let t14;
      let settings = opts && 'settings' in opts ? opts.settings : null;
      this[_navigator] = null;
      this[_restorationScopeId] = new (ValueNotifierOfStringN()).new(null);
      this[_popCompleter] = CompleterOfTN().new();
      this[_settings] = (t14 = settings, t14 == null ? C146 || CT.C146 : t14);
      ;
    }).prototype = Route.prototype;
    dart.addTypeTests(Route);
    Route.prototype[_is_Route_default] = true;
    dart.addTypeCaches(Route);
    dart.setMethodSignature(Route, () => ({
      __proto__: dart.getMethods(Route.__proto__),
      [_updateSettings]: dart.fnType(dart.void, [navigator$.RouteSettings]),
      [_updateRestorationId]: dart.fnType(dart.void, [dart.nullable(core.String)]),
      install: dart.fnType(dart.void, []),
      didPush: dart.fnType(ticker.TickerFuture, []),
      didAdd: dart.fnType(dart.void, []),
      didReplace: dart.fnType(dart.void, [dart.nullable(navigator$.Route)]),
      willPop: dart.fnType(async.Future$(navigator$.RoutePopDisposition), []),
      didPop: dart.fnType(core.bool, [dart.nullable(core.Object)]),
      didComplete: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      didPopNext: dart.fnType(dart.void, [navigator$.Route]),
      didChangeNext: dart.fnType(dart.void, [dart.nullable(navigator$.Route)]),
      didChangePrevious: dart.fnType(dart.void, [dart.nullable(navigator$.Route)]),
      changedInternalState: dart.fnType(dart.void, []),
      changedExternalState: dart.fnType(dart.void, []),
      dispose: dart.fnType(dart.void, [])
    }));
    dart.setGetterSignature(Route, () => ({
      __proto__: dart.getGetters(Route.__proto__),
      navigator: dart.nullable(navigator$.NavigatorState),
      settings: navigator$.RouteSettings,
      restorationScopeId: change_notifier.ValueListenable$(dart.nullable(core.String)),
      overlayEntries: core.List$(overlay$.OverlayEntry),
      willHandlePopInternally: core.bool,
      currentResult: dart.nullable(T),
      popped: async.Future$(dart.nullable(T)),
      isCurrent: core.bool,
      isFirst: core.bool,
      isActive: core.bool
    }));
    dart.setLibraryUri(Route, L29);
    dart.setFieldSignature(Route, () => ({
      __proto__: dart.getFields(Route.__proto__),
      [_navigator]: dart.fieldType(dart.nullable(navigator$.NavigatorState)),
      [_settings]: dart.fieldType(navigator$.RouteSettings),
      [_restorationScopeId]: dart.finalFieldType(change_notifier.ValueNotifier$(dart.nullable(core.String))),
      [_popCompleter]: dart.finalFieldType(async.Completer$(dart.nullable(T)))
    }));
    return Route;
  });
  navigator$.Route = navigator$.Route$();
  dart.addTypeTests(navigator$.Route, _is_Route_default);
  const _is_OverlayRoute_default = Symbol('_is_OverlayRoute_default');
  routes.OverlayRoute$ = dart.generic(T => {
    var TN = () => (TN = dart.constFn(dart.nullable(T)))();
    class OverlayRoute extends navigator$.Route$(T) {
      get overlayEntries() {
        return this[_overlayEntries];
      }
      install() {
        if (!dart.test(this[_overlayEntries][$isEmpty])) dart.assertFailed(null, L27, 47, 12, "_overlayEntries.isEmpty");
        this[_overlayEntries][$addAll](this.createOverlayEntries());
        super.install();
      }
      get finishedWhenPopped() {
        return true;
      }
      didPop(result) {
        TN().as(result);
        let returnValue = super.didPop(result);
        if (!dart.test(returnValue)) dart.assertFailed(null, L27, 67, 12, "returnValue");
        if (dart.test(this.finishedWhenPopped)) dart.nullCheck(this.navigator).finalizeRoute(this);
        return returnValue;
      }
      dispose() {
        this[_overlayEntries][$clear]();
        super.dispose();
      }
    }
    (OverlayRoute.new = function(opts) {
      let settings = opts && 'settings' in opts ? opts.settings : null;
      this[_overlayEntries] = JSArrayOfOverlayEntry().of([]);
      OverlayRoute.__proto__.new.call(this, {settings: settings});
      ;
    }).prototype = OverlayRoute.prototype;
    dart.addTypeTests(OverlayRoute);
    OverlayRoute.prototype[_is_OverlayRoute_default] = true;
    dart.addTypeCaches(OverlayRoute);
    dart.setGetterSignature(OverlayRoute, () => ({
      __proto__: dart.getGetters(OverlayRoute.__proto__),
      finishedWhenPopped: core.bool
    }));
    dart.setLibraryUri(OverlayRoute, L30);
    dart.setFieldSignature(OverlayRoute, () => ({
      __proto__: dart.getFields(OverlayRoute.__proto__),
      [_overlayEntries]: dart.finalFieldType(core.List$(overlay$.OverlayEntry))
    }));
    return OverlayRoute;
  });
  routes.OverlayRoute = routes.OverlayRoute$();
  dart.addTypeTests(routes.OverlayRoute, _is_OverlayRoute_default);
  var _transitionCompleter = dart.privateName(routes, "_transitionCompleter");
  var _animation = dart.privateName(routes, "_animation");
  var _controller = dart.privateName(routes, "_controller");
  var _secondaryAnimation = dart.privateName(routes, "_secondaryAnimation");
  var _result = dart.privateName(routes, "_result");
  var _trainHoppingListenerRemover = dart.privateName(routes, "_trainHoppingListenerRemover");
  var _name$2 = dart.privateName(animation, "_name");
  var C148;
  var C149;
  var C150;
  var C151;
  var _handleStatusChanged = dart.privateName(routes, "_handleStatusChanged");
  var _updateSecondaryAnimation = dart.privateName(routes, "_updateSecondaryAnimation");
  var _setSecondaryAnimation = dart.privateName(routes, "_setSecondaryAnimation");
  const _is_TransitionRoute_default = Symbol('_is_TransitionRoute_default');
  routes.TransitionRoute$ = dart.generic(T => {
    var TN = () => (TN = dart.constFn(dart.nullable(T)))();
    var CompleterOfTN = () => (CompleterOfTN = dart.constFn(async.Completer$(TN())))();
    class TransitionRoute extends routes.OverlayRoute$(T) {
      get completed() {
        return this[_transitionCompleter].future;
      }
      get reverseTransitionDuration() {
        return this.transitionDuration;
      }
      get finishedWhenPopped() {
        return dart.equals(dart.nullCheck(this[_controller]).status, animation.AnimationStatus.dismissed);
      }
      get animation() {
        return this[_animation];
      }
      get controller() {
        return this[_controller];
      }
      get secondaryAnimation() {
        return this[_secondaryAnimation];
      }
      createAnimationController() {
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", L27, 151, 12, "!_transitionCompleter.isCompleted");
        let duration = this.transitionDuration;
        let reverseDuration = this.reverseTransitionDuration;
        if (!(duration != null && dart.test(duration['>='](core.Duration.zero)))) dart.assertFailed(null, L27, 154, 12, "duration != null && duration >= Duration.zero");
        return new animation_controller.AnimationController.new({duration: duration, reverseDuration: reverseDuration, debugLabel: this.debugLabel, vsync: dart.nullCheck(this.navigator)});
      }
      createAnimation() {
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", L27, 167, 12, "!_transitionCompleter.isCompleted");
        if (!(this[_controller] != null)) dart.assertFailed(null, L27, 168, 12, "_controller != null");
        return dart.nullCheck(this[_controller]).view;
      }
      [_handleStatusChanged](status) {
        if (status == null) dart.nullFailed(L27, 174, 45, "status");
        switch (status) {
          case C148 || CT.C148:
          {
            if (dart.test(this.overlayEntries[$isNotEmpty])) this.overlayEntries[$first].opaque = this.opaque;
            break;
          }
          case C149 || CT.C149:
          case C150 || CT.C150:
          {
            if (dart.test(this.overlayEntries[$isNotEmpty])) this.overlayEntries[$first].opaque = false;
            break;
          }
          case C151 || CT.C151:
          {
            if (!dart.test(this.isActive)) {
              dart.nullCheck(this.navigator).finalizeRoute(this);
            }
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      install() {
        let t14;
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot install a " + dart.str(this[$runtimeType]) + " after disposing it.", L27, 199, 12, "!_transitionCompleter.isCompleted");
        this[_controller] = this.createAnimationController();
        if (!(this[_controller] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".createAnimationController() returned null.", L27, 201, 12, "_controller != null");
        this[_animation] = (t14 = this.createAnimation(), (() => {
          t14.addStatusListener(dart.bind(this, _handleStatusChanged));
          return t14;
        })());
        if (!(this[_animation] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".createAnimation() returned null.", L27, 204, 12, "_animation != null");
        super.install();
        if (dart.test(dart.nullCheck(this[_animation]).isCompleted) && dart.test(this.overlayEntries[$isNotEmpty])) {
          this.overlayEntries[$first].opaque = this.opaque;
        }
      }
      didPush() {
        if (!(this[_controller] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".didPush called before calling install() or after calling dispose().", L27, 213, 12, "_controller != null");
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", L27, 214, 12, "!_transitionCompleter.isCompleted");
        super.didPush();
        return dart.nullCheck(this[_controller]).forward();
      }
      didAdd() {
        if (!(this[_controller] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".didPush called before calling install() or after calling dispose().", L27, 221, 12, "_controller != null");
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", L27, 222, 12, "!_transitionCompleter.isCompleted");
        super.didAdd();
        dart.nullCheck(this[_controller]).value = dart.nullCheck(this[_controller]).upperBound;
      }
      didReplace(oldRoute) {
        if (!(this[_controller] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".didReplace called before calling install() or after calling dispose().", L27, 229, 12, "_controller != null");
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", L27, 230, 12, "!_transitionCompleter.isCompleted");
        if (routes.TransitionRoute.is(oldRoute)) dart.nullCheck(this[_controller]).value = dart.nullCheck(oldRoute[_controller]).value;
        super.didReplace(oldRoute);
      }
      didPop(result) {
        TN().as(result);
        if (!(this[_controller] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".didPop called before calling install() or after calling dispose().", L27, 238, 12, "_controller != null");
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", L27, 239, 12, "!_transitionCompleter.isCompleted");
        this[_result] = result;
        dart.nullCheck(this[_controller]).reverse();
        return super.didPop(result);
      }
      didPopNext(nextRoute) {
        if (nextRoute == null) dart.nullFailed(L27, 246, 34, "nextRoute");
        if (!(this[_controller] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".didPopNext called before calling install() or after calling dispose().", L27, 247, 12, "_controller != null");
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", L27, 248, 12, "!_transitionCompleter.isCompleted");
        this[_updateSecondaryAnimation](nextRoute);
        super.didPopNext(nextRoute);
      }
      didChangeNext(nextRoute) {
        if (!(this[_controller] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".didChangeNext called before calling install() or after calling dispose().", L27, 255, 12, "_controller != null");
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", L27, 256, 12, "!_transitionCompleter.isCompleted");
        this[_updateSecondaryAnimation](nextRoute);
        super.didChangeNext(nextRoute);
      }
      [_updateSecondaryAnimation](nextRoute) {
        let previousTrainHoppingListenerRemover = this[_trainHoppingListenerRemover];
        this[_trainHoppingListenerRemover] = null;
        if (routes.TransitionRoute.is(nextRoute) && dart.test(this.canTransitionTo(nextRoute)) && dart.test(nextRoute.canTransitionFrom(this))) {
          let current = this[_secondaryAnimation].parent;
          if (current != null) {
            let currentTrain = dart.nullCheck(animations.TrainHoppingAnimation.is(current) ? current.currentTrain : current);
            let nextTrain = dart.nullCheck(nextRoute[_animation]);
            if (currentTrain.value == nextTrain.value || dart.equals(nextTrain.status, animation.AnimationStatus.completed) || dart.equals(nextTrain.status, animation.AnimationStatus.dismissed)) {
              this[_setSecondaryAnimation](nextTrain, nextRoute.completed);
            } else {
              let newAnimation = null;
              const _jumpOnAnimationEnd = status => {
                if (status == null) dart.nullFailed(L27, 298, 52, "status");
                switch (status) {
                  case C148 || CT.C148:
                  case C151 || CT.C151:
                  {
                    this[_setSecondaryAnimation](nextTrain, nextRoute.completed);
                    if (this[_trainHoppingListenerRemover] != null) {
                      dart.nullCheck(this[_trainHoppingListenerRemover])();
                      this[_trainHoppingListenerRemover] = null;
                    }
                    break;
                  }
                  case C149 || CT.C149:
                  case C150 || CT.C150:
                  {
                    break;
                  }
                  default:
                  {
                    dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
                  }
                }
              };
              dart.fn(_jumpOnAnimationEnd, AnimationStatusTovoid());
              this[_trainHoppingListenerRemover] = dart.fn(() => {
                let t14;
                nextTrain.removeStatusListener(_jumpOnAnimationEnd);
                t14 = newAnimation;
                t14 == null ? null : t14.dispose();
              }, VoidTovoid());
              nextTrain.addStatusListener(_jumpOnAnimationEnd);
              newAnimation = new animations.TrainHoppingAnimation.new(currentTrain, nextTrain, {onSwitchedTrain: dart.fn(() => {
                  if (!dart.equals(this[_secondaryAnimation].parent, newAnimation)) dart.assertFailed(null, L27, 325, 22, "_secondaryAnimation.parent == newAnimation");
                  if (!dart.equals(dart.nullCheck(newAnimation).currentTrain, nextRoute[_animation])) dart.assertFailed(null, L27, 326, 22, "newAnimation!.currentTrain == nextRoute._animation");
                  this[_setSecondaryAnimation](dart.nullCheck(newAnimation).currentTrain, nextRoute.completed);
                  if (this[_trainHoppingListenerRemover] != null) {
                    dart.nullCheck(this[_trainHoppingListenerRemover])();
                    this[_trainHoppingListenerRemover] = null;
                  }
                }, VoidTovoid())});
              this[_setSecondaryAnimation](newAnimation, nextRoute.completed);
            }
          } else {
            this[_setSecondaryAnimation](nextRoute[_animation], nextRoute.completed);
          }
        } else {
          this[_setSecondaryAnimation](animations.kAlwaysDismissedAnimation);
        }
        if (previousTrainHoppingListenerRemover != null) {
          previousTrainHoppingListenerRemover();
        }
      }
      [_setSecondaryAnimation](animation, disposed = null) {
        let t14;
        this[_secondaryAnimation].parent = animation;
        t14 = disposed;
        t14 == null ? null : t14.then(core.Null, dart.fn(_ => {
          if (dart.equals(this[_secondaryAnimation].parent, animation)) {
            this[_secondaryAnimation].parent = animations.kAlwaysDismissedAnimation;
            if (animations.TrainHoppingAnimation.is(animation)) {
              animation.dispose();
            }
          }
        }, dynamicToNull()));
      }
      canTransitionTo(nextRoute) {
        if (nextRoute == null) dart.nullFailed(L27, 389, 49, "nextRoute");
        return true;
      }
      canTransitionFrom(previousRoute) {
        if (previousRoute == null) dart.nullFailed(L27, 414, 51, "previousRoute");
        return true;
      }
      dispose() {
        let t14;
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot dispose a " + dart.str(this[$runtimeType]) + " twice.", L27, 418, 12, "!_transitionCompleter.isCompleted");
        t14 = this[_controller];
        t14 == null ? null : t14.dispose();
        this[_transitionCompleter].complete(this[_result]);
        super.dispose();
      }
      get debugLabel() {
        return object.objectRuntimeType(this, "TransitionRoute");
      }
      toString() {
        return dart.str(object.objectRuntimeType(this, "TransitionRoute")) + "(animation: " + dart.str(this[_controller]) + ")";
      }
    }
    (TransitionRoute.new = function(opts) {
      let settings = opts && 'settings' in opts ? opts.settings : null;
      this[_transitionCompleter] = CompleterOfTN().new();
      this[_animation] = null;
      this[_controller] = null;
      this[_secondaryAnimation] = new animations.ProxyAnimation.new(animations.kAlwaysDismissedAnimation);
      this[_result] = null;
      this[_trainHoppingListenerRemover] = null;
      TransitionRoute.__proto__.new.call(this, {settings: settings});
      ;
    }).prototype = TransitionRoute.prototype;
    dart.addTypeTests(TransitionRoute);
    TransitionRoute.prototype[_is_TransitionRoute_default] = true;
    dart.addTypeCaches(TransitionRoute);
    dart.setMethodSignature(TransitionRoute, () => ({
      __proto__: dart.getMethods(TransitionRoute.__proto__),
      createAnimationController: dart.fnType(animation_controller.AnimationController, []),
      createAnimation: dart.fnType(animation.Animation$(core.double), []),
      [_handleStatusChanged]: dart.fnType(dart.void, [animation.AnimationStatus]),
      [_updateSecondaryAnimation]: dart.fnType(dart.void, [dart.nullable(navigator$.Route)]),
      [_setSecondaryAnimation]: dart.fnType(dart.void, [dart.nullable(animation.Animation$(core.double))], [dart.nullable(async.Future)]),
      canTransitionTo: dart.fnType(core.bool, [routes.TransitionRoute]),
      canTransitionFrom: dart.fnType(core.bool, [routes.TransitionRoute])
    }));
    dart.setGetterSignature(TransitionRoute, () => ({
      __proto__: dart.getGetters(TransitionRoute.__proto__),
      completed: async.Future$(dart.nullable(T)),
      reverseTransitionDuration: core.Duration,
      animation: dart.nullable(animation.Animation$(core.double)),
      controller: dart.nullable(animation_controller.AnimationController),
      secondaryAnimation: dart.nullable(animation.Animation$(core.double)),
      debugLabel: core.String
    }));
    dart.setLibraryUri(TransitionRoute, L30);
    dart.setFieldSignature(TransitionRoute, () => ({
      __proto__: dart.getFields(TransitionRoute.__proto__),
      [_transitionCompleter]: dart.finalFieldType(async.Completer$(dart.nullable(T))),
      [_animation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
      [_controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
      [_secondaryAnimation]: dart.finalFieldType(animations.ProxyAnimation),
      [_result]: dart.fieldType(dart.nullable(T)),
      [_trainHoppingListenerRemover]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [])))
    }));
    dart.defineExtensionMethods(TransitionRoute, ['toString']);
    return TransitionRoute;
  });
  routes.TransitionRoute = routes.TransitionRoute$();
  dart.addTypeTests(routes.TransitionRoute, _is_TransitionRoute_default);
  var _owner = dart.privateName(routes, "_owner");
  var _notifyRemoved = dart.privateName(routes, "_notifyRemoved");
  var onRemove$ = dart.privateName(routes, "LocalHistoryEntry.onRemove");
  routes.LocalHistoryEntry = class LocalHistoryEntry extends core.Object {
    get onRemove() {
      return this[onRemove$];
    }
    set onRemove(value) {
      super.onRemove = value;
    }
    remove() {
      dart.nullCheck(this[_owner]).removeLocalHistoryEntry(this);
      if (!(this[_owner] == null)) dart.assertFailed(null, L27, 444, 12, "_owner == null");
    }
    [_notifyRemoved]() {
      if (this.onRemove != null) dart.nullCheck(this.onRemove)();
    }
  };
  (routes.LocalHistoryEntry.new = function(opts) {
    let onRemove = opts && 'onRemove' in opts ? opts.onRemove : null;
    this[_owner] = null;
    this[onRemove$] = onRemove;
    ;
  }).prototype = routes.LocalHistoryEntry.prototype;
  dart.addTypeTests(routes.LocalHistoryEntry);
  dart.addTypeCaches(routes.LocalHistoryEntry);
  dart.setMethodSignature(routes.LocalHistoryEntry, () => ({
    __proto__: dart.getMethods(routes.LocalHistoryEntry.__proto__),
    remove: dart.fnType(dart.void, []),
    [_notifyRemoved]: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(routes.LocalHistoryEntry, L30);
  dart.setFieldSignature(routes.LocalHistoryEntry, () => ({
    __proto__: dart.getFields(routes.LocalHistoryEntry.__proto__),
    onRemove: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    [_owner]: dart.fieldType(dart.nullable(routes.LocalHistoryRoute))
  }));
  var _localHistory = dart.privateName(routes, "_localHistory");
  const _is_LocalHistoryRoute_default = Symbol('_is_LocalHistoryRoute_default');
  routes.LocalHistoryRoute$ = dart.generic(T => {
    var TN = () => (TN = dart.constFn(dart.nullable(T)))();
    const willPop = Symbol("willPop");
    class LocalHistoryRoute extends navigator$.Route$(T) {}
    LocalHistoryRoute[dart.mixinOn] = Route => class LocalHistoryRoute extends Route {
      addLocalHistoryEntry(entry) {
        if (entry == null) dart.nullFailed(L27, 590, 47, "entry");
        if (!(entry[_owner] == null)) dart.assertFailed(null, L27, 591, 12, "entry._owner == null");
        entry[_owner] = this;
        this[_localHistory] == null ? this[_localHistory] = JSArrayOfLocalHistoryEntry().of([]) : null;
        let wasEmpty = dart.nullCheck(this[_localHistory])[$isEmpty];
        dart.nullCheck(this[_localHistory])[$add](entry);
        if (dart.test(wasEmpty)) this.changedInternalState();
      }
      removeLocalHistoryEntry(entry) {
        if (entry == null) dart.nullFailed(L27, 604, 50, "entry");
        if (!(entry != null)) dart.assertFailed(null, L27, 605, 12, "entry != null");
        if (!dart.equals(entry[_owner], this)) dart.assertFailed(null, L27, 606, 12, "entry._owner == this");
        if (!dart.test(dart.nullCheck(this[_localHistory])[$contains](entry))) dart.assertFailed(null, L27, 607, 12, "_localHistory!.contains(entry)");
        dart.nullCheck(this[_localHistory])[$remove](entry);
        entry[_owner] = null;
        entry[_notifyRemoved]();
        if (dart.test(dart.nullCheck(this[_localHistory])[$isEmpty])) {
          if (dart.equals(dart.nullCheck(binding$.SchedulerBinding.instance).schedulerPhase, binding$.SchedulerPhase.persistentCallbacks)) {
            dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.fn(duration => {
              if (duration == null) dart.nullFailed(L27, 616, 67, "duration");
              this.changedInternalState();
            }, DurationTovoid()));
          } else {
            this.changedInternalState();
          }
        }
      }
      willPop() {
        return async.async(navigator$.RoutePopDisposition, (function* willPop$() {
          if (dart.test(this.willHandlePopInternally)) return navigator$.RoutePopDisposition.pop;
          return this[willPop]();
        }).bind(this));
      }
      didPop(result) {
        TN().as(result);
        if (this[_localHistory] != null && dart.test(dart.nullCheck(this[_localHistory])[$isNotEmpty])) {
          let entry = dart.nullCheck(this[_localHistory])[$removeLast]();
          if (!dart.equals(entry[_owner], this)) dart.assertFailed(null, L27, 636, 14, "entry._owner == this");
          entry[_owner] = null;
          entry[_notifyRemoved]();
          if (dart.test(dart.nullCheck(this[_localHistory])[$isEmpty])) this.changedInternalState();
          return false;
        }
        return super.didPop(result);
      }
      get willHandlePopInternally() {
        return this[_localHistory] != null && dart.test(dart.nullCheck(this[_localHistory])[$isNotEmpty]);
      }
      [willPop]() {
        return super.willPop();
      }
    };
    (LocalHistoryRoute[dart.mixinNew] = function() {
      this[_localHistory] = null;
    }).prototype = LocalHistoryRoute.prototype;
    dart.addTypeTests(LocalHistoryRoute);
    LocalHistoryRoute.prototype[_is_LocalHistoryRoute_default] = true;
    dart.addTypeCaches(LocalHistoryRoute);
    LocalHistoryRoute[dart.implements] = () => [navigator$.Route$(T)];
    dart.setMethodSignature(LocalHistoryRoute, () => ({
      __proto__: dart.getMethods(LocalHistoryRoute.__proto__),
      addLocalHistoryEntry: dart.fnType(dart.void, [routes.LocalHistoryEntry]),
      removeLocalHistoryEntry: dart.fnType(dart.void, [routes.LocalHistoryEntry])
    }));
    dart.setLibraryUri(LocalHistoryRoute, L30);
    dart.setFieldSignature(LocalHistoryRoute, () => ({
      __proto__: dart.getFields(LocalHistoryRoute.__proto__),
      [_localHistory]: dart.fieldType(dart.nullable(core.List$(routes.LocalHistoryEntry)))
    }));
    return LocalHistoryRoute;
  });
  routes.LocalHistoryRoute = routes.LocalHistoryRoute$();
  dart.addTypeTests(routes.LocalHistoryRoute, _is_LocalHistoryRoute_default);
  var _listeners = dart.privateName(actions$, "_listeners");
  const _is_Action_default = Symbol('_is_Action_default');
  actions$.Action$ = dart.generic(T => {
    var ActionOfT = () => (ActionOfT = dart.constFn(actions$.Action$(T)))();
    var DiagnosticsPropertyOfActionOfT = () => (DiagnosticsPropertyOfActionOfT = dart.constFn(diagnostics$.DiagnosticsProperty$(ActionOfT())))();
    const Object_Diagnosticable$36 = class Object_Diagnosticable extends core.Object {};
    (Object_Diagnosticable$36.new = function() {
    }).prototype = Object_Diagnosticable$36.prototype;
    dart.applyMixin(Object_Diagnosticable$36, diagnostics$.Diagnosticable);
    class Action extends Object_Diagnosticable$36 {
      get intentType() {
        return dart.wrapType(T);
      }
      isEnabled(intent) {
        T.as(intent);
        if (intent == null) dart.nullFailed(L31, 95, 30, "intent");
        return true;
      }
      consumesKey(intent) {
        T.as(intent);
        if (intent == null) dart.nullFailed(L31, 108, 32, "intent");
        return true;
      }
      addActionListener(listener) {
        if (listener == null) dart.nullFailed(L31, 165, 49, "listener");
        return this[_listeners].add(listener);
      }
      removeActionListener(listener) {
        if (listener == null) dart.nullFailed(L31, 179, 52, "listener");
        return this[_listeners].remove(listener);
      }
      notifyActionListeners() {
        if (dart.test(this[_listeners].isEmpty)) {
          return;
        }
        let localListeners = ListOfActionOfIntentTovoid().from(this[_listeners]);
        for (let listener of localListeners) {
          let collector = null;
          if (!dart.test(dart.fn(() => {
            collector = dart.fn(() => new (SyncIterableOfDiagnosticsNode()).new((function*() {
              yield new (DiagnosticsPropertyOfActionOfT()).new("The " + dart.str(this[$runtimeType]) + " sending notification was", this, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty});
            }).bind(this)), VoidToIterableOfDiagnosticsNode());
            return true;
          }, VoidTobool())())) dart.assertFailed(null, L31, 206, 14, "() {\r\n        collector = () sync* {\r\n          yield DiagnosticsProperty<Action<T>>(\r\n            'The $runtimeType sending notification was',\r\n            this,\r\n            style: DiagnosticsTreeStyle.errorProperty,\r\n          );\r\n        };\r\n        return true;\r\n      }()");
          try {
            if (dart.test(this[_listeners].contains(listener))) {
              listener(this);
            }
          } catch (e) {
            let exception = dart.getThrown(e);
            let stack = dart.stackTrace(e);
            if (core.Object.is(exception)) {
              assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({exception: exception, stack: stack, library: "widgets library", context: new assertions.ErrorDescription.new("while dispatching notifications for " + dart.str(this[$runtimeType])), informationCollector: collector}));
            } else
              throw e;
          }
        }
      }
    }
    (Action.new = function() {
      this[_listeners] = new (ObserverListOfActionOfIntentTovoid()).new();
      ;
    }).prototype = Action.prototype;
    dart.addTypeTests(Action);
    Action.prototype[_is_Action_default] = true;
    dart.addTypeCaches(Action);
    dart.setMethodSignature(Action, () => ({
      __proto__: dart.getMethods(Action.__proto__),
      isEnabled: dart.fnType(core.bool, [dart.nullable(core.Object)]),
      consumesKey: dart.fnType(core.bool, [dart.nullable(core.Object)]),
      addActionListener: dart.fnType(dart.void, [dart.fnType(dart.void, [actions$.Action$(actions$.Intent)])]),
      removeActionListener: dart.fnType(dart.void, [dart.fnType(dart.void, [actions$.Action$(actions$.Intent)])]),
      notifyActionListeners: dart.fnType(dart.void, [])
    }));
    dart.setGetterSignature(Action, () => ({
      __proto__: dart.getGetters(Action.__proto__),
      intentType: core.Type
    }));
    dart.setLibraryUri(Action, L12);
    dart.setFieldSignature(Action, () => ({
      __proto__: dart.getFields(Action.__proto__),
      [_listeners]: dart.finalFieldType(observer_list.ObserverList$(dart.fnType(dart.void, [actions$.Action$(actions$.Intent)])))
    }));
    return Action;
  });
  actions$.Action = actions$.Action$();
  dart.addTypeTests(actions$.Action, _is_Action_default);
  actions$.DismissIntent = class DismissIntent extends actions$.Intent {};
  (actions$.DismissIntent.new = function() {
    actions$.DismissIntent.__proto__.new.call(this);
    ;
  }).prototype = actions$.DismissIntent.prototype;
  dart.addTypeTests(actions$.DismissIntent);
  dart.addTypeCaches(actions$.DismissIntent);
  dart.setLibraryUri(actions$.DismissIntent, L12);
  actions$.DismissAction = class DismissAction extends actions$.Action$(actions$.DismissIntent) {};
  (actions$.DismissAction.new = function() {
    actions$.DismissAction.__proto__.new.call(this);
    ;
  }).prototype = actions$.DismissAction.prototype;
  dart.addTypeTests(actions$.DismissAction);
  dart.addTypeCaches(actions$.DismissAction);
  dart.setLibraryUri(actions$.DismissAction, L12);
  routes._DismissModalAction = class _DismissModalAction extends actions$.DismissAction {
    isEnabled(intent) {
      actions$.DismissIntent.as(intent);
      if (intent == null) dart.nullFailed(L27, 658, 32, "intent");
      let route = dart.nullCheck(routes.ModalRoute.of(dart.dynamic, this.context));
      return route.barrierDismissible;
    }
    invoke(intent) {
      actions$.DismissIntent.as(intent);
      if (intent == null) dart.nullFailed(L27, 664, 31, "intent");
      return navigator$.Navigator.of(this.context).maybePop(ObjectN());
    }
  };
  (routes._DismissModalAction.new = function(context) {
    if (context == null) dart.nullFailed(L27, 653, 28, "context");
    this.context = context;
    routes._DismissModalAction.__proto__.new.call(this);
    ;
  }).prototype = routes._DismissModalAction.prototype;
  dart.addTypeTests(routes._DismissModalAction);
  dart.addTypeCaches(routes._DismissModalAction);
  dart.setMethodSignature(routes._DismissModalAction, () => ({
    __proto__: dart.getMethods(routes._DismissModalAction.__proto__),
    invoke: dart.fnType(core.Object, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(routes._DismissModalAction, L30);
  dart.setFieldSignature(routes._DismissModalAction, () => ({
    __proto__: dart.getFields(routes._DismissModalAction.__proto__),
    context: dart.finalFieldType(framework.BuildContext)
  }));
  var isCurrent$ = dart.privateName(routes, "_ModalScopeStatus.isCurrent");
  var canPop$ = dart.privateName(routes, "_ModalScopeStatus.canPop");
  var route$ = dart.privateName(routes, "_ModalScopeStatus.route");
  routes._ModalScopeStatus = class _ModalScopeStatus extends framework.InheritedWidget {
    get isCurrent() {
      return this[isCurrent$];
    }
    set isCurrent(value) {
      super.isCurrent = value;
    }
    get canPop() {
      return this[canPop$];
    }
    set canPop(value) {
      super.canPop = value;
    }
    get route() {
      return this[route$];
    }
    set route(value) {
      super.route = value;
    }
    updateShouldNotify(old) {
      routes._ModalScopeStatus.as(old);
      if (old == null) dart.nullFailed(L27, 687, 45, "old");
      return !dart.equals(this.isCurrent, old.isCurrent) || !dart.equals(this.canPop, old.canPop) || !dart.equals(this.route, old.route);
    }
    debugFillProperties(description) {
      if (description == null) dart.nullFailed(L27, 694, 56, "description");
      super.debugFillProperties(description);
      description.add(new diagnostics$.FlagProperty.new("isCurrent", {value: this.isCurrent, ifTrue: "active", ifFalse: "inactive"}));
      description.add(new diagnostics$.FlagProperty.new("canPop", {value: this.canPop, ifTrue: "can pop"}));
    }
  };
  (routes._ModalScopeStatus.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let isCurrent = opts && 'isCurrent' in opts ? opts.isCurrent : null;
    if (isCurrent == null) dart.nullFailed(L27, 672, 19, "isCurrent");
    let canPop = opts && 'canPop' in opts ? opts.canPop : null;
    if (canPop == null) dart.nullFailed(L27, 673, 19, "canPop");
    let route = opts && 'route' in opts ? opts.route : null;
    if (route == null) dart.nullFailed(L27, 674, 19, "route");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L27, 675, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[isCurrent$] = isCurrent;
    this[canPop$] = canPop;
    this[route$] = route;
    if (!(isCurrent != null)) dart.assertFailed(null, L27, 676, 15, "isCurrent != null");
    if (!(canPop != null)) dart.assertFailed(null, L27, 677, 15, "canPop != null");
    if (!(route != null)) dart.assertFailed(null, L27, 678, 15, "route != null");
    if (!(child != null)) dart.assertFailed(null, L27, 679, 15, "child != null");
    routes._ModalScopeStatus.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = routes._ModalScopeStatus.prototype;
  dart.addTypeTests(routes._ModalScopeStatus);
  dart.addTypeCaches(routes._ModalScopeStatus);
  dart.setMethodSignature(routes._ModalScopeStatus, () => ({
    __proto__: dart.getMethods(routes._ModalScopeStatus.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(routes._ModalScopeStatus, L30);
  dart.setFieldSignature(routes._ModalScopeStatus, () => ({
    __proto__: dart.getFields(routes._ModalScopeStatus.__proto__),
    isCurrent: dart.finalFieldType(core.bool),
    canPop: dart.finalFieldType(core.bool),
    route: dart.finalFieldType(navigator$.Route)
  }));
  const _is__ModalScope_default = Symbol('_is__ModalScope_default');
  var route$0 = dart.privateName(routes, "_ModalScope.route");
  routes._ModalScope$ = dart.generic(T => {
    var _ModalScopeStateOfT = () => (_ModalScopeStateOfT = dart.constFn(routes._ModalScopeState$(T)))();
    class _ModalScope extends framework.StatefulWidget {
      get route() {
        return this[route$0];
      }
      set route(value) {
        super.route = value;
      }
      createState() {
        return new (_ModalScopeStateOfT()).new();
      }
    }
    (_ModalScope.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let route = opts && 'route' in opts ? opts.route : null;
      if (route == null) dart.nullFailed(L27, 704, 19, "route");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[route$0] = route;
      _ModalScope.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = _ModalScope.prototype;
    dart.addTypeTests(_ModalScope);
    _ModalScope.prototype[_is__ModalScope_default] = true;
    dart.addTypeCaches(_ModalScope);
    dart.setMethodSignature(_ModalScope, () => ({
      __proto__: dart.getMethods(_ModalScope.__proto__),
      createState: dart.fnType(routes._ModalScopeState$(T), [])
    }));
    dart.setLibraryUri(_ModalScope, L30);
    dart.setFieldSignature(_ModalScope, () => ({
      __proto__: dart.getFields(_ModalScope.__proto__),
      route: dart.finalFieldType(routes.ModalRoute$(T))
    }));
    return _ModalScope;
  });
  routes._ModalScope = routes._ModalScope$();
  dart.addTypeTests(routes._ModalScope, _is__ModalScope_default);
  var _page = dart.privateName(routes, "_page");
  var ___ModalScopeState__listenable = dart.privateName(routes, "_#_ModalScopeState#_listenable");
  var ___ModalScopeState__listenable_isSet = dart.privateName(routes, "_#_ModalScopeState#_listenable#isSet");
  var _listenable = dart.privateName(routes, "_listenable");
  var _forceRebuildPage = dart.privateName(routes, "_forceRebuildPage");
  var _shouldIgnoreFocusRequest = dart.privateName(routes, "_shouldIgnoreFocusRequest");
  var _routeSetState = dart.privateName(routes, "_routeSetState");
  var C154;
  var C155;
  var C153;
  var C152;
  var _storageBucket = dart.privateName(routes, "_storageBucket");
  var C158;
  var C159;
  var C157;
  var C156;
  var C162;
  var C163;
  var C164;
  var C161;
  var C160;
  var _subtreeKey = dart.privateName(routes, "_subtreeKey");
  var C167;
  var C166;
  var C165;
  var C170;
  var C171;
  var C169;
  var C168;
  var C174;
  var C175;
  var C176;
  var C173;
  var C172;
  var C179;
  var C178;
  var C177;
  var C182;
  var C183;
  var C181;
  var C180;
  var C186;
  var C187;
  var C185;
  var C184;
  var C190;
  var C191;
  var C189;
  var C188;
  var C194;
  var C193;
  var C192;
  var C197;
  var C198;
  var C196;
  var C195;
  var C201;
  var C202;
  var C200;
  var C199;
  var C205;
  var C206;
  var C207;
  var C208;
  var C204;
  var C203;
  var C211;
  var C212;
  var C213;
  var C210;
  var C209;
  const _is__ModalScopeState_default = Symbol('_is__ModalScopeState_default');
  routes._ModalScopeState$ = dart.generic(T => {
    var _ModalScopeOfT = () => (_ModalScopeOfT = dart.constFn(routes._ModalScope$(T)))();
    class _ModalScopeState extends framework.State$(routes._ModalScope$(T)) {
      get [_listenable]() {
        let t15;
        return dart.test(this[___ModalScopeState__listenable_isSet]) ? (t15 = this[___ModalScopeState__listenable], t15) : dart.throw(new _internal.LateError.fieldNI("_listenable"));
      }
      set [_listenable](t15) {
        if (t15 == null) dart.nullFailed(L27, 721, 19, "null");
        this[___ModalScopeState__listenable_isSet] = true;
        this[___ModalScopeState__listenable] = t15;
      }
      initState() {
        super.initState();
        let animations = (() => {
          let t16 = JSArrayOfListenable().of([]);
          if (this.widget.route.animation != null) t16.push(dart.nullCheck(this.widget.route.animation));
          if (this.widget.route.secondaryAnimation != null) t16.push(dart.nullCheck(this.widget.route.secondaryAnimation));
          return t16;
        })();
        this[_listenable] = new change_notifier._MergingListenable.new(animations);
        if (dart.test(this.widget.route.isCurrent)) {
          dart.nullCheck(this.widget.route.navigator).focusScopeNode.setFirstFocus(this.focusScopeNode);
        }
      }
      didUpdateWidget(oldWidget) {
        _ModalScopeOfT().as(oldWidget);
        if (oldWidget == null) dart.nullFailed(L27, 741, 39, "oldWidget");
        super.didUpdateWidget(oldWidget);
        if (!dart.equals(this.widget.route, oldWidget.route)) dart.assertFailed(null, L27, 743, 12, "widget.route == oldWidget.route");
        if (dart.test(this.widget.route.isCurrent)) {
          dart.nullCheck(this.widget.route.navigator).focusScopeNode.setFirstFocus(this.focusScopeNode);
        }
      }
      didChangeDependencies() {
        super.didChangeDependencies();
        this[_page] = null;
      }
      [_forceRebuildPage]() {
        this.setState(dart.fn(() => {
          this[_page] = null;
        }, VoidTovoid()));
      }
      dispose() {
        this.focusScopeNode.dispose();
        super.dispose();
      }
      get [_shouldIgnoreFocusRequest]() {
        let t17, t17$, t17$0;
        return dart.equals((t17 = this.widget.route.animation, t17 == null ? null : t17.status), animation.AnimationStatus.reverse) || dart.test((t17$0 = (t17$ = this.widget.route.navigator, t17$ == null ? null : t17$.userGestureInProgress), t17$0 == null ? false : t17$0));
      }
      [_routeSetState](fn) {
        if (fn == null) dart.nullFailed(L27, 774, 36, "fn");
        if (dart.test(this.widget.route.isCurrent) && !dart.test(this[_shouldIgnoreFocusRequest])) {
          dart.nullCheck(this.widget.route.navigator).focusScopeNode.setFirstFocus(this.focusScopeNode);
        }
        this.setState(fn);
      }
      build(context) {
        if (context == null) dart.nullFailed(L27, 782, 29, "context");
        return new transitions.AnimatedBuilder.new({animation: this.widget.route.restorationScopeId, builder: dart.fn((context, child) => {
            if (context == null) dart.nullFailed(L27, 785, 30, "context");
            if (!(child != null)) dart.assertFailed(null, L27, 786, 16, "child != null");
            return new restoration$.RestorationScope.new({restorationId: this.widget.route.restorationScopeId.value, child: dart.nullCheck(child), $creationLocationd_0dea112b090073317d4: C152 || CT.C152});
          }, BuildContextAndWidgetNToRestorationScope()), child: new routes._ModalScopeStatus.new({route: this.widget.route, isCurrent: this.widget.route.isCurrent, canPop: this.widget.route.canPop, child: new basic.Offstage.new({offstage: this.widget.route.offstage, child: new page_storage.PageStorage.new({bucket: this.widget.route[_storageBucket], child: new basic.Builder.new({builder: dart.fn(context => {
                    let t17;
                    if (context == null) dart.nullFailed(L27, 801, 38, "context");
                    return new actions$.Actions.new({actions: new (LinkedMapOfType$ActionOfIntent()).from([dart.wrapType(actions$.DismissIntent), new routes._DismissModalAction.new(context)]), child: new primary_scroll_controller.PrimaryScrollController.new({controller: this.primaryScrollController, child: new focus_scope.FocusScope.new({node: this.focusScopeNode, child: new basic.RepaintBoundary.new({child: new transitions.AnimatedBuilder.new({animation: this[_listenable], builder: dart.fn((context, child) => {
                                let t17, t17$;
                                if (context == null) dart.nullFailed(L27, 813, 50, "context");
                                return this.widget.route.buildTransitions(context, dart.nullCheck(this.widget.route.animation), dart.nullCheck(this.widget.route.secondaryAnimation), new transitions.AnimatedBuilder.new({animation: (t17$ = (t17 = this.widget.route.navigator, t17 == null ? null : t17.userGestureInProgressNotifier), t17$ == null ? new (ValueNotifierOfbool()).new(false) : t17$), builder: dart.fn((context, child) => {
                                    if (context == null) dart.nullFailed(L27, 824, 56, "context");
                                    let ignoreEvents = this[_shouldIgnoreFocusRequest];
                                    this.focusScopeNode.canRequestFocus = !dart.test(ignoreEvents);
                                    return new basic.IgnorePointer.new({ignoring: ignoreEvents, child: child, $creationLocationd_0dea112b090073317d4: C156 || CT.C156});
                                  }, BuildContextAndWidgetNToIgnorePointer()), child: child, $creationLocationd_0dea112b090073317d4: C160 || CT.C160}));
                              }, BuildContextAndWidgetNToWidget()), child: (t17 = this[_page], t17 == null ? this[_page] = new basic.RepaintBoundary.new({key: this.widget.route[_subtreeKey], child: new basic.Builder.new({builder: dart.fn(context => {
                                    if (context == null) dart.nullFailed(L27, 839, 54, "context");
                                    return this.widget.route.buildPage(context, dart.nullCheck(this.widget.route.animation), dart.nullCheck(this.widget.route.secondaryAnimation));
                                  }, BuildContextToWidget()), $creationLocationd_0dea112b090073317d4: C165 || CT.C165}), $creationLocationd_0dea112b090073317d4: C168 || CT.C168}) : t17), $creationLocationd_0dea112b090073317d4: C172 || CT.C172}), $creationLocationd_0dea112b090073317d4: C177 || CT.C177}), $creationLocationd_0dea112b090073317d4: C180 || CT.C180}), $creationLocationd_0dea112b090073317d4: C184 || CT.C184}), $creationLocationd_0dea112b090073317d4: C188 || CT.C188});
                  }, BuildContextToActions()), $creationLocationd_0dea112b090073317d4: C192 || CT.C192}), $creationLocationd_0dea112b090073317d4: C195 || CT.C195}), $creationLocationd_0dea112b090073317d4: C199 || CT.C199}), $creationLocationd_0dea112b090073317d4: C203 || CT.C203}), $creationLocationd_0dea112b090073317d4: C209 || CT.C209});
      }
    }
    (_ModalScopeState.new = function() {
      this[_page] = null;
      this[___ModalScopeState__listenable] = null;
      this[___ModalScopeState__listenable_isSet] = false;
      this.focusScopeNode = new focus_manager.FocusScopeNode.new({debugLabel: dart.str(dart.wrapType(routes._ModalScopeState)) + " Focus Scope"});
      this.primaryScrollController = new scroll_controller.ScrollController.new();
      _ModalScopeState.__proto__.new.call(this);
      ;
    }).prototype = _ModalScopeState.prototype;
    dart.addTypeTests(_ModalScopeState);
    _ModalScopeState.prototype[_is__ModalScopeState_default] = true;
    dart.addTypeCaches(_ModalScopeState);
    dart.setMethodSignature(_ModalScopeState, () => ({
      __proto__: dart.getMethods(_ModalScopeState.__proto__),
      [_forceRebuildPage]: dart.fnType(dart.void, []),
      [_routeSetState]: dart.fnType(dart.void, [dart.fnType(dart.void, [])]),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setGetterSignature(_ModalScopeState, () => ({
      __proto__: dart.getGetters(_ModalScopeState.__proto__),
      [_listenable]: change_notifier.Listenable,
      [_shouldIgnoreFocusRequest]: core.bool
    }));
    dart.setSetterSignature(_ModalScopeState, () => ({
      __proto__: dart.getSetters(_ModalScopeState.__proto__),
      [_listenable]: change_notifier.Listenable
    }));
    dart.setLibraryUri(_ModalScopeState, L30);
    dart.setFieldSignature(_ModalScopeState, () => ({
      __proto__: dart.getFields(_ModalScopeState.__proto__),
      [_page]: dart.fieldType(dart.nullable(framework.Widget)),
      [___ModalScopeState__listenable]: dart.fieldType(dart.nullable(change_notifier.Listenable)),
      [___ModalScopeState__listenable_isSet]: dart.fieldType(core.bool),
      focusScopeNode: dart.finalFieldType(focus_manager.FocusScopeNode),
      primaryScrollController: dart.finalFieldType(scroll_controller.ScrollController)
    }));
    return _ModalScopeState;
  });
  routes._ModalScopeState = routes._ModalScopeState$();
  dart.addTypeTests(routes._ModalScopeState, _is__ModalScopeState_default);
  var _offstage = dart.privateName(routes, "_offstage");
  var _animationProxy = dart.privateName(routes, "_animationProxy");
  var _secondaryAnimationProxy = dart.privateName(routes, "_secondaryAnimationProxy");
  var _willPopCallbacks = dart.privateName(routes, "_willPopCallbacks");
  var _scopeKey = dart.privateName(routes, "_scopeKey");
  var __ModalRoute__modalBarrier = dart.privateName(routes, "_#ModalRoute#_modalBarrier");
  var __ModalRoute__modalBarrier_isSet = dart.privateName(routes, "_#ModalRoute#_modalBarrier#isSet");
  var _modalScopeCache = dart.privateName(routes, "_modalScopeCache");
  var __ModalRoute__modalScope = dart.privateName(routes, "_#ModalRoute#_modalScope");
  var __ModalRoute__modalScope_isSet = dart.privateName(routes, "_#ModalRoute#_modalScope#isSet");
  var _filter = dart.privateName(routes, "_filter");
  var _modalBarrier = dart.privateName(routes, "_modalBarrier");
  var _modalScope = dart.privateName(routes, "_modalScope");
  var C216;
  var C217;
  var C218;
  var C219;
  var C215;
  var C214;
  var C222;
  var C223;
  var C224;
  var C221;
  var C220;
  var C227;
  var C228;
  var C226;
  var C225;
  var C231;
  var C232;
  var C230;
  var C229;
  var SemanticsSortKey_name = dart.privateName(semantics, "SemanticsSortKey.name");
  var OrdinalSortKey_order = dart.privateName(semantics, "OrdinalSortKey.order");
  var C233;
  var C236;
  var C237;
  var C235;
  var C234;
  var _buildModalBarrier = dart.privateName(routes, "_buildModalBarrier");
  var C238;
  var C241;
  var C242;
  var C240;
  var C239;
  var C245;
  var C246;
  var C244;
  var C243;
  var _buildModalScope = dart.privateName(routes, "_buildModalScope");
  const _is_ModalRoute_default = Symbol('_is_ModalRoute_default');
  routes.ModalRoute$ = dart.generic(T => {
    var _ModalScopeStateOfT = () => (_ModalScopeStateOfT = dart.constFn(routes._ModalScopeState$(T)))();
    var GlobalKeyOf_ModalScopeStateOfT = () => (GlobalKeyOf_ModalScopeStateOfT = dart.constFn(framework.GlobalKey$(_ModalScopeStateOfT())))();
    var _ModalScopeOfT = () => (_ModalScopeOfT = dart.constFn(routes._ModalScope$(T)))();
    const willPop = Symbol("willPop");
    const TransitionRoute_LocalHistoryRoute$36 = class TransitionRoute_LocalHistoryRoute extends routes.TransitionRoute$(T) {};
    (TransitionRoute_LocalHistoryRoute$36.new = function(opts) {
      routes.LocalHistoryRoute$(T)[dart.mixinNew].call(this);
      TransitionRoute_LocalHistoryRoute$36.__proto__.new.call(this, opts);
    }).prototype = TransitionRoute_LocalHistoryRoute$36.prototype;
    dart.applyMixin(TransitionRoute_LocalHistoryRoute$36, routes.LocalHistoryRoute$(T));
    class ModalRoute extends TransitionRoute_LocalHistoryRoute$36 {
      static of(T, context) {
        let t17;
        if (context == null) dart.nullFailed(L27, 899, 60, "context");
        let widget = context.dependOnInheritedWidgetOfExactType(routes._ModalScopeStatus);
        return dart.nullable(routes.ModalRoute$(T)).as((t17 = widget, t17 == null ? null : t17.route));
      }
      setState(fn) {
        if (fn == null) dart.nullFailed(L27, 917, 30, "fn");
        if (this[_scopeKey].currentState != null) {
          dart.nullCheck(this[_scopeKey].currentState)[_routeSetState](fn);
        } else {
          fn();
        }
      }
      static withName(name) {
        if (name == null) dart.nullFailed(L27, 933, 41, "name");
        return dart.fn(route => {
          if (route == null) dart.nullFailed(L27, 934, 28, "route");
          return !dart.test(route.willHandlePopInternally) && routes.ModalRoute.is(route) && route.settings.name == name;
        }, RouteTobool());
      }
      buildTransitions(context, animation, secondaryAnimation, child) {
        if (context == null) dart.nullFailed(L27, 1085, 18, "context");
        if (animation == null) dart.nullFailed(L27, 1086, 23, "animation");
        if (secondaryAnimation == null) dart.nullFailed(L27, 1087, 23, "secondaryAnimation");
        if (child == null) dart.nullFailed(L27, 1088, 12, "child");
        return child;
      }
      install() {
        super.install();
        this[_animationProxy] = new animations.ProxyAnimation.new(super.animation);
        this[_secondaryAnimationProxy] = new animations.ProxyAnimation.new(super.secondaryAnimation);
      }
      didPush() {
        if (this[_scopeKey].currentState != null) {
          dart.nullCheck(this.navigator).focusScopeNode.setFirstFocus(dart.nullCheck(this[_scopeKey].currentState).focusScopeNode);
        }
        return super.didPush();
      }
      didAdd() {
        if (this[_scopeKey].currentState != null) {
          dart.nullCheck(this.navigator).focusScopeNode.setFirstFocus(dart.nullCheck(this[_scopeKey].currentState).focusScopeNode);
        }
        super.didAdd();
      }
      get semanticsDismissible() {
        return true;
      }
      get barrierCurve() {
        return curves.Curves.ease;
      }
      get offstage() {
        return this[_offstage];
      }
      set offstage(value) {
        if (value == null) dart.nullFailed(L27, 1285, 21, "value");
        if (dart.equals(this[_offstage], value)) return;
        this.setState(dart.fn(() => {
          this[_offstage] = value;
        }, VoidTovoid()));
        dart.nullCheck(this[_animationProxy]).parent = dart.test(this[_offstage]) ? animations.kAlwaysCompleteAnimation : super.animation;
        dart.nullCheck(this[_secondaryAnimationProxy]).parent = dart.test(this[_offstage]) ? animations.kAlwaysDismissedAnimation : super.secondaryAnimation;
        this.changedInternalState();
      }
      get subtreeContext() {
        return this[_subtreeKey].currentContext;
      }
      get animation() {
        return this[_animationProxy];
      }
      get secondaryAnimation() {
        return this[_secondaryAnimationProxy];
      }
      willPop() {
        return async.async(navigator$.RoutePopDisposition, (function* willPop$() {
          let scope = this[_scopeKey].currentState;
          if (!(scope != null)) dart.assertFailed(null, L27, 1330, 12, "scope != null");
          for (let callback of ListOfVoidToFutureOfbool().from(this[_willPopCallbacks])) {
            if (!dart.equals(yield callback(), true)) return navigator$.RoutePopDisposition.doNotPop;
          }
          return yield this[willPop]();
        }).bind(this));
      }
      addScopedWillPopCallback(callback) {
        if (callback == null) dart.nullFailed(L27, 1398, 49, "callback");
        if (!(this[_scopeKey].currentState != null)) dart.assertFailed("Tried to add a willPop callback to a route that is not currently in the tree.", L27, 1399, 12, "_scopeKey.currentState != null");
        this[_willPopCallbacks][$add](callback);
      }
      removeScopedWillPopCallback(callback) {
        if (callback == null) dart.nullFailed(L27, 1410, 52, "callback");
        if (!(this[_scopeKey].currentState != null)) dart.assertFailed("Tried to remove a willPop callback from a route that is not currently in the tree.", L27, 1411, 12, "_scopeKey.currentState != null");
        this[_willPopCallbacks][$remove](callback);
      }
      get hasScopedWillPopCallback() {
        return this[_willPopCallbacks][$isNotEmpty];
      }
      didChangePrevious(previousRoute) {
        super.didChangePrevious(previousRoute);
        this.changedInternalState();
      }
      changedInternalState() {
        super.changedInternalState();
        this.setState(dart.fn(() => {
        }, VoidTovoid()));
        this[_modalBarrier].markNeedsBuild();
        this[_modalScope].maintainState = this.maintainState;
      }
      changedExternalState() {
        super.changedExternalState();
        if (this[_scopeKey].currentState != null) dart.nullCheck(this[_scopeKey].currentState)[_forceRebuildPage]();
      }
      get canPop() {
        return !dart.test(this.isFirst) || dart.test(this.willHandlePopInternally);
      }
      get [_modalBarrier]() {
        let t17;
        return dart.test(this[__ModalRoute__modalBarrier_isSet]) ? (t17 = this[__ModalRoute__modalBarrier], t17) : dart.throw(new _internal.LateError.fieldNI("_modalBarrier"));
      }
      set [_modalBarrier](t17) {
        if (t17 == null) dart.nullFailed(L27, 1472, 21, "null");
        this[__ModalRoute__modalBarrier_isSet] = true;
        this[__ModalRoute__modalBarrier] = t17;
      }
      [_buildModalBarrier](context) {
        if (context == null) dart.nullFailed(L27, 1473, 42, "context");
        let barrier = null;
        if (this.barrierColor != null && dart.nullCheck(this.barrierColor).alpha !== 0 && !dart.test(this.offstage)) {
          if (!!dart.equals(this.barrierColor, dart.nullCheck(this.barrierColor).withOpacity(0.0))) dart.assertFailed(null, L27, 1476, 14, "barrierColor != barrierColor!.withOpacity(0.0)");
          let color = dart.nullCheck(this.animation).drive(ColorN(), new tween.ColorTween.new({begin: dart.nullCheck(this.barrierColor).withOpacity(0.0), end: this.barrierColor}).chain(new tween.CurveTween.new({curve: this.barrierCurve})));
          barrier = new modal_barrier.AnimatedModalBarrier.new({color: color, dismissible: this.barrierDismissible, semanticsLabel: this.barrierLabel, barrierSemanticsDismissible: this.semanticsDismissible, $creationLocationd_0dea112b090073317d4: C214 || CT.C214});
        } else {
          barrier = new modal_barrier.ModalBarrier.new({dismissible: this.barrierDismissible, semanticsLabel: this.barrierLabel, barrierSemanticsDismissible: this.semanticsDismissible, $creationLocationd_0dea112b090073317d4: C220 || CT.C220});
        }
        if (this[_filter] != null) {
          barrier = new basic.BackdropFilter.new({filter: dart.nullCheck(this[_filter]), child: barrier, $creationLocationd_0dea112b090073317d4: C225 || CT.C225});
        }
        barrier = new basic.IgnorePointer.new({ignoring: dart.equals(dart.nullCheck(this.animation).status, animation.AnimationStatus.reverse) || dart.equals(dart.nullCheck(this.animation).status, animation.AnimationStatus.dismissed), child: barrier, $creationLocationd_0dea112b090073317d4: C229 || CT.C229});
        if (dart.test(this.semanticsDismissible) && dart.test(this.barrierDismissible)) {
          barrier = new basic.Semantics.new({sortKey: C233 || CT.C233, child: barrier, $creationLocationd_0dea112b090073317d4: C234 || CT.C234});
        }
        return barrier;
      }
      [_buildModalScope](context) {
        let t18;
        if (context == null) dart.nullFailed(L27, 1522, 40, "context");
        t18 = this[_modalScopeCache];
        return t18 == null ? this[_modalScopeCache] = new basic.Semantics.new({sortKey: C238 || CT.C238, child: new (_ModalScopeOfT()).new({key: this[_scopeKey], route: this, $creationLocationd_0dea112b090073317d4: C239 || CT.C239}), $creationLocationd_0dea112b090073317d4: C243 || CT.C243}) : t18;
      }
      get [_modalScope]() {
        let t18;
        return dart.test(this[__ModalRoute__modalScope_isSet]) ? (t18 = this[__ModalRoute__modalScope], t18) : dart.throw(new _internal.LateError.fieldNI("_modalScope"));
      }
      set [_modalScope](t18) {
        if (t18 == null) dart.nullFailed(L27, 1534, 21, "null");
        this[__ModalRoute__modalScope_isSet] = true;
        this[__ModalRoute__modalScope] = t18;
      }
      createOverlayEntries() {
        return new (SyncIterableOfOverlayEntry()).new((function* createOverlayEntries() {
          yield this[_modalBarrier] = new overlay$.OverlayEntry.new({builder: dart.bind(this, _buildModalBarrier)});
          yield this[_modalScope] = new overlay$.OverlayEntry.new({builder: dart.bind(this, _buildModalScope), maintainState: this.maintainState});
        }).bind(this));
      }
      toString() {
        return dart.str(object.objectRuntimeType(this, "ModalRoute")) + "(" + dart.str(this.settings) + ", animation: " + dart.str(this[_animation]) + ")";
      }
      [willPop]() {
        return super.willPop();
      }
    }
    (ModalRoute.new = function(opts) {
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let filter = opts && 'filter' in opts ? opts.filter : null;
      this[_offstage] = false;
      this[_animationProxy] = null;
      this[_secondaryAnimationProxy] = null;
      this[_willPopCallbacks] = JSArrayOfVoidToFutureOfbool().of([]);
      this[_scopeKey] = GlobalKeyOf_ModalScopeStateOfT().new();
      this[_subtreeKey] = GlobalKeyOfStateOfStatefulWidget().new();
      this[_storageBucket] = new page_storage.PageStorageBucket.new();
      this[__ModalRoute__modalBarrier] = null;
      this[__ModalRoute__modalBarrier_isSet] = false;
      this[_modalScopeCache] = null;
      this[__ModalRoute__modalScope] = null;
      this[__ModalRoute__modalScope_isSet] = false;
      this[_filter] = filter;
      ModalRoute.__proto__.new.call(this, {settings: settings});
      ;
    }).prototype = ModalRoute.prototype;
    dart.addTypeTests(ModalRoute);
    ModalRoute.prototype[_is_ModalRoute_default] = true;
    dart.addTypeCaches(ModalRoute);
    dart.setMethodSignature(ModalRoute, () => ({
      __proto__: dart.getMethods(ModalRoute.__proto__),
      setState: dart.fnType(dart.void, [dart.fnType(dart.void, [])]),
      buildTransitions: dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double), framework.Widget]),
      addScopedWillPopCallback: dart.fnType(dart.void, [dart.fnType(async.Future$(core.bool), [])]),
      removeScopedWillPopCallback: dart.fnType(dart.void, [dart.fnType(async.Future$(core.bool), [])]),
      [_buildModalBarrier]: dart.fnType(framework.Widget, [framework.BuildContext]),
      [_buildModalScope]: dart.fnType(framework.Widget, [framework.BuildContext]),
      createOverlayEntries: dart.fnType(core.Iterable$(overlay$.OverlayEntry), [])
    }));
    dart.setGetterSignature(ModalRoute, () => ({
      __proto__: dart.getGetters(ModalRoute.__proto__),
      semanticsDismissible: core.bool,
      barrierCurve: curves.Curve,
      offstage: core.bool,
      subtreeContext: dart.nullable(framework.BuildContext),
      hasScopedWillPopCallback: core.bool,
      canPop: core.bool,
      [_modalBarrier]: overlay$.OverlayEntry,
      [_modalScope]: overlay$.OverlayEntry
    }));
    dart.setSetterSignature(ModalRoute, () => ({
      __proto__: dart.getSetters(ModalRoute.__proto__),
      offstage: core.bool,
      [_modalBarrier]: overlay$.OverlayEntry,
      [_modalScope]: overlay$.OverlayEntry
    }));
    dart.setLibraryUri(ModalRoute, L30);
    dart.setFieldSignature(ModalRoute, () => ({
      __proto__: dart.getFields(ModalRoute.__proto__),
      [_filter]: dart.finalFieldType(dart.nullable(ui.ImageFilter)),
      [_offstage]: dart.fieldType(core.bool),
      [_animationProxy]: dart.fieldType(dart.nullable(animations.ProxyAnimation)),
      [_secondaryAnimationProxy]: dart.fieldType(dart.nullable(animations.ProxyAnimation)),
      [_willPopCallbacks]: dart.finalFieldType(core.List$(dart.fnType(async.Future$(core.bool), []))),
      [_scopeKey]: dart.finalFieldType(framework.GlobalKey$(routes._ModalScopeState$(T))),
      [_subtreeKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
      [_storageBucket]: dart.finalFieldType(page_storage.PageStorageBucket),
      [__ModalRoute__modalBarrier]: dart.fieldType(dart.nullable(overlay$.OverlayEntry)),
      [__ModalRoute__modalBarrier_isSet]: dart.fieldType(core.bool),
      [_modalScopeCache]: dart.fieldType(dart.nullable(framework.Widget)),
      [__ModalRoute__modalScope]: dart.fieldType(dart.nullable(overlay$.OverlayEntry)),
      [__ModalRoute__modalScope_isSet]: dart.fieldType(core.bool)
    }));
    dart.defineExtensionMethods(ModalRoute, ['toString']);
    return ModalRoute;
  });
  routes.ModalRoute = routes.ModalRoute$();
  dart.addTypeTests(routes.ModalRoute, _is_ModalRoute_default);
  const _is_PopupRoute_default = Symbol('_is_PopupRoute_default');
  routes.PopupRoute$ = dart.generic(T => {
    class PopupRoute extends routes.ModalRoute$(T) {
      get opaque() {
        return false;
      }
      get maintainState() {
        return true;
      }
    }
    (PopupRoute.new = function(opts) {
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let filter = opts && 'filter' in opts ? opts.filter : null;
      PopupRoute.__proto__.new.call(this, {filter: filter, settings: settings});
      ;
    }).prototype = PopupRoute.prototype;
    dart.addTypeTests(PopupRoute);
    PopupRoute.prototype[_is_PopupRoute_default] = true;
    dart.addTypeCaches(PopupRoute);
    dart.setGetterSignature(PopupRoute, () => ({
      __proto__: dart.getGetters(PopupRoute.__proto__),
      opaque: core.bool,
      maintainState: core.bool
    }));
    dart.setLibraryUri(PopupRoute, L30);
    return PopupRoute;
  });
  routes.PopupRoute = routes.PopupRoute$();
  dart.addTypeTests(routes.PopupRoute, _is_PopupRoute_default);
  var _listeners$ = dart.privateName(routes, "_listeners");
  navigator$.NavigatorObserver = class NavigatorObserver extends core.Object {
    get navigator() {
      return this[_navigator];
    }
    didPush(route, previousRoute) {
      if (route == null) dart.nullFailed(L28, 595, 31, "route");
    }
    didPop(route, previousRoute) {
      if (route == null) dart.nullFailed(L28, 601, 30, "route");
    }
    didRemove(route, previousRoute) {
      if (route == null) dart.nullFailed(L28, 612, 33, "route");
    }
    didReplace(opts) {
      let newRoute = opts && 'newRoute' in opts ? opts.newRoute : null;
      let oldRoute = opts && 'oldRoute' in opts ? opts.oldRoute : null;
    }
    didStartUserGesture(route, previousRoute) {
      if (route == null) dart.nullFailed(L28, 621, 43, "route");
    }
    didStopUserGesture() {
    }
  };
  (navigator$.NavigatorObserver.new = function() {
    this[_navigator] = null;
    ;
  }).prototype = navigator$.NavigatorObserver.prototype;
  dart.addTypeTests(navigator$.NavigatorObserver);
  dart.addTypeCaches(navigator$.NavigatorObserver);
  dart.setMethodSignature(navigator$.NavigatorObserver, () => ({
    __proto__: dart.getMethods(navigator$.NavigatorObserver.__proto__),
    didPush: dart.fnType(dart.void, [navigator$.Route, dart.nullable(navigator$.Route)]),
    didPop: dart.fnType(dart.void, [navigator$.Route, dart.nullable(navigator$.Route)]),
    didRemove: dart.fnType(dart.void, [navigator$.Route, dart.nullable(navigator$.Route)]),
    didReplace: dart.fnType(dart.void, [], {newRoute: dart.nullable(navigator$.Route), oldRoute: dart.nullable(navigator$.Route)}, {}),
    didStartUserGesture: dart.fnType(dart.void, [navigator$.Route, dart.nullable(navigator$.Route)]),
    didStopUserGesture: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(navigator$.NavigatorObserver, () => ({
    __proto__: dart.getGetters(navigator$.NavigatorObserver.__proto__),
    navigator: dart.nullable(navigator$.NavigatorState)
  }));
  dart.setLibraryUri(navigator$.NavigatorObserver, L29);
  dart.setFieldSignature(navigator$.NavigatorObserver, () => ({
    __proto__: dart.getFields(navigator$.NavigatorObserver.__proto__),
    [_navigator]: dart.fieldType(dart.nullable(navigator$.NavigatorState))
  }));
  const _is_RouteObserver_default = Symbol('_is_RouteObserver_default');
  routes.RouteObserver$ = dart.generic(R => {
    var LinkedMapOfR$SetOfRouteAware = () => (LinkedMapOfR$SetOfRouteAware = dart.constFn(_js_helper.LinkedMap$(R, SetOfRouteAware())))();
    class RouteObserver extends navigator$.NavigatorObserver {
      subscribe(routeAware, route) {
        if (routeAware == null) dart.nullFailed(L27, 1645, 29, "routeAware");
        R.as(route);
        if (route == null) dart.nullFailed(L27, 1645, 43, "route");
        if (!(routeAware != null)) dart.assertFailed(null, L27, 1646, 12, "routeAware != null");
        if (!(route != null)) dart.assertFailed(null, L27, 1647, 12, "route != null");
        let subscribers = this[_listeners$][$putIfAbsent](route, dart.fn(() => LinkedHashSetOfRouteAware().new(), VoidToSetOfRouteAware()));
        if (dart.test(subscribers.add(routeAware))) {
          routeAware.didPush();
        }
      }
      unsubscribe(routeAware) {
        let t19;
        if (routeAware == null) dart.nullFailed(L27, 1658, 31, "routeAware");
        if (!(routeAware != null)) dart.assertFailed(null, L27, 1659, 12, "routeAware != null");
        for (let route of this[_listeners$][$keys]) {
          let subscribers = this[_listeners$][$_get](route);
          t19 = subscribers;
          t19 == null ? null : t19.remove(routeAware);
        }
      }
      didPop(route, previousRoute) {
        let t19, t19$;
        if (route == null) dart.nullFailed(L27, 1667, 30, "route");
        if (R.is(route) && R.is(previousRoute)) {
          let previousSubscribers = (t19 = this[_listeners$][$_get](previousRoute), t19 == null ? null : t19[$toList]());
          if (previousSubscribers != null) {
            for (let routeAware of previousSubscribers) {
              routeAware.didPopNext();
            }
          }
          let subscribers = (t19$ = this[_listeners$][$_get](route), t19$ == null ? null : t19$[$toList]());
          if (subscribers != null) {
            for (let routeAware of subscribers) {
              routeAware.didPop();
            }
          }
        }
      }
      didPush(route, previousRoute) {
        if (route == null) dart.nullFailed(L27, 1688, 31, "route");
        if (R.is(route) && R.is(previousRoute)) {
          let previousSubscribers = this[_listeners$][$_get](previousRoute);
          if (previousSubscribers != null) {
            for (let routeAware of previousSubscribers) {
              routeAware.didPushNext();
            }
          }
        }
      }
    }
    (RouteObserver.new = function() {
      this[_listeners$] = new (LinkedMapOfR$SetOfRouteAware()).new();
      RouteObserver.__proto__.new.call(this);
      ;
    }).prototype = RouteObserver.prototype;
    dart.addTypeTests(RouteObserver);
    RouteObserver.prototype[_is_RouteObserver_default] = true;
    dart.addTypeCaches(RouteObserver);
    dart.setMethodSignature(RouteObserver, () => ({
      __proto__: dart.getMethods(RouteObserver.__proto__),
      subscribe: dart.fnType(dart.void, [routes.RouteAware, dart.nullable(core.Object)]),
      unsubscribe: dart.fnType(dart.void, [routes.RouteAware])
    }));
    dart.setLibraryUri(RouteObserver, L30);
    dart.setFieldSignature(RouteObserver, () => ({
      __proto__: dart.getFields(RouteObserver.__proto__),
      [_listeners$]: dart.finalFieldType(core.Map$(R, core.Set$(routes.RouteAware)))
    }));
    return RouteObserver;
  });
  routes.RouteObserver = routes.RouteObserver$();
  dart.addTypeTests(routes.RouteObserver, _is_RouteObserver_default);
  routes.RouteAware = class RouteAware extends core.Object {
    didPopNext() {
    }
    didPush() {
    }
    didPop() {
    }
    didPushNext() {
    }
  };
  (routes.RouteAware.new = function() {
    ;
  }).prototype = routes.RouteAware.prototype;
  dart.addTypeTests(routes.RouteAware);
  dart.addTypeCaches(routes.RouteAware);
  dart.setMethodSignature(routes.RouteAware, () => ({
    __proto__: dart.getMethods(routes.RouteAware.__proto__),
    didPopNext: dart.fnType(dart.void, []),
    didPush: dart.fnType(dart.void, []),
    didPop: dart.fnType(dart.void, []),
    didPushNext: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(routes.RouteAware, L30);
  var C247;
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var C248;
  var _pageBuilder = dart.privateName(routes, "_pageBuilder");
  var _barrierDismissible = dart.privateName(routes, "_barrierDismissible");
  var _barrierLabel = dart.privateName(routes, "_barrierLabel");
  var _barrierColor = dart.privateName(routes, "_barrierColor");
  var _transitionDuration = dart.privateName(routes, "_transitionDuration");
  var _transitionBuilder = dart.privateName(routes, "_transitionBuilder");
  var C251;
  var C252;
  var C253;
  var C250;
  var C249;
  var C256;
  var C257;
  var C255;
  var C254;
  const _is__DialogRoute_default = Symbol('_is__DialogRoute_default');
  routes._DialogRoute$ = dart.generic(T => {
    class _DialogRoute extends routes.PopupRoute$(T) {
      get barrierDismissible() {
        return this[_barrierDismissible];
      }
      get barrierLabel() {
        return this[_barrierLabel];
      }
      get barrierColor() {
        return this[_barrierColor];
      }
      get transitionDuration() {
        return this[_transitionDuration];
      }
      buildPage(context, animation, secondaryAnimation) {
        let t21, t20, t19;
        if (context == null) dart.nullFailed(L27, 1760, 33, "context");
        if (animation == null) dart.nullFailed(L27, 1760, 60, "animation");
        if (secondaryAnimation == null) dart.nullFailed(L27, 1760, 89, "secondaryAnimation");
        return new basic.Semantics.new({child: (t19 = context, t20 = animation, t21 = secondaryAnimation, this[_pageBuilder](t19, t20, t21)), scopesRoute: true, explicitChildNodes: true, $creationLocationd_0dea112b090073317d4: C249 || CT.C249});
      }
      buildTransitions(context, animation, secondaryAnimation, child) {
        if (context == null) dart.nullFailed(L27, 1769, 40, "context");
        if (animation == null) dart.nullFailed(L27, 1769, 67, "animation");
        if (secondaryAnimation == null) dart.nullFailed(L27, 1769, 96, "secondaryAnimation");
        if (child == null) dart.nullFailed(L27, 1769, 123, "child");
        if (this[_transitionBuilder] == null) {
          return new transitions.FadeTransition.new({opacity: new animations.CurvedAnimation.new({parent: animation, curve: curves.Curves.linear}), child: child, $creationLocationd_0dea112b090073317d4: C254 || CT.C254});
        }
        return dart.nullCheck(this[_transitionBuilder])(context, animation, secondaryAnimation, child);
      }
    }
    (_DialogRoute.new = function(opts) {
      let pageBuilder = opts && 'pageBuilder' in opts ? opts.pageBuilder : null;
      if (pageBuilder == null) dart.nullFailed(L27, 1723, 31, "pageBuilder");
      let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : true;
      if (barrierDismissible == null) dart.nullFailed(L27, 1724, 10, "barrierDismissible");
      let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
      let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : C247 || CT.C247;
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : C248 || CT.C248;
      if (transitionDuration == null) dart.nullFailed(L27, 1727, 14, "transitionDuration");
      let transitionBuilder = opts && 'transitionBuilder' in opts ? opts.transitionBuilder : null;
      let settings = opts && 'settings' in opts ? opts.settings : null;
      if (!(barrierDismissible != null)) dart.assertFailed(null, L27, 1730, 15, "barrierDismissible != null");
      this[_pageBuilder] = pageBuilder;
      this[_barrierDismissible] = barrierDismissible;
      this[_barrierLabel] = barrierLabel;
      this[_barrierColor] = barrierColor;
      this[_transitionDuration] = transitionDuration;
      this[_transitionBuilder] = transitionBuilder;
      _DialogRoute.__proto__.new.call(this, {settings: settings});
      ;
    }).prototype = _DialogRoute.prototype;
    dart.addTypeTests(_DialogRoute);
    _DialogRoute.prototype[_is__DialogRoute_default] = true;
    dart.addTypeCaches(_DialogRoute);
    dart.setMethodSignature(_DialogRoute, () => ({
      __proto__: dart.getMethods(_DialogRoute.__proto__),
      buildPage: dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double)])
    }));
    dart.setGetterSignature(_DialogRoute, () => ({
      __proto__: dart.getGetters(_DialogRoute.__proto__),
      barrierDismissible: core.bool,
      barrierLabel: dart.nullable(core.String),
      barrierColor: dart.nullable(ui.Color),
      transitionDuration: core.Duration
    }));
    dart.setLibraryUri(_DialogRoute, L30);
    dart.setFieldSignature(_DialogRoute, () => ({
      __proto__: dart.getFields(_DialogRoute.__proto__),
      [_pageBuilder]: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double)])),
      [_barrierDismissible]: dart.finalFieldType(core.bool),
      [_barrierLabel]: dart.finalFieldType(dart.nullable(core.String)),
      [_barrierColor]: dart.finalFieldType(dart.nullable(ui.Color)),
      [_transitionDuration]: dart.finalFieldType(core.Duration),
      [_transitionBuilder]: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double), framework.Widget])))
    }));
    return _DialogRoute;
  });
  routes._DialogRoute = routes._DialogRoute$();
  dart.addTypeTests(routes._DialogRoute, _is__DialogRoute_default);
  routes.showGeneralDialog = function showGeneralDialog(T, opts) {
    let context = opts && 'context' in opts ? opts.context : null;
    if (context == null) dart.nullFailed(L27, 1837, 25, "context");
    let pageBuilder = opts && 'pageBuilder' in opts ? opts.pageBuilder : null;
    if (pageBuilder == null) dart.nullFailed(L27, 1838, 29, "pageBuilder");
    let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : false;
    if (barrierDismissible == null) dart.nullFailed(L27, 1839, 8, "barrierDismissible");
    let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
    let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : C247 || CT.C247;
    if (barrierColor == null) dart.nullFailed(L27, 1841, 9, "barrierColor");
    let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : C248 || CT.C248;
    if (transitionDuration == null) dart.nullFailed(L27, 1842, 12, "transitionDuration");
    let transitionBuilder = opts && 'transitionBuilder' in opts ? opts.transitionBuilder : null;
    let useRootNavigator = opts && 'useRootNavigator' in opts ? opts.useRootNavigator : true;
    if (useRootNavigator == null) dart.nullFailed(L27, 1844, 8, "useRootNavigator");
    let routeSettings = opts && 'routeSettings' in opts ? opts.routeSettings : null;
    if (!(pageBuilder != null)) dart.assertFailed(null, L27, 1847, 10, "pageBuilder != null");
    if (!(useRootNavigator != null)) dart.assertFailed(null, L27, 1848, 10, "useRootNavigator != null");
    if (!(!dart.test(barrierDismissible) || barrierLabel != null)) dart.assertFailed(null, L27, 1849, 10, "!barrierDismissible || barrierLabel != null");
    return navigator$.Navigator.of(context, {rootNavigator: useRootNavigator}).push(T, new (routes._DialogRoute$(T)).new({pageBuilder: pageBuilder, barrierDismissible: barrierDismissible, barrierLabel: barrierLabel, barrierColor: barrierColor, transitionDuration: transitionDuration, transitionBuilder: transitionBuilder, settings: routeSettings}));
  };
  const _is_PageRoute_default = Symbol('_is_PageRoute_default');
  var fullscreenDialog$ = dart.privateName(pages, "PageRoute.fullscreenDialog");
  pages.PageRoute$ = dart.generic(T => {
    class PageRoute extends routes.ModalRoute$(T) {
      get fullscreenDialog() {
        return this[fullscreenDialog$];
      }
      set fullscreenDialog(value) {
        super.fullscreenDialog = value;
      }
      get opaque() {
        return true;
      }
      get barrierDismissible() {
        return false;
      }
      canTransitionTo(nextRoute) {
        if (nextRoute == null) dart.nullFailed(L32, 35, 49, "nextRoute");
        return pages.PageRoute.is(nextRoute);
      }
      canTransitionFrom(previousRoute) {
        if (previousRoute == null) dart.nullFailed(L32, 38, 51, "previousRoute");
        return pages.PageRoute.is(previousRoute);
      }
    }
    (PageRoute.new = function(opts) {
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      if (fullscreenDialog == null) dart.nullFailed(L32, 15, 10, "fullscreenDialog");
      this[fullscreenDialog$] = fullscreenDialog;
      PageRoute.__proto__.new.call(this, {settings: settings});
      ;
    }).prototype = PageRoute.prototype;
    dart.addTypeTests(PageRoute);
    PageRoute.prototype[_is_PageRoute_default] = true;
    dart.addTypeCaches(PageRoute);
    dart.setGetterSignature(PageRoute, () => ({
      __proto__: dart.getGetters(PageRoute.__proto__),
      opaque: core.bool,
      barrierDismissible: core.bool
    }));
    dart.setLibraryUri(PageRoute, L33);
    dart.setFieldSignature(PageRoute, () => ({
      __proto__: dart.getFields(PageRoute.__proto__),
      fullscreenDialog: dart.finalFieldType(core.bool)
    }));
    return PageRoute;
  });
  pages.PageRoute = pages.PageRoute$();
  dart.addTypeTests(pages.PageRoute, _is_PageRoute_default);
  var C258;
  var C259;
  const _is_PageRouteBuilder_default = Symbol('_is_PageRouteBuilder_default');
  var pageBuilder$ = dart.privateName(pages, "PageRouteBuilder.pageBuilder");
  var transitionsBuilder$ = dart.privateName(pages, "PageRouteBuilder.transitionsBuilder");
  var transitionDuration$ = dart.privateName(pages, "PageRouteBuilder.transitionDuration");
  var reverseTransitionDuration$ = dart.privateName(pages, "PageRouteBuilder.reverseTransitionDuration");
  var opaque$ = dart.privateName(pages, "PageRouteBuilder.opaque");
  var barrierDismissible$ = dart.privateName(pages, "PageRouteBuilder.barrierDismissible");
  var barrierColor$ = dart.privateName(pages, "PageRouteBuilder.barrierColor");
  var barrierLabel$ = dart.privateName(pages, "PageRouteBuilder.barrierLabel");
  var maintainState$ = dart.privateName(pages, "PageRouteBuilder.maintainState");
  pages.PageRouteBuilder$ = dart.generic(T => {
    class PageRouteBuilder extends pages.PageRoute$(T) {
      get pageBuilder() {
        return this[pageBuilder$];
      }
      set pageBuilder(value) {
        super.pageBuilder = value;
      }
      get transitionsBuilder() {
        return this[transitionsBuilder$];
      }
      set transitionsBuilder(value) {
        super.transitionsBuilder = value;
      }
      get transitionDuration() {
        return this[transitionDuration$];
      }
      set transitionDuration(value) {
        super.transitionDuration = value;
      }
      get reverseTransitionDuration() {
        return this[reverseTransitionDuration$];
      }
      set reverseTransitionDuration(value) {
        super.reverseTransitionDuration = value;
      }
      get opaque() {
        return this[opaque$];
      }
      set opaque(value) {
        super.opaque = value;
      }
      get barrierDismissible() {
        return this[barrierDismissible$];
      }
      set barrierDismissible(value) {
        super.barrierDismissible = value;
      }
      get barrierColor() {
        return this[barrierColor$];
      }
      set barrierColor(value) {
        super.barrierColor = value;
      }
      get barrierLabel() {
        return this[barrierLabel$];
      }
      set barrierLabel(value) {
        super.barrierLabel = value;
      }
      get maintainState() {
        return this[maintainState$];
      }
      set maintainState(value) {
        super.maintainState = value;
      }
      buildPage(context, animation, secondaryAnimation) {
        let t21, t20, t19;
        if (context == null) dart.nullFailed(L32, 110, 33, "context");
        if (animation == null) dart.nullFailed(L32, 110, 60, "animation");
        if (secondaryAnimation == null) dart.nullFailed(L32, 110, 89, "secondaryAnimation");
        t19 = context;
        t20 = animation;
        t21 = secondaryAnimation;
        return this.pageBuilder(t19, t20, t21);
      }
      buildTransitions(context, animation, secondaryAnimation, child) {
        let t22, t21, t20, t19;
        if (context == null) dart.nullFailed(L32, 115, 40, "context");
        if (animation == null) dart.nullFailed(L32, 115, 67, "animation");
        if (secondaryAnimation == null) dart.nullFailed(L32, 115, 96, "secondaryAnimation");
        if (child == null) dart.nullFailed(L32, 115, 123, "child");
        t19 = context;
        t20 = animation;
        t21 = secondaryAnimation;
        t22 = child;
        return this.transitionsBuilder(t19, t20, t21, t22);
      }
    }
    (PageRouteBuilder.new = function(opts) {
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let pageBuilder = opts && 'pageBuilder' in opts ? opts.pageBuilder : null;
      if (pageBuilder == null) dart.nullFailed(L32, 56, 19, "pageBuilder");
      let transitionsBuilder = opts && 'transitionsBuilder' in opts ? opts.transitionsBuilder : C258 || CT.C258;
      if (transitionsBuilder == null) dart.nullFailed(L32, 57, 10, "transitionsBuilder");
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : C259 || CT.C259;
      if (transitionDuration == null) dart.nullFailed(L32, 58, 10, "transitionDuration");
      let reverseTransitionDuration = opts && 'reverseTransitionDuration' in opts ? opts.reverseTransitionDuration : C259 || CT.C259;
      if (reverseTransitionDuration == null) dart.nullFailed(L32, 59, 10, "reverseTransitionDuration");
      let opaque = opts && 'opaque' in opts ? opts.opaque : true;
      if (opaque == null) dart.nullFailed(L32, 60, 10, "opaque");
      let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : false;
      if (barrierDismissible == null) dart.nullFailed(L32, 61, 10, "barrierDismissible");
      let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
      let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
      if (maintainState == null) dart.nullFailed(L32, 64, 10, "maintainState");
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      if (fullscreenDialog == null) dart.nullFailed(L32, 65, 10, "fullscreenDialog");
      this[pageBuilder$] = pageBuilder;
      this[transitionsBuilder$] = transitionsBuilder;
      this[transitionDuration$] = transitionDuration;
      this[reverseTransitionDuration$] = reverseTransitionDuration;
      this[opaque$] = opaque;
      this[barrierDismissible$] = barrierDismissible;
      this[barrierColor$] = barrierColor;
      this[barrierLabel$] = barrierLabel;
      this[maintainState$] = maintainState;
      if (!(pageBuilder != null)) dart.assertFailed(null, L32, 66, 15, "pageBuilder != null");
      if (!(transitionsBuilder != null)) dart.assertFailed(null, L32, 67, 15, "transitionsBuilder != null");
      if (!(opaque != null)) dart.assertFailed(null, L32, 68, 15, "opaque != null");
      if (!(barrierDismissible != null)) dart.assertFailed(null, L32, 69, 15, "barrierDismissible != null");
      if (!(maintainState != null)) dart.assertFailed(null, L32, 70, 15, "maintainState != null");
      if (!(fullscreenDialog != null)) dart.assertFailed(null, L32, 71, 15, "fullscreenDialog != null");
      PageRouteBuilder.__proto__.new.call(this, {settings: settings, fullscreenDialog: fullscreenDialog});
      ;
    }).prototype = PageRouteBuilder.prototype;
    dart.addTypeTests(PageRouteBuilder);
    PageRouteBuilder.prototype[_is_PageRouteBuilder_default] = true;
    dart.addTypeCaches(PageRouteBuilder);
    dart.setMethodSignature(PageRouteBuilder, () => ({
      __proto__: dart.getMethods(PageRouteBuilder.__proto__),
      buildPage: dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double)])
    }));
    dart.setLibraryUri(PageRouteBuilder, L33);
    dart.setFieldSignature(PageRouteBuilder, () => ({
      __proto__: dart.getFields(PageRouteBuilder.__proto__),
      pageBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double)])),
      transitionsBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double), framework.Widget])),
      transitionDuration: dart.finalFieldType(core.Duration),
      reverseTransitionDuration: dart.finalFieldType(core.Duration),
      opaque: dart.finalFieldType(core.bool),
      barrierDismissible: dart.finalFieldType(core.bool),
      barrierColor: dart.finalFieldType(dart.nullable(ui.Color)),
      barrierLabel: dart.finalFieldType(dart.nullable(core.String)),
      maintainState: dart.finalFieldType(core.bool)
    }));
    return PageRouteBuilder;
  });
  pages.PageRouteBuilder = pages.PageRouteBuilder$();
  dart.addTypeTests(pages.PageRouteBuilder, _is_PageRouteBuilder_default);
  pages._defaultTransitionsBuilder = function _defaultTransitionsBuilder(context, animation, secondaryAnimation, child) {
    if (context == null) dart.nullFailed(L32, 41, 48, "context");
    if (animation == null) dart.nullFailed(L32, 41, 75, "animation");
    if (secondaryAnimation == null) dart.nullFailed(L32, 41, 104, "secondaryAnimation");
    if (child == null) dart.nullFailed(L32, 41, 131, "child");
    return child;
  };
  var _name$3 = dart.privateName(heroes, "_name");
  var C260;
  var C261;
  var C262;
  heroes.HeroFlightDirection = class HeroFlightDirection extends core.Object {
    toString() {
      return this[_name$3];
    }
  };
  (heroes.HeroFlightDirection.new = function(index, _name) {
    if (index == null) dart.nullFailed(L34, 56, 6, "index");
    if (_name == null) dart.nullFailed(L34, 56, 6, "_name");
    this.index = index;
    this[_name$3] = _name;
    ;
  }).prototype = heroes.HeroFlightDirection.prototype;
  dart.addTypeTests(heroes.HeroFlightDirection);
  dart.addTypeCaches(heroes.HeroFlightDirection);
  dart.setLibraryUri(heroes.HeroFlightDirection, L35);
  dart.setFieldSignature(heroes.HeroFlightDirection, () => ({
    __proto__: dart.getFields(heroes.HeroFlightDirection.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$3]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(heroes.HeroFlightDirection, ['toString']);
  heroes.HeroFlightDirection.push = C260 || CT.C260;
  heroes.HeroFlightDirection.pop = C261 || CT.C261;
  heroes.HeroFlightDirection.values = C262 || CT.C262;
  var tag$ = dart.privateName(heroes, "Hero.tag");
  var createRectTween$ = dart.privateName(heroes, "Hero.createRectTween");
  var child$6 = dart.privateName(heroes, "Hero.child");
  var flightShuttleBuilder$ = dart.privateName(heroes, "Hero.flightShuttleBuilder");
  var placeholderBuilder$ = dart.privateName(heroes, "Hero.placeholderBuilder");
  var transitionOnUserGestures$ = dart.privateName(heroes, "Hero.transitionOnUserGestures");
  heroes.Hero = class Hero extends framework.StatefulWidget {
    get tag() {
      return this[tag$];
    }
    set tag(value) {
      super.tag = value;
    }
    get createRectTween() {
      return this[createRectTween$];
    }
    set createRectTween(value) {
      super.createRectTween = value;
    }
    get child() {
      return this[child$6];
    }
    set child(value) {
      super.child = value;
    }
    get flightShuttleBuilder() {
      return this[flightShuttleBuilder$];
    }
    set flightShuttleBuilder(value) {
      super.flightShuttleBuilder = value;
    }
    get placeholderBuilder() {
      return this[placeholderBuilder$];
    }
    set placeholderBuilder(value) {
      super.placeholderBuilder = value;
    }
    get transitionOnUserGestures() {
      return this[transitionOnUserGestures$];
    }
    set transitionOnUserGestures(value) {
      super.transitionOnUserGestures = value;
    }
    static _allHeroesFor(context, isUserGestureTransition, navigator) {
      if (context == null) dart.nullFailed(L34, 254, 18, "context");
      if (isUserGestureTransition == null) dart.nullFailed(L34, 255, 10, "isUserGestureTransition");
      if (navigator == null) dart.nullFailed(L34, 256, 20, "navigator");
      if (!(context != null)) dart.assertFailed(null, L34, 258, 12, "context != null");
      if (!(isUserGestureTransition != null)) dart.assertFailed(null, L34, 259, 12, "isUserGestureTransition != null");
      if (!(navigator != null)) dart.assertFailed(null, L34, 260, 12, "navigator != null");
      let result = new (LinkedMapOfObject$_HeroState()).new();
      function inviteHero(hero, tag) {
        if (hero == null) dart.nullFailed(L34, 263, 37, "hero");
        if (tag == null) dart.nullFailed(L34, 263, 50, "tag");
        if (!dart.test(dart.fn(() => {
          if (dart.test(result[$containsKey](tag))) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("There are multiple heroes that share the same tag within a subtree."), new assertions.ErrorDescription.new("Within each subtree for which heroes are to be animated (i.e. a PageRoute subtree), " + "each Hero must have a unique non-null tag.\n" + "In this case, multiple heroes had the following tag: " + dart.str(tag) + "\n"), new (DiagnosticsPropertyOfStatefulElement()).new("Here is the subtree for one of the offending heroes", hero, {linePrefix: "# ", style: diagnostics$.DiagnosticsTreeStyle.dense})])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L34, 264, 14, "() {\r\n        if (result.containsKey(tag)) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('There are multiple heroes that share the same tag within a subtree.'),\r\n            ErrorDescription(\r\n              'Within each subtree for which heroes are to be animated (i.e. a PageRoute subtree), '\r\n              'each Hero must have a unique non-null tag.\\n'\r\n              'In this case, multiple heroes had the following tag: $tag\\n'\r\n            ),\r\n            DiagnosticsProperty<StatefulElement>('Here is the subtree for one of the offending heroes', hero, linePrefix: '# ', style: DiagnosticsTreeStyle.dense),\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
        let heroWidget = heroes.Hero.as(hero.widget);
        let heroState = heroes._HeroState.as(hero.state);
        if (!dart.test(isUserGestureTransition) || dart.test(heroWidget.transitionOnUserGestures)) {
          result[$_set](tag, heroState);
        } else {
          heroState.ensurePlaceholderIsHidden();
        }
      }
      dart.fn(inviteHero, StatefulElementAndObjectTovoid());
      function visitor(element) {
        if (element == null) dart.nullFailed(L34, 289, 26, "element");
        let widget = element.widget;
        if (heroes.Hero.is(widget)) {
          let hero = framework.StatefulElement.as(element);
          let tag = widget.tag;
          if (!(tag != null)) dart.assertFailed(null, L34, 294, 16, "tag != null");
          if (dart.equals(navigator$.Navigator.of(hero), navigator)) {
            inviteHero(hero, tag);
          } else {
            let heroRoute = routes.ModalRoute.of(ObjectN(), hero);
            if (heroRoute != null && pages.PageRoute.is(heroRoute) && dart.test(heroRoute.isCurrent)) {
              inviteHero(hero, tag);
            }
          }
        } else if (heroes.HeroMode.is(widget) && !dart.test(widget.enabled)) {
          return;
        }
        element.visitChildren(visitor);
      }
      dart.fn(visitor, ElementTovoid());
      context.visitChildElements(visitor);
      return result;
    }
    createState() {
      return new heroes._HeroState.new();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L34, 322, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfObject()).new("tag", this.tag));
    }
  };
  (heroes.Hero.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let tag = opts && 'tag' in opts ? opts.tag : null;
    if (tag == null) dart.nullFailed(L34, 159, 19, "tag");
    let createRectTween = opts && 'createRectTween' in opts ? opts.createRectTween : null;
    let flightShuttleBuilder = opts && 'flightShuttleBuilder' in opts ? opts.flightShuttleBuilder : null;
    let placeholderBuilder = opts && 'placeholderBuilder' in opts ? opts.placeholderBuilder : null;
    let transitionOnUserGestures = opts && 'transitionOnUserGestures' in opts ? opts.transitionOnUserGestures : false;
    if (transitionOnUserGestures == null) dart.nullFailed(L34, 163, 10, "transitionOnUserGestures");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L34, 164, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[tag$] = tag;
    this[createRectTween$] = createRectTween;
    this[flightShuttleBuilder$] = flightShuttleBuilder;
    this[placeholderBuilder$] = placeholderBuilder;
    this[transitionOnUserGestures$] = transitionOnUserGestures;
    this[child$6] = child;
    if (!(tag != null)) dart.assertFailed(null, L34, 165, 15, "tag != null");
    if (!(transitionOnUserGestures != null)) dart.assertFailed(null, L34, 166, 15, "transitionOnUserGestures != null");
    if (!(child != null)) dart.assertFailed(null, L34, 167, 15, "child != null");
    heroes.Hero.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = heroes.Hero.prototype;
  dart.addTypeTests(heroes.Hero);
  dart.addTypeCaches(heroes.Hero);
  dart.setMethodSignature(heroes.Hero, () => ({
    __proto__: dart.getMethods(heroes.Hero.__proto__),
    createState: dart.fnType(heroes._HeroState, [])
  }));
  dart.setLibraryUri(heroes.Hero, L35);
  dart.setFieldSignature(heroes.Hero, () => ({
    __proto__: dart.getFields(heroes.Hero.__proto__),
    tag: dart.finalFieldType(core.Object),
    createRectTween: dart.finalFieldType(dart.nullable(dart.fnType(tween.Tween$(dart.nullable(ui.Rect)), [dart.nullable(ui.Rect), dart.nullable(ui.Rect)]))),
    child: dart.finalFieldType(framework.Widget),
    flightShuttleBuilder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), heroes.HeroFlightDirection, framework.BuildContext, framework.BuildContext]))),
    placeholderBuilder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, ui.Size, framework.Widget]))),
    transitionOnUserGestures: dart.finalFieldType(core.bool)
  }));
  var _key = dart.privateName(heroes, "_key");
  var _placeholderSize = dart.privateName(heroes, "_placeholderSize");
  var _shouldIncludeChild = dart.privateName(heroes, "_shouldIncludeChild");
  var C265;
  var C266;
  var C264;
  var C263;
  var C269;
  var C270;
  var C268;
  var C267;
  var C273;
  var C274;
  var C272;
  var C271;
  var C277;
  var C278;
  var C276;
  var C275;
  var C281;
  var C282;
  var C283;
  var C280;
  var C279;
  heroes._HeroState = class _HeroState extends framework.State$(heroes.Hero) {
    startFlight(opts) {
      let shouldIncludedChildInPlaceholder = opts && 'shouldIncludedChildInPlaceholder' in opts ? opts.shouldIncludedChildInPlaceholder : false;
      if (shouldIncludedChildInPlaceholder == null) dart.nullFailed(L34, 347, 27, "shouldIncludedChildInPlaceholder");
      this[_shouldIncludeChild] = shouldIncludedChildInPlaceholder;
      if (!dart.test(this.mounted)) dart.assertFailed(null, L34, 349, 12, "mounted");
      let box = box$.RenderBox.as(dart.nullCheck(this.context.findRenderObject()));
      if (!(box !== null && dart.test(box.hasSize))) dart.assertFailed(null, L34, 351, 12, "box != null && box.hasSize");
      this.setState(dart.fn(() => {
        this[_placeholderSize] = box.size;
      }, VoidTovoid()));
    }
    ensurePlaceholderIsHidden() {
      if (dart.test(this.mounted)) {
        this.setState(dart.fn(() => {
          this[_placeholderSize] = null;
        }, VoidTovoid()));
      }
    }
    endFlight(opts) {
      let keepPlaceholder = opts && 'keepPlaceholder' in opts ? opts.keepPlaceholder : false;
      if (keepPlaceholder == null) dart.nullFailed(L34, 368, 25, "keepPlaceholder");
      if (!dart.test(keepPlaceholder)) {
        this.ensurePlaceholderIsHidden();
      }
    }
    build(context) {
      let t19, t19$;
      if (context == null) dart.nullFailed(L34, 375, 29, "context");
      if (!(context.findAncestorWidgetOfExactType(heroes.Hero) == null)) dart.assertFailed("A Hero widget cannot be the descendant of another Hero widget.", L34, 377, 7, "context.findAncestorWidgetOfExactType<Hero>() == null");
      let showPlaceholder = this[_placeholderSize] != null;
      if (showPlaceholder && this.widget.placeholderBuilder != null) {
        return dart.nullCheck(this.widget.placeholderBuilder)(context, dart.nullCheck(this[_placeholderSize]), this.widget.child);
      }
      if (showPlaceholder && !dart.test(this[_shouldIncludeChild])) {
        return new basic.SizedBox.new({width: dart.nullCheck(this[_placeholderSize]).width, height: dart.nullCheck(this[_placeholderSize]).height, $creationLocationd_0dea112b090073317d4: C263 || CT.C263});
      }
      return new basic.SizedBox.new({width: (t19 = this[_placeholderSize], t19 == null ? null : t19.width), height: (t19$ = this[_placeholderSize], t19$ == null ? null : t19$.height), child: new basic.Offstage.new({offstage: showPlaceholder, child: new ticker_provider.TickerMode.new({enabled: !showPlaceholder, child: new basic.KeyedSubtree.new({key: this[_key], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C267 || CT.C267}), $creationLocationd_0dea112b090073317d4: C271 || CT.C271}), $creationLocationd_0dea112b090073317d4: C275 || CT.C275}), $creationLocationd_0dea112b090073317d4: C279 || CT.C279});
    }
  };
  (heroes._HeroState.new = function() {
    this[_key] = GlobalKeyOfStateOfStatefulWidget().new();
    this[_placeholderSize] = null;
    this[_shouldIncludeChild] = true;
    heroes._HeroState.__proto__.new.call(this);
    ;
  }).prototype = heroes._HeroState.prototype;
  dart.addTypeTests(heroes._HeroState);
  dart.addTypeCaches(heroes._HeroState);
  dart.setMethodSignature(heroes._HeroState, () => ({
    __proto__: dart.getMethods(heroes._HeroState.__proto__),
    startFlight: dart.fnType(dart.void, [], {shouldIncludedChildInPlaceholder: core.bool}, {}),
    ensurePlaceholderIsHidden: dart.fnType(dart.void, []),
    endFlight: dart.fnType(dart.void, [], {keepPlaceholder: core.bool}, {}),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(heroes._HeroState, L35);
  dart.setFieldSignature(heroes._HeroState, () => ({
    __proto__: dart.getFields(heroes._HeroState.__proto__),
    [_key]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_placeholderSize]: dart.fieldType(dart.nullable(ui.Size)),
    [_shouldIncludeChild]: dart.fieldType(core.bool)
  }));
  heroes._HeroFlightManifest = class _HeroFlightManifest extends core.Object {
    get tag() {
      return this.fromHero.widget.tag;
    }
    get animation() {
      return new animations.CurvedAnimation.new({parent: dart.equals(this.type, heroes.HeroFlightDirection.push) ? dart.nullCheck(this.toRoute.animation) : dart.nullCheck(this.fromRoute.animation), curve: curves.Curves.fastOutSlowIn, reverseCurve: dart.test(this.isDiverted) ? null : curves.Curves.fastOutSlowIn.flipped});
    }
    toString() {
      return "_HeroFlightManifest(" + dart.str(this.type) + " tag: " + dart.str(this.tag) + " from route: " + dart.str(this.fromRoute.settings) + " " + "to route: " + dart.str(this.toRoute.settings) + " with hero: " + dart.str(this.fromHero) + " to " + dart.str(this.toHero) + ")";
    }
  };
  (heroes._HeroFlightManifest.new = function(opts) {
    let type = opts && 'type' in opts ? opts.type : null;
    if (type == null) dart.nullFailed(L34, 411, 19, "type");
    let overlay = opts && 'overlay' in opts ? opts.overlay : null;
    let navigatorRect = opts && 'navigatorRect' in opts ? opts.navigatorRect : null;
    if (navigatorRect == null) dart.nullFailed(L34, 413, 19, "navigatorRect");
    let fromRoute = opts && 'fromRoute' in opts ? opts.fromRoute : null;
    if (fromRoute == null) dart.nullFailed(L34, 414, 19, "fromRoute");
    let toRoute = opts && 'toRoute' in opts ? opts.toRoute : null;
    if (toRoute == null) dart.nullFailed(L34, 415, 19, "toRoute");
    let fromHero = opts && 'fromHero' in opts ? opts.fromHero : null;
    if (fromHero == null) dart.nullFailed(L34, 416, 19, "fromHero");
    let toHero = opts && 'toHero' in opts ? opts.toHero : null;
    if (toHero == null) dart.nullFailed(L34, 417, 19, "toHero");
    let createRectTween = opts && 'createRectTween' in opts ? opts.createRectTween : null;
    let shuttleBuilder = opts && 'shuttleBuilder' in opts ? opts.shuttleBuilder : null;
    if (shuttleBuilder == null) dart.nullFailed(L34, 419, 19, "shuttleBuilder");
    let isUserGestureTransition = opts && 'isUserGestureTransition' in opts ? opts.isUserGestureTransition : null;
    if (isUserGestureTransition == null) dart.nullFailed(L34, 420, 19, "isUserGestureTransition");
    let isDiverted = opts && 'isDiverted' in opts ? opts.isDiverted : null;
    if (isDiverted == null) dart.nullFailed(L34, 421, 19, "isDiverted");
    this.type = type;
    this.overlay = overlay;
    this.navigatorRect = navigatorRect;
    this.fromRoute = fromRoute;
    this.toRoute = toRoute;
    this.fromHero = fromHero;
    this.toHero = toHero;
    this.createRectTween = createRectTween;
    this.shuttleBuilder = shuttleBuilder;
    this.isUserGestureTransition = isUserGestureTransition;
    this.isDiverted = isDiverted;
    if (!dart.equals(fromHero.widget.tag, toHero.widget.tag)) dart.assertFailed(null, L34, 422, 15, "fromHero.widget.tag == toHero.widget.tag");
    ;
  }).prototype = heroes._HeroFlightManifest.prototype;
  dart.addTypeTests(heroes._HeroFlightManifest);
  dart.addTypeCaches(heroes._HeroFlightManifest);
  dart.setGetterSignature(heroes._HeroFlightManifest, () => ({
    __proto__: dart.getGetters(heroes._HeroFlightManifest.__proto__),
    tag: core.Object,
    animation: animation.Animation$(core.double)
  }));
  dart.setLibraryUri(heroes._HeroFlightManifest, L35);
  dart.setFieldSignature(heroes._HeroFlightManifest, () => ({
    __proto__: dart.getFields(heroes._HeroFlightManifest.__proto__),
    type: dart.finalFieldType(heroes.HeroFlightDirection),
    overlay: dart.finalFieldType(dart.nullable(overlay$.OverlayState)),
    navigatorRect: dart.finalFieldType(ui.Rect),
    fromRoute: dart.finalFieldType(pages.PageRoute),
    toRoute: dart.finalFieldType(pages.PageRoute),
    fromHero: dart.finalFieldType(heroes._HeroState),
    toHero: dart.finalFieldType(heroes._HeroState),
    createRectTween: dart.finalFieldType(dart.nullable(dart.fnType(tween.Tween$(dart.nullable(ui.Rect)), [dart.nullable(ui.Rect), dart.nullable(ui.Rect)]))),
    shuttleBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), heroes.HeroFlightDirection, framework.BuildContext, framework.BuildContext])),
    isUserGestureTransition: dart.finalFieldType(core.bool),
    isDiverted: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(heroes._HeroFlightManifest, ['toString']);
  var ___HeroFlight_heroRectTween = dart.privateName(heroes, "_#_HeroFlight#heroRectTween");
  var ___HeroFlight_heroRectTween_isSet = dart.privateName(heroes, "_#_HeroFlight#heroRectTween#isSet");
  var _heroOpacity = dart.privateName(heroes, "_heroOpacity");
  var ___HeroFlight__proxyAnimation = dart.privateName(heroes, "_#_HeroFlight#_proxyAnimation");
  var ___HeroFlight__proxyAnimation_isSet = dart.privateName(heroes, "_#_HeroFlight#_proxyAnimation#isSet");
  var _aborted = dart.privateName(heroes, "_aborted");
  var _scheduledPerformAnimtationUpdate = dart.privateName(heroes, "_scheduledPerformAnimtationUpdate");
  var _proxyAnimation = dart.privateName(heroes, "_proxyAnimation");
  var _handleAnimationUpdate = dart.privateName(heroes, "_handleAnimationUpdate");
  var _doCreateRectTween = dart.privateName(heroes, "_doCreateRectTween");
  var C286;
  var C287;
  var C285;
  var C284;
  var C290;
  var C289;
  var C288;
  var C293;
  var C292;
  var C291;
  var C296;
  var C297;
  var C298;
  var C299;
  var C300;
  var C295;
  var C294;
  var C303;
  var C304;
  var C305;
  var C302;
  var C301;
  var _buildOverlay = dart.privateName(heroes, "_buildOverlay");
  var _performAnimationUpdate = dart.privateName(heroes, "_performAnimationUpdate");
  heroes._HeroFlight = class _HeroFlight extends core.Object {
    get heroRectTween() {
      let t19;
      return dart.test(this[___HeroFlight_heroRectTween_isSet]) ? (t19 = this[___HeroFlight_heroRectTween], t19) : dart.throw(new _internal.LateError.fieldNI("heroRectTween"));
    }
    set heroRectTween(t19) {
      if (t19 == null) dart.nullFailed(L34, 461, 21, "null");
      this[___HeroFlight_heroRectTween_isSet] = true;
      this[___HeroFlight_heroRectTween] = t19;
    }
    get [_proxyAnimation]() {
      let t20;
      return dart.test(this[___HeroFlight__proxyAnimation_isSet]) ? (t20 = this[___HeroFlight__proxyAnimation], t20) : dart.throw(new _internal.LateError.fieldNI("_proxyAnimation"));
    }
    set [_proxyAnimation](t20) {
      if (t20 == null) dart.nullFailed(L34, 465, 23, "null");
      this[___HeroFlight__proxyAnimation_isSet] = true;
      this[___HeroFlight__proxyAnimation] = t20;
    }
    [_doCreateRectTween](begin, end) {
      let t21;
      let createRectTween = (t21 = dart.nullCheck(this.manifest).toHero.widget.createRectTween, t21 == null ? dart.nullCheck(this.manifest).createRectTween : t21);
      if (createRectTween != null) return createRectTween(begin, end);
      return new tween.RectTween.new({begin: begin, end: end});
    }
    [_buildOverlay](context) {
      let t26, t25, t24, t23, t22, t21;
      if (context == null) dart.nullFailed(L34, 480, 37, "context");
      if (!(this.manifest != null)) dart.assertFailed(null, L34, 481, 12, "manifest != null");
      this.shuttle == null ? this.shuttle = (t21 = dart.nullCheck(this.manifest), t22 = context, t23 = dart.nullCheck(this.manifest).animation, t24 = dart.nullCheck(this.manifest).type, t25 = dart.nullCheck(this.manifest).fromHero.context, t26 = dart.nullCheck(this.manifest).toHero.context, t21.shuttleBuilder(t22, t23, t24, t25, t26)) : null;
      if (!(this.shuttle != null)) dart.assertFailed(null, L34, 489, 12, "shuttle != null");
      return new transitions.AnimatedBuilder.new({animation: this[_proxyAnimation], child: this.shuttle, builder: dart.fn((context, child) => {
          let t21;
          if (context == null) dart.nullFailed(L34, 494, 30, "context");
          let toHeroBox = dart.test(dart.nullCheck(this.manifest).toHero.mounted) ? RenderBoxN().as(dart.nullCheck(this.manifest).toHero.context.findRenderObject()) : null;
          if (dart.test(this[_aborted]) || toHeroBox == null || !dart.test(toHeroBox.attached)) {
            if (dart.test(this[_heroOpacity].isCompleted)) {
              this[_heroOpacity] = this[_proxyAnimation].drive(core.double, heroes._HeroFlight._reverseTween.chain(new tween.CurveTween.new({curve: new curves.Interval.new(this[_proxyAnimation].value, 1.0)})));
            }
          } else if (dart.test(toHeroBox.hasSize)) {
            let finalRouteBox = RenderBoxN().as((t21 = dart.nullCheck(this.manifest).toRoute.subtreeContext, t21 == null ? null : t21.findRenderObject()));
            let toHeroOrigin = toHeroBox.localToGlobal(ui.Offset.zero, {ancestor: finalRouteBox});
            if (!dart.equals(toHeroOrigin, dart.nullCheck(this.heroRectTween.end).topLeft)) {
              let heroRectEnd = toHeroOrigin['&'](dart.nullCheck(this.heroRectTween.end).size);
              this.heroRectTween = this[_doCreateRectTween](this.heroRectTween.begin, heroRectEnd);
            }
          }
          let rect = dart.nullCheck(this.heroRectTween.evaluate(this[_proxyAnimation]));
          let size = dart.nullCheck(this.manifest).navigatorRect.size;
          let offsets = stack.RelativeRect.fromSize(rect, size);
          return new basic.Positioned.new({top: offsets.top, right: offsets.right, bottom: offsets.bottom, left: offsets.left, child: new basic.IgnorePointer.new({child: new basic.RepaintBoundary.new({child: new basic.Opacity.new({opacity: this[_heroOpacity].value, child: child, $creationLocationd_0dea112b090073317d4: C284 || CT.C284}), $creationLocationd_0dea112b090073317d4: C288 || CT.C288}), $creationLocationd_0dea112b090073317d4: C291 || CT.C291}), $creationLocationd_0dea112b090073317d4: C294 || CT.C294});
        }, BuildContextAndWidgetNToPositioned()), $creationLocationd_0dea112b090073317d4: C301 || CT.C301});
    }
    [_performAnimationUpdate](status) {
      if (status == null) dart.nullFailed(L34, 539, 48, "status");
      if (dart.equals(status, animation.AnimationStatus.completed) || dart.equals(status, animation.AnimationStatus.dismissed)) {
        this[_proxyAnimation].parent = null;
        if (!(this.overlayEntry != null)) dart.assertFailed(null, L34, 543, 14, "overlayEntry != null");
        dart.nullCheck(this.overlayEntry).remove();
        this.overlayEntry = null;
        dart.nullCheck(this.manifest).fromHero.endFlight({keepPlaceholder: dart.equals(status, animation.AnimationStatus.completed)});
        dart.nullCheck(this.manifest).toHero.endFlight({keepPlaceholder: dart.equals(status, animation.AnimationStatus.dismissed)});
        this.onFlightEnded(this);
      }
    }
    [_handleAnimationUpdate](status) {
      let t21;
      if (status == null) dart.nullFailed(L34, 558, 47, "status");
      if (!dart.equals((t21 = dart.nullCheck(this.manifest).fromRoute.navigator, t21 == null ? null : t21.userGestureInProgress), true)) {
        this[_performAnimationUpdate](status);
        return;
      }
      if (dart.test(this[_scheduledPerformAnimtationUpdate])) return;
      let navigator = dart.nullCheck(dart.nullCheck(this.manifest).fromRoute.navigator);
      const delayedPerformAnimtationUpdate = () => {
        if (!!dart.test(navigator.userGestureInProgress)) dart.assertFailed(null, L34, 575, 14, "!navigator.userGestureInProgress");
        if (!dart.test(this[_scheduledPerformAnimtationUpdate])) dart.assertFailed(null, L34, 576, 14, "_scheduledPerformAnimtationUpdate");
        this[_scheduledPerformAnimtationUpdate] = false;
        navigator.userGestureInProgressNotifier.removeListener(delayedPerformAnimtationUpdate);
        this[_performAnimationUpdate](this[_proxyAnimation].status);
      };
      dart.fn(delayedPerformAnimtationUpdate, VoidTovoid());
      if (!dart.test(navigator.userGestureInProgress)) dart.assertFailed(null, L34, 581, 12, "navigator.userGestureInProgress");
      this[_scheduledPerformAnimtationUpdate] = true;
      navigator.userGestureInProgressNotifier.addListener(delayedPerformAnimtationUpdate);
    }
    start(initialManifest) {
      if (initialManifest == null) dart.nullFailed(L34, 587, 34, "initialManifest");
      if (!!dart.test(this[_aborted])) dart.assertFailed(null, L34, 588, 12, "!_aborted");
      if (!dart.test(dart.fn(() => {
        let initial = initialManifest.animation;
        if (!(initial != null)) dart.assertFailed(null, L34, 591, 14, "initial != null");
        let type = initialManifest.type;
        if (!(type != null)) dart.assertFailed(null, L34, 593, 14, "type != null");
        switch (type) {
          case C261 || CT.C261:
          {
            return initial.value === 1.0 && dart.test(initialManifest.isUserGestureTransition) ? dart.equals(initial.status, animation.AnimationStatus.completed) : dart.equals(initial.status, animation.AnimationStatus.reverse);
          }
          case C260 || CT.C260:
          {
            return initial.value === 0.0 && dart.equals(initial.status, animation.AnimationStatus.forward);
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }, VoidTobool())())) dart.assertFailed(null, L34, 589, 12, "() {\r\n      final Animation<double> initial = initialManifest.animation;\r\n      assert(initial != null);\r\n      final HeroFlightDirection type = initialManifest.type;\r\n      assert(type != null);\r\n      switch (type) {\r\n        case HeroFlightDirection.pop:\r\n          return initial.value == 1.0 && initialManifest.isUserGestureTransition\r\n              // During user gesture transitions, the animation controller isn't\r\n              // driving the reverse transition, but should still be in a previously\r\n              // completed stage with the initial value at 1.0.\r\n              ? initial.status == AnimationStatus.completed\r\n              : initial.status == AnimationStatus.reverse;\r\n        case HeroFlightDirection.push:\r\n          return initial.value == 0.0 && initial.status == AnimationStatus.forward;\r\n      }\r\n    }()");
      this.manifest = initialManifest;
      if (dart.equals(dart.nullCheck(this.manifest).type, heroes.HeroFlightDirection.pop))
        this[_proxyAnimation].parent = new animations.ReverseAnimation.new(dart.nullCheck(this.manifest).animation);
      else
        this[_proxyAnimation].parent = dart.nullCheck(this.manifest).animation;
      dart.nullCheck(this.manifest).fromHero.startFlight({shouldIncludedChildInPlaceholder: dart.equals(dart.nullCheck(this.manifest).type, heroes.HeroFlightDirection.push)});
      dart.nullCheck(this.manifest).toHero.startFlight();
      this.heroRectTween = this[_doCreateRectTween](heroes._boundingBoxFor(dart.nullCheck(this.manifest).fromHero.context, dart.nullCheck(this.manifest).fromRoute.subtreeContext), heroes._boundingBoxFor(dart.nullCheck(this.manifest).toHero.context, dart.nullCheck(this.manifest).toRoute.subtreeContext));
      this.overlayEntry = new overlay$.OverlayEntry.new({builder: dart.bind(this, _buildOverlay)});
      dart.nullCheck(dart.nullCheck(this.manifest).overlay).insert(dart.nullCheck(this.overlayEntry));
    }
    divert(newManifest) {
      if (newManifest == null) dart.nullFailed(L34, 628, 35, "newManifest");
      if (!dart.equals(dart.nullCheck(this.manifest).tag, newManifest.tag)) dart.assertFailed(null, L34, 629, 12, "manifest!.tag == newManifest.tag");
      if (dart.equals(dart.nullCheck(this.manifest).type, heroes.HeroFlightDirection.push) && dart.equals(newManifest.type, heroes.HeroFlightDirection.pop)) {
        if (!dart.equals(newManifest.animation.status, animation.AnimationStatus.reverse)) dart.assertFailed(null, L34, 632, 14, "newManifest.animation.status == AnimationStatus.reverse");
        if (!dart.equals(dart.nullCheck(this.manifest).fromHero, newManifest.toHero)) dart.assertFailed(null, L34, 633, 14, "manifest!.fromHero == newManifest.toHero");
        if (!dart.equals(dart.nullCheck(this.manifest).toHero, newManifest.fromHero)) dart.assertFailed(null, L34, 634, 14, "manifest!.toHero == newManifest.fromHero");
        if (!dart.equals(dart.nullCheck(this.manifest).fromRoute, newManifest.toRoute)) dart.assertFailed(null, L34, 635, 14, "manifest!.fromRoute == newManifest.toRoute");
        if (!dart.equals(dart.nullCheck(this.manifest).toRoute, newManifest.fromRoute)) dart.assertFailed(null, L34, 636, 14, "manifest!.toRoute == newManifest.fromRoute");
        this[_proxyAnimation].parent = new animations.ReverseAnimation.new(newManifest.animation);
        this.heroRectTween = new (ReverseTweenOfRectN()).new(this.heroRectTween);
      } else if (dart.equals(dart.nullCheck(this.manifest).type, heroes.HeroFlightDirection.pop) && dart.equals(newManifest.type, heroes.HeroFlightDirection.push)) {
        if (!dart.equals(newManifest.animation.status, animation.AnimationStatus.forward)) dart.assertFailed(null, L34, 647, 14, "newManifest.animation.status == AnimationStatus.forward");
        if (!dart.equals(dart.nullCheck(this.manifest).toHero, newManifest.fromHero)) dart.assertFailed(null, L34, 648, 14, "manifest!.toHero == newManifest.fromHero");
        if (!dart.equals(dart.nullCheck(this.manifest).toRoute, newManifest.fromRoute)) dart.assertFailed(null, L34, 649, 14, "manifest!.toRoute == newManifest.fromRoute");
        this[_proxyAnimation].parent = newManifest.animation.drive(core.double, new (TweenOfdouble()).new({begin: dart.nullCheck(this.manifest).animation.value, end: 1.0}));
        if (!dart.equals(dart.nullCheck(this.manifest).fromHero, newManifest.toHero)) {
          dart.nullCheck(this.manifest).fromHero.endFlight({keepPlaceholder: true});
          newManifest.toHero.startFlight();
          this.heroRectTween = this[_doCreateRectTween](this.heroRectTween.end, heroes._boundingBoxFor(newManifest.toHero.context, newManifest.toRoute.subtreeContext));
        } else {
          this.heroRectTween = this[_doCreateRectTween](this.heroRectTween.end, this.heroRectTween.begin);
        }
      } else {
        if (!!dart.equals(dart.nullCheck(this.manifest).fromHero, newManifest.fromHero)) dart.assertFailed(null, L34, 672, 14, "manifest!.fromHero != newManifest.fromHero");
        if (!!dart.equals(dart.nullCheck(this.manifest).toHero, newManifest.toHero)) dart.assertFailed(null, L34, 673, 14, "manifest!.toHero != newManifest.toHero");
        this.heroRectTween = this[_doCreateRectTween](this.heroRectTween.evaluate(this[_proxyAnimation]), heroes._boundingBoxFor(newManifest.toHero.context, newManifest.toRoute.subtreeContext));
        this.shuttle = null;
        if (dart.equals(newManifest.type, heroes.HeroFlightDirection.pop))
          this[_proxyAnimation].parent = new animations.ReverseAnimation.new(newManifest.animation);
        else
          this[_proxyAnimation].parent = newManifest.animation;
        dart.nullCheck(this.manifest).fromHero.endFlight({keepPlaceholder: true});
        dart.nullCheck(this.manifest).toHero.endFlight({keepPlaceholder: true});
        newManifest.fromHero.startFlight({shouldIncludedChildInPlaceholder: dart.equals(newManifest.type, heroes.HeroFlightDirection.push)});
        newManifest.toHero.startFlight();
        dart.nullCheck(this.overlayEntry).markNeedsBuild();
      }
      this[_aborted] = false;
      this.manifest = newManifest;
    }
    abort() {
      this[_aborted] = true;
    }
    toString() {
      let from = dart.nullCheck(this.manifest).fromRoute.settings;
      let to = dart.nullCheck(this.manifest).toRoute.settings;
      let tag = dart.nullCheck(this.manifest).tag;
      return "HeroFlight(for: " + dart.str(tag) + ", from: " + dart.str(from) + ", to: " + dart.str(to) + " " + dart.str(this[_proxyAnimation].parent) + ")";
    }
  };
  (heroes._HeroFlight.new = function(onFlightEnded) {
    let t19;
    if (onFlightEnded == null) dart.nullFailed(L34, 455, 20, "onFlightEnded");
    this[___HeroFlight_heroRectTween] = null;
    this[___HeroFlight_heroRectTween_isSet] = false;
    this.shuttle = null;
    this[_heroOpacity] = animations.kAlwaysCompleteAnimation;
    this[___HeroFlight__proxyAnimation] = null;
    this[___HeroFlight__proxyAnimation_isSet] = false;
    this.manifest = null;
    this.overlayEntry = null;
    this[_aborted] = false;
    this[_scheduledPerformAnimtationUpdate] = false;
    this.onFlightEnded = onFlightEnded;
    this[_proxyAnimation] = (t19 = new animations.ProxyAnimation.new(), (() => {
      t19.addStatusListener(dart.bind(this, _handleAnimationUpdate));
      return t19;
    })());
  }).prototype = heroes._HeroFlight.prototype;
  dart.addTypeTests(heroes._HeroFlight);
  dart.addTypeCaches(heroes._HeroFlight);
  dart.setMethodSignature(heroes._HeroFlight, () => ({
    __proto__: dart.getMethods(heroes._HeroFlight.__proto__),
    [_doCreateRectTween]: dart.fnType(tween.Tween$(dart.nullable(ui.Rect)), [dart.nullable(ui.Rect), dart.nullable(ui.Rect)]),
    [_buildOverlay]: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_performAnimationUpdate]: dart.fnType(dart.void, [animation.AnimationStatus]),
    [_handleAnimationUpdate]: dart.fnType(dart.void, [animation.AnimationStatus]),
    start: dart.fnType(dart.void, [heroes._HeroFlightManifest]),
    divert: dart.fnType(dart.void, [heroes._HeroFlightManifest]),
    abort: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(heroes._HeroFlight, () => ({
    __proto__: dart.getGetters(heroes._HeroFlight.__proto__),
    heroRectTween: tween.Tween$(dart.nullable(ui.Rect)),
    [_proxyAnimation]: animations.ProxyAnimation
  }));
  dart.setSetterSignature(heroes._HeroFlight, () => ({
    __proto__: dart.getSetters(heroes._HeroFlight.__proto__),
    heroRectTween: tween.Tween$(dart.nullable(ui.Rect)),
    [_proxyAnimation]: animations.ProxyAnimation
  }));
  dart.setLibraryUri(heroes._HeroFlight, L35);
  dart.setFieldSignature(heroes._HeroFlight, () => ({
    __proto__: dart.getFields(heroes._HeroFlight.__proto__),
    onFlightEnded: dart.finalFieldType(dart.fnType(dart.void, [heroes._HeroFlight])),
    [___HeroFlight_heroRectTween]: dart.fieldType(dart.nullable(tween.Tween$(dart.nullable(ui.Rect)))),
    [___HeroFlight_heroRectTween_isSet]: dart.fieldType(core.bool),
    shuttle: dart.fieldType(dart.nullable(framework.Widget)),
    [_heroOpacity]: dart.fieldType(animation.Animation$(core.double)),
    [___HeroFlight__proxyAnimation]: dart.fieldType(dart.nullable(animations.ProxyAnimation)),
    [___HeroFlight__proxyAnimation_isSet]: dart.fieldType(core.bool),
    manifest: dart.fieldType(dart.nullable(heroes._HeroFlightManifest)),
    overlayEntry: dart.fieldType(dart.nullable(overlay$.OverlayEntry)),
    [_aborted]: dart.fieldType(core.bool),
    [_scheduledPerformAnimtationUpdate]: dart.fieldType(core.bool)
  }));
  dart.defineExtensionMethods(heroes._HeroFlight, ['toString']);
  dart.defineLazy(heroes._HeroFlight, {
    /*heroes._HeroFlight._reverseTween*/get _reverseTween() {
      return new (TweenOfdouble()).new({begin: 1.0, end: 0.0});
    }
  }, false);
  var _flights = dart.privateName(heroes, "_flights");
  var _maybeStartHeroTransition = dart.privateName(heroes, "_maybeStartHeroTransition");
  var _startHeroTransition = dart.privateName(heroes, "_startHeroTransition");
  var _handleFlightEnded = dart.privateName(heroes, "_handleFlightEnded");
  var createRectTween$0 = dart.privateName(heroes, "HeroController.createRectTween");
  heroes.HeroController = class HeroController extends navigator$.NavigatorObserver {
    get createRectTween() {
      return this[createRectTween$0];
    }
    set createRectTween(value) {
      super.createRectTween = value;
    }
    didPush(route, previousRoute) {
      if (route == null) dart.nullFailed(L34, 736, 31, "route");
      if (!(this.navigator != null)) dart.assertFailed(null, L34, 737, 12, "navigator != null");
      if (!(route != null)) dart.assertFailed(null, L34, 738, 12, "route != null");
      this[_maybeStartHeroTransition](previousRoute, route, heroes.HeroFlightDirection.push, false);
    }
    didPop(route, previousRoute) {
      if (route == null) dart.nullFailed(L34, 743, 30, "route");
      if (!(this.navigator != null)) dart.assertFailed(null, L34, 744, 12, "navigator != null");
      if (!(route != null)) dart.assertFailed(null, L34, 745, 12, "route != null");
      if (!dart.test(dart.nullCheck(this.navigator).userGestureInProgress)) this[_maybeStartHeroTransition](route, previousRoute, heroes.HeroFlightDirection.pop, false);
    }
    didReplace(opts) {
      let t21;
      let newRoute = opts && 'newRoute' in opts ? opts.newRoute : null;
      let oldRoute = opts && 'oldRoute' in opts ? opts.oldRoute : null;
      if (!(this.navigator != null)) dart.assertFailed(null, L34, 754, 12, "navigator != null");
      if (dart.equals((t21 = newRoute, t21 == null ? null : t21.isCurrent), true)) {
        this[_maybeStartHeroTransition](oldRoute, newRoute, heroes.HeroFlightDirection.push, false);
      }
    }
    didStartUserGesture(route, previousRoute) {
      if (route == null) dart.nullFailed(L34, 762, 43, "route");
      if (!(this.navigator != null)) dart.assertFailed(null, L34, 763, 12, "navigator != null");
      if (!(route != null)) dart.assertFailed(null, L34, 764, 12, "route != null");
      this[_maybeStartHeroTransition](route, previousRoute, heroes.HeroFlightDirection.pop, true);
    }
    didStopUserGesture() {
      if (dart.test(dart.nullCheck(this.navigator).userGestureInProgress)) return;
      function isInvalidFlight(flight) {
        if (flight == null) dart.nullFailed(L34, 778, 38, "flight");
        return dart.test(dart.nullCheck(flight.manifest).isUserGestureTransition) && dart.equals(dart.nullCheck(flight.manifest).type, heroes.HeroFlightDirection.pop) && dart.test(flight[_proxyAnimation].isDismissed);
      }
      dart.fn(isInvalidFlight, _HeroFlightTobool());
      let invalidFlights = this[_flights][$values][$where](isInvalidFlight)[$toList]({growable: false});
      for (let flight of invalidFlights) {
        flight[_handleAnimationUpdate](animation.AnimationStatus.dismissed);
      }
    }
    [_maybeStartHeroTransition](fromRoute, toRoute, flightType, isUserGestureTransition) {
      if (flightType == null) dart.nullFailed(L34, 800, 25, "flightType");
      if (isUserGestureTransition == null) dart.nullFailed(L34, 801, 10, "isUserGestureTransition");
      if (!dart.equals(toRoute, fromRoute) && pages.PageRoute.is(toRoute) && pages.PageRoute.is(fromRoute)) {
        let from = fromRoute;
        let to = toRoute;
        let animation = dart.equals(flightType, heroes.HeroFlightDirection.push) ? dart.nullCheck(to.animation) : dart.nullCheck(from.animation);
        switch (flightType) {
          case C261 || CT.C261:
          {
            if (animation.value === 0.0) {
              return;
            }
            break;
          }
          case C260 || CT.C260:
          {
            if (animation.value === 1.0) {
              return;
            }
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        if (dart.test(isUserGestureTransition) && dart.equals(flightType, heroes.HeroFlightDirection.pop) && dart.test(to.maintainState)) {
          this[_startHeroTransition](from, to, animation, flightType, isUserGestureTransition);
        } else {
          to.offstage = dart.nullCheck(to.animation).value === 0.0;
          dart.nullCheck(binding$5.WidgetsBinding.instance).addPostFrameCallback(dart.fn(value => {
            if (value == null) dart.nullFailed(L34, 836, 65, "value");
            this[_startHeroTransition](from, to, animation, flightType, isUserGestureTransition);
          }, DurationTovoid()));
        }
      }
    }
    [_startHeroTransition](from, to, animation, flightType, isUserGestureTransition) {
      let t21, t21$, t21$0;
      if (from == null) dart.nullFailed(L34, 846, 24, "from");
      if (to == null) dart.nullFailed(L34, 847, 24, "to");
      if (animation == null) dart.nullFailed(L34, 848, 23, "animation");
      if (flightType == null) dart.nullFailed(L34, 849, 25, "flightType");
      if (isUserGestureTransition == null) dart.nullFailed(L34, 850, 10, "isUserGestureTransition");
      if (this.navigator == null || from.subtreeContext == null || to.subtreeContext == null) {
        to.offstage = false;
        return;
      }
      let navigatorRect = heroes._boundingBoxFor(dart.nullCheck(this.navigator).context);
      let fromHeroes = heroes.Hero._allHeroesFor(dart.nullCheck(from.subtreeContext), isUserGestureTransition, dart.nullCheck(this.navigator));
      let toHeroes = heroes.Hero._allHeroesFor(dart.nullCheck(to.subtreeContext), isUserGestureTransition, dart.nullCheck(this.navigator));
      to.offstage = false;
      for (let tag of fromHeroes[$keys]) {
        if (toHeroes[$_get](tag) != null) {
          let fromShuttleBuilder = dart.nullCheck(fromHeroes[$_get](tag)).widget.flightShuttleBuilder;
          let toShuttleBuilder = dart.nullCheck(toHeroes[$_get](tag)).widget.flightShuttleBuilder;
          let isDiverted = this[_flights][$_get](tag) != null;
          let manifest = new heroes._HeroFlightManifest.new({type: flightType, overlay: dart.nullCheck(this.navigator).overlay, navigatorRect: navigatorRect, fromRoute: from, toRoute: to, fromHero: dart.nullCheck(fromHeroes[$_get](tag)), toHero: dart.nullCheck(toHeroes[$_get](tag)), createRectTween: this.createRectTween, shuttleBuilder: (t21$ = (t21 = toShuttleBuilder, t21 == null ? fromShuttleBuilder : t21), t21$ == null ? heroes.HeroController._defaultHeroFlightShuttleBuilder : t21$), isUserGestureTransition: isUserGestureTransition, isDiverted: isDiverted});
          if (isDiverted)
            dart.nullCheck(this[_flights][$_get](tag)).divert(manifest);
          else
            this[_flights][$_set](tag, (t21$0 = new heroes._HeroFlight.new(dart.bind(this, _handleFlightEnded)), (() => {
              t21$0.start(manifest);
              return t21$0;
            })()));
        } else if (this[_flights][$_get](tag) != null) {
          dart.nullCheck(this[_flights][$_get](tag)).abort();
        }
      }
      for (let tag of toHeroes[$keys]) {
        if (fromHeroes[$_get](tag) == null) dart.nullCheck(toHeroes[$_get](tag)).ensurePlaceholderIsHidden();
      }
    }
    [_handleFlightEnded](flight) {
      if (flight == null) dart.nullFailed(L34, 907, 39, "flight");
      this[_flights][$remove](dart.nullCheck(flight.manifest).tag);
    }
  };
  (heroes.HeroController.new = function(opts) {
    let createRectTween = opts && 'createRectTween' in opts ? opts.createRectTween : null;
    this[_flights] = new (LinkedMapOfObject$_HeroFlight()).new();
    this[createRectTween$0] = createRectTween;
    heroes.HeroController.__proto__.new.call(this);
    ;
  }).prototype = heroes.HeroController.prototype;
  dart.addTypeTests(heroes.HeroController);
  dart.addTypeCaches(heroes.HeroController);
  dart.setMethodSignature(heroes.HeroController, () => ({
    __proto__: dart.getMethods(heroes.HeroController.__proto__),
    [_maybeStartHeroTransition]: dart.fnType(dart.void, [dart.nullable(navigator$.Route), dart.nullable(navigator$.Route), heroes.HeroFlightDirection, core.bool]),
    [_startHeroTransition]: dart.fnType(dart.void, [pages.PageRoute, pages.PageRoute, animation.Animation$(core.double), heroes.HeroFlightDirection, core.bool]),
    [_handleFlightEnded]: dart.fnType(dart.void, [heroes._HeroFlight])
  }));
  dart.setLibraryUri(heroes.HeroController, L35);
  dart.setFieldSignature(heroes.HeroController, () => ({
    __proto__: dart.getFields(heroes.HeroController.__proto__),
    createRectTween: dart.finalFieldType(dart.nullable(dart.fnType(tween.Tween$(dart.nullable(ui.Rect)), [dart.nullable(ui.Rect), dart.nullable(ui.Rect)]))),
    [_flights]: dart.finalFieldType(core.Map$(core.Object, heroes._HeroFlight))
  }));
  dart.defineLazy(heroes.HeroController, {
    /*heroes.HeroController._defaultHeroFlightShuttleBuilder*/get _defaultHeroFlightShuttleBuilder() {
      return dart.fn((flightContext, animation, flightDirection, fromHeroContext, toHeroContext) => {
        if (flightContext == null) dart.nullFailed(L34, 912, 18, "flightContext");
        if (animation == null) dart.nullFailed(L34, 913, 23, "animation");
        if (flightDirection == null) dart.nullFailed(L34, 914, 25, "flightDirection");
        if (fromHeroContext == null) dart.nullFailed(L34, 915, 18, "fromHeroContext");
        if (toHeroContext == null) dart.nullFailed(L34, 916, 18, "toHeroContext");
        let toHero = heroes.Hero.as(toHeroContext.widget);
        return toHero.child;
      }, BuildContextAndAnimationOfdoubleAndHeroFlightDirection__ToWidget());
    }
  }, false);
  var child$7 = dart.privateName(heroes, "HeroMode.child");
  var enabled$ = dart.privateName(heroes, "HeroMode.enabled");
  heroes.HeroMode = class HeroMode extends framework.StatelessWidget {
    get child() {
      return this[child$7];
    }
    set child(value) {
      super.child = value;
    }
    get enabled() {
      return this[enabled$];
    }
    set enabled(value) {
      super.enabled = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(L34, 954, 29, "context");
      return this.child;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L34, 957, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.FlagProperty.new("mode", {value: this.enabled, ifTrue: "enabled", ifFalse: "disabled", showName: true}));
    }
  };
  (heroes.HeroMode.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L34, 936, 19, "child");
    let enabled = opts && 'enabled' in opts ? opts.enabled : true;
    if (enabled == null) dart.nullFailed(L34, 937, 10, "enabled");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$7] = child;
    this[enabled$] = enabled;
    if (!(child != null)) dart.assertFailed(null, L34, 938, 15, "child != null");
    if (!(enabled != null)) dart.assertFailed(null, L34, 939, 15, "enabled != null");
    heroes.HeroMode.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = heroes.HeroMode.prototype;
  dart.addTypeTests(heroes.HeroMode);
  dart.addTypeCaches(heroes.HeroMode);
  dart.setMethodSignature(heroes.HeroMode, () => ({
    __proto__: dart.getMethods(heroes.HeroMode.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(heroes.HeroMode, L35);
  dart.setFieldSignature(heroes.HeroMode, () => ({
    __proto__: dart.getFields(heroes.HeroMode.__proto__),
    child: dart.finalFieldType(framework.Widget),
    enabled: dart.finalFieldType(core.bool)
  }));
  heroes._boundingBoxFor = function _boundingBoxFor(context, ancestorContext = null) {
    let t21;
    if (context == null) dart.nullFailed(L34, 76, 35, "context");
    let box = box$.RenderBox.as(dart.nullCheck(context.findRenderObject()));
    if (!(box !== null && dart.test(box.hasSize))) dart.assertFailed(null, L34, 78, 10, "box != null && box.hasSize");
    return matrix_utils.MatrixUtils.transformRect(box.getTransformTo((t21 = ancestorContext, t21 == null ? null : t21.findRenderObject())), ui.Offset.zero['&'](box.size));
  };
  var _name$4 = dart.privateName(navigator$, "_name");
  var C306;
  var C307;
  var C308;
  var C309;
  navigator$.RoutePopDisposition = class RoutePopDisposition extends core.Object {
    toString() {
      return this[_name$4];
    }
  };
  (navigator$.RoutePopDisposition.new = function(index, _name) {
    if (index == null) dart.nullFailed(L28, 86, 6, "index");
    if (_name == null) dart.nullFailed(L28, 86, 6, "_name");
    this.index = index;
    this[_name$4] = _name;
    ;
  }).prototype = navigator$.RoutePopDisposition.prototype;
  dart.addTypeTests(navigator$.RoutePopDisposition);
  dart.addTypeCaches(navigator$.RoutePopDisposition);
  dart.setLibraryUri(navigator$.RoutePopDisposition, L29);
  dart.setFieldSignature(navigator$.RoutePopDisposition, () => ({
    __proto__: dart.getFields(navigator$.RoutePopDisposition.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$4]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(navigator$.RoutePopDisposition, ['toString']);
  navigator$.RoutePopDisposition.pop = C306 || CT.C306;
  navigator$.RoutePopDisposition.doNotPop = C307 || CT.C307;
  navigator$.RoutePopDisposition.bubble = C308 || CT.C308;
  navigator$.RoutePopDisposition.values = C309 || CT.C309;
  navigator$.RouteSettings = class RouteSettings extends core.Object {
    get name() {
      return this[name$0];
    }
    set name(value) {
      super.name = value;
    }
    get arguments() {
      return this[arguments$];
    }
    set arguments(value) {
      super.arguments = value;
    }
    copyWith(opts) {
      let t21, t21$;
      let name = opts && 'name' in opts ? opts.name : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return new navigator$.RouteSettings.new({name: (t21 = name, t21 == null ? this.name : t21), arguments: (t21$ = $arguments, t21$ == null ? this.arguments : t21$)});
    }
    toString() {
      return dart.str(object.objectRuntimeType(this, "RouteSettings")) + "(\"" + dart.str(this.name) + "\", " + dart.str(this.arguments) + ")";
    }
  };
  (navigator$.RouteSettings.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    this[name$0] = name;
    this[arguments$] = $arguments;
    ;
  }).prototype = navigator$.RouteSettings.prototype;
  dart.addTypeTests(navigator$.RouteSettings);
  dart.addTypeCaches(navigator$.RouteSettings);
  const name$0 = RouteSettings_name;
  const arguments$ = RouteSettings_arguments;
  dart.setMethodSignature(navigator$.RouteSettings, () => ({
    __proto__: dart.getMethods(navigator$.RouteSettings.__proto__),
    copyWith: dart.fnType(navigator$.RouteSettings, [], {arguments: dart.nullable(core.Object), name: dart.nullable(core.String)}, {})
  }));
  dart.setLibraryUri(navigator$.RouteSettings, L29);
  dart.setFieldSignature(navigator$.RouteSettings, () => ({
    __proto__: dart.getFields(navigator$.RouteSettings.__proto__),
    name: dart.finalFieldType(dart.nullable(core.String)),
    arguments: dart.finalFieldType(dart.nullable(core.Object))
  }));
  dart.defineExtensionMethods(navigator$.RouteSettings, ['toString']);
  const _is_Page_default = Symbol('_is_Page_default');
  var key$0 = dart.privateName(navigator$, "Page.key");
  var restorationId$ = dart.privateName(navigator$, "Page.restorationId");
  navigator$.Page$ = dart.generic(T => {
    class Page extends navigator$.RouteSettings {
      get key() {
        return this[key$0];
      }
      set key(value) {
        super.key = value;
      }
      get restorationId() {
        return this[restorationId$];
      }
      set restorationId(value) {
        super.restorationId = value;
      }
      canUpdate(other) {
        if (other == null) dart.nullFailed(L28, 570, 32, "other");
        return dart.equals(dart.runtimeType(other), this[$runtimeType]) && dart.equals(other.key, this.key);
      }
      toString() {
        return dart.str(object.objectRuntimeType(this, "Page")) + "(\"" + dart.str(this.name) + "\", " + dart.str(this.key) + ", " + dart.str(this.arguments) + ")";
      }
    }
    (Page.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let name = opts && 'name' in opts ? opts.name : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
      this[key$0] = key;
      this[restorationId$] = restorationId;
      Page.__proto__.new.call(this, {name: name, arguments: $arguments});
      ;
    }).prototype = Page.prototype;
    dart.addTypeTests(Page);
    Page.prototype[_is_Page_default] = true;
    dart.addTypeCaches(Page);
    dart.setMethodSignature(Page, () => ({
      __proto__: dart.getMethods(Page.__proto__),
      canUpdate: dart.fnType(core.bool, [navigator$.Page])
    }));
    dart.setLibraryUri(Page, L29);
    dart.setFieldSignature(Page, () => ({
      __proto__: dart.getFields(Page.__proto__),
      key: dart.finalFieldType(dart.nullable(key.LocalKey)),
      restorationId: dart.finalFieldType(dart.nullable(core.String))
    }));
    dart.defineExtensionMethods(Page, ['toString']);
    return Page;
  });
  navigator$.Page = navigator$.Page$();
  dart.addTypeTests(navigator$.Page, _is_Page_default);
  var controller$ = dart.privateName(navigator$, "HeroControllerScope.controller");
  navigator$.HeroControllerScope = class HeroControllerScope extends framework.InheritedWidget {
    get controller() {
      return this[controller$];
    }
    set controller(value) {
      super.controller = value;
    }
    static of(context) {
      let t21;
      if (context == null) dart.nullFailed(L28, 661, 42, "context");
      let host = context.dependOnInheritedWidgetOfExactType(navigator$.HeroControllerScope);
      t21 = host;
      return t21 == null ? null : t21.controller;
    }
    updateShouldNotify(oldWidget) {
      navigator$.HeroControllerScope.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L28, 667, 47, "oldWidget");
      return !dart.equals(oldWidget.controller, this.controller);
    }
  };
  (navigator$.HeroControllerScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    if (controller == null) dart.nullFailed(L28, 643, 34, "controller");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L28, 644, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$] = controller;
    if (!(controller != null)) dart.assertFailed(null, L28, 645, 15, "controller != null");
    navigator$.HeroControllerScope.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigator$.HeroControllerScope.prototype;
  (navigator$.HeroControllerScope.none = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L28, 652, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$] = null;
    navigator$.HeroControllerScope.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigator$.HeroControllerScope.prototype;
  dart.addTypeTests(navigator$.HeroControllerScope);
  dart.addTypeCaches(navigator$.HeroControllerScope);
  dart.setMethodSignature(navigator$.HeroControllerScope, () => ({
    __proto__: dart.getMethods(navigator$.HeroControllerScope.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(navigator$.HeroControllerScope, L29);
  dart.setFieldSignature(navigator$.HeroControllerScope, () => ({
    __proto__: dart.getFields(navigator$.HeroControllerScope.__proto__),
    controller: dart.finalFieldType(dart.nullable(heroes.HeroController))
  }));
  navigator$.RouteTransitionRecord = class RouteTransitionRecord extends core.Object {};
  (navigator$.RouteTransitionRecord.new = function() {
    ;
  }).prototype = navigator$.RouteTransitionRecord.prototype;
  dart.addTypeTests(navigator$.RouteTransitionRecord);
  dart.addTypeCaches(navigator$.RouteTransitionRecord);
  dart.setLibraryUri(navigator$.RouteTransitionRecord, L29);
  var _transition = dart.privateName(navigator$, "_transition");
  const _is_TransitionDelegate_default = Symbol('_is_TransitionDelegate_default');
  navigator$.TransitionDelegate$ = dart.generic(T => {
    class TransitionDelegate extends core.Object {
      [_transition](opts) {
        let newPageRouteHistory = opts && 'newPageRouteHistory' in opts ? opts.newPageRouteHistory : null;
        if (newPageRouteHistory == null) dart.nullFailed(L28, 793, 42, "newPageRouteHistory");
        let locationToExitingPageRoute = opts && 'locationToExitingPageRoute' in opts ? opts.locationToExitingPageRoute : null;
        if (locationToExitingPageRoute == null) dart.nullFailed(L28, 794, 65, "locationToExitingPageRoute");
        let pageRouteToPagelessRoutes = opts && 'pageRouteToPagelessRoutes' in opts ? opts.pageRouteToPagelessRoutes : null;
        if (pageRouteToPagelessRoutes == null) dart.nullFailed(L28, 795, 71, "pageRouteToPagelessRoutes");
        let results = this.resolve({newPageRouteHistory: newPageRouteHistory, locationToExitingPageRoute: locationToExitingPageRoute, pageRouteToPagelessRoutes: pageRouteToPagelessRoutes});
        if (!dart.test(dart.fn(() => {
          let resultsToVerify = results[$toList]({growable: false});
          let exitingPageRoutes = locationToExitingPageRoute[$values][$toSet]();
          for (let exitingPageRoute of exitingPageRoutes) {
            if (!!dart.test(exitingPageRoute.isWaitingForExitingDecision)) dart.assertFailed(null, L28, 831, 16, "!exitingPageRoute.isWaitingForExitingDecision");
            if (dart.test(pageRouteToPagelessRoutes[$containsKey](exitingPageRoute))) {
              for (let pagelessRoute of dart.nullCheck(pageRouteToPagelessRoutes[$_get](exitingPageRoute))) {
                if (!!dart.test(pagelessRoute.isWaitingForExitingDecision)) dart.assertFailed(null, L28, 834, 20, "!pagelessRoute.isWaitingForExitingDecision");
              }
            }
          }
          let indexOfNextRouteInNewHistory = 0;
          for (let routeEntry of resultsToVerify[$cast](navigator$._RouteEntry)) {
            if (!(routeEntry != null)) dart.assertFailed(null, L28, 843, 16, "routeEntry != null");
            if (!(!dart.test(routeEntry.isWaitingForEnteringDecision) && !dart.test(routeEntry.isWaitingForExitingDecision))) dart.assertFailed(null, L28, 844, 16, "!routeEntry.isWaitingForEnteringDecision && !routeEntry.isWaitingForExitingDecision");
            if (indexOfNextRouteInNewHistory >= dart.notNull(newPageRouteHistory[$length]) || !dart.equals(routeEntry, newPageRouteHistory[$_get](indexOfNextRouteInNewHistory))) {
              if (!dart.test(exitingPageRoutes.contains(routeEntry))) dart.assertFailed(null, L28, 849, 18, "exitingPageRoutes.contains(routeEntry)");
              exitingPageRoutes.remove(routeEntry);
            } else {
              indexOfNextRouteInNewHistory = indexOfNextRouteInNewHistory + 1;
            }
          }
          if (!(indexOfNextRouteInNewHistory === newPageRouteHistory[$length] && dart.test(exitingPageRoutes[$isEmpty]))) dart.assertFailed("The merged result from the " + dart.str(this[$runtimeType]) + ".resolve does not include all " + "required routes. Do you remember to merge all exiting routes?", L28, 857, 9, "indexOfNextRouteInNewHistory == newPageRouteHistory.length &&\r\n        exitingPageRoutes.isEmpty");
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L28, 826, 12, "() {\r\n      final List<RouteTransitionRecord> resultsToVerify = results.toList(growable: false);\r\n      final Set<RouteTransitionRecord> exitingPageRoutes = locationToExitingPageRoute.values.toSet();\r\n      // Firstly, verifies all exiting routes have been marked.\r\n      for (final RouteTransitionRecord exitingPageRoute in exitingPageRoutes) {\r\n        assert(!exitingPageRoute.isWaitingForExitingDecision);\r\n        if (pageRouteToPagelessRoutes.containsKey(exitingPageRoute)) {\r\n          for (final RouteTransitionRecord pagelessRoute in pageRouteToPagelessRoutes[exitingPageRoute]!) {\r\n            assert(!pagelessRoute.isWaitingForExitingDecision);\r\n          }\r\n        }\r\n      }\r\n      // Secondly, verifies the order of results matches the newPageRouteHistory\r\n      // and contains all the exiting routes.\r\n      int indexOfNextRouteInNewHistory = 0;\r\n\r\n      for (final _RouteEntry routeEntry in resultsToVerify.cast<_RouteEntry>()) {\r\n        assert(routeEntry != null);\r\n        assert(!routeEntry.isWaitingForEnteringDecision && !routeEntry.isWaitingForExitingDecision);\r\n        if (\r\n          indexOfNextRouteInNewHistory >= newPageRouteHistory.length ||\r\n          routeEntry != newPageRouteHistory[indexOfNextRouteInNewHistory]\r\n        ) {\r\n          assert(exitingPageRoutes.contains(routeEntry));\r\n          exitingPageRoutes.remove(routeEntry);\r\n        } else {\r\n          indexOfNextRouteInNewHistory += 1;\r\n        }\r\n      }\r\n\r\n      assert(\r\n        indexOfNextRouteInNewHistory == newPageRouteHistory.length &&\r\n        exitingPageRoutes.isEmpty,\r\n        'The merged result from the $runtimeType.resolve does not include all '\r\n        'required routes. Do you remember to merge all exiting routes?'\r\n      );\r\n      return true;\r\n    }()");
        return results;
      }
    }
    (TransitionDelegate.new = function() {
      ;
    }).prototype = TransitionDelegate.prototype;
    dart.addTypeTests(TransitionDelegate);
    TransitionDelegate.prototype[_is_TransitionDelegate_default] = true;
    dart.addTypeCaches(TransitionDelegate);
    dart.setMethodSignature(TransitionDelegate, () => ({
      __proto__: dart.getMethods(TransitionDelegate.__proto__),
      [_transition]: dart.fnType(core.Iterable$(navigator$.RouteTransitionRecord), [], {}, {locationToExitingPageRoute: core.Map$(dart.nullable(navigator$.RouteTransitionRecord), navigator$.RouteTransitionRecord), newPageRouteHistory: core.List$(navigator$.RouteTransitionRecord), pageRouteToPagelessRoutes: core.Map$(dart.nullable(navigator$.RouteTransitionRecord), core.List$(navigator$.RouteTransitionRecord))})
    }));
    dart.setLibraryUri(TransitionDelegate, L29);
    return TransitionDelegate;
  });
  navigator$.TransitionDelegate = navigator$.TransitionDelegate$();
  dart.addTypeTests(navigator$.TransitionDelegate, _is_TransitionDelegate_default);
  const _is_DefaultTransitionDelegate_default = Symbol('_is_DefaultTransitionDelegate_default');
  navigator$.DefaultTransitionDelegate$ = dart.generic(T => {
    class DefaultTransitionDelegate extends navigator$.TransitionDelegate$(T) {
      resolve(opts) {
        let newPageRouteHistory = opts && 'newPageRouteHistory' in opts ? opts.newPageRouteHistory : null;
        if (newPageRouteHistory == null) dart.nullFailed(L28, 965, 42, "newPageRouteHistory");
        let locationToExitingPageRoute = opts && 'locationToExitingPageRoute' in opts ? opts.locationToExitingPageRoute : null;
        if (locationToExitingPageRoute == null) dart.nullFailed(L28, 966, 65, "locationToExitingPageRoute");
        let pageRouteToPagelessRoutes = opts && 'pageRouteToPagelessRoutes' in opts ? opts.pageRouteToPagelessRoutes : null;
        if (pageRouteToPagelessRoutes == null) dart.nullFailed(L28, 967, 71, "pageRouteToPagelessRoutes");
        let results = JSArrayOfRouteTransitionRecord().of([]);
        function handleExitingRoute(location, isLast) {
          if (isLast == null) dart.nullFailed(L28, 973, 67, "isLast");
          let exitingPageRoute = locationToExitingPageRoute[$_get](location);
          if (exitingPageRoute == null) return;
          if (dart.test(exitingPageRoute.isWaitingForExitingDecision)) {
            let hasPagelessRoute = pageRouteToPagelessRoutes[$containsKey](exitingPageRoute);
            let isLastExitingPageRoute = dart.test(isLast) && !dart.test(locationToExitingPageRoute[$containsKey](exitingPageRoute));
            if (isLastExitingPageRoute && !dart.test(hasPagelessRoute)) {
              exitingPageRoute.markForPop(exitingPageRoute.route.currentResult);
            } else {
              exitingPageRoute.markForComplete(exitingPageRoute.route.currentResult);
            }
            if (dart.test(hasPagelessRoute)) {
              let pagelessRoutes = dart.nullCheck(pageRouteToPagelessRoutes[$_get](exitingPageRoute));
              for (let pagelessRoute of pagelessRoutes) {
                if (dart.test(pagelessRoute.isWaitingForExitingDecision)) {
                  if (isLastExitingPageRoute && dart.equals(pagelessRoute, pagelessRoutes[$last])) {
                    pagelessRoute.markForPop(pagelessRoute.route.currentResult);
                  } else {
                    pagelessRoute.markForComplete(pagelessRoute.route.currentResult);
                  }
                }
              }
            }
          }
          results[$add](exitingPageRoute);
          handleExitingRoute(exitingPageRoute, isLast);
        }
        dart.fn(handleExitingRoute, RouteTransitionRecordNAndboolTovoid());
        handleExitingRoute(null, newPageRouteHistory[$isEmpty]);
        for (let pageRoute of newPageRouteHistory) {
          let isLastIteration = dart.equals(newPageRouteHistory[$last], pageRoute);
          if (dart.test(pageRoute.isWaitingForEnteringDecision)) {
            if (!dart.test(locationToExitingPageRoute[$containsKey](pageRoute)) && isLastIteration) {
              pageRoute.markForPush();
            } else {
              pageRoute.markForAdd();
            }
          }
          results[$add](pageRoute);
          handleExitingRoute(pageRoute, isLastIteration);
        }
        return results;
      }
    }
    (DefaultTransitionDelegate.new = function() {
      DefaultTransitionDelegate.__proto__.new.call(this);
      ;
    }).prototype = DefaultTransitionDelegate.prototype;
    dart.addTypeTests(DefaultTransitionDelegate);
    DefaultTransitionDelegate.prototype[_is_DefaultTransitionDelegate_default] = true;
    dart.addTypeCaches(DefaultTransitionDelegate);
    dart.setMethodSignature(DefaultTransitionDelegate, () => ({
      __proto__: dart.getMethods(DefaultTransitionDelegate.__proto__),
      resolve: dart.fnType(core.Iterable$(navigator$.RouteTransitionRecord), [], {}, {locationToExitingPageRoute: core.Map$(dart.nullable(navigator$.RouteTransitionRecord), navigator$.RouteTransitionRecord), newPageRouteHistory: core.List$(navigator$.RouteTransitionRecord), pageRouteToPagelessRoutes: core.Map$(dart.nullable(navigator$.RouteTransitionRecord), core.List$(navigator$.RouteTransitionRecord))})
    }));
    dart.setLibraryUri(DefaultTransitionDelegate, L29);
    return DefaultTransitionDelegate;
  });
  navigator$.DefaultTransitionDelegate = navigator$.DefaultTransitionDelegate$();
  dart.addTypeTests(navigator$.DefaultTransitionDelegate, _is_DefaultTransitionDelegate_default);
  var C310;
  var C311;
  var C312;
  var C313;
  var _routeNamed = dart.privateName(navigator$, "_routeNamed");
  var pages$ = dart.privateName(navigator$, "Navigator.pages");
  var onPopPage$ = dart.privateName(navigator$, "Navigator.onPopPage");
  var transitionDelegate$ = dart.privateName(navigator$, "Navigator.transitionDelegate");
  var initialRoute$ = dart.privateName(navigator$, "Navigator.initialRoute");
  var onGenerateRoute$ = dart.privateName(navigator$, "Navigator.onGenerateRoute");
  var onUnknownRoute$ = dart.privateName(navigator$, "Navigator.onUnknownRoute");
  var observers$ = dart.privateName(navigator$, "Navigator.observers");
  var restorationScopeId$ = dart.privateName(navigator$, "Navigator.restorationScopeId");
  var onGenerateInitialRoutes$ = dart.privateName(navigator$, "Navigator.onGenerateInitialRoutes");
  var reportsRouteUpdateToEngine$ = dart.privateName(navigator$, "Navigator.reportsRouteUpdateToEngine");
  navigator$.Navigator = class Navigator extends framework.StatefulWidget {
    get pages() {
      return this[pages$];
    }
    set pages(value) {
      super.pages = value;
    }
    get onPopPage() {
      return this[onPopPage$];
    }
    set onPopPage(value) {
      super.onPopPage = value;
    }
    get transitionDelegate() {
      return this[transitionDelegate$];
    }
    set transitionDelegate(value) {
      super.transitionDelegate = value;
    }
    get initialRoute() {
      return this[initialRoute$];
    }
    set initialRoute(value) {
      super.initialRoute = value;
    }
    get onGenerateRoute() {
      return this[onGenerateRoute$];
    }
    set onGenerateRoute(value) {
      super.onGenerateRoute = value;
    }
    get onUnknownRoute() {
      return this[onUnknownRoute$];
    }
    set onUnknownRoute(value) {
      super.onUnknownRoute = value;
    }
    get observers() {
      return this[observers$];
    }
    set observers(value) {
      super.observers = value;
    }
    get restorationScopeId() {
      return this[restorationScopeId$];
    }
    set restorationScopeId(value) {
      super.restorationScopeId = value;
    }
    get onGenerateInitialRoutes() {
      return this[onGenerateInitialRoutes$];
    }
    set onGenerateInitialRoutes(value) {
      super.onGenerateInitialRoutes = value;
    }
    get reportsRouteUpdateToEngine() {
      return this[reportsRouteUpdateToEngine$];
    }
    set reportsRouteUpdateToEngine(value) {
      super.reportsRouteUpdateToEngine = value;
    }
    static pushNamed(T, context, routeName, opts) {
      if (context == null) dart.nullFailed(L28, 1701, 18, "context");
      if (routeName == null) dart.nullFailed(L28, 1702, 12, "routeName");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return navigator$.Navigator.of(context).pushNamed(T, routeName, {arguments: $arguments});
    }
    static restorablePushNamed(T, context, routeName, opts) {
      if (context == null) dart.nullFailed(L28, 1756, 18, "context");
      if (routeName == null) dart.nullFailed(L28, 1757, 12, "routeName");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return navigator$.Navigator.of(context).restorablePushNamed(T, routeName, {arguments: $arguments});
    }
    static pushReplacementNamed(T, TO, context, routeName, opts) {
      if (context == null) dart.nullFailed(L28, 1818, 18, "context");
      if (routeName == null) dart.nullFailed(L28, 1819, 12, "routeName");
      let result = opts && 'result' in opts ? opts.result : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return navigator$.Navigator.of(context).pushReplacementNamed(T, TO, routeName, {arguments: $arguments, result: result});
    }
    static restorablePushReplacementNamed(T, TO, context, routeName, opts) {
      if (context == null) dart.nullFailed(L28, 1854, 18, "context");
      if (routeName == null) dart.nullFailed(L28, 1855, 12, "routeName");
      let result = opts && 'result' in opts ? opts.result : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return navigator$.Navigator.of(context).restorablePushReplacementNamed(T, TO, routeName, {arguments: $arguments, result: result});
    }
    static popAndPushNamed(T, TO, context, routeName, opts) {
      if (context == null) dart.nullFailed(L28, 1912, 18, "context");
      if (routeName == null) dart.nullFailed(L28, 1913, 12, "routeName");
      let result = opts && 'result' in opts ? opts.result : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return navigator$.Navigator.of(context).popAndPushNamed(T, TO, routeName, {arguments: $arguments, result: result});
    }
    static restorablePopAndPushNamed(T, TO, context, routeName, opts) {
      if (context == null) dart.nullFailed(L28, 1947, 20, "context");
      if (routeName == null) dart.nullFailed(L28, 1948, 14, "routeName");
      let result = opts && 'result' in opts ? opts.result : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return navigator$.Navigator.of(context).restorablePopAndPushNamed(T, TO, routeName, {arguments: $arguments, result: result});
    }
    static pushNamedAndRemoveUntil(T, context, newRouteName, predicate, opts) {
      if (context == null) dart.nullFailed(L28, 2016, 18, "context");
      if (newRouteName == null) dart.nullFailed(L28, 2017, 12, "newRouteName");
      if (predicate == null) dart.nullFailed(L28, 2018, 20, "predicate");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return navigator$.Navigator.of(context).pushNamedAndRemoveUntil(T, newRouteName, predicate, {arguments: $arguments});
    }
    static restorablePushNamedAndRemoveUntil(T, context, newRouteName, predicate, opts) {
      if (context == null) dart.nullFailed(L28, 2052, 20, "context");
      if (newRouteName == null) dart.nullFailed(L28, 2053, 14, "newRouteName");
      if (predicate == null) dart.nullFailed(L28, 2054, 22, "predicate");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return navigator$.Navigator.of(context).restorablePushNamedAndRemoveUntil(T, newRouteName, predicate, {arguments: $arguments});
    }
    static push(T, context, route) {
      if (context == null) dart.nullFailed(L28, 2094, 58, "context");
      if (route == null) dart.nullFailed(L28, 2094, 76, "route");
      return navigator$.Navigator.of(context).push(T, route);
    }
    static restorablePush(T, context, routeBuilder, opts) {
      if (context == null) dart.nullFailed(L28, 2148, 64, "context");
      if (routeBuilder == null) dart.nullFailed(L28, 2148, 99, "routeBuilder");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return navigator$.Navigator.of(context).restorablePush(T, routeBuilder, {arguments: $arguments});
    }
    static pushReplacement(T, TO, context, newRoute, opts) {
      if (context == null) dart.nullFailed(L28, 2197, 89, "context");
      if (newRoute == null) dart.nullFailed(L28, 2197, 107, "newRoute");
      let result = opts && 'result' in opts ? opts.result : null;
      return navigator$.Navigator.of(context).pushReplacement(T, TO, newRoute, {result: result});
    }
    static restorablePushReplacement(T, TO, context, routeBuilder, opts) {
      if (context == null) dart.nullFailed(L28, 2243, 95, "context");
      if (routeBuilder == null) dart.nullFailed(L28, 2243, 130, "routeBuilder");
      let result = opts && 'result' in opts ? opts.result : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return navigator$.Navigator.of(context).restorablePushReplacement(T, TO, routeBuilder, {result: result, arguments: $arguments});
    }
    static pushAndRemoveUntil(T, context, newRoute, predicate) {
      if (context == null) dart.nullFailed(L28, 2302, 72, "context");
      if (newRoute == null) dart.nullFailed(L28, 2302, 90, "newRoute");
      if (predicate == null) dart.nullFailed(L28, 2302, 115, "predicate");
      return navigator$.Navigator.of(context).pushAndRemoveUntil(T, newRoute, predicate);
    }
    static restorablePushAndRemoveUntil(T, context, newRouteBuilder, predicate, opts) {
      if (context == null) dart.nullFailed(L28, 2352, 78, "context");
      if (newRouteBuilder == null) dart.nullFailed(L28, 2352, 113, "newRouteBuilder");
      if (predicate == null) dart.nullFailed(L28, 2352, 145, "predicate");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return navigator$.Navigator.of(context).restorablePushAndRemoveUntil(T, newRouteBuilder, predicate, {arguments: $arguments});
    }
    static replace(T, context, opts) {
      if (context == null) dart.nullFailed(L28, 2390, 55, "context");
      let oldRoute = opts && 'oldRoute' in opts ? opts.oldRoute : null;
      if (oldRoute == null) dart.nullFailed(L28, 2390, 90, "oldRoute");
      let newRoute = opts && 'newRoute' in opts ? opts.newRoute : null;
      if (newRoute == null) dart.nullFailed(L28, 2390, 118, "newRoute");
      return navigator$.Navigator.of(context).replace(T, {oldRoute: oldRoute, newRoute: newRoute});
    }
    static restorableReplace(T, context, opts) {
      if (context == null) dart.nullFailed(L28, 2409, 67, "context");
      let oldRoute = opts && 'oldRoute' in opts ? opts.oldRoute : null;
      if (oldRoute == null) dart.nullFailed(L28, 2409, 102, "oldRoute");
      let newRouteBuilder = opts && 'newRouteBuilder' in opts ? opts.newRouteBuilder : null;
      if (newRouteBuilder == null) dart.nullFailed(L28, 2409, 147, "newRouteBuilder");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return navigator$.Navigator.of(context).restorableReplace(T, {oldRoute: oldRoute, newRouteBuilder: newRouteBuilder, arguments: $arguments});
    }
    static replaceRouteBelow(T, context, opts) {
      if (context == null) dart.nullFailed(L28, 2445, 65, "context");
      let anchorRoute = opts && 'anchorRoute' in opts ? opts.anchorRoute : null;
      if (anchorRoute == null) dart.nullFailed(L28, 2445, 100, "anchorRoute");
      let newRoute = opts && 'newRoute' in opts ? opts.newRoute : null;
      if (newRoute == null) dart.nullFailed(L28, 2445, 131, "newRoute");
      return navigator$.Navigator.of(context).replaceRouteBelow(T, {anchorRoute: anchorRoute, newRoute: newRoute});
    }
    static restorableReplaceRouteBelow(T, context, opts) {
      if (context == null) dart.nullFailed(L28, 2465, 77, "context");
      let anchorRoute = opts && 'anchorRoute' in opts ? opts.anchorRoute : null;
      if (anchorRoute == null) dart.nullFailed(L28, 2465, 112, "anchorRoute");
      let newRouteBuilder = opts && 'newRouteBuilder' in opts ? opts.newRouteBuilder : null;
      if (newRouteBuilder == null) dart.nullFailed(L28, 2465, 160, "newRouteBuilder");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return navigator$.Navigator.of(context).restorableReplaceRouteBelow(T, {anchorRoute: anchorRoute, newRouteBuilder: newRouteBuilder, arguments: $arguments});
    }
    static canPop(context) {
      if (context == null) dart.nullFailed(L28, 2484, 35, "context");
      let navigator = navigator$.Navigator.maybeOf(context);
      return navigator != null && dart.test(navigator.canPop());
    }
    static maybePop(T, context, result = null) {
      if (context == null) dart.nullFailed(L28, 2520, 64, "context");
      return navigator$.Navigator.of(context).maybePop(T, result);
    }
    static pop(T, context, result = null) {
      if (context == null) dart.nullFailed(L28, 2570, 51, "context");
      navigator$.Navigator.of(context).pop(T, result);
    }
    static popUntil(context, predicate) {
      if (context == null) dart.nullFailed(L28, 2599, 37, "context");
      if (predicate == null) dart.nullFailed(L28, 2599, 61, "predicate");
      navigator$.Navigator.of(context).popUntil(predicate);
    }
    static removeRoute(context, route) {
      if (context == null) dart.nullFailed(L28, 2626, 40, "context");
      if (route == null) dart.nullFailed(L28, 2626, 64, "route");
      return navigator$.Navigator.of(context).removeRoute(route);
    }
    static removeRouteBelow(context, anchorRoute) {
      if (context == null) dart.nullFailed(L28, 2651, 45, "context");
      if (anchorRoute == null) dart.nullFailed(L28, 2651, 69, "anchorRoute");
      return navigator$.Navigator.of(context).removeRouteBelow(anchorRoute);
    }
    static of(context, opts) {
      let t21, t21$;
      if (context == null) dart.nullFailed(L28, 2674, 18, "context");
      let rootNavigator = opts && 'rootNavigator' in opts ? opts.rootNavigator : false;
      if (rootNavigator == null) dart.nullFailed(L28, 2675, 10, "rootNavigator");
      let navigator = null;
      if (framework.StatefulElement.is(context) && navigator$.NavigatorState.is(context.state)) {
        navigator = navigator$.NavigatorState.as(context.state);
      }
      if (dart.test(rootNavigator)) {
        navigator = (t21 = context.findRootAncestorStateOfType(navigator$.NavigatorState), t21 == null ? navigator : t21);
      } else {
        navigator = (t21$ = navigator, t21$ == null ? context.findAncestorStateOfType(navigator$.NavigatorState) : t21$);
      }
      if (!dart.test(dart.fn(() => {
        if (navigator == null) {
          dart.throw(assertions.FlutterError.new("Navigator operation requested with a context that does not include a Navigator.\n" + "The context used to push or pop routes from the Navigator must be that of a " + "widget that is a descendant of a Navigator widget."));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 2688, 12, "() {\r\n      if (navigator == null) {\r\n        throw FlutterError(\r\n          'Navigator operation requested with a context that does not include a Navigator.\\n'\r\n          'The context used to push or pop routes from the Navigator must be that of a '\r\n          'widget that is a descendant of a Navigator widget.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      return dart.nullCheck(navigator);
    }
    static maybeOf(context, opts) {
      let t21, t21$;
      if (context == null) dart.nullFailed(L28, 2722, 20, "context");
      let rootNavigator = opts && 'rootNavigator' in opts ? opts.rootNavigator : false;
      if (rootNavigator == null) dart.nullFailed(L28, 2723, 14, "rootNavigator");
      let navigator = null;
      if (framework.StatefulElement.is(context) && navigator$.NavigatorState.is(context.state)) {
        navigator = navigator$.NavigatorState.as(context.state);
      }
      if (dart.test(rootNavigator)) {
        navigator = (t21 = context.findRootAncestorStateOfType(navigator$.NavigatorState), t21 == null ? navigator : t21);
      } else {
        navigator = (t21$ = navigator, t21$ == null ? context.findAncestorStateOfType(navigator$.NavigatorState) : t21$);
      }
      return navigator;
    }
    static defaultGenerateInitialRoutes(navigator, initialRouteName) {
      if (navigator == null) dart.nullFailed(L28, 2752, 75, "navigator");
      if (initialRouteName == null) dart.nullFailed(L28, 2752, 93, "initialRouteName");
      let result = JSArrayOfRouteN().of([]);
      if (initialRouteName[$startsWith]("/") && initialRouteName.length > 1) {
        initialRouteName = initialRouteName[$substring](1);
        if (!("/" === "/")) dart.assertFailed(null, L28, 2756, 14, "Navigator.defaultRouteName == '/'");
        let debugRouteNames = null;
        if (!dart.test(dart.fn(() => {
          debugRouteNames = JSArrayOfString().of(["/"]);
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L28, 2758, 14, "() {\r\n        debugRouteNames = <String>[ Navigator.defaultRouteName ];\r\n        return true;\r\n      }()");
        result[$add](navigator[_routeNamed](dart.dynamic, "/", {arguments: null, allowNull: true}));
        let routeParts = initialRouteName[$split]("/");
        if (initialRouteName[$isNotEmpty]) {
          let routeName = "";
          for (let part of routeParts) {
            routeName = routeName + ("/" + dart.str(part));
            if (!dart.test(dart.fn(() => {
              dart.nullCheck(debugRouteNames)[$add](routeName);
              return true;
            }, VoidTobool())())) dart.assertFailed(null, L28, 2768, 18, "() {\r\n            debugRouteNames!.add(routeName);\r\n            return true;\r\n          }()");
            result[$add](navigator[_routeNamed](dart.dynamic, routeName, {arguments: null, allowNull: true}));
          }
        }
        if (result[$last] == null) {
          if (!dart.test(dart.fn(() => {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({exception: "Could not navigate to initial route.\n" + "The requested route name was: \"/" + dart.str(initialRouteName) + "\"\n" + "There was no corresponding route in the app, and therefore the initial route specified will be " + "ignored and \"" + "/" + "\" will be used instead."}));
            return true;
          }, VoidTobool())())) dart.assertFailed(null, L28, 2776, 16, "() {\r\n          FlutterError.reportError(\r\n            FlutterErrorDetails(\r\n              exception:\r\n                'Could not navigate to initial route.\\n'\r\n                'The requested route name was: \"/$initialRouteName\"\\n'\r\n                'There was no corresponding route in the app, and therefore the initial route specified will be '\r\n                'ignored and \"${Navigator.defaultRouteName}\" will be used instead.'\r\n            ),\r\n          );\r\n          return true;\r\n        }()");
          result[$clear]();
        }
      } else if (initialRouteName !== "/") {
        result[$add](navigator[_routeNamed](dart.dynamic, initialRouteName, {arguments: null, allowNull: true}));
      }
      result[$removeWhere](dart.fn(route => route == null, RouteNTobool()));
      if (dart.test(result[$isEmpty])) result[$add](navigator[_routeNamed](dart.dynamic, "/", {arguments: null}));
      return result[$cast](navigator$.Route);
    }
    createState() {
      return new navigator$.NavigatorState.new();
    }
  };
  (navigator$.Navigator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let pages = opts && 'pages' in opts ? opts.pages : C310 || CT.C310;
    if (pages == null) dart.nullFailed(L28, 1440, 10, "pages");
    let onPopPage = opts && 'onPopPage' in opts ? opts.onPopPage : null;
    let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : null;
    let onGenerateInitialRoutes = opts && 'onGenerateInitialRoutes' in opts ? opts.onGenerateInitialRoutes : C311 || CT.C311;
    if (onGenerateInitialRoutes == null) dart.nullFailed(L28, 1443, 10, "onGenerateInitialRoutes");
    let onGenerateRoute = opts && 'onGenerateRoute' in opts ? opts.onGenerateRoute : null;
    let onUnknownRoute = opts && 'onUnknownRoute' in opts ? opts.onUnknownRoute : null;
    let transitionDelegate = opts && 'transitionDelegate' in opts ? opts.transitionDelegate : C312 || CT.C312;
    if (transitionDelegate == null) dart.nullFailed(L28, 1446, 10, "transitionDelegate");
    let reportsRouteUpdateToEngine = opts && 'reportsRouteUpdateToEngine' in opts ? opts.reportsRouteUpdateToEngine : false;
    if (reportsRouteUpdateToEngine == null) dart.nullFailed(L28, 1447, 10, "reportsRouteUpdateToEngine");
    let observers = opts && 'observers' in opts ? opts.observers : C313 || CT.C313;
    if (observers == null) dart.nullFailed(L28, 1448, 10, "observers");
    let restorationScopeId = opts && 'restorationScopeId' in opts ? opts.restorationScopeId : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[pages$] = pages;
    this[onPopPage$] = onPopPage;
    this[initialRoute$] = initialRoute;
    this[onGenerateInitialRoutes$] = onGenerateInitialRoutes;
    this[onGenerateRoute$] = onGenerateRoute;
    this[onUnknownRoute$] = onUnknownRoute;
    this[transitionDelegate$] = transitionDelegate;
    this[reportsRouteUpdateToEngine$] = reportsRouteUpdateToEngine;
    this[observers$] = observers;
    this[restorationScopeId$] = restorationScopeId;
    if (!(pages != null)) dart.assertFailed(null, L28, 1450, 15, "pages != null");
    if (!(onGenerateInitialRoutes != null)) dart.assertFailed(null, L28, 1451, 15, "onGenerateInitialRoutes != null");
    if (!(transitionDelegate != null)) dart.assertFailed(null, L28, 1452, 15, "transitionDelegate != null");
    if (!(observers != null)) dart.assertFailed(null, L28, 1453, 15, "observers != null");
    if (!(reportsRouteUpdateToEngine != null)) dart.assertFailed(null, L28, 1454, 15, "reportsRouteUpdateToEngine != null");
    navigator$.Navigator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigator$.Navigator.prototype;
  dart.addTypeTests(navigator$.Navigator);
  dart.addTypeCaches(navigator$.Navigator);
  dart.setMethodSignature(navigator$.Navigator, () => ({
    __proto__: dart.getMethods(navigator$.Navigator.__proto__),
    createState: dart.fnType(navigator$.NavigatorState, [])
  }));
  dart.setLibraryUri(navigator$.Navigator, L29);
  dart.setFieldSignature(navigator$.Navigator, () => ({
    __proto__: dart.getFields(navigator$.Navigator.__proto__),
    pages: dart.finalFieldType(core.List$(navigator$.Page)),
    onPopPage: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [navigator$.Route, dart.dynamic]))),
    transitionDelegate: dart.finalFieldType(navigator$.TransitionDelegate),
    initialRoute: dart.finalFieldType(dart.nullable(core.String)),
    onGenerateRoute: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(navigator$.Route), [navigator$.RouteSettings]))),
    onUnknownRoute: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(navigator$.Route), [navigator$.RouteSettings]))),
    observers: dart.finalFieldType(core.List$(navigator$.NavigatorObserver)),
    restorationScopeId: dart.finalFieldType(dart.nullable(core.String)),
    onGenerateInitialRoutes: dart.finalFieldType(dart.fnType(core.List$(navigator$.Route), [navigator$.NavigatorState, core.String])),
    reportsRouteUpdateToEngine: dart.finalFieldType(core.bool)
  }));
  dart.defineLazy(navigator$.Navigator, {
    /*navigator$.Navigator.defaultRouteName*/get defaultRouteName() {
      return "/";
    }
  }, false);
  var C314;
  var C315;
  var C316;
  var C317;
  var C318;
  var C319;
  var C320;
  var C321;
  var C322;
  var C323;
  var C324;
  var C325;
  var C326;
  var C327;
  var C328;
  navigator$._RouteLifecycle = class _RouteLifecycle extends core.Object {
    toString() {
      return this[_name$4];
    }
  };
  (navigator$._RouteLifecycle.new = function(index, _name) {
    if (index == null) dart.nullFailed(L28, 2855, 6, "index");
    if (_name == null) dart.nullFailed(L28, 2855, 6, "_name");
    this.index = index;
    this[_name$4] = _name;
    ;
  }).prototype = navigator$._RouteLifecycle.prototype;
  dart.addTypeTests(navigator$._RouteLifecycle);
  dart.addTypeCaches(navigator$._RouteLifecycle);
  dart.setLibraryUri(navigator$._RouteLifecycle, L29);
  dart.setFieldSignature(navigator$._RouteLifecycle, () => ({
    __proto__: dart.getFields(navigator$._RouteLifecycle.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$4]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(navigator$._RouteLifecycle, ['toString']);
  navigator$._RouteLifecycle.staging = C314 || CT.C314;
  navigator$._RouteLifecycle.add = C315 || CT.C315;
  navigator$._RouteLifecycle.adding = C316 || CT.C316;
  navigator$._RouteLifecycle.push = C317 || CT.C317;
  navigator$._RouteLifecycle.pushReplace = C318 || CT.C318;
  navigator$._RouteLifecycle.pushing = C319 || CT.C319;
  navigator$._RouteLifecycle.replace = C320 || CT.C320;
  navigator$._RouteLifecycle.idle = C321 || CT.C321;
  navigator$._RouteLifecycle.pop = C322 || CT.C322;
  navigator$._RouteLifecycle.remove = C323 || CT.C323;
  navigator$._RouteLifecycle.popping = C324 || CT.C324;
  navigator$._RouteLifecycle.removing = C325 || CT.C325;
  navigator$._RouteLifecycle.dispose = C326 || CT.C326;
  navigator$._RouteLifecycle.disposed = C327 || CT.C327;
  navigator$._RouteLifecycle.values = C328 || CT.C328;
  navigator$._NotAnnounced = class _NotAnnounced extends navigator$.Route$(dart.void) {};
  (navigator$._NotAnnounced.new = function() {
    navigator$._NotAnnounced.__proto__.new.call(this);
    ;
  }).prototype = navigator$._NotAnnounced.prototype;
  dart.addTypeTests(navigator$._NotAnnounced);
  dart.addTypeCaches(navigator$._NotAnnounced);
  dart.setLibraryUri(navigator$._NotAnnounced, L29);
  var _reportRemovalToObserver = dart.privateName(navigator$, "_reportRemovalToObserver");
  var _isWaitingForExitingDecision = dart.privateName(navigator$, "_isWaitingForExitingDecision");
  var _debugLocked = dart.privateName(navigator$, "_debugLocked");
  var _observedRouteAdditions = dart.privateName(navigator$, "_observedRouteAdditions");
  var _flushHistoryUpdates = dart.privateName(navigator$, "_flushHistoryUpdates");
  var _observedRouteDeletions = dart.privateName(navigator$, "_observedRouteDeletions");
  var route$1 = dart.privateName(navigator$, "_RouteEntry.route");
  navigator$._RouteEntry = class _RouteEntry extends navigator$.RouteTransitionRecord {
    get route() {
      return this[route$1];
    }
    set route(value) {
      super.route = value;
    }
    get restorationId() {
      if (dart.test(this.hasPage)) {
        let page = PageOfObjectN().as(this.route.settings);
        return page.restorationId != null ? "p+" + dart.str(page.restorationId) : null;
      }
      if (this.restorationInformation != null) {
        return "r+" + dart.str(dart.nullCheck(this.restorationInformation).restorationScopeId);
      }
      return null;
    }
    get hasPage() {
      return navigator$.Page.is(this.route.settings);
    }
    canUpdateFrom(page) {
      if (page == null) dart.nullFailed(L28, 2934, 36, "page");
      if (dart.notNull(this.currentState.index) > dart.notNull(navigator$._RouteLifecycle.idle.index)) return false;
      if (!dart.test(this.hasPage)) return false;
      let routePage = navigator$.Page.as(this.route.settings);
      return page.canUpdate(routePage);
    }
    handleAdd(opts) {
      let navigator = opts && 'navigator' in opts ? opts.navigator : null;
      if (navigator == null) dart.nullFailed(L28, 2943, 44, "navigator");
      let previousPresent = opts && 'previousPresent' in opts ? opts.previousPresent : null;
      if (!dart.equals(this.currentState, navigator$._RouteLifecycle.add)) dart.assertFailed(null, L28, 2944, 12, "currentState == _RouteLifecycle.add");
      if (!(navigator != null)) dart.assertFailed(null, L28, 2945, 12, "navigator != null");
      if (!dart.test(navigator[_debugLocked])) dart.assertFailed(null, L28, 2946, 12, "navigator._debugLocked");
      if (!(this.route[_navigator] == null)) dart.assertFailed(null, L28, 2947, 12, "route._navigator == null");
      this.route[_navigator] = navigator;
      this.route.install();
      if (!dart.test(this.route.overlayEntries[$isNotEmpty])) dart.assertFailed(null, L28, 2950, 12, "route.overlayEntries.isNotEmpty");
      this.currentState = navigator$._RouteLifecycle.adding;
      navigator[_observedRouteAdditions].add(new navigator$._NavigatorPushObservation.new(this.route, previousPresent));
    }
    handlePush(opts) {
      let navigator = opts && 'navigator' in opts ? opts.navigator : null;
      if (navigator == null) dart.nullFailed(L28, 2957, 45, "navigator");
      let isNewFirst = opts && 'isNewFirst' in opts ? opts.isNewFirst : null;
      if (isNewFirst == null) dart.nullFailed(L28, 2957, 70, "isNewFirst");
      let previous = opts && 'previous' in opts ? opts.previous : null;
      let previousPresent = opts && 'previousPresent' in opts ? opts.previousPresent : null;
      if (!(dart.equals(this.currentState, navigator$._RouteLifecycle.push) || dart.equals(this.currentState, navigator$._RouteLifecycle.pushReplace) || dart.equals(this.currentState, navigator$._RouteLifecycle.replace))) dart.assertFailed(null, L28, 2958, 12, "currentState == _RouteLifecycle.push || currentState == _RouteLifecycle.pushReplace || currentState == _RouteLifecycle.replace");
      if (!(navigator != null)) dart.assertFailed(null, L28, 2959, 12, "navigator != null");
      if (!dart.test(navigator[_debugLocked])) dart.assertFailed(null, L28, 2960, 12, "navigator._debugLocked");
      if (!(this.route[_navigator] == null)) dart.assertFailed("The pushed route has already been used. When pushing a route, a new " + "Route object must be provided.", L28, 2962, 7, "route._navigator == null");
      let previousState = this.currentState;
      this.route[_navigator] = navigator;
      this.route.install();
      if (!dart.test(this.route.overlayEntries[$isNotEmpty])) dart.assertFailed(null, L28, 2969, 12, "route.overlayEntries.isNotEmpty");
      if (dart.equals(this.currentState, navigator$._RouteLifecycle.push) || dart.equals(this.currentState, navigator$._RouteLifecycle.pushReplace)) {
        let routeFuture = this.route.didPush();
        this.currentState = navigator$._RouteLifecycle.pushing;
        routeFuture.whenCompleteOrCancel(dart.fn(() => {
          if (dart.equals(this.currentState, navigator$._RouteLifecycle.pushing)) {
            this.currentState = navigator$._RouteLifecycle.idle;
            if (!!dart.test(navigator[_debugLocked])) dart.assertFailed(null, L28, 2976, 18, "!navigator._debugLocked");
            if (!dart.test(dart.fn(() => {
              navigator[_debugLocked] = true;
              return true;
            }, VoidTobool())())) dart.assertFailed(null, L28, 2977, 18, "() { navigator._debugLocked = true; return true; }()");
            navigator[_flushHistoryUpdates]();
            if (!dart.test(dart.fn(() => {
              navigator[_debugLocked] = false;
              return true;
            }, VoidTobool())())) dart.assertFailed(null, L28, 2979, 18, "() { navigator._debugLocked = false; return true; }()");
          }
        }, VoidTovoid()));
      } else {
        if (!dart.equals(this.currentState, navigator$._RouteLifecycle.replace)) dart.assertFailed(null, L28, 2983, 14, "currentState == _RouteLifecycle.replace");
        this.route.didReplace(previous);
        this.currentState = navigator$._RouteLifecycle.idle;
      }
      if (dart.test(isNewFirst)) {
        this.route.didChangeNext(null);
      }
      if (dart.equals(previousState, navigator$._RouteLifecycle.replace) || dart.equals(previousState, navigator$._RouteLifecycle.pushReplace)) {
        navigator[_observedRouteAdditions].add(new navigator$._NavigatorReplaceObservation.new(this.route, previousPresent));
      } else {
        if (!dart.equals(previousState, navigator$._RouteLifecycle.push)) dart.assertFailed(null, L28, 2996, 14, "previousState == _RouteLifecycle.push");
        navigator[_observedRouteAdditions].add(new navigator$._NavigatorPushObservation.new(this.route, previousPresent));
      }
    }
    handleDidPopNext(poppedRoute) {
      if (poppedRoute == null) dart.nullFailed(L28, 3003, 40, "poppedRoute");
      this.route.didPopNext(poppedRoute);
      this.lastAnnouncedPoppedNextRoute = poppedRoute;
    }
    handlePop(opts) {
      let navigator = opts && 'navigator' in opts ? opts.navigator : null;
      if (navigator == null) dart.nullFailed(L28, 3008, 44, "navigator");
      let previousPresent = opts && 'previousPresent' in opts ? opts.previousPresent : null;
      if (!(navigator != null)) dart.assertFailed(null, L28, 3009, 12, "navigator != null");
      if (!dart.test(navigator[_debugLocked])) dart.assertFailed(null, L28, 3010, 12, "navigator._debugLocked");
      if (!dart.equals(this.route[_navigator], navigator)) dart.assertFailed(null, L28, 3011, 12, "route._navigator == navigator");
      this.currentState = navigator$._RouteLifecycle.popping;
      navigator[_observedRouteDeletions].add(new navigator$._NavigatorPopObservation.new(this.route, previousPresent));
    }
    handleRemoval(opts) {
      let navigator = opts && 'navigator' in opts ? opts.navigator : null;
      if (navigator == null) dart.nullFailed(L28, 3018, 48, "navigator");
      let previousPresent = opts && 'previousPresent' in opts ? opts.previousPresent : null;
      if (!(navigator != null)) dart.assertFailed(null, L28, 3019, 12, "navigator != null");
      if (!dart.test(navigator[_debugLocked])) dart.assertFailed(null, L28, 3020, 12, "navigator._debugLocked");
      if (!dart.equals(this.route[_navigator], navigator)) dart.assertFailed(null, L28, 3021, 12, "route._navigator == navigator");
      this.currentState = navigator$._RouteLifecycle.removing;
      if (dart.test(this[_reportRemovalToObserver])) {
        navigator[_observedRouteDeletions].add(new navigator$._NavigatorRemoveObservation.new(this.route, previousPresent));
      }
    }
    didAdd(opts) {
      let navigator = opts && 'navigator' in opts ? opts.navigator : null;
      if (navigator == null) dart.nullFailed(L28, 3032, 41, "navigator");
      let isNewFirst = opts && 'isNewFirst' in opts ? opts.isNewFirst : null;
      if (isNewFirst == null) dart.nullFailed(L28, 3032, 66, "isNewFirst");
      this.route.didAdd();
      this.currentState = navigator$._RouteLifecycle.idle;
      if (dart.test(isNewFirst)) {
        this.route.didChangeNext(null);
      }
    }
    pop(T, result) {
      if (!dart.test(this.isPresent)) dart.assertFailed(null, L28, 3041, 12, "isPresent");
      this.doingPop = true;
      if (dart.test(this.route.didPop(result)) && dart.test(this.doingPop)) {
        this.currentState = navigator$._RouteLifecycle.pop;
      }
      this.doingPop = false;
    }
    remove(opts) {
      let isReplaced = opts && 'isReplaced' in opts ? opts.isReplaced : false;
      if (isReplaced == null) dart.nullFailed(L28, 3052, 22, "isReplaced");
      if (!(!dart.test(this.hasPage) || dart.test(this.isWaitingForExitingDecision))) dart.assertFailed("A page-based route cannot be completed using imperative api, provide a " + "new list without the corresponding Page to Navigator.pages instead. ", L28, 3054, 7, "!hasPage || isWaitingForExitingDecision");
      if (dart.notNull(this.currentState.index) >= dart.notNull(navigator$._RouteLifecycle.remove.index)) return;
      if (!dart.test(this.isPresent)) dart.assertFailed(null, L28, 3060, 12, "isPresent");
      this[_reportRemovalToObserver] = !dart.test(isReplaced);
      this.currentState = navigator$._RouteLifecycle.remove;
    }
    complete(T, result, opts) {
      let isReplaced = opts && 'isReplaced' in opts ? opts.isReplaced : false;
      if (isReplaced == null) dart.nullFailed(L28, 3066, 37, "isReplaced");
      if (!(!dart.test(this.hasPage) || dart.test(this.isWaitingForExitingDecision))) dart.assertFailed("A page-based route cannot be completed using imperative api, provide a " + "new list without the corresponding Page to Navigator.pages instead. ", L28, 3068, 7, "!hasPage || isWaitingForExitingDecision");
      if (dart.notNull(this.currentState.index) >= dart.notNull(navigator$._RouteLifecycle.remove.index)) return;
      if (!dart.test(this.isPresent)) dart.assertFailed(null, L28, 3074, 12, "isPresent");
      this[_reportRemovalToObserver] = !dart.test(isReplaced);
      this.route.didComplete(result);
      if (!dart.test(this.route[_popCompleter].isCompleted)) dart.assertFailed(null, L28, 3077, 12, "route._popCompleter.isCompleted");
      this.currentState = navigator$._RouteLifecycle.remove;
    }
    finalize() {
      if (!(dart.notNull(this.currentState.index) < dart.notNull(navigator$._RouteLifecycle.dispose.index))) dart.assertFailed(null, L28, 3082, 12, "currentState.index < _RouteLifecycle.dispose.index");
      this.currentState = navigator$._RouteLifecycle.dispose;
    }
    dispose() {
      if (!(dart.notNull(this.currentState.index) < dart.notNull(navigator$._RouteLifecycle.disposed.index))) dart.assertFailed(null, L28, 3087, 12, "currentState.index < _RouteLifecycle.disposed.index");
      this.currentState = navigator$._RouteLifecycle.disposed;
      let mountedEntries = this.route.overlayEntries[$where](dart.fn(e => {
        if (e == null) dart.nullFailed(L28, 3096, 92, "e");
        return e.mounted;
      }, OverlayEntryTobool()));
      if (dart.test(mountedEntries[$isEmpty])) {
        this.route.dispose();
      } else {
        let mounted = mountedEntries[$length];
        if (!(dart.notNull(mounted) > 0)) dart.assertFailed(null, L28, 3102, 14, "mounted > 0");
        for (let entry of mountedEntries) {
          let listener = null;
          let listener$35isSet = false;
          function listener$35get() {
            return listener$35isSet ? listener : dart.throw(new _internal.LateError.localNI("listener"));
          }
          dart.fn(listener$35get, VoidToFn());
          function listener$35set(t23) {
            if (t23 == null) dart.nullFailed(L28, 3104, 27, "null");
            listener$35isSet = true;
            return listener = t23;
          }
          dart.fn(listener$35set, FnTodynamic());
          listener$35set(dart.fn(() => {
            if (!(dart.notNull(mounted) > 0)) dart.assertFailed(null, L28, 3106, 18, "mounted > 0");
            if (!!dart.test(entry.mounted)) dart.assertFailed(null, L28, 3107, 18, "!entry.mounted");
            mounted = dart.notNull(mounted) - 1;
            entry.removeListener(listener$35get());
            if (mounted === 0) {
              if (!dart.test(this.route.overlayEntries[$every](dart.fn(e => {
                if (e == null) dart.nullFailed(L28, 3111, 61, "e");
                return !dart.test(e.mounted);
              }, OverlayEntryTobool())))) dart.assertFailed(null, L28, 3111, 20, "route.overlayEntries.every((OverlayEntry e) => !e.mounted)");
              this.route.dispose();
            }
          }, VoidTovoid()));
          entry.addListener(listener$35get());
        }
      }
    }
    get willBePresent() {
      return dart.notNull(this.currentState.index) <= dart.notNull(navigator$._RouteLifecycle.idle.index) && dart.notNull(this.currentState.index) >= dart.notNull(navigator$._RouteLifecycle.add.index);
    }
    get isPresent() {
      return dart.notNull(this.currentState.index) <= dart.notNull(navigator$._RouteLifecycle.remove.index) && dart.notNull(this.currentState.index) >= dart.notNull(navigator$._RouteLifecycle.add.index);
    }
    get isPresentForRestoration() {
      return dart.notNull(this.currentState.index) <= dart.notNull(navigator$._RouteLifecycle.idle.index);
    }
    get suitableForAnnouncement() {
      return dart.notNull(this.currentState.index) <= dart.notNull(navigator$._RouteLifecycle.removing.index) && dart.notNull(this.currentState.index) >= dart.notNull(navigator$._RouteLifecycle.push.index);
    }
    get suitableForTransitionAnimation() {
      return dart.notNull(this.currentState.index) <= dart.notNull(navigator$._RouteLifecycle.remove.index) && dart.notNull(this.currentState.index) >= dart.notNull(navigator$._RouteLifecycle.push.index);
    }
    shouldAnnounceChangeToNext(nextRoute) {
      if (!!dart.equals(nextRoute, this.lastAnnouncedNextRoute)) dart.assertFailed(null, L28, 3143, 12, "nextRoute != lastAnnouncedNextRoute");
      return !(nextRoute == null && this.lastAnnouncedPoppedNextRoute != null && dart.equals(this.lastAnnouncedPoppedNextRoute, this.lastAnnouncedNextRoute));
    }
    static isRoutePredicate(route) {
      if (route == null) dart.nullFailed(L28, 3157, 63, "route");
      return dart.fn(entry => {
        if (entry == null) dart.nullFailed(L28, 3158, 25, "entry");
        return dart.equals(entry.route, route);
      }, _RouteEntryTobool());
    }
    get isWaitingForEnteringDecision() {
      return dart.equals(this.currentState, navigator$._RouteLifecycle.staging);
    }
    get isWaitingForExitingDecision() {
      return this[_isWaitingForExitingDecision];
    }
    markNeedsExitingDecision() {
      return this[_isWaitingForExitingDecision] = true;
    }
    markForPush() {
      if (!(dart.test(this.isWaitingForEnteringDecision) && !dart.test(this.isWaitingForExitingDecision))) dart.assertFailed("This route cannot be marked for push. Either a decision has already been " + "made or it does not require an explicit decision on how to transition in.", L28, 3173, 7, "isWaitingForEnteringDecision && !isWaitingForExitingDecision");
      this.currentState = navigator$._RouteLifecycle.push;
    }
    markForAdd() {
      if (!(dart.test(this.isWaitingForEnteringDecision) && !dart.test(this.isWaitingForExitingDecision))) dart.assertFailed("This route cannot be marked for add. Either a decision has already been " + "made or it does not require an explicit decision on how to transition in.", L28, 3183, 7, "isWaitingForEnteringDecision && !isWaitingForExitingDecision");
      this.currentState = navigator$._RouteLifecycle.add;
    }
    markForPop(result = null) {
      if (!(!dart.test(this.isWaitingForEnteringDecision) && dart.test(this.isWaitingForExitingDecision) && dart.test(this.isPresent))) dart.assertFailed("This route cannot be marked for pop. Either a decision has already been " + "made or it does not require an explicit decision on how to transition out.", L28, 3193, 7, "!isWaitingForEnteringDecision && isWaitingForExitingDecision && isPresent");
      this.pop(dart.dynamic, result);
      this[_isWaitingForExitingDecision] = false;
    }
    markForComplete(result = null) {
      if (!(!dart.test(this.isWaitingForEnteringDecision) && dart.test(this.isWaitingForExitingDecision) && dart.test(this.isPresent))) dart.assertFailed("This route cannot be marked for complete. Either a decision has already " + "been made or it does not require an explicit decision on how to transition " + "out.", L28, 3204, 7, "!isWaitingForEnteringDecision && isWaitingForExitingDecision && isPresent");
      this.complete(dart.dynamic, result);
      this[_isWaitingForExitingDecision] = false;
    }
    markForRemove() {
      if (!(!dart.test(this.isWaitingForEnteringDecision) && dart.test(this.isWaitingForExitingDecision) && dart.test(this.isPresent))) dart.assertFailed("This route cannot be marked for remove. Either a decision has already " + "been made or it does not require an explicit decision on how to transition " + "out.", L28, 3216, 7, "!isWaitingForEnteringDecision && isWaitingForExitingDecision && isPresent");
      this.remove();
      this[_isWaitingForExitingDecision] = false;
    }
    get restorationEnabled() {
      return this.route.restorationScopeId.value != null;
    }
    set restorationEnabled(value) {
      if (value == null) dart.nullFailed(L28, 3226, 31, "value");
      if (!(!dart.test(value) || this.restorationId != null)) dart.assertFailed(null, L28, 3227, 12, "!value || restorationId != null");
      this.route[_updateRestorationId](dart.test(value) ? this.restorationId : null);
    }
  };
  (navigator$._RouteEntry.new = function(route, opts) {
    if (route == null) dart.nullFailed(L28, 2892, 10, "route");
    let initialState = opts && 'initialState' in opts ? opts.initialState : null;
    if (initialState == null) dart.nullFailed(L28, 2893, 32, "initialState");
    let restorationInformation = opts && 'restorationInformation' in opts ? opts.restorationInformation : null;
    this.lastAnnouncedPreviousRoute = navigator$._RouteEntry.notAnnounced;
    this.lastAnnouncedPoppedNextRoute = navigator$._RouteEntry.notAnnounced;
    this.lastAnnouncedNextRoute = navigator$._RouteEntry.notAnnounced;
    this.doingPop = false;
    this[_reportRemovalToObserver] = true;
    this[_isWaitingForExitingDecision] = false;
    this[route$1] = route;
    this.restorationInformation = restorationInformation;
    if (!(route != null)) dart.assertFailed(null, L28, 2895, 17, "route != null");
    if (!(initialState != null)) dart.assertFailed(null, L28, 2896, 17, "initialState != null");
    if (!(dart.equals(initialState, navigator$._RouteLifecycle.staging) || dart.equals(initialState, navigator$._RouteLifecycle.add) || dart.equals(initialState, navigator$._RouteLifecycle.push) || dart.equals(initialState, navigator$._RouteLifecycle.pushReplace) || dart.equals(initialState, navigator$._RouteLifecycle.replace))) dart.assertFailed(null, L28, 2898, 12, "initialState == _RouteLifecycle.staging ||\r\n           initialState == _RouteLifecycle.add ||\r\n           initialState == _RouteLifecycle.push ||\r\n           initialState == _RouteLifecycle.pushReplace ||\r\n           initialState == _RouteLifecycle.replace");
    this.currentState = initialState;
    ;
  }).prototype = navigator$._RouteEntry.prototype;
  dart.addTypeTests(navigator$._RouteEntry);
  dart.addTypeCaches(navigator$._RouteEntry);
  dart.setMethodSignature(navigator$._RouteEntry, () => ({
    __proto__: dart.getMethods(navigator$._RouteEntry.__proto__),
    canUpdateFrom: dart.fnType(core.bool, [navigator$.Page]),
    handleAdd: dart.fnType(dart.void, [], {}, {navigator: navigator$.NavigatorState, previousPresent: dart.nullable(navigator$.Route)}),
    handlePush: dart.fnType(dart.void, [], {}, {isNewFirst: core.bool, navigator: navigator$.NavigatorState, previous: dart.nullable(navigator$.Route), previousPresent: dart.nullable(navigator$.Route)}),
    handleDidPopNext: dart.fnType(dart.void, [navigator$.Route]),
    handlePop: dart.fnType(dart.void, [], {}, {navigator: navigator$.NavigatorState, previousPresent: dart.nullable(navigator$.Route)}),
    handleRemoval: dart.fnType(dart.void, [], {}, {navigator: navigator$.NavigatorState, previousPresent: dart.nullable(navigator$.Route)}),
    didAdd: dart.fnType(dart.void, [], {}, {isNewFirst: core.bool, navigator: navigator$.NavigatorState}),
    pop: dart.gFnType(T => [dart.void, [dart.nullable(T)]], T => [dart.nullable(core.Object)]),
    remove: dart.fnType(dart.void, [], {isReplaced: core.bool}, {}),
    complete: dart.gFnType(T => [dart.void, [T], {isReplaced: core.bool}, {}], T => [dart.nullable(core.Object)]),
    finalize: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, []),
    shouldAnnounceChangeToNext: dart.fnType(core.bool, [dart.nullable(navigator$.Route)]),
    markNeedsExitingDecision: dart.fnType(dart.void, []),
    markForPush: dart.fnType(dart.void, []),
    markForAdd: dart.fnType(dart.void, []),
    markForPop: dart.fnType(dart.void, [], [dart.dynamic]),
    markForComplete: dart.fnType(dart.void, [], [dart.dynamic]),
    markForRemove: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(navigator$._RouteEntry, () => ({
    __proto__: dart.getGetters(navigator$._RouteEntry.__proto__),
    restorationId: dart.nullable(core.String),
    hasPage: core.bool,
    willBePresent: core.bool,
    isPresent: core.bool,
    isPresentForRestoration: core.bool,
    suitableForAnnouncement: core.bool,
    suitableForTransitionAnimation: core.bool,
    isWaitingForEnteringDecision: core.bool,
    isWaitingForExitingDecision: core.bool,
    restorationEnabled: core.bool
  }));
  dart.setSetterSignature(navigator$._RouteEntry, () => ({
    __proto__: dart.getSetters(navigator$._RouteEntry.__proto__),
    restorationEnabled: core.bool
  }));
  dart.setLibraryUri(navigator$._RouteEntry, L29);
  dart.setFieldSignature(navigator$._RouteEntry, () => ({
    __proto__: dart.getFields(navigator$._RouteEntry.__proto__),
    route: dart.finalFieldType(navigator$.Route),
    restorationInformation: dart.finalFieldType(dart.nullable(navigator$._RestorationInformation)),
    currentState: dart.fieldType(navigator$._RouteLifecycle),
    lastAnnouncedPreviousRoute: dart.fieldType(dart.nullable(navigator$.Route)),
    lastAnnouncedPoppedNextRoute: dart.fieldType(navigator$.Route),
    lastAnnouncedNextRoute: dart.fieldType(dart.nullable(navigator$.Route)),
    doingPop: dart.fieldType(core.bool),
    [_reportRemovalToObserver]: dart.fieldType(core.bool),
    [_isWaitingForExitingDecision]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(navigator$._RouteEntry, {
    /*navigator$._RouteEntry.notAnnounced*/get notAnnounced() {
      return new navigator$._NotAnnounced.new();
    },
    set notAnnounced(_) {},
    /*navigator$._RouteEntry.isPresentPredicate*/get isPresentPredicate() {
      return dart.fn(entry => {
        if (entry == null) dart.nullFailed(L28, 3153, 71, "entry");
        return entry.isPresent;
      }, _RouteEntryTobool());
    },
    /*navigator$._RouteEntry.suitableForTransitionAnimationPredicate*/get suitableForTransitionAnimationPredicate() {
      return dart.fn(entry => {
        if (entry == null) dart.nullFailed(L28, 3154, 92, "entry");
        return entry.suitableForTransitionAnimation;
      }, _RouteEntryTobool());
    },
    /*navigator$._RouteEntry.willBePresentPredicate*/get willBePresentPredicate() {
      return dart.fn(entry => {
        if (entry == null) dart.nullFailed(L28, 3155, 75, "entry");
        return entry.willBePresent;
      }, _RouteEntryTobool());
    }
  }, false);
  navigator$._NavigatorObservation = class _NavigatorObservation extends core.Object {};
  (navigator$._NavigatorObservation.new = function(primaryRoute, secondaryRoute) {
    if (primaryRoute == null) dart.nullFailed(L28, 3234, 10, "primaryRoute");
    this.primaryRoute = primaryRoute;
    this.secondaryRoute = secondaryRoute;
    ;
  }).prototype = navigator$._NavigatorObservation.prototype;
  dart.addTypeTests(navigator$._NavigatorObservation);
  dart.addTypeCaches(navigator$._NavigatorObservation);
  dart.setLibraryUri(navigator$._NavigatorObservation, L29);
  dart.setFieldSignature(navigator$._NavigatorObservation, () => ({
    __proto__: dart.getFields(navigator$._NavigatorObservation.__proto__),
    primaryRoute: dart.finalFieldType(navigator$.Route),
    secondaryRoute: dart.finalFieldType(dart.nullable(navigator$.Route))
  }));
  navigator$._NavigatorPushObservation = class _NavigatorPushObservation extends navigator$._NavigatorObservation {
    notify(observer) {
      if (observer == null) dart.nullFailed(L28, 3250, 33, "observer");
      observer.didPush(this.primaryRoute, this.secondaryRoute);
    }
  };
  (navigator$._NavigatorPushObservation.new = function(primaryRoute, secondaryRoute) {
    if (primaryRoute == null) dart.nullFailed(L28, 3245, 20, "primaryRoute");
    navigator$._NavigatorPushObservation.__proto__.new.call(this, primaryRoute, secondaryRoute);
    ;
  }).prototype = navigator$._NavigatorPushObservation.prototype;
  dart.addTypeTests(navigator$._NavigatorPushObservation);
  dart.addTypeCaches(navigator$._NavigatorPushObservation);
  dart.setMethodSignature(navigator$._NavigatorPushObservation, () => ({
    __proto__: dart.getMethods(navigator$._NavigatorPushObservation.__proto__),
    notify: dart.fnType(dart.void, [navigator$.NavigatorObserver])
  }));
  dart.setLibraryUri(navigator$._NavigatorPushObservation, L29);
  navigator$._NavigatorPopObservation = class _NavigatorPopObservation extends navigator$._NavigatorObservation {
    notify(observer) {
      if (observer == null) dart.nullFailed(L28, 3262, 33, "observer");
      observer.didPop(this.primaryRoute, this.secondaryRoute);
    }
  };
  (navigator$._NavigatorPopObservation.new = function(primaryRoute, secondaryRoute) {
    if (primaryRoute == null) dart.nullFailed(L28, 3257, 20, "primaryRoute");
    navigator$._NavigatorPopObservation.__proto__.new.call(this, primaryRoute, secondaryRoute);
    ;
  }).prototype = navigator$._NavigatorPopObservation.prototype;
  dart.addTypeTests(navigator$._NavigatorPopObservation);
  dart.addTypeCaches(navigator$._NavigatorPopObservation);
  dart.setMethodSignature(navigator$._NavigatorPopObservation, () => ({
    __proto__: dart.getMethods(navigator$._NavigatorPopObservation.__proto__),
    notify: dart.fnType(dart.void, [navigator$.NavigatorObserver])
  }));
  dart.setLibraryUri(navigator$._NavigatorPopObservation, L29);
  navigator$._NavigatorRemoveObservation = class _NavigatorRemoveObservation extends navigator$._NavigatorObservation {
    notify(observer) {
      if (observer == null) dart.nullFailed(L28, 3274, 33, "observer");
      observer.didRemove(this.primaryRoute, this.secondaryRoute);
    }
  };
  (navigator$._NavigatorRemoveObservation.new = function(primaryRoute, secondaryRoute) {
    if (primaryRoute == null) dart.nullFailed(L28, 3269, 20, "primaryRoute");
    navigator$._NavigatorRemoveObservation.__proto__.new.call(this, primaryRoute, secondaryRoute);
    ;
  }).prototype = navigator$._NavigatorRemoveObservation.prototype;
  dart.addTypeTests(navigator$._NavigatorRemoveObservation);
  dart.addTypeCaches(navigator$._NavigatorRemoveObservation);
  dart.setMethodSignature(navigator$._NavigatorRemoveObservation, () => ({
    __proto__: dart.getMethods(navigator$._NavigatorRemoveObservation.__proto__),
    notify: dart.fnType(dart.void, [navigator$.NavigatorObserver])
  }));
  dart.setLibraryUri(navigator$._NavigatorRemoveObservation, L29);
  navigator$._NavigatorReplaceObservation = class _NavigatorReplaceObservation extends navigator$._NavigatorObservation {
    notify(observer) {
      if (observer == null) dart.nullFailed(L28, 3286, 33, "observer");
      observer.didReplace({newRoute: this.primaryRoute, oldRoute: this.secondaryRoute});
    }
  };
  (navigator$._NavigatorReplaceObservation.new = function(primaryRoute, secondaryRoute) {
    if (primaryRoute == null) dart.nullFailed(L28, 3281, 20, "primaryRoute");
    navigator$._NavigatorReplaceObservation.__proto__.new.call(this, primaryRoute, secondaryRoute);
    ;
  }).prototype = navigator$._NavigatorReplaceObservation.prototype;
  dart.addTypeTests(navigator$._NavigatorReplaceObservation);
  dart.addTypeCaches(navigator$._NavigatorReplaceObservation);
  dart.setMethodSignature(navigator$._NavigatorReplaceObservation, () => ({
    __proto__: dart.getMethods(navigator$._NavigatorReplaceObservation.__proto__),
    notify: dart.fnType(dart.void, [navigator$.NavigatorObserver])
  }));
  dart.setLibraryUri(navigator$._NavigatorReplaceObservation, L29);
  var __NavigatorState__overlayKey = dart.privateName(navigator$, "_#NavigatorState#_overlayKey");
  var __NavigatorState__overlayKey_isSet = dart.privateName(navigator$, "_#NavigatorState#_overlayKey#isSet");
  var _serializableHistory = dart.privateName(navigator$, "_serializableHistory");
  var _heroControllerFromScope = dart.privateName(navigator$, "_heroControllerFromScope");
  var __NavigatorState__effectiveObservers = dart.privateName(navigator$, "_#NavigatorState#_effectiveObservers");
  var __NavigatorState__effectiveObservers_isSet = dart.privateName(navigator$, "_#NavigatorState#_effectiveObservers#isSet");
  var _rawNextPagelessRestorationScopeId = dart.privateName(navigator$, "_rawNextPagelessRestorationScopeId");
  var _lastAnnouncedRouteName = dart.privateName(navigator$, "_lastAnnouncedRouteName");
  var _debugUpdatingPage = dart.privateName(navigator$, "_debugUpdatingPage");
  var _userGesturesInProgressCount = dart.privateName(navigator$, "_userGesturesInProgressCount");
  var _activePointers = dart.privateName(navigator$, "_activePointers");
  var _overlayKey = dart.privateName(navigator$, "_overlayKey");
  var _effectiveObservers = dart.privateName(navigator$, "_effectiveObservers");
  var _updateHeroController = dart.privateName(navigator$, "_updateHeroController");
  var _nextPagelessRestorationScopeId = dart.privateName(navigator$, "_nextPagelessRestorationScopeId");
  var _updateEffectiveObservers = dart.privateName(navigator$, "_updateEffectiveObservers");
  var _updatePages = dart.privateName(navigator$, "_updatePages");
  var _debugCheckDuplicatedPageKeys = dart.privateName(navigator$, "_debugCheckDuplicatedPageKeys");
  var _allRouteOverlayEntries = dart.privateName(navigator$, "_allRouteOverlayEntries");
  var _getRouteBefore = dart.privateName(navigator$, "_getRouteBefore");
  var _flushObserverNotifications = dart.privateName(navigator$, "_flushObserverNotifications");
  var _flushRouteAnnouncement = dart.privateName(navigator$, "_flushRouteAnnouncement");
  var _getRouteAfter = dart.privateName(navigator$, "_getRouteAfter");
  var _getIndexBefore = dart.privateName(navigator$, "_getIndexBefore");
  var _pushEntry = dart.privateName(navigator$, "_pushEntry");
  var _pushReplacementEntry = dart.privateName(navigator$, "_pushReplacementEntry");
  var _pushEntryAndRemoveUntil = dart.privateName(navigator$, "_pushEntryAndRemoveUntil");
  var _debugIsStaticCallback = dart.privateName(navigator$, "_debugIsStaticCallback");
  var _afterNavigation = dart.privateName(navigator$, "_afterNavigation");
  var _cancelActivePointers = dart.privateName(navigator$, "_cancelActivePointers");
  var _replaceEntry = dart.privateName(navigator$, "_replaceEntry");
  var _replaceEntryBelow = dart.privateName(navigator$, "_replaceEntryBelow");
  var _getRouteById = dart.privateName(navigator$, "_getRouteById");
  var _userGesturesInProgress = dart.privateName(navigator$, "_userGesturesInProgress");
  var _handlePointerDown$ = dart.privateName(navigator$, "_handlePointerDown");
  var _handlePointerUpOrCancel = dart.privateName(navigator$, "_handlePointerUpOrCancel");
  var C331;
  var C332;
  var C330;
  var C329;
  var C335;
  var C336;
  var C334;
  var C333;
  var C339;
  var C340;
  var C341;
  var C338;
  var C337;
  var C344;
  var C345;
  var C343;
  var C342;
  var C348;
  var C349;
  var C350;
  var C351;
  var C347;
  var C346;
  var C354;
  var C353;
  var C352;
  var _tickers = dart.privateName(ticker_provider, "_tickers");
  var _removeTicker = dart.privateName(ticker_provider, "_removeTicker");
  const _is_TickerProviderStateMixin_default = Symbol('_is_TickerProviderStateMixin_default');
  ticker_provider.TickerProviderStateMixin$ = dart.generic(T => {
    class TickerProviderStateMixin extends framework.State$(T) {}
    TickerProviderStateMixin[dart.mixinOn] = State => class TickerProviderStateMixin extends State {
      createTicker(onTick) {
        if (onTick == null) dart.nullFailed(L36, 200, 38, "onTick");
        this[_tickers] == null ? this[_tickers] = LinkedHashSetOf_WidgetTicker().new() : null;
        let result = new ticker_provider._WidgetTicker.new(onTick, this, {debugLabel: "created by " + dart.str(this)});
        dart.nullCheck(this[_tickers]).add(result);
        return result;
      }
      [_removeTicker](ticker) {
        if (ticker == null) dart.nullFailed(L36, 207, 36, "ticker");
        if (!(this[_tickers] != null)) dart.assertFailed(null, L36, 208, 12, "_tickers != null");
        if (!dart.test(dart.nullCheck(this[_tickers]).contains(ticker))) dart.assertFailed(null, L36, 209, 12, "_tickers!.contains(ticker)");
        dart.nullCheck(this[_tickers]).remove(ticker);
      }
      dispose() {
        if (!dart.test(dart.fn(() => {
          if (this[_tickers] != null) {
            for (let ticker of dart.nullCheck(this[_tickers])) {
              if (dart.test(ticker.isActive)) {
                dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(this) + " was disposed with an active Ticker."), new assertions.ErrorDescription.new(dart.str(this[$runtimeType]) + " created a Ticker via its TickerProviderStateMixin, but at the time " + "dispose() was called on the mixin, that Ticker was still active. All Tickers must " + "be disposed before calling super.dispose()."), new assertions.ErrorHint.new("Tickers used by AnimationControllers " + "should be disposed by calling dispose() on the AnimationController itself. " + "Otherwise, the ticker will leak."), ticker.describeForError("The offending ticker was")])));
              }
            }
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L36, 215, 12, "() {\r\n      if (_tickers != null) {\r\n        for (final Ticker ticker in _tickers!) {\r\n          if (ticker.isActive) {\r\n            throw FlutterError.fromParts(<DiagnosticsNode>[\r\n              ErrorSummary('$this was disposed with an active Ticker.'),\r\n              ErrorDescription(\r\n                '$runtimeType created a Ticker via its TickerProviderStateMixin, but at the time '\r\n                'dispose() was called on the mixin, that Ticker was still active. All Tickers must '\r\n                'be disposed before calling super.dispose().'\r\n              ),\r\n              ErrorHint(\r\n                'Tickers used by AnimationControllers '\r\n                'should be disposed by calling dispose() on the AnimationController itself. '\r\n                'Otherwise, the ticker will leak.'\r\n              ),\r\n              ticker.describeForError('The offending ticker was'),\r\n            ]);\r\n          }\r\n        }\r\n      }\r\n      return true;\r\n    }()");
        super.dispose();
      }
      didChangeDependencies() {
        let muted = !dart.test(ticker_provider.TickerMode.of(this.context));
        if (this[_tickers] != null) {
          for (let ticker of dart.nullCheck(this[_tickers])) {
            ticker.muted = muted;
          }
        }
        super.didChangeDependencies();
      }
      debugFillProperties(properties) {
        if (properties == null) dart.nullFailed(L36, 253, 56, "properties");
        super.debugFillProperties(properties);
        properties.add(new (DiagnosticsPropertyOfSetOfTicker()).new("tickers", this[_tickers], {description: this[_tickers] != null ? "tracking " + dart.str(dart.nullCheck(this[_tickers])[$length]) + " ticker" + (dart.nullCheck(this[_tickers])[$length] === 1 ? "" : "s") : null, defaultValue: null}));
      }
    };
    (TickerProviderStateMixin[dart.mixinNew] = function() {
      this[_tickers] = null;
    }).prototype = TickerProviderStateMixin.prototype;
    dart.addTypeTests(TickerProviderStateMixin);
    TickerProviderStateMixin.prototype[_is_TickerProviderStateMixin_default] = true;
    dart.addTypeCaches(TickerProviderStateMixin);
    TickerProviderStateMixin[dart.implements] = () => [ticker.TickerProvider, framework.State$(T)];
    dart.setMethodSignature(TickerProviderStateMixin, () => ({
      __proto__: dart.getMethods(TickerProviderStateMixin.__proto__),
      createTicker: dart.fnType(ticker.Ticker, [dart.fnType(dart.void, [core.Duration])]),
      [_removeTicker]: dart.fnType(dart.void, [ticker_provider._WidgetTicker])
    }));
    dart.setLibraryUri(TickerProviderStateMixin, L37);
    dart.setFieldSignature(TickerProviderStateMixin, () => ({
      __proto__: dart.getFields(TickerProviderStateMixin.__proto__),
      [_tickers]: dart.fieldType(dart.nullable(core.Set$(ticker.Ticker)))
    }));
    return TickerProviderStateMixin;
  });
  ticker_provider.TickerProviderStateMixin = ticker_provider.TickerProviderStateMixin$();
  dart.addTypeTests(ticker_provider.TickerProviderStateMixin, _is_TickerProviderStateMixin_default);
  var _bucket = dart.privateName(restoration$, "_bucket");
  var _properties = dart.privateName(restoration$, "_properties");
  var _debugPropertiesWaitingForReregistration = dart.privateName(restoration$, "_debugPropertiesWaitingForReregistration");
  var _firstRestorePending = dart.privateName(restoration$, "_firstRestorePending");
  var _currentParent = dart.privateName(restoration$, "_currentParent");
  var _restorationId = dart.privateName(restoration$, "_restorationId");
  var _debugDoingRestore = dart.privateName(restoration$, "_debugDoingRestore");
  var _register = dart.privateName(restoration$, "_register");
  var _updateProperty = dart.privateName(restoration$, "_updateProperty");
  var _owner$ = dart.privateName(restoration$, "_owner");
  var _unregister = dart.privateName(restoration$, "_unregister");
  var _updateBucketIfNecessary = dart.privateName(restoration$, "_updateBucketIfNecessary");
  var _doRestore = dart.privateName(restoration$, "_doRestore");
  var _setNewBucketIfNecessary = dart.privateName(restoration$, "_setNewBucketIfNecessary");
  var _disposed = dart.privateName(restoration$, "_disposed");
  const _is_RestorationMixin_default = Symbol('_is_RestorationMixin_default');
  restoration$.RestorationMixin$ = dart.generic(S => {
    class RestorationMixin extends framework.State$(S) {}
    RestorationMixin[dart.mixinOn] = State => class RestorationMixin extends State {
      get bucket() {
        return this[_bucket];
      }
      didToggleBucket(oldBucket) {
        let t27;
        if (!!dart.equals((t27 = this[_bucket], t27 == null ? null : t27.isReplacing), true)) dart.assertFailed(null, L38, 808, 12, "_bucket?.isReplacing != true");
      }
      registerForRestoration(property, restorationId) {
        let t27;
        if (property == null) dart.nullFailed(L38, 836, 59, "property");
        if (restorationId == null) dart.nullFailed(L38, 836, 76, "restorationId");
        if (!(property != null)) dart.assertFailed(null, L38, 837, 12, "property != null");
        if (!(restorationId != null)) dart.assertFailed(null, L38, 838, 12, "restorationId != null");
        if (!(property[_restorationId] == null || dart.test(this[_debugDoingRestore]) && property[_restorationId] == restorationId)) dart.assertFailed("Property is already registered under " + dart.str(property[_restorationId]) + ".", L38, 839, 12, "property._restorationId == null || (_debugDoingRestore && property._restorationId == restorationId)");
        if (!(dart.test(this[_debugDoingRestore]) || !dart.test(this[_properties][$keys][$map](StringN(), dart.fn(r => {
          if (r == null) dart.nullFailed(L38, 842, 85, "r");
          return r[_restorationId];
        }, RestorablePropertyOfObjectNToStringN()))[$contains](restorationId)))) dart.assertFailed("\"" + dart.str(restorationId) + "\" is already registered to another property.", L38, 842, 12, "_debugDoingRestore || !_properties.keys.map((RestorableProperty<Object?> r) => r._restorationId).contains(restorationId)");
        let hasSerializedValue = dart.equals((t27 = this.bucket, t27 == null ? null : t27.contains(restorationId)), true);
        let initialValue = hasSerializedValue ? property.fromPrimitives(dart.nullCheck(this.bucket).read(core.Object, restorationId)) : property.createDefaultValue();
        if (!dart.test(property.isRegistered)) {
          property[_register](restorationId, this);
          let listener = dart.fn(() => {
            if (this.bucket == null) return;
            this[_updateProperty](property);
          }, VoidTovoid());
          property.addListener(listener);
          this[_properties][$_set](property, listener);
        }
        if (!(property[_restorationId] == restorationId && dart.equals(property[_owner$], this) && dart.test(this[_properties][$containsKey](property)))) dart.assertFailed(null, L38, 862, 7, "property._restorationId == restorationId &&\r\n      property._owner == this &&\r\n      _properties.containsKey(property)");
        property.initWithValue(initialValue);
        if (!hasSerializedValue && dart.test(property.enabled) && this.bucket != null) {
          this[_updateProperty](property);
        }
        if (!dart.test(dart.fn(() => {
          let t27;
          t27 = this[_debugPropertiesWaitingForReregistration];
          t27 == null ? null : t27[$remove](property);
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L38, 872, 12, "() {\r\n      _debugPropertiesWaitingForReregistration?.remove(property);\r\n      return true;\r\n    }()");
      }
      unregisterFromRestoration(property) {
        let t27;
        if (property == null) dart.nullFailed(L38, 889, 62, "property");
        if (!(property != null)) dart.assertFailed(null, L38, 890, 12, "property != null");
        if (!dart.equals(property[_owner$], this)) dart.assertFailed(null, L38, 891, 12, "property._owner == this");
        t27 = this[_bucket];
        t27 == null ? null : t27.remove(ObjectN(), dart.nullCheck(property[_restorationId]));
        this[_unregister](property);
      }
      didUpdateRestorationId() {
        let t27, t27$;
        if (this[_currentParent] == null || (t27 = this[_bucket], t27 == null ? null : t27.restorationId) == this.restorationId || dart.test(this.restorePending)) {
          return;
        }
        let oldBucket = this[_bucket];
        if (!!dart.test(this.restorePending)) dart.assertFailed(null, L38, 913, 12, "!restorePending");
        let didReplaceBucket = this[_updateBucketIfNecessary]({parent: this[_currentParent], restorePending: false});
        if (dart.test(didReplaceBucket)) {
          if (!!dart.equals(oldBucket, this[_bucket])) dart.assertFailed(null, L38, 916, 14, "oldBucket != _bucket");
          if (!(this[_bucket] == null || oldBucket == null)) dart.assertFailed(null, L38, 917, 14, "_bucket == null || oldBucket == null");
          t27$ = oldBucket;
          t27$ == null ? null : t27$.dispose();
        }
      }
      didUpdateWidget(oldWidget) {
        S.as(oldWidget);
        if (oldWidget == null) dart.nullFailed(L38, 923, 26, "oldWidget");
        super.didUpdateWidget(oldWidget);
        this.didUpdateRestorationId();
      }
      get restorePending() {
        let t27;
        if (dart.test(this[_firstRestorePending])) {
          return true;
        }
        if (this.restorationId == null) {
          return false;
        }
        let potentialNewParent = restoration$.RestorationScope.of(this.context);
        return !dart.equals(potentialNewParent, this[_currentParent]) && dart.equals((t27 = potentialNewParent, t27 == null ? null : t27.isReplacing), true);
      }
      get [_debugDoingRestore]() {
        return this[_debugPropertiesWaitingForReregistration] != null;
      }
      didChangeDependencies() {
        let t27;
        super.didChangeDependencies();
        let oldBucket = this[_bucket];
        let needsRestore = this.restorePending;
        this[_currentParent] = restoration$.RestorationScope.of(this.context);
        let didReplaceBucket = this[_updateBucketIfNecessary]({parent: this[_currentParent], restorePending: needsRestore});
        if (dart.test(needsRestore)) {
          this[_doRestore](oldBucket);
        }
        if (dart.test(didReplaceBucket)) {
          if (!!dart.equals(oldBucket, this[_bucket])) dart.assertFailed(null, L38, 971, 14, "oldBucket != _bucket");
          t27 = oldBucket;
          t27 == null ? null : t27.dispose();
        }
      }
      [_doRestore](oldBucket) {
        if (!dart.test(dart.fn(() => {
          this[_debugPropertiesWaitingForReregistration] = this[_properties][$keys][$toList]();
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L38, 977, 12, "() {\r\n      _debugPropertiesWaitingForReregistration = _properties.keys.toList();\r\n      return true;\r\n    }()");
        this.restoreState(oldBucket, this[_firstRestorePending]);
        this[_firstRestorePending] = false;
        if (!dart.test(dart.fn(() => {
          if (dart.test(dart.nullCheck(this[_debugPropertiesWaitingForReregistration])[$isNotEmpty])) {
            dart.throw(new assertions.FlutterError.fromParts((() => {
              let t27 = JSArrayOfDiagnosticsNode().of([]);
              t27.push(new assertions.ErrorSummary.new("Previously registered RestorableProperties must be re-registered in \"restoreState\"."));
              t27.push(new assertions.ErrorDescription.new("The RestorableProperties with the following IDs were not re-registered to " + dart.str(this) + " when " + "\"restoreState\" was called:"));
              for (let t28 of dart.nullCheck(this[_debugPropertiesWaitingForReregistration])[$map](diagnostics$.DiagnosticsNode, dart.fn(property => {
                if (property == null) dart.nullFailed(L38, 995, 89, "property");
                return new assertions.ErrorDescription.new(" * " + dart.str(property[_restorationId]));
              }, RestorablePropertyOfObjectNToErrorDescription())))
                t27.push(t28);
              return t27;
            })()));
          }
          this[_debugPropertiesWaitingForReregistration] = null;
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L38, 985, 12, "() {\r\n      if (_debugPropertiesWaitingForReregistration!.isNotEmpty) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary(\r\n            'Previously registered RestorableProperties must be re-registered in \"restoreState\".',\r\n          ),\r\n          ErrorDescription(\r\n            'The RestorableProperties with the following IDs were not re-registered to $this when '\r\n                '\"restoreState\" was called:',\r\n          ),\r\n          ..._debugPropertiesWaitingForReregistration!.map((RestorableProperty<Object?> property) => ErrorDescription(\r\n            ' * ${property._restorationId}',\r\n          )),\r\n        ]);\r\n      }\r\n      _debugPropertiesWaitingForReregistration = null;\r\n      return true;\r\n    }()");
      }
      [_updateBucketIfNecessary](opts) {
        let parent = opts && 'parent' in opts ? opts.parent : null;
        let restorePending = opts && 'restorePending' in opts ? opts.restorePending : null;
        if (restorePending == null) dart.nullFailed(L38, 1009, 19, "restorePending");
        if (this.restorationId == null || parent == null) {
          let didReplace = this[_setNewBucketIfNecessary]({newBucket: null, restorePending: restorePending});
          if (!(this[_bucket] == null)) dart.assertFailed(null, L38, 1013, 14, "_bucket == null");
          return didReplace;
        }
        if (!(this.restorationId != null)) dart.assertFailed(null, L38, 1016, 12, "restorationId != null");
        if (!(parent != null)) dart.assertFailed(null, L38, 1017, 12, "parent != null");
        if (dart.test(restorePending) || this[_bucket] == null) {
          let newBucket = parent.claimChild(dart.nullCheck(this.restorationId), {debugOwner: this});
          if (!(newBucket != null)) dart.assertFailed(null, L38, 1020, 14, "newBucket != null");
          let didReplace = this[_setNewBucketIfNecessary]({newBucket: newBucket, restorePending: restorePending});
          if (!dart.equals(this[_bucket], newBucket)) dart.assertFailed(null, L38, 1022, 14, "_bucket == newBucket");
          return didReplace;
        }
        if (!(this[_bucket] != null)) dart.assertFailed(null, L38, 1026, 12, "_bucket != null");
        if (!!dart.test(restorePending)) dart.assertFailed(null, L38, 1027, 12, "!restorePending");
        dart.nullCheck(this[_bucket]).rename(dart.nullCheck(this.restorationId));
        parent.adoptChild(dart.nullCheck(this[_bucket]));
        return false;
      }
      [_setNewBucketIfNecessary](opts) {
        let newBucket = opts && 'newBucket' in opts ? opts.newBucket : null;
        let restorePending = opts && 'restorePending' in opts ? opts.restorePending : null;
        if (restorePending == null) dart.nullFailed(L38, 1035, 87, "restorePending");
        if (dart.equals(newBucket, this[_bucket])) {
          return false;
        }
        let oldBucket = this[_bucket];
        this[_bucket] = newBucket;
        if (!dart.test(restorePending)) {
          if (this[_bucket] != null) {
            this[_properties][$keys][$forEach](dart.bind(this, _updateProperty));
          }
          this.didToggleBucket(oldBucket);
        }
        return true;
      }
      [_updateProperty](property) {
        let t29, t29$;
        if (property == null) dart.nullFailed(L38, 1051, 52, "property");
        if (dart.test(property.enabled)) {
          t29 = this[_bucket];
          t29 == null ? null : t29.write(ObjectN(), dart.nullCheck(property[_restorationId]), property.toPrimitives());
        } else {
          t29$ = this[_bucket];
          t29$ == null ? null : t29$.remove(core.Object, dart.nullCheck(property[_restorationId]));
        }
      }
      [_unregister](property) {
        if (property == null) dart.nullFailed(L38, 1059, 48, "property");
        let listener = dart.nullCheck(this[_properties][$remove](property));
        if (!dart.test(dart.fn(() => {
          let t29;
          t29 = this[_debugPropertiesWaitingForReregistration];
          t29 == null ? null : t29[$remove](property);
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L38, 1061, 12, "() {\r\n      _debugPropertiesWaitingForReregistration?.remove(property);\r\n      return true;\r\n    }()");
        property.removeListener(listener);
        property[_unregister]();
      }
      dispose() {
        let t29;
        this[_properties][$forEach](dart.fn((property, listener) => {
          if (property == null) dart.nullFailed(L38, 1071, 54, "property");
          if (listener == null) dart.nullFailed(L38, 1071, 77, "listener");
          if (!dart.test(property[_disposed])) {
            property.removeListener(listener);
          }
        }, RestorablePropertyOfObjectNAndFnTovoid()));
        t29 = this[_bucket];
        t29 == null ? null : t29.dispose();
        this[_bucket] = null;
        super.dispose();
      }
    };
    (RestorationMixin[dart.mixinNew] = function() {
      this[_bucket] = null;
      this[_properties] = new (LinkedMapOfRestorablePropertyOfObjectN$VoidTovoid()).new();
      this[_debugPropertiesWaitingForReregistration] = null;
      this[_firstRestorePending] = true;
      this[_currentParent] = null;
    }).prototype = RestorationMixin.prototype;
    dart.addTypeTests(RestorationMixin);
    RestorationMixin.prototype[_is_RestorationMixin_default] = true;
    dart.addTypeCaches(RestorationMixin);
    RestorationMixin[dart.implements] = () => [framework.State$(S)];
    dart.setMethodSignature(RestorationMixin, () => ({
      __proto__: dart.getMethods(RestorationMixin.__proto__),
      didToggleBucket: dart.fnType(dart.void, [dart.nullable(restoration.RestorationBucket)]),
      registerForRestoration: dart.fnType(dart.void, [restoration$.RestorableProperty$(dart.nullable(core.Object)), core.String]),
      unregisterFromRestoration: dart.fnType(dart.void, [restoration$.RestorableProperty$(dart.nullable(core.Object))]),
      didUpdateRestorationId: dart.fnType(dart.void, []),
      [_doRestore]: dart.fnType(dart.void, [dart.nullable(restoration.RestorationBucket)]),
      [_updateBucketIfNecessary]: dart.fnType(core.bool, [], {}, {parent: dart.nullable(restoration.RestorationBucket), restorePending: core.bool}),
      [_setNewBucketIfNecessary]: dart.fnType(core.bool, [], {}, {newBucket: dart.nullable(restoration.RestorationBucket), restorePending: core.bool}),
      [_updateProperty]: dart.fnType(dart.void, [restoration$.RestorableProperty$(dart.nullable(core.Object))]),
      [_unregister]: dart.fnType(dart.void, [restoration$.RestorableProperty$(dart.nullable(core.Object))])
    }));
    dart.setGetterSignature(RestorationMixin, () => ({
      __proto__: dart.getGetters(RestorationMixin.__proto__),
      bucket: dart.nullable(restoration.RestorationBucket),
      restorePending: core.bool,
      [_debugDoingRestore]: core.bool
    }));
    dart.setLibraryUri(RestorationMixin, L39);
    dart.setFieldSignature(RestorationMixin, () => ({
      __proto__: dart.getFields(RestorationMixin.__proto__),
      [_bucket]: dart.fieldType(dart.nullable(restoration.RestorationBucket)),
      [_properties]: dart.finalFieldType(core.Map$(restoration$.RestorableProperty$(dart.nullable(core.Object)), dart.fnType(dart.void, []))),
      [_debugPropertiesWaitingForReregistration]: dart.fieldType(dart.nullable(core.List$(restoration$.RestorableProperty$(dart.nullable(core.Object))))),
      [_firstRestorePending]: dart.fieldType(core.bool),
      [_currentParent]: dart.fieldType(dart.nullable(restoration.RestorationBucket))
    }));
    return RestorationMixin;
  });
  restoration$.RestorationMixin = restoration$.RestorationMixin$();
  dart.addTypeTests(restoration$.RestorationMixin, _is_RestorationMixin_default);
  var focusScopeNode = dart.privateName(navigator$, "NavigatorState.focusScopeNode");
  var userGestureInProgressNotifier = dart.privateName(navigator$, "NavigatorState.userGestureInProgressNotifier");
  const State_TickerProviderStateMixin$36 = class State_TickerProviderStateMixin extends framework.State$(navigator$.Navigator) {};
  (State_TickerProviderStateMixin$36.new = function() {
    ticker_provider.TickerProviderStateMixin$(navigator$.Navigator)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36, ticker_provider.TickerProviderStateMixin$(navigator$.Navigator));
  const State_RestorationMixin$36 = class State_RestorationMixin extends State_TickerProviderStateMixin$36 {};
  (State_RestorationMixin$36.new = function() {
    restoration$.RestorationMixin$(navigator$.Navigator)[dart.mixinNew].call(this);
    State_RestorationMixin$36.__proto__.new.call(this);
  }).prototype = State_RestorationMixin$36.prototype;
  dart.applyMixin(State_RestorationMixin$36, restoration$.RestorationMixin$(navigator$.Navigator));
  navigator$.NavigatorState = class NavigatorState extends State_RestorationMixin$36 {
    get focusScopeNode() {
      return this[focusScopeNode];
    }
    set focusScopeNode(value) {
      super.focusScopeNode = value;
    }
    get userGestureInProgressNotifier() {
      return this[userGestureInProgressNotifier];
    }
    set userGestureInProgressNotifier(value) {
      super.userGestureInProgressNotifier = value;
    }
    get [_overlayKey]() {
      let t25;
      return dart.test(this[__NavigatorState__overlayKey_isSet]) ? (t25 = this[__NavigatorState__overlayKey], t25) : dart.throw(new _internal.LateError.fieldNI("_overlayKey"));
    }
    set [_overlayKey](t25) {
      if (t25 == null) dart.nullFailed(L28, 3295, 32, "null");
      this[__NavigatorState__overlayKey_isSet] = true;
      this[__NavigatorState__overlayKey] = t25;
    }
    get [_effectiveObservers]() {
      let t26;
      return dart.test(this[__NavigatorState__effectiveObservers_isSet]) ? (t26 = this[__NavigatorState__effectiveObservers], t26) : dart.throw(new _internal.LateError.fieldNI("_effectiveObservers"));
    }
    set [_effectiveObservers](t26) {
      if (t26 == null) dart.nullFailed(L28, 3308, 32, "null");
      this[__NavigatorState__effectiveObservers_isSet] = true;
      this[__NavigatorState__effectiveObservers] = t26;
    }
    initState() {
      let t27, t27$;
      super.initState();
      if (!(dart.test(this.widget.pages[$isEmpty]) || this.widget.onPopPage != null)) dart.assertFailed("The Navigator.onPopPage must be provided to use the Navigator.pages API", L28, 3314, 7, "widget.pages.isEmpty || widget.onPopPage != null");
      for (let observer of this.widget.observers) {
        if (!(observer.navigator == null)) dart.assertFailed(null, L28, 3318, 14, "observer.navigator == null");
        observer[_navigator] = this;
      }
      this[_effectiveObservers] = this.widget.observers;
      let heroControllerScope = HeroControllerScopeN().as((t27 = this.context.getElementForInheritedWidgetOfExactType(navigator$.HeroControllerScope), t27 == null ? null : t27.widget));
      this[_updateHeroController]((t27$ = heroControllerScope, t27$ == null ? null : t27$.controller));
    }
    get [_nextPagelessRestorationScopeId]() {
      let t28, t27;
      t27 = this[_rawNextPagelessRestorationScopeId];
      t28 = t27.value;
      t27.value = dart.notNull(t28) + 1;
      return t28;
    }
    restoreState(oldBucket, initialRestore) {
      let t27, t27$, t28, t27$0;
      if (initialRestore == null) dart.nullFailed(L28, 3337, 56, "initialRestore");
      this.registerForRestoration(this[_rawNextPagelessRestorationScopeId], "id");
      this.registerForRestoration(this[_serializableHistory], "history");
      while (dart.test(this[_history][$isNotEmpty])) {
        this[_history][$removeLast]().dispose();
      }
      if (!dart.test(this[_history][$isEmpty])) dart.assertFailed(null, L28, 3345, 12, "_history.isEmpty");
      this[_overlayKey] = GlobalKeyOfOverlayState().new();
      this[_history][$addAll](this[_serializableHistory].restoreEntriesForPage(null, this));
      for (let page of this.widget.pages) {
        let entry = new navigator$._RouteEntry.new(page.createRoute(this.context), {initialState: navigator$._RouteLifecycle.add});
        if (!dart.equals(entry.route.settings, page)) dart.assertFailed("The settings getter of a page-based Route must return a Page object. " + "Please set the settings to the Page in the Page.createRoute method.", L28, 3356, 9, "entry.route.settings == page");
        this[_history][$add](entry);
        this[_history][$addAll](this[_serializableHistory].restoreEntriesForPage(entry, this));
      }
      if (!dart.test(this[_serializableHistory].hasData)) {
        let initialRoute = this.widget.initialRoute;
        if (dart.test(this.widget.pages[$isEmpty])) {
          initialRoute = (t27 = initialRoute, t27 == null ? "/" : t27);
        }
        if (initialRoute != null) {
          this[_history][$addAll]((t27$0 = this.widget, t28 = (t27$ = this.widget.initialRoute, t27$ == null ? "/" : t27$), t27$0.onGenerateInitialRoutes(this, t28))[$map](navigator$._RouteEntry, dart.fn(route => {
            if (route == null) dart.nullFailed(L28, 3375, 33, "route");
            return new navigator$._RouteEntry.new(route, {initialState: navigator$._RouteLifecycle.add, restorationInformation: route.settings.name != null ? new navigator$._NamedRestorationInformation.new({name: dart.nullCheck(route.settings.name), arguments: null, restorationScopeId: this[_nextPagelessRestorationScopeId]}) : null});
          }, RouteTo_RouteEntry())));
        }
      }
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, L28, 3391, 12, "!_debugLocked");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 3392, 12, "() { _debugLocked = true; return true; }()");
      this[_flushHistoryUpdates]();
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 3394, 12, "() { _debugLocked = false; return true; }()");
    }
    didToggleBucket(oldBucket) {
      super.didToggleBucket(oldBucket);
      if (this.bucket != null) {
        this[_serializableHistory].update(this[_history]);
      } else {
        this[_serializableHistory].clear();
      }
    }
    get restorationId() {
      return this.widget.restorationScopeId;
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this[_updateHeroController](navigator$.HeroControllerScope.of(this.context));
    }
    [_updateHeroController](newHeroController) {
      let t27, t27$;
      if (!dart.equals(this[_heroControllerFromScope], newHeroController)) {
        if (newHeroController != null) {
          if (!dart.test(dart.fn(() => {
            if (newHeroController.navigator != null) {
              let previousOwner = dart.nullCheck(newHeroController.navigator);
              dart.nullCheck(binding$0.ServicesBinding.instance).addPostFrameCallback(dart.fn(timestamp => {
                if (timestamp == null) dart.nullFailed(L28, 3425, 70, "timestamp");
                if (dart.equals(this[_heroControllerFromScope], newHeroController)) {
                  if (!dart.equals(dart.nullCheck(this[_heroControllerFromScope])[_navigator], this)) dart.assertFailed(null, L28, 3428, 24, "_heroControllerFromScope!._navigator == this");
                  if (!!dart.equals(previousOwner[_heroControllerFromScope], newHeroController)) dart.assertFailed(null, L28, 3429, 24, "previousOwner._heroControllerFromScope != newHeroController");
                }
              }, DurationTovoid()));
            }
            return true;
          }, VoidTobool())())) dart.assertFailed(null, L28, 3419, 16, "() {\r\n          // It is possible that the hero controller subscribes to an existing\r\n          // navigator. We are fine as long as that navigator gives up the hero\r\n          // controller at the end of the build.\r\n          if (newHeroController.navigator != null) {\r\n            final NavigatorState previousOwner = newHeroController.navigator!;\r\n            ServicesBinding.instance!.addPostFrameCallback((Duration timestamp) {\r\n              // We only check if this navigator still owns the hero controller.\r\n              if (_heroControllerFromScope == newHeroController) {\r\n                assert(_heroControllerFromScope!._navigator == this);\r\n                assert(previousOwner._heroControllerFromScope != newHeroController);\r\n              }\r\n            });\r\n          }\r\n          return true;\r\n        }()");
          newHeroController[_navigator] = this;
        }
        if (dart.equals((t27 = this[_heroControllerFromScope], t27 == null ? null : t27[_navigator]), this)) {
          t27$ = this[_heroControllerFromScope];
          t27$ == null ? null : t27$[_navigator] = null;
        }
        this[_heroControllerFromScope] = newHeroController;
        this[_updateEffectiveObservers]();
      }
    }
    [_updateEffectiveObservers]() {
      if (this[_heroControllerFromScope] != null)
        this[_effectiveObservers] = this.widget.observers[$plus](JSArrayOfNavigatorObserver().of([dart.nullCheck(this[_heroControllerFromScope])]));
      else
        this[_effectiveObservers] = this.widget.observers;
    }
    didUpdateWidget(oldWidget) {
      navigator$.Navigator.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L28, 3454, 34, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!(dart.test(this.widget.pages[$isEmpty]) || this.widget.onPopPage != null)) dart.assertFailed("The Navigator.onPopPage must be provided to use the Navigator.pages API", L28, 3457, 7, "widget.pages.isEmpty || widget.onPopPage != null");
      if (!dart.equals(oldWidget.observers, this.widget.observers)) {
        for (let observer of oldWidget.observers)
          observer[_navigator] = null;
        for (let observer of this.widget.observers) {
          if (!(observer.navigator == null)) dart.assertFailed(null, L28, 3464, 16, "observer.navigator == null");
          observer[_navigator] = this;
        }
        this[_updateEffectiveObservers]();
      }
      if (!dart.equals(oldWidget.pages, this.widget.pages) && !dart.test(this.restorePending)) {
        if (!dart.test(this.widget.pages[$isNotEmpty])) dart.assertFailed("To use the Navigator.pages, there must be at least one page in the list.", L28, 3471, 9, "widget.pages.isNotEmpty");
        this[_updatePages]();
      }
      for (let entry of this[_history])
        entry.route.changedExternalState();
    }
    [_debugCheckDuplicatedPageKeys]() {
      if (!dart.test(dart.fn(() => {
        let keyReservation = LinkedHashSetOfKey().new();
        for (let page of this.widget.pages) {
          let key = page.key;
          if (key != null) {
            if (!!dart.test(keyReservation.contains(key))) dart.assertFailed(null, L28, 3487, 18, "!keyReservation.contains(key)");
            keyReservation.add(key);
          }
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 3482, 12, "(){\r\n      final Set<Key> keyReservation = <Key>{};\r\n      for (final Page<dynamic> page in widget.pages) {\r\n        final LocalKey? key = page.key;\r\n        if (key != null) {\r\n          assert(!keyReservation.contains(key));\r\n          keyReservation.add(key);\r\n        }\r\n      }\r\n      return true;\r\n    }()");
    }
    dispose() {
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, L28, 3497, 12, "!_debugLocked");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 3498, 12, "() {\r\n      _debugLocked = true;\r\n      return true;\r\n    }()");
      this[_updateHeroController](null);
      for (let observer of this[_effectiveObservers])
        observer[_navigator] = null;
      this.focusScopeNode.dispose();
      for (let entry of this[_history])
        entry.dispose();
      super.dispose();
      if (!dart.test(this[_debugLocked])) dart.assertFailed(null, L28, 3510, 12, "_debugLocked");
    }
    get overlay() {
      return this[_overlayKey].currentState;
    }
    get [_allRouteOverlayEntries]() {
      return new (SyncIterableOfOverlayEntry()).new((function* _allRouteOverlayEntries() {
        for (let entry of this[_history])
          yield* entry.route.overlayEntries;
      }).bind(this));
    }
    [_updatePages]() {
      if (!dart.test(dart.fn(() => {
        if (!!dart.test(this[_debugUpdatingPage])) dart.assertFailed(null, L28, 3526, 14, "!_debugUpdatingPage");
        this[_debugCheckDuplicatedPageKeys]();
        this[_debugUpdatingPage] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 3525, 12, "() {\r\n      assert(!_debugUpdatingPage);\r\n      _debugCheckDuplicatedPageKeys();\r\n      _debugUpdatingPage = true;\r\n      return true;\r\n    }()");
      let needsExplicitDecision = false;
      let newPagesBottom = 0;
      let oldEntriesBottom = 0;
      let newPagesTop = dart.notNull(this.widget.pages[$length]) - 1;
      let oldEntriesTop = dart.notNull(this[_history][$length]) - 1;
      let newHistory = JSArrayOf_RouteEntry().of([]);
      let pageRouteToPagelessRoutes = new (LinkedMapOf_RouteEntryN$ListOf_RouteEntry()).new();
      let previousOldPageRouteEntry = null;
      while (oldEntriesBottom <= oldEntriesTop) {
        let oldEntry = this[_history][$_get](oldEntriesBottom);
        if (!(oldEntry != null && !dart.equals(oldEntry.currentState, navigator$._RouteLifecycle.disposed))) dart.assertFailed(null, L28, 3583, 14, "oldEntry != null && oldEntry.currentState != _RouteLifecycle.disposed");
        if (!dart.test(oldEntry.hasPage)) {
          let pagelessRoutes = pageRouteToPagelessRoutes[$putIfAbsent](previousOldPageRouteEntry, dart.fn(() => JSArrayOf_RouteEntry().of([]), VoidToListOf_RouteEntry()));
          pagelessRoutes[$add](oldEntry);
          oldEntriesBottom = oldEntriesBottom + 1;
          continue;
        }
        if (newPagesBottom > newPagesTop) break;
        let newPage = this.widget.pages[$_get](newPagesBottom);
        if (!dart.test(oldEntry.canUpdateFrom(newPage))) break;
        previousOldPageRouteEntry = oldEntry;
        oldEntry.route[_updateSettings](newPage);
        newHistory[$add](oldEntry);
        newPagesBottom = newPagesBottom + 1;
        oldEntriesBottom = oldEntriesBottom + 1;
      }
      let pagelessRoutesToSkip = 0;
      while (oldEntriesBottom <= oldEntriesTop && newPagesBottom <= newPagesTop) {
        let oldEntry = this[_history][$_get](oldEntriesTop);
        if (!(oldEntry != null && !dart.equals(oldEntry.currentState, navigator$._RouteLifecycle.disposed))) dart.assertFailed(null, L28, 3612, 14, "oldEntry != null && oldEntry.currentState != _RouteLifecycle.disposed");
        if (!dart.test(oldEntry.hasPage)) {
          pagelessRoutesToSkip = pagelessRoutesToSkip + 1;
          oldEntriesTop = oldEntriesTop - 1;
          continue;
        }
        let newPage = this.widget.pages[$_get](newPagesTop);
        if (!dart.test(oldEntry.canUpdateFrom(newPage))) break;
        pagelessRoutesToSkip = 0;
        oldEntriesTop = oldEntriesTop - 1;
        newPagesTop = newPagesTop - 1;
      }
      oldEntriesTop = oldEntriesTop + pagelessRoutesToSkip;
      let oldEntriesBottomToScan = oldEntriesBottom;
      let pageKeyToOldEntry = new (LinkedMapOfLocalKey$_RouteEntry()).new();
      while (oldEntriesBottomToScan <= oldEntriesTop) {
        let oldEntry = this[_history][$_get](oldEntriesBottomToScan);
        oldEntriesBottomToScan = oldEntriesBottomToScan + 1;
        if (!(oldEntry != null && !dart.equals(oldEntry.currentState, navigator$._RouteLifecycle.disposed))) dart.assertFailed(null, L28, 3638, 9, "oldEntry != null &&\r\n        oldEntry.currentState != _RouteLifecycle.disposed");
        if (!dart.test(oldEntry.hasPage)) continue;
        if (!dart.test(oldEntry.hasPage)) dart.assertFailed(null, L28, 3646, 14, "oldEntry.hasPage");
        let page = navigator$.Page.as(oldEntry.route.settings);
        if (page.key == null) continue;
        if (!!dart.test(pageKeyToOldEntry[$containsKey](page.key))) dart.assertFailed(null, L28, 3652, 14, "!pageKeyToOldEntry.containsKey(page.key)");
        pageKeyToOldEntry[$_set](dart.nullCheck(page.key), oldEntry);
      }
      while (newPagesBottom <= newPagesTop) {
        let nextPage = this.widget.pages[$_get](newPagesBottom);
        newPagesBottom = newPagesBottom + 1;
        if (nextPage.key == null || !dart.test(pageKeyToOldEntry[$containsKey](nextPage.key)) || !dart.test(dart.nullCheck(pageKeyToOldEntry[$_get](nextPage.key)).canUpdateFrom(nextPage))) {
          let newEntry = new navigator$._RouteEntry.new(nextPage.createRoute(this.context), {initialState: navigator$._RouteLifecycle.staging});
          needsExplicitDecision = true;
          if (!dart.equals(newEntry.route.settings, nextPage)) dart.assertFailed("The settings getter of a page-based Route must return a Page object. " + "Please set the settings to the Page in the Page.createRoute method.", L28, 3674, 11, "newEntry.route.settings == nextPage");
          newHistory[$add](newEntry);
        } else {
          let matchingEntry = dart.nullCheck(pageKeyToOldEntry[$remove](nextPage.key));
          if (!dart.test(matchingEntry.canUpdateFrom(nextPage))) dart.assertFailed(null, L28, 3682, 16, "matchingEntry.canUpdateFrom(nextPage)");
          matchingEntry.route[_updateSettings](nextPage);
          newHistory[$add](matchingEntry);
        }
      }
      let locationToExitingPageRoute = new (LinkedMapOfRouteTransitionRecordN$RouteTransitionRecord()).new();
      while (oldEntriesBottom <= oldEntriesTop) {
        let potentialEntryToRemove = this[_history][$_get](oldEntriesBottom);
        oldEntriesBottom = oldEntriesBottom + 1;
        if (!dart.test(potentialEntryToRemove.hasPage)) {
          if (!(previousOldPageRouteEntry != null)) dart.assertFailed(null, L28, 3695, 16, "previousOldPageRouteEntry != null");
          let pagelessRoutes = pageRouteToPagelessRoutes[$putIfAbsent](previousOldPageRouteEntry, dart.fn(() => JSArrayOf_RouteEntry().of([]), VoidToListOf_RouteEntry()));
          pagelessRoutes[$add](potentialEntryToRemove);
          if (dart.test(dart.nullCheck(previousOldPageRouteEntry).isWaitingForExitingDecision) && dart.test(potentialEntryToRemove.isPresent)) potentialEntryToRemove.markNeedsExitingDecision();
          continue;
        }
        let potentialPageToRemove = navigator$.Page.as(potentialEntryToRemove.route.settings);
        if (potentialPageToRemove.key == null || dart.test(pageKeyToOldEntry[$containsKey](potentialPageToRemove.key))) {
          locationToExitingPageRoute[$_set](previousOldPageRouteEntry, potentialEntryToRemove);
          if (dart.test(potentialEntryToRemove.isPresent)) potentialEntryToRemove.markNeedsExitingDecision();
        }
        previousOldPageRouteEntry = potentialEntryToRemove;
      }
      if (!(oldEntriesBottom === oldEntriesTop + 1)) dart.assertFailed(null, L28, 3723, 12, "oldEntriesBottom == oldEntriesTop + 1");
      if (!(newPagesBottom === newPagesTop + 1)) dart.assertFailed(null, L28, 3724, 12, "newPagesBottom == newPagesTop + 1");
      newPagesTop = dart.notNull(this.widget.pages[$length]) - 1;
      oldEntriesTop = dart.notNull(this[_history][$length]) - 1;
      if (!dart.test(dart.fn(() => {
        if (oldEntriesBottom <= oldEntriesTop)
          return newPagesBottom <= newPagesTop && dart.test(this[_history][$_get](oldEntriesBottom).hasPage) && dart.test(this[_history][$_get](oldEntriesBottom).canUpdateFrom(this.widget.pages[$_get](newPagesBottom)));
        else
          return newPagesBottom > newPagesTop;
      }, VoidTobool())())) dart.assertFailed(null, L28, 3729, 12, "() {\r\n      if (oldEntriesBottom <= oldEntriesTop)\r\n        return newPagesBottom <= newPagesTop &&\r\n          _history[oldEntriesBottom].hasPage &&\r\n          _history[oldEntriesBottom].canUpdateFrom(widget.pages[newPagesBottom]);\r\n      else\r\n        return newPagesBottom > newPagesTop;\r\n    }()");
      while (oldEntriesBottom <= oldEntriesTop && newPagesBottom <= newPagesTop) {
        let oldEntry = this[_history][$_get](oldEntriesBottom);
        if (!(oldEntry != null && !dart.equals(oldEntry.currentState, navigator$._RouteLifecycle.disposed))) dart.assertFailed(null, L28, 3741, 14, "oldEntry != null && oldEntry.currentState != _RouteLifecycle.disposed");
        if (!dart.test(oldEntry.hasPage)) {
          if (!(previousOldPageRouteEntry != null)) dart.assertFailed(null, L28, 3743, 16, "previousOldPageRouteEntry != null");
          let pagelessRoutes = pageRouteToPagelessRoutes[$putIfAbsent](previousOldPageRouteEntry, dart.fn(() => JSArrayOf_RouteEntry().of([]), VoidToListOf_RouteEntry()));
          pagelessRoutes[$add](oldEntry);
          continue;
        }
        previousOldPageRouteEntry = oldEntry;
        let newPage = this.widget.pages[$_get](newPagesBottom);
        if (!dart.test(oldEntry.canUpdateFrom(newPage))) dart.assertFailed(null, L28, 3754, 14, "oldEntry.canUpdateFrom(newPage)");
        oldEntry.route[_updateSettings](newPage);
        newHistory[$add](oldEntry);
        oldEntriesBottom = oldEntriesBottom + 1;
        newPagesBottom = newPagesBottom + 1;
      }
      needsExplicitDecision = needsExplicitDecision || dart.test(locationToExitingPageRoute[$isNotEmpty]);
      let results = newHistory;
      if (needsExplicitDecision) {
        results = this.widget.transitionDelegate[_transition]({newPageRouteHistory: newHistory, locationToExitingPageRoute: locationToExitingPageRoute, pageRouteToPagelessRoutes: pageRouteToPagelessRoutes})[$cast](navigator$._RouteEntry);
      }
      this[_history] = JSArrayOf_RouteEntry().of([]);
      if (dart.test(pageRouteToPagelessRoutes[$containsKey](null))) {
        this[_history][$addAll](dart.nullCheck(pageRouteToPagelessRoutes[$_get](null)));
      }
      for (let result of results) {
        this[_history][$add](result);
        if (dart.test(pageRouteToPagelessRoutes[$containsKey](result))) {
          this[_history][$addAll](dart.nullCheck(pageRouteToPagelessRoutes[$_get](result)));
        }
      }
      if (!dart.test(dart.fn(() => {
        this[_debugUpdatingPage] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 3782, 12, "() {_debugUpdatingPage = false; return true;}()");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 3783, 12, "() { _debugLocked = true; return true; }()");
      this[_flushHistoryUpdates]();
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 3785, 12, "() { _debugLocked = false; return true; }()");
    }
    [_flushHistoryUpdates](opts) {
      let t27, t27$, t27$0, t27$1, t27$2, t27$3, t27$4;
      let rearrangeOverlay = opts && 'rearrangeOverlay' in opts ? opts.rearrangeOverlay : true;
      if (rearrangeOverlay == null) dart.nullFailed(L28, 3788, 35, "rearrangeOverlay");
      if (!(dart.test(this[_debugLocked]) && !dart.test(this[_debugUpdatingPage]))) dart.assertFailed(null, L28, 3789, 12, "_debugLocked && !_debugUpdatingPage");
      let index = dart.notNull(this[_history][$length]) - 1;
      let next = null;
      let entry = this[_history][$_get](index);
      let previous = index > 0 ? this[_history][$_get](index - 1) : null;
      let canRemoveOrAdd = false;
      let poppedRoute = null;
      let seenTopActiveRoute = false;
      let toBeDisposed = JSArrayOf_RouteEntry().of([]);
      while (index >= 0) {
        switch (dart.nullCheck(entry).currentState) {
          case C315 || CT.C315:
          {
            if (!dart.test(rearrangeOverlay)) dart.assertFailed(null, L28, 3805, 18, "rearrangeOverlay");
            entry.handleAdd({navigator: this, previousPresent: (t27 = this[_getRouteBefore](index - 1, navigator$._RouteEntry.isPresentPredicate), t27 == null ? null : t27.route)});
            if (!dart.equals(entry.currentState, navigator$._RouteLifecycle.adding)) dart.assertFailed(null, L28, 3810, 18, "entry.currentState == _RouteLifecycle.adding");
            continue;
          }
          case C316 || CT.C316:
          {
            if (canRemoveOrAdd || next == null) {
              entry.didAdd({navigator: this, isNewFirst: next == null});
              if (!dart.equals(entry.currentState, navigator$._RouteLifecycle.idle)) dart.assertFailed(null, L28, 3818, 20, "entry.currentState == _RouteLifecycle.idle");
              continue;
            }
            break;
          }
          case C317 || CT.C317:
          case C318 || CT.C318:
          case C320 || CT.C320:
          {
            if (!dart.test(rearrangeOverlay)) dart.assertFailed(null, L28, 3825, 18, "rearrangeOverlay");
            entry.handlePush({navigator: this, previous: (t27$ = previous, t27$ == null ? null : t27$.route), previousPresent: (t27$0 = this[_getRouteBefore](index - 1, navigator$._RouteEntry.isPresentPredicate), t27$0 == null ? null : t27$0.route), isNewFirst: next == null});
            if (!!dart.equals(entry.currentState, navigator$._RouteLifecycle.push)) dart.assertFailed(null, L28, 3832, 18, "entry.currentState != _RouteLifecycle.push");
            if (!!dart.equals(entry.currentState, navigator$._RouteLifecycle.pushReplace)) dart.assertFailed(null, L28, 3833, 18, "entry.currentState != _RouteLifecycle.pushReplace");
            if (!!dart.equals(entry.currentState, navigator$._RouteLifecycle.replace)) dart.assertFailed(null, L28, 3834, 18, "entry.currentState != _RouteLifecycle.replace");
            if (dart.equals(entry.currentState, navigator$._RouteLifecycle.idle)) {
              continue;
            }
            break;
          }
          case C319 || CT.C319:
          {
            if (!seenTopActiveRoute && poppedRoute != null) entry.handleDidPopNext(poppedRoute);
            seenTopActiveRoute = true;
            break;
          }
          case C321 || CT.C321:
          {
            if (!seenTopActiveRoute && poppedRoute != null) entry.handleDidPopNext(poppedRoute);
            seenTopActiveRoute = true;
            canRemoveOrAdd = true;
            break;
          }
          case C322 || CT.C322:
          {
            if (!seenTopActiveRoute) {
              if (poppedRoute != null) entry.handleDidPopNext(poppedRoute);
              poppedRoute = entry.route;
            }
            entry.handlePop({navigator: this, previousPresent: (t27$1 = this[_getRouteBefore](index, navigator$._RouteEntry.willBePresentPredicate), t27$1 == null ? null : t27$1.route)});
            if (!dart.equals(entry.currentState, navigator$._RouteLifecycle.popping)) dart.assertFailed(null, L28, 3862, 18, "entry.currentState == _RouteLifecycle.popping");
            canRemoveOrAdd = true;
            break;
          }
          case C324 || CT.C324:
          {
            break;
          }
          case C323 || CT.C323:
          {
            if (!seenTopActiveRoute) {
              if (poppedRoute != null) entry.route.didPopNext(poppedRoute);
              poppedRoute = null;
            }
            entry.handleRemoval({navigator: this, previousPresent: (t27$2 = this[_getRouteBefore](index, navigator$._RouteEntry.willBePresentPredicate), t27$2 == null ? null : t27$2.route)});
            if (!dart.equals(entry.currentState, navigator$._RouteLifecycle.removing)) dart.assertFailed(null, L28, 3878, 18, "entry.currentState == _RouteLifecycle.removing");
            continue;
          }
          case C325 || CT.C325:
          {
            if (!canRemoveOrAdd && next != null) {
              break;
            }
            entry.currentState = navigator$._RouteLifecycle.dispose;
            continue;
          }
          case C326 || CT.C326:
          {
            toBeDisposed[$add](this[_history][$removeAt](index));
            entry = next;
            break;
          }
          case C327 || CT.C327:
          case C314 || CT.C314:
          {
            if (!false) dart.assertFailed(null, L28, 3894, 18, "false");
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        index = index - 1;
        next = entry;
        entry = previous;
        previous = index > 0 ? this[_history][$_get](index - 1) : null;
      }
      this[_flushObserverNotifications]();
      this[_flushRouteAnnouncement]();
      if (dart.test(this.widget.reportsRouteUpdateToEngine)) {
        let lastEntry = this[_history][$cast](_RouteEntryN())[$lastWhere](dart.fn(e => e != null && dart.test(navigator$._RouteEntry.isPresentPredicate(e)), _RouteEntryNTobool()), {orElse: dart.fn(() => null, VoidToNull())});
        let routeName = (t27$3 = lastEntry, t27$3 == null ? null : t27$3.route.settings.name);
        if (routeName != this[_lastAnnouncedRouteName]) {
          system_navigator.SystemNavigator.routeUpdated({routeName: routeName, previousRouteName: this[_lastAnnouncedRouteName]});
          this[_lastAnnouncedRouteName] = routeName;
        }
      }
      for (let entry of toBeDisposed) {
        for (let overlayEntry of entry.route.overlayEntries)
          overlayEntry.remove();
        entry.dispose();
      }
      if (dart.test(rearrangeOverlay)) {
        t27$4 = this.overlay;
        t27$4 == null ? null : t27$4.rearrange(this[_allRouteOverlayEntries]);
      }
      if (this.bucket != null) {
        this[_serializableHistory].update(this[_history]);
      }
    }
    [_flushObserverNotifications]() {
      if (dart.test(this[_effectiveObservers][$isEmpty])) {
        this[_observedRouteDeletions].clear();
        this[_observedRouteAdditions].clear();
        return;
      }
      while (dart.test(this[_observedRouteAdditions][$isNotEmpty])) {
        let observation = this[_observedRouteAdditions].removeLast();
        this[_effectiveObservers][$forEach](dart.bind(observation, 'notify'));
      }
      while (dart.test(this[_observedRouteDeletions][$isNotEmpty])) {
        let observation = this[_observedRouteDeletions].removeFirst();
        this[_effectiveObservers][$forEach](dart.bind(observation, 'notify'));
      }
    }
    [_flushRouteAnnouncement]() {
      let t27, t27$, t27$0, t27$1, t27$2, t27$3, t27$4;
      let index = dart.notNull(this[_history][$length]) - 1;
      while (index >= 0) {
        let entry = this[_history][$_get](index);
        if (!dart.test(entry.suitableForAnnouncement)) {
          index = index - 1;
          continue;
        }
        let next = this[_getRouteAfter](index + 1, navigator$._RouteEntry.suitableForTransitionAnimationPredicate);
        if (!dart.equals((t27 = next, t27 == null ? null : t27.route), entry.lastAnnouncedNextRoute)) {
          if (dart.test(entry.shouldAnnounceChangeToNext((t27$ = next, t27$ == null ? null : t27$.route)))) {
            entry.route.didChangeNext((t27$0 = next, t27$0 == null ? null : t27$0.route));
          }
          entry.lastAnnouncedNextRoute = (t27$1 = next, t27$1 == null ? null : t27$1.route);
        }
        let previous = this[_getRouteBefore](index - 1, navigator$._RouteEntry.suitableForTransitionAnimationPredicate);
        if (!dart.equals((t27$2 = previous, t27$2 == null ? null : t27$2.route), entry.lastAnnouncedPreviousRoute)) {
          entry.route.didChangePrevious((t27$3 = previous, t27$3 == null ? null : t27$3.route));
          entry.lastAnnouncedPreviousRoute = (t27$4 = previous, t27$4 == null ? null : t27$4.route);
        }
        index = index - 1;
      }
    }
    [_getRouteBefore](index, predicate) {
      if (index == null) dart.nullFailed(L28, 3981, 36, "index");
      if (predicate == null) dart.nullFailed(L28, 3981, 64, "predicate");
      index = this[_getIndexBefore](index, predicate);
      return dart.notNull(index) >= 0 ? this[_history][$_get](index) : null;
    }
    [_getIndexBefore](index, predicate) {
      if (index == null) dart.nullFailed(L28, 3986, 27, "index");
      if (predicate == null) dart.nullFailed(L28, 3986, 55, "predicate");
      while (dart.notNull(index) >= 0 && !dart.test(predicate(this[_history][$_get](index)))) {
        index = dart.notNull(index) - 1;
      }
      return index;
    }
    [_getRouteAfter](index, predicate) {
      if (index == null) dart.nullFailed(L28, 3993, 35, "index");
      if (predicate == null) dart.nullFailed(L28, 3993, 63, "predicate");
      while (dart.notNull(index) < dart.notNull(this[_history][$length]) && !dart.test(predicate(this[_history][$_get](index)))) {
        index = dart.notNull(index) + 1;
      }
      return dart.notNull(index) < dart.notNull(this[_history][$length]) ? this[_history][$_get](index) : null;
    }
    [_routeNamed](T, name, opts) {
      if (name == null) dart.nullFailed(L28, 4000, 35, "name");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let allowNull = opts && 'allowNull' in opts ? opts.allowNull : false;
      if (allowNull == null) dart.nullFailed(L28, 4000, 76, "allowNull");
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, L28, 4001, 12, "!_debugLocked");
      if (!(name != null)) dart.assertFailed(null, L28, 4002, 12, "name != null");
      if (dart.test(allowNull) && this.widget.onGenerateRoute == null) return null;
      if (!dart.test(dart.fn(() => {
        if (this.widget.onGenerateRoute == null) {
          dart.throw(assertions.FlutterError.new("Navigator.onGenerateRoute was null, but the route named \"" + dart.str(name) + "\" was referenced.\n" + "To use the Navigator API with named routes (pushNamed, pushReplacementNamed, or " + "pushNamedAndRemoveUntil), the Navigator must be provided with an " + "onGenerateRoute handler.\n" + "The Navigator was:\n" + "  " + dart.str(this)));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 4005, 12, "() {\r\n      if (widget.onGenerateRoute == null) {\r\n        throw FlutterError(\r\n          'Navigator.onGenerateRoute was null, but the route named \"$name\" was referenced.\\n'\r\n          'To use the Navigator API with named routes (pushNamed, pushReplacementNamed, or '\r\n          'pushNamedAndRemoveUntil), the Navigator must be provided with an '\r\n          'onGenerateRoute handler.\\n'\r\n          'The Navigator was:\\n'\r\n          '  $this'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      let settings = new navigator$.RouteSettings.new({name: name, arguments: $arguments});
      let route = dart.nullable(navigator$.Route$(T)).as(dart.nullCheck(this.widget.onGenerateRoute)(settings));
      if (route == null && !dart.test(allowNull)) {
        if (!dart.test(dart.fn(() => {
          if (this.widget.onUnknownRoute == null) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Navigator.onGenerateRoute returned null when requested to build route \"" + dart.str(name) + "\"."), new assertions.ErrorDescription.new("The onGenerateRoute callback must never return null, unless an onUnknownRoute " + "callback is provided as well."), new (DiagnosticsPropertyOfNavigatorState()).new("The Navigator was", this, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty})])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L28, 4024, 14, "() {\r\n        if (widget.onUnknownRoute == null) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('Navigator.onGenerateRoute returned null when requested to build route \"$name\".'),\r\n            ErrorDescription(\r\n              'The onGenerateRoute callback must never return null, unless an onUnknownRoute '\r\n              'callback is provided as well.'\r\n            ),\r\n            DiagnosticsProperty<NavigatorState>('The Navigator was', this, style: DiagnosticsTreeStyle.errorProperty),\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
        route = dart.nullable(navigator$.Route$(T)).as(dart.nullCheck(this.widget.onUnknownRoute)(settings));
        if (!dart.test(dart.fn(() => {
          if (route == null) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Navigator.onUnknownRoute returned null when requested to build route \"" + dart.str(name) + "\"."), new assertions.ErrorDescription.new("The onUnknownRoute callback must never return null."), new (DiagnosticsPropertyOfNavigatorState()).new("The Navigator was", this, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty})])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L28, 4038, 14, "() {\r\n        if (route == null) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('Navigator.onUnknownRoute returned null when requested to build route \"$name\".'),\r\n            ErrorDescription('The onUnknownRoute callback must never return null.'),\r\n            DiagnosticsProperty<NavigatorState>('The Navigator was', this, style: DiagnosticsTreeStyle.errorProperty),\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
      }
      if (!(route != null || dart.test(allowNull))) dart.assertFailed(null, L28, 4049, 12, "route != null || allowNull");
      return route;
    }
    pushNamed(T, routeName, opts) {
      if (routeName == null) dart.nullFailed(L28, 4076, 12, "routeName");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return this.push(T, dart.nullCheck(this[_routeNamed](T, routeName, {arguments: $arguments})));
    }
    restorablePushNamed(T, routeName, opts) {
      if (routeName == null) dart.nullFailed(L28, 4104, 12, "routeName");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      if (!(routeName != null)) dart.assertFailed(null, L28, 4107, 12, "routeName != null");
      if (!dart.test(restoration.debugIsSerializableForRestoration($arguments))) dart.assertFailed("The arguments object must be serializable via the StandardMessageCodec.", L28, 4108, 12, "debugIsSerializableForRestoration(arguments)");
      let entry = new navigator$._NamedRestorationInformation.new({name: routeName, arguments: $arguments, restorationScopeId: this[_nextPagelessRestorationScopeId]}).toRouteEntry(this, {initialState: navigator$._RouteLifecycle.push});
      this[_pushEntry](entry);
      return dart.nullCheck(entry.restorationId);
    }
    pushReplacementNamed(T, TO, routeName, opts) {
      if (routeName == null) dart.nullFailed(L28, 4143, 12, "routeName");
      let result = opts && 'result' in opts ? opts.result : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return this.pushReplacement(T, TO, dart.nullCheck(this[_routeNamed](T, routeName, {arguments: $arguments})), {result: result});
    }
    restorablePushReplacementNamed(T, TO, routeName, opts) {
      if (routeName == null) dart.nullFailed(L28, 4174, 12, "routeName");
      let result = opts && 'result' in opts ? opts.result : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      if (!(routeName != null)) dart.assertFailed(null, L28, 4178, 12, "routeName != null");
      if (!dart.test(restoration.debugIsSerializableForRestoration($arguments))) dart.assertFailed("The arguments object must be serializable via the StandardMessageCodec.", L28, 4179, 12, "debugIsSerializableForRestoration(arguments)");
      let entry = new navigator$._NamedRestorationInformation.new({name: routeName, arguments: $arguments, restorationScopeId: this[_nextPagelessRestorationScopeId]}).toRouteEntry(this, {initialState: navigator$._RouteLifecycle.pushReplace});
      this[_pushReplacementEntry](TO, entry, result);
      return dart.nullCheck(entry.restorationId);
    }
    popAndPushNamed(T, TO, routeName, opts) {
      if (routeName == null) dart.nullFailed(L28, 4213, 12, "routeName");
      let result = opts && 'result' in opts ? opts.result : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      this.pop(TO, result);
      return this.pushNamed(T, routeName, {arguments: $arguments});
    }
    restorablePopAndPushNamed(T, TO, routeName, opts) {
      if (routeName == null) dart.nullFailed(L28, 4244, 12, "routeName");
      let result = opts && 'result' in opts ? opts.result : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      this.pop(TO, result);
      return this.restorablePushNamed(ObjectN(), routeName, {arguments: $arguments});
    }
    pushNamedAndRemoveUntil(T, newRouteName, predicate, opts) {
      if (newRouteName == null) dart.nullFailed(L28, 4276, 12, "newRouteName");
      if (predicate == null) dart.nullFailed(L28, 4277, 20, "predicate");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return this.pushAndRemoveUntil(T, dart.nullCheck(this[_routeNamed](T, newRouteName, {arguments: $arguments})), predicate);
    }
    restorablePushNamedAndRemoveUntil(T, newRouteName, predicate, opts) {
      if (newRouteName == null) dart.nullFailed(L28, 4306, 12, "newRouteName");
      if (predicate == null) dart.nullFailed(L28, 4307, 20, "predicate");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      if (!(newRouteName != null)) dart.assertFailed(null, L28, 4310, 12, "newRouteName != null");
      if (!dart.test(restoration.debugIsSerializableForRestoration($arguments))) dart.assertFailed("The arguments object must be serializable via the StandardMessageCodec.", L28, 4311, 12, "debugIsSerializableForRestoration(arguments)");
      let entry = new navigator$._NamedRestorationInformation.new({name: newRouteName, arguments: $arguments, restorationScopeId: this[_nextPagelessRestorationScopeId]}).toRouteEntry(this, {initialState: navigator$._RouteLifecycle.push});
      this[_pushEntryAndRemoveUntil](entry, predicate);
      return dart.nullCheck(entry.restorationId);
    }
    push(T, route) {
      if (route == null) dart.nullFailed(L28, 4341, 47, "route");
      this[_pushEntry](new navigator$._RouteEntry.new(route, {initialState: navigator$._RouteLifecycle.push}));
      return route.popped;
    }
    [_debugIsStaticCallback](callback) {
      if (callback == null) dart.nullFailed(L28, 4346, 40, "callback");
      let result = false;
      if (!dart.test(dart.fn(() => {
        result = true || ui.PluginUtilities.getCallbackHandle(callback) != null;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 4348, 12, "() {\r\n      // TODO(goderbauer): remove the kIsWeb check when https://github.com/flutter/flutter/issues/33615 is resolved.\r\n      result = kIsWeb || ui.PluginUtilities.getCallbackHandle(callback) != null;\r\n      return true;\r\n    }()");
      return result;
    }
    restorablePush(T, routeBuilder, opts) {
      if (routeBuilder == null) dart.nullFailed(L28, 4392, 70, "routeBuilder");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      if (!(routeBuilder != null)) dart.assertFailed(null, L28, 4393, 12, "routeBuilder != null");
      if (!dart.test(this[_debugIsStaticCallback](routeBuilder))) dart.assertFailed("The provided routeBuilder must be a static function.", L28, 4394, 12, "_debugIsStaticCallback(routeBuilder)");
      if (!dart.test(restoration.debugIsSerializableForRestoration($arguments))) dart.assertFailed("The arguments object must be serializable via the StandardMessageCodec.", L28, 4395, 12, "debugIsSerializableForRestoration(arguments)");
      let entry = new navigator$._AnonymousRestorationInformation.new({routeBuilder: routeBuilder, arguments: $arguments, restorationScopeId: this[_nextPagelessRestorationScopeId]}).toRouteEntry(this, {initialState: navigator$._RouteLifecycle.push});
      this[_pushEntry](entry);
      return dart.nullCheck(entry.restorationId);
    }
    [_pushEntry](entry) {
      if (entry == null) dart.nullFailed(L28, 4405, 31, "entry");
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, L28, 4406, 12, "!_debugLocked");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 4407, 12, "() {\r\n      _debugLocked = true;\r\n      return true;\r\n    }()");
      if (!(entry.route != null)) dart.assertFailed(null, L28, 4411, 12, "entry.route != null");
      if (!(entry.route[_navigator] == null)) dart.assertFailed(null, L28, 4412, 12, "entry.route._navigator == null");
      if (!dart.equals(entry.currentState, navigator$._RouteLifecycle.push)) dart.assertFailed(null, L28, 4413, 12, "entry.currentState == _RouteLifecycle.push");
      this[_history][$add](entry);
      this[_flushHistoryUpdates]();
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 4416, 12, "() {\r\n      _debugLocked = false;\r\n      return true;\r\n    }()");
      this[_afterNavigation](entry.route);
    }
    [_afterNavigation](route) {
      if (!false) {
        let routeJsonable = null;
        if (route != null) {
          routeJsonable = new (IdentityMapOfString$dynamic()).new();
          let description = null;
          if (routes.TransitionRoute.is(route)) {
            let transitionRoute = route;
            description = transitionRoute.debugLabel;
          } else {
            description = dart.str(route);
          }
          routeJsonable[$_set]("description", description);
          let settings = route.settings;
          let settingsJsonable = new (IdentityMapOfString$dynamic()).from(["name", settings.name]);
          if (settings.arguments != null) {
            settingsJsonable[$_set]("arguments", convert.jsonEncode(settings.arguments, {toEncodable: dart.fn(object => dart.str(object), ObjectNToString())}));
          }
          routeJsonable[$_set]("settings", settingsJsonable);
        }
        developer.postEvent("Flutter.Navigation", new (IdentityMapOfString$dynamic()).from(["route", routeJsonable]));
      }
      this[_cancelActivePointers]();
    }
    pushReplacement(T, TO, newRoute, opts) {
      if (newRoute == null) dart.nullFailed(L28, 4485, 78, "newRoute");
      let result = opts && 'result' in opts ? opts.result : null;
      if (!(newRoute != null)) dart.assertFailed(null, L28, 4486, 12, "newRoute != null");
      if (!(newRoute[_navigator] == null)) dart.assertFailed(null, L28, 4487, 12, "newRoute._navigator == null");
      this[_pushReplacementEntry](TO, new navigator$._RouteEntry.new(newRoute, {initialState: navigator$._RouteLifecycle.pushReplace}), result);
      return newRoute.popped;
    }
    restorablePushReplacement(T, TO, routeBuilder, opts) {
      if (routeBuilder == null) dart.nullFailed(L28, 4532, 101, "routeBuilder");
      let result = opts && 'result' in opts ? opts.result : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      if (!(routeBuilder != null)) dart.assertFailed(null, L28, 4533, 12, "routeBuilder != null");
      if (!dart.test(this[_debugIsStaticCallback](routeBuilder))) dart.assertFailed("The provided routeBuilder must be a static function.", L28, 4534, 12, "_debugIsStaticCallback(routeBuilder)");
      if (!dart.test(restoration.debugIsSerializableForRestoration($arguments))) dart.assertFailed("The arguments object must be serializable via the StandardMessageCodec.", L28, 4535, 12, "debugIsSerializableForRestoration(arguments)");
      let entry = new navigator$._AnonymousRestorationInformation.new({routeBuilder: routeBuilder, arguments: $arguments, restorationScopeId: this[_nextPagelessRestorationScopeId]}).toRouteEntry(this, {initialState: navigator$._RouteLifecycle.pushReplace});
      this[_pushReplacementEntry](TO, entry, result);
      return dart.nullCheck(entry.restorationId);
    }
    [_pushReplacementEntry](TO, entry, result) {
      if (entry == null) dart.nullFailed(L28, 4545, 62, "entry");
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, L28, 4546, 12, "!_debugLocked");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 4547, 12, "() {\r\n      _debugLocked = true;\r\n      return true;\r\n    }()");
      if (!(entry.route != null)) dart.assertFailed(null, L28, 4551, 12, "entry.route != null");
      if (!(entry.route[_navigator] == null)) dart.assertFailed(null, L28, 4552, 12, "entry.route._navigator == null");
      if (!dart.test(this[_history][$isNotEmpty])) dart.assertFailed(null, L28, 4553, 12, "_history.isNotEmpty");
      if (!dart.test(this[_history][$any](navigator$._RouteEntry.isPresentPredicate))) dart.assertFailed("Navigator has no active routes to replace.", L28, 4554, 12, "_history.any(_RouteEntry.isPresentPredicate)");
      if (!dart.equals(entry.currentState, navigator$._RouteLifecycle.pushReplace)) dart.assertFailed(null, L28, 4555, 12, "entry.currentState == _RouteLifecycle.pushReplace");
      this[_history][$lastWhere](navigator$._RouteEntry.isPresentPredicate).complete(dart.nullable(TO), result, {isReplaced: true});
      this[_history][$add](entry);
      this[_flushHistoryUpdates]();
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 4559, 12, "() {\r\n      _debugLocked = false;\r\n      return true;\r\n    }()");
      this[_afterNavigation](entry.route);
    }
    pushAndRemoveUntil(T, newRoute, predicate) {
      if (newRoute == null) dart.nullFailed(L28, 4591, 61, "newRoute");
      if (predicate == null) dart.nullFailed(L28, 4591, 86, "predicate");
      if (!(newRoute != null)) dart.assertFailed(null, L28, 4592, 12, "newRoute != null");
      if (!(newRoute[_navigator] == null)) dart.assertFailed(null, L28, 4593, 12, "newRoute._navigator == null");
      if (!dart.test(newRoute.overlayEntries[$isEmpty])) dart.assertFailed(null, L28, 4594, 12, "newRoute.overlayEntries.isEmpty");
      this[_pushEntryAndRemoveUntil](new navigator$._RouteEntry.new(newRoute, {initialState: navigator$._RouteLifecycle.push}), predicate);
      return newRoute.popped;
    }
    restorablePushAndRemoveUntil(T, newRouteBuilder, predicate, opts) {
      if (newRouteBuilder == null) dart.nullFailed(L28, 4639, 84, "newRouteBuilder");
      if (predicate == null) dart.nullFailed(L28, 4639, 116, "predicate");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      if (!(newRouteBuilder != null)) dart.assertFailed(null, L28, 4640, 12, "newRouteBuilder != null");
      if (!dart.test(this[_debugIsStaticCallback](newRouteBuilder))) dart.assertFailed("The provided routeBuilder must be a static function.", L28, 4641, 12, "_debugIsStaticCallback(newRouteBuilder)");
      if (!dart.test(restoration.debugIsSerializableForRestoration($arguments))) dart.assertFailed("The arguments object must be serializable via the StandardMessageCodec.", L28, 4642, 12, "debugIsSerializableForRestoration(arguments)");
      let entry = new navigator$._AnonymousRestorationInformation.new({routeBuilder: newRouteBuilder, arguments: $arguments, restorationScopeId: this[_nextPagelessRestorationScopeId]}).toRouteEntry(this, {initialState: navigator$._RouteLifecycle.push});
      this[_pushEntryAndRemoveUntil](entry, predicate);
      return dart.nullCheck(entry.restorationId);
    }
    [_pushEntryAndRemoveUntil](entry, predicate) {
      if (entry == null) dart.nullFailed(L28, 4652, 45, "entry");
      if (predicate == null) dart.nullFailed(L28, 4652, 67, "predicate");
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, L28, 4653, 12, "!_debugLocked");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 4654, 12, "() {\r\n      _debugLocked = true;\r\n      return true;\r\n    }()");
      if (!(entry.route != null)) dart.assertFailed(null, L28, 4658, 12, "entry.route != null");
      if (!(entry.route[_navigator] == null)) dart.assertFailed(null, L28, 4659, 12, "entry.route._navigator == null");
      if (!dart.test(entry.route.overlayEntries[$isEmpty])) dart.assertFailed(null, L28, 4660, 12, "entry.route.overlayEntries.isEmpty");
      if (!(predicate != null)) dart.assertFailed(null, L28, 4661, 12, "predicate != null");
      if (!dart.equals(entry.currentState, navigator$._RouteLifecycle.push)) dart.assertFailed(null, L28, 4662, 12, "entry.currentState == _RouteLifecycle.push");
      let index = dart.notNull(this[_history][$length]) - 1;
      this[_history][$add](entry);
      while (index >= 0 && !dart.test(predicate(this[_history][$_get](index).route))) {
        if (dart.test(this[_history][$_get](index).isPresent)) this[_history][$_get](index).remove();
        index = index - 1;
      }
      this[_flushHistoryUpdates]();
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 4672, 12, "() {\r\n      _debugLocked = false;\r\n      return true;\r\n    }()");
      this[_afterNavigation](entry.route);
    }
    replace(T, opts) {
      let oldRoute = opts && 'oldRoute' in opts ? opts.oldRoute : null;
      if (oldRoute == null) dart.nullFailed(L28, 4690, 61, "oldRoute");
      let newRoute = opts && 'newRoute' in opts ? opts.newRoute : null;
      if (newRoute == null) dart.nullFailed(L28, 4690, 89, "newRoute");
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, L28, 4691, 12, "!_debugLocked");
      if (!(oldRoute != null)) dart.assertFailed(null, L28, 4692, 12, "oldRoute != null");
      if (!dart.equals(oldRoute[_navigator], this)) dart.assertFailed(null, L28, 4693, 12, "oldRoute._navigator == this");
      if (!(newRoute != null)) dart.assertFailed(null, L28, 4694, 12, "newRoute != null");
      this[_replaceEntry](new navigator$._RouteEntry.new(newRoute, {initialState: navigator$._RouteLifecycle.replace}), oldRoute);
    }
    restorableReplace(T, opts) {
      let oldRoute = opts && 'oldRoute' in opts ? opts.oldRoute : null;
      if (oldRoute == null) dart.nullFailed(L28, 4708, 73, "oldRoute");
      let newRouteBuilder = opts && 'newRouteBuilder' in opts ? opts.newRouteBuilder : null;
      if (newRouteBuilder == null) dart.nullFailed(L28, 4708, 118, "newRouteBuilder");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      if (!(oldRoute != null)) dart.assertFailed(null, L28, 4709, 12, "oldRoute != null");
      if (!dart.equals(oldRoute[_navigator], this)) dart.assertFailed(null, L28, 4710, 12, "oldRoute._navigator == this");
      if (!(newRouteBuilder != null)) dart.assertFailed(null, L28, 4711, 12, "newRouteBuilder != null");
      if (!dart.test(this[_debugIsStaticCallback](newRouteBuilder))) dart.assertFailed("The provided routeBuilder must be a static function.", L28, 4712, 12, "_debugIsStaticCallback(newRouteBuilder)");
      if (!dart.test(restoration.debugIsSerializableForRestoration($arguments))) dart.assertFailed("The arguments object must be serializable via the StandardMessageCodec.", L28, 4713, 12, "debugIsSerializableForRestoration(arguments)");
      if (!(oldRoute != null)) dart.assertFailed(null, L28, 4714, 12, "oldRoute != null");
      let entry = new navigator$._AnonymousRestorationInformation.new({routeBuilder: newRouteBuilder, arguments: $arguments, restorationScopeId: this[_nextPagelessRestorationScopeId]}).toRouteEntry(this, {initialState: navigator$._RouteLifecycle.replace});
      this[_replaceEntry](entry, oldRoute);
      return dart.nullCheck(entry.restorationId);
    }
    [_replaceEntry](entry, oldRoute) {
      if (entry == null) dart.nullFailed(L28, 4724, 34, "entry");
      if (oldRoute == null) dart.nullFailed(L28, 4724, 56, "oldRoute");
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, L28, 4725, 12, "!_debugLocked");
      if (dart.equals(oldRoute, entry.route)) return;
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 4728, 12, "() {\r\n      _debugLocked = true;\r\n      return true;\r\n    }()");
      if (!dart.equals(entry.currentState, navigator$._RouteLifecycle.replace)) dart.assertFailed(null, L28, 4732, 12, "entry.currentState == _RouteLifecycle.replace");
      if (!(entry.route[_navigator] == null)) dart.assertFailed(null, L28, 4733, 12, "entry.route._navigator == null");
      let index = this[_history][$indexWhere](navigator$._RouteEntry.isRoutePredicate(oldRoute));
      if (!(dart.notNull(index) >= 0)) dart.assertFailed("This Navigator does not contain the specified oldRoute.", L28, 4735, 12, "index >= 0");
      if (!dart.test(this[_history][$_get](index).isPresent)) dart.assertFailed("The specified oldRoute has already been removed from the Navigator.", L28, 4736, 12, "_history[index].isPresent");
      let wasCurrent = oldRoute.isCurrent;
      this[_history][$insert](dart.notNull(index) + 1, entry);
      this[_history][$_get](index).remove({isReplaced: true});
      this[_flushHistoryUpdates]();
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 4741, 12, "() {\r\n      _debugLocked = false;\r\n      return true;\r\n    }()");
      if (dart.test(wasCurrent)) this[_afterNavigation](entry.route);
    }
    replaceRouteBelow(T, opts) {
      let anchorRoute = opts && 'anchorRoute' in opts ? opts.anchorRoute : null;
      if (anchorRoute == null) dart.nullFailed(L28, 4761, 71, "anchorRoute");
      let newRoute = opts && 'newRoute' in opts ? opts.newRoute : null;
      if (newRoute == null) dart.nullFailed(L28, 4761, 102, "newRoute");
      if (!(newRoute != null)) dart.assertFailed(null, L28, 4762, 12, "newRoute != null");
      if (!(newRoute[_navigator] == null)) dart.assertFailed(null, L28, 4763, 12, "newRoute._navigator == null");
      if (!(anchorRoute != null)) dart.assertFailed(null, L28, 4764, 12, "anchorRoute != null");
      if (!dart.equals(anchorRoute[_navigator], this)) dart.assertFailed(null, L28, 4765, 12, "anchorRoute._navigator == this");
      this[_replaceEntryBelow](new navigator$._RouteEntry.new(newRoute, {initialState: navigator$._RouteLifecycle.replace}), anchorRoute);
    }
    restorableReplaceRouteBelow(T, opts) {
      let anchorRoute = opts && 'anchorRoute' in opts ? opts.anchorRoute : null;
      if (anchorRoute == null) dart.nullFailed(L28, 4780, 83, "anchorRoute");
      let newRouteBuilder = opts && 'newRouteBuilder' in opts ? opts.newRouteBuilder : null;
      if (newRouteBuilder == null) dart.nullFailed(L28, 4780, 131, "newRouteBuilder");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      if (!(anchorRoute != null)) dart.assertFailed(null, L28, 4781, 12, "anchorRoute != null");
      if (!dart.equals(anchorRoute[_navigator], this)) dart.assertFailed(null, L28, 4782, 12, "anchorRoute._navigator == this");
      if (!(newRouteBuilder != null)) dart.assertFailed(null, L28, 4783, 12, "newRouteBuilder != null");
      if (!dart.test(this[_debugIsStaticCallback](newRouteBuilder))) dart.assertFailed("The provided routeBuilder must be a static function.", L28, 4784, 12, "_debugIsStaticCallback(newRouteBuilder)");
      if (!dart.test(restoration.debugIsSerializableForRestoration($arguments))) dart.assertFailed("The arguments object must be serializable via the StandardMessageCodec.", L28, 4785, 12, "debugIsSerializableForRestoration(arguments)");
      if (!(anchorRoute != null)) dart.assertFailed(null, L28, 4786, 12, "anchorRoute != null");
      let entry = new navigator$._AnonymousRestorationInformation.new({routeBuilder: newRouteBuilder, arguments: $arguments, restorationScopeId: this[_nextPagelessRestorationScopeId]}).toRouteEntry(this, {initialState: navigator$._RouteLifecycle.replace});
      this[_replaceEntryBelow](entry, anchorRoute);
      return dart.nullCheck(entry.restorationId);
    }
    [_replaceEntryBelow](entry, anchorRoute) {
      if (entry == null) dart.nullFailed(L28, 4796, 39, "entry");
      if (anchorRoute == null) dart.nullFailed(L28, 4796, 61, "anchorRoute");
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, L28, 4797, 12, "!_debugLocked");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 4798, 12, "() { _debugLocked = true; return true; }()");
      let anchorIndex = this[_history][$indexWhere](navigator$._RouteEntry.isRoutePredicate(anchorRoute));
      if (!(dart.notNull(anchorIndex) >= 0)) dart.assertFailed("This Navigator does not contain the specified anchorRoute.", L28, 4800, 12, "anchorIndex >= 0");
      if (!dart.test(this[_history][$_get](anchorIndex).isPresent)) dart.assertFailed("The specified anchorRoute has already been removed from the Navigator.", L28, 4801, 12, "_history[anchorIndex].isPresent");
      let index = dart.notNull(anchorIndex) - 1;
      while (index >= 0) {
        if (dart.test(this[_history][$_get](index).isPresent)) break;
        index = index - 1;
      }
      if (!(index >= 0)) dart.assertFailed("There are no routes below the specified anchorRoute.", L28, 4808, 12, "index >= 0");
      this[_history][$insert](index + 1, entry);
      this[_history][$_get](index).remove({isReplaced: true});
      this[_flushHistoryUpdates]();
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 4812, 12, "() { _debugLocked = false; return true; }()");
    }
    canPop() {
      let iterator = this[_history][$where](navigator$._RouteEntry.isPresentPredicate)[$iterator];
      if (!dart.test(iterator.moveNext())) return false;
      if (dart.test(iterator.current.route.willHandlePopInternally)) return true;
      if (!dart.test(iterator.moveNext())) return false;
      return true;
    }
    maybePop(T, result = null) {
      return async.async(core.bool, (function* maybePop() {
        let lastEntry = this[_history][$cast](_RouteEntryN())[$lastWhere](dart.fn(e => e != null && dart.test(navigator$._RouteEntry.isPresentPredicate(e)), _RouteEntryNTobool()), {orElse: dart.fn(() => null, VoidToNull())});
        if (lastEntry == null) return false;
        if (!dart.equals(lastEntry.route[_navigator], this)) dart.assertFailed(null, L28, 4854, 12, "lastEntry.route._navigator == this");
        let disposition = (yield lastEntry.route.willPop());
        if (!(disposition != null)) dart.assertFailed(null, L28, 4856, 12, "disposition != null");
        if (!dart.test(this.mounted)) return true;
        let newLastEntry = this[_history][$cast](_RouteEntryN())[$lastWhere](dart.fn(e => e != null && dart.test(navigator$._RouteEntry.isPresentPredicate(e)), _RouteEntryNTobool()), {orElse: dart.fn(() => null, VoidToNull())});
        if (!dart.equals(lastEntry, newLastEntry)) return true;
        switch (disposition) {
          case C308 || CT.C308:
          {
            return false;
          }
          case C306 || CT.C306:
          {
            this.pop(T, result);
            return true;
          }
          case C307 || CT.C307:
          {
            return true;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }).bind(this));
    }
    pop(T, result = null) {
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, L28, 4902, 12, "!_debugLocked");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 4903, 12, "() {\r\n      _debugLocked = true;\r\n      return true;\r\n    }()");
      let entry = this[_history][$lastWhere](navigator$._RouteEntry.isPresentPredicate);
      if (dart.test(entry.hasPage)) {
        if (dart.test(dart.nullCheck(this.widget.onPopPage)(entry.route, result))) entry.currentState = navigator$._RouteLifecycle.pop;
      } else {
        entry.pop(T, result);
      }
      if (dart.equals(entry.currentState, navigator$._RouteLifecycle.pop)) {
        this[_flushHistoryUpdates]({rearrangeOverlay: false});
        if (!dart.test(entry.route[_popCompleter].isCompleted)) dart.assertFailed(null, L28, 4918, 14, "entry.route._popCompleter.isCompleted");
      }
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 4920, 12, "() {\r\n      _debugLocked = false;\r\n      return true;\r\n    }()");
      this[_afterNavigation](entry.route);
    }
    popUntil(predicate) {
      if (predicate == null) dart.nullFailed(L28, 4941, 32, "predicate");
      let candidate = this[_history][$cast](_RouteEntryN())[$lastWhere](dart.fn(e => e != null && dart.test(navigator$._RouteEntry.isPresentPredicate(e)), _RouteEntryNTobool()), {orElse: dart.fn(() => null, VoidToNull())});
      while (candidate != null) {
        if (dart.test(predicate(candidate.route))) return;
        this.pop(ObjectN());
        candidate = this[_history][$cast](_RouteEntryN())[$lastWhere](dart.fn(e => e != null && dart.test(navigator$._RouteEntry.isPresentPredicate(e)), _RouteEntryNTobool()), {orElse: dart.fn(() => null, VoidToNull())});
      }
    }
    removeRoute(route) {
      let t27;
      if (route == null) dart.nullFailed(L28, 4960, 35, "route");
      if (!(route != null)) dart.assertFailed(null, L28, 4961, 12, "route != null");
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, L28, 4962, 12, "!_debugLocked");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 4963, 12, "() {\r\n      _debugLocked = true;\r\n      return true;\r\n    }()");
      if (!dart.equals(route[_navigator], this)) dart.assertFailed(null, L28, 4967, 12, "route._navigator == this");
      let wasCurrent = route.isCurrent;
      let entry = this[_history][$firstWhere](navigator$._RouteEntry.isRoutePredicate(route));
      if (!(entry != null)) dart.assertFailed(null, L28, 4970, 12, "entry != null");
      entry.remove();
      this[_flushHistoryUpdates]({rearrangeOverlay: false});
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 4973, 12, "() {\r\n      _debugLocked = false;\r\n      return true;\r\n    }()");
      if (dart.test(wasCurrent)) this[_afterNavigation]((t27 = this[_history][$cast](_RouteEntryN())[$lastWhere](dart.fn(e => e != null && dart.test(navigator$._RouteEntry.isPresentPredicate(e)), _RouteEntryNTobool()), {orElse: dart.fn(() => null, VoidToNull())}), t27 == null ? null : t27.route));
    }
    removeRouteBelow(anchorRoute) {
      if (anchorRoute == null) dart.nullFailed(L28, 4990, 40, "anchorRoute");
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, L28, 4991, 12, "!_debugLocked");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 4992, 12, "() {\r\n      _debugLocked = true;\r\n      return true;\r\n    }()");
      if (!(anchorRoute != null)) dart.assertFailed(null, L28, 4996, 12, "anchorRoute != null");
      if (!dart.equals(anchorRoute[_navigator], this)) dart.assertFailed(null, L28, 4997, 12, "anchorRoute._navigator == this");
      let anchorIndex = this[_history][$indexWhere](navigator$._RouteEntry.isRoutePredicate(anchorRoute));
      if (!(dart.notNull(anchorIndex) >= 0)) dart.assertFailed("This Navigator does not contain the specified anchorRoute.", L28, 4999, 12, "anchorIndex >= 0");
      if (!dart.test(this[_history][$_get](anchorIndex).isPresent)) dart.assertFailed("The specified anchorRoute has already been removed from the Navigator.", L28, 5000, 12, "_history[anchorIndex].isPresent");
      let index = dart.notNull(anchorIndex) - 1;
      while (index >= 0) {
        if (dart.test(this[_history][$_get](index).isPresent)) break;
        index = index - 1;
      }
      if (!(index >= 0)) dart.assertFailed("There are no routes below the specified anchorRoute.", L28, 5007, 12, "index >= 0");
      this[_history][$_get](index).remove();
      this[_flushHistoryUpdates]({rearrangeOverlay: false});
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 5010, 12, "() {\r\n      _debugLocked = false;\r\n      return true;\r\n    }()");
    }
    finalizeRoute(route) {
      if (route == null) dart.nullFailed(L28, 5027, 37, "route");
      let wasDebugLocked = null;
      if (!dart.test(dart.fn(() => {
        wasDebugLocked = this[_debugLocked];
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 5032, 12, "() { wasDebugLocked = _debugLocked; _debugLocked = true; return true; }()");
      if (!(this[_history][$where](navigator$._RouteEntry.isRoutePredicate(route))[$length] === 1)) dart.assertFailed(null, L28, 5033, 12, "_history.where(_RouteEntry.isRoutePredicate(route)).length == 1");
      let entry = this[_history][$firstWhere](navigator$._RouteEntry.isRoutePredicate(route));
      if (dart.test(entry.doingPop)) {
        entry.currentState = navigator$._RouteLifecycle.pop;
        this[_flushHistoryUpdates]({rearrangeOverlay: false});
      }
      if (!!dart.equals(entry.currentState, navigator$._RouteLifecycle.pop)) dart.assertFailed(null, L28, 5041, 12, "entry.currentState != _RouteLifecycle.pop");
      entry.finalize();
      this[_flushHistoryUpdates]({rearrangeOverlay: false});
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = dart.nullCheck(wasDebugLocked);
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L28, 5044, 12, "() { _debugLocked = wasDebugLocked!; return true; }()");
    }
    [_getRouteById](T, id) {
      let t27;
      if (id == null) dart.nullFailed(L28, 5048, 37, "id");
      if (!(id != null)) dart.assertFailed(null, L28, 5049, 12, "id != null");
      return dart.nullable(navigator$.Route$(T)).as((t27 = this[_history][$cast](_RouteEntryN())[$firstWhere](dart.fn(entry => dart.nullCheck(entry).restorationId == id, _RouteEntryNTobool()), {orElse: dart.fn(() => null, VoidToNull())}), t27 == null ? null : t27.route));
    }
    get [_userGesturesInProgress]() {
      return this[_userGesturesInProgressCount];
    }
    set [_userGesturesInProgress](value) {
      if (value == null) dart.nullFailed(L28, 5058, 35, "value");
      this[_userGesturesInProgressCount] = value;
      this.userGestureInProgressNotifier.value = dart.notNull(this[_userGesturesInProgress]) > 0;
    }
    get userGestureInProgress() {
      return this.userGestureInProgressNotifier.value;
    }
    didStartUserGesture() {
      this[_userGesturesInProgress] = dart.notNull(this[_userGesturesInProgress]) + 1;
      if (this[_userGesturesInProgress] === 1) {
        let routeIndex = this[_getIndexBefore](dart.notNull(this[_history][$length]) - 1, navigator$._RouteEntry.willBePresentPredicate);
        if (!(routeIndex != null)) dart.assertFailed(null, L28, 5087, 14, "routeIndex != null");
        let route = this[_history][$_get](routeIndex).route;
        let previousRoute = null;
        if (!dart.test(route.willHandlePopInternally) && dart.notNull(routeIndex) > 0) {
          previousRoute = dart.nullCheck(this[_getRouteBefore](dart.notNull(routeIndex) - 1, navigator$._RouteEntry.willBePresentPredicate)).route;
        }
        for (let observer of this[_effectiveObservers])
          observer.didStartUserGesture(route, previousRoute);
      }
    }
    didStopUserGesture() {
      if (!(dart.notNull(this[_userGesturesInProgress]) > 0)) dart.assertFailed(null, L28, 5106, 12, "_userGesturesInProgress > 0");
      this[_userGesturesInProgress] = dart.notNull(this[_userGesturesInProgress]) - 1;
      if (this[_userGesturesInProgress] === 0) {
        for (let observer of this[_effectiveObservers])
          observer.didStopUserGesture();
      }
    }
    [_handlePointerDown$](event) {
      if (event == null) dart.nullFailed(L28, 5116, 44, "event");
      this[_activePointers].add(event.pointer);
    }
    [_handlePointerUpOrCancel](event) {
      if (event == null) dart.nullFailed(L28, 5120, 46, "event");
      this[_activePointers].remove(event.pointer);
    }
    [_cancelActivePointers]() {
      let t27;
      if (dart.equals(dart.nullCheck(binding$.SchedulerBinding.instance).schedulerPhase, binding$.SchedulerPhase.idle)) {
        let absorber = (t27 = this[_overlayKey].currentContext, t27 == null ? null : t27.findAncestorRenderObjectOfType(proxy_box.RenderAbsorbPointer));
        this.setState(dart.fn(() => {
          let t27;
          t27 = absorber;
          t27 == null ? null : t27.absorbing = true;
        }, VoidTovoid()));
      }
      this[_activePointers][$toList]()[$forEach](dart.bind(dart.nullCheck(binding$5.WidgetsBinding.instance), 'cancelPointer'));
    }
    build(context) {
      if (context == null) dart.nullFailed(L28, 5141, 29, "context");
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, L28, 5142, 12, "!_debugLocked");
      if (!dart.test(this[_history][$isNotEmpty])) dart.assertFailed(null, L28, 5143, 12, "_history.isNotEmpty");
      return new navigator$.HeroControllerScope.none({child: new basic.Listener.new({onPointerDown: dart.bind(this, _handlePointerDown$), onPointerUp: dart.bind(this, _handlePointerUpOrCancel), onPointerCancel: dart.bind(this, _handlePointerUpOrCancel), child: new basic.AbsorbPointer.new({absorbing: false, child: new focus_scope.FocusScope.new({node: this.focusScopeNode, autofocus: true, child: new restoration$.UnmanagedRestorationScope.new({bucket: this.bucket, child: new overlay$.Overlay.new({key: this[_overlayKey], initialEntries: this.overlay == null ? this[_allRouteOverlayEntries][$toList]({growable: false}) : C147 || CT.C147, $creationLocationd_0dea112b090073317d4: C329 || CT.C329}), $creationLocationd_0dea112b090073317d4: C333 || CT.C333}), $creationLocationd_0dea112b090073317d4: C337 || CT.C337}), $creationLocationd_0dea112b090073317d4: C342 || CT.C342}), $creationLocationd_0dea112b090073317d4: C346 || CT.C346}), $creationLocationd_0dea112b090073317d4: C352 || CT.C352});
    }
  };
  (navigator$.NavigatorState.new = function() {
    this[__NavigatorState__overlayKey] = null;
    this[__NavigatorState__overlayKey_isSet] = false;
    this[_history] = JSArrayOf_RouteEntry().of([]);
    this[_serializableHistory] = new navigator$._HistoryProperty.new();
    this[_observedRouteAdditions] = new (ListQueueOf_NavigatorObservation()).new();
    this[_observedRouteDeletions] = new (ListQueueOf_NavigatorObservation()).new();
    this[focusScopeNode] = new focus_manager.FocusScopeNode.new({debugLabel: "Navigator Scope"});
    this[_debugLocked] = false;
    this[_heroControllerFromScope] = null;
    this[__NavigatorState__effectiveObservers] = null;
    this[__NavigatorState__effectiveObservers_isSet] = false;
    this[_rawNextPagelessRestorationScopeId] = new (RestorableNumOfint()).new(0);
    this[_lastAnnouncedRouteName] = null;
    this[_debugUpdatingPage] = false;
    this[_userGesturesInProgressCount] = 0;
    this[userGestureInProgressNotifier] = new (ValueNotifierOfbool()).new(false);
    this[_activePointers] = LinkedHashSetOfint().new();
    navigator$.NavigatorState.__proto__.new.call(this);
    ;
  }).prototype = navigator$.NavigatorState.prototype;
  dart.addTypeTests(navigator$.NavigatorState);
  dart.addTypeCaches(navigator$.NavigatorState);
  dart.setMethodSignature(navigator$.NavigatorState, () => ({
    __proto__: dart.getMethods(navigator$.NavigatorState.__proto__),
    restoreState: dart.fnType(dart.void, [dart.nullable(restoration.RestorationBucket), core.bool]),
    [_updateHeroController]: dart.fnType(dart.void, [dart.nullable(heroes.HeroController)]),
    [_updateEffectiveObservers]: dart.fnType(dart.void, []),
    [_debugCheckDuplicatedPageKeys]: dart.fnType(dart.void, []),
    [_updatePages]: dart.fnType(dart.void, []),
    [_flushHistoryUpdates]: dart.fnType(dart.void, [], {rearrangeOverlay: core.bool}, {}),
    [_flushObserverNotifications]: dart.fnType(dart.void, []),
    [_flushRouteAnnouncement]: dart.fnType(dart.void, []),
    [_getRouteBefore]: dart.fnType(dart.nullable(navigator$._RouteEntry), [core.int, dart.fnType(core.bool, [navigator$._RouteEntry])]),
    [_getIndexBefore]: dart.fnType(core.int, [core.int, dart.fnType(core.bool, [navigator$._RouteEntry])]),
    [_getRouteAfter]: dart.fnType(dart.nullable(navigator$._RouteEntry), [core.int, dart.fnType(core.bool, [navigator$._RouteEntry])]),
    [_routeNamed]: dart.gFnType(T => [dart.nullable(navigator$.Route$(T)), [core.String], {allowNull: core.bool}, {arguments: dart.nullable(core.Object)}], T => [dart.nullable(core.Object)]),
    pushNamed: dart.gFnType(T => [async.Future$(dart.nullable(T)), [core.String], {arguments: dart.nullable(core.Object)}, {}], T => [dart.nullable(core.Object)]),
    restorablePushNamed: dart.gFnType(T => [core.String, [core.String], {arguments: dart.nullable(core.Object)}, {}], T => [dart.nullable(core.Object)]),
    pushReplacementNamed: dart.gFnType((T, TO) => [async.Future$(dart.nullable(T)), [core.String], {arguments: dart.nullable(core.Object), result: dart.nullable(TO)}, {}], (T, TO) => [dart.nullable(core.Object), dart.nullable(core.Object)]),
    restorablePushReplacementNamed: dart.gFnType((T, TO) => [core.String, [core.String], {arguments: dart.nullable(core.Object), result: dart.nullable(TO)}, {}], (T, TO) => [dart.nullable(core.Object), dart.nullable(core.Object)]),
    popAndPushNamed: dart.gFnType((T, TO) => [async.Future$(dart.nullable(T)), [core.String], {arguments: dart.nullable(core.Object), result: dart.nullable(TO)}, {}], (T, TO) => [dart.nullable(core.Object), dart.nullable(core.Object)]),
    restorablePopAndPushNamed: dart.gFnType((T, TO) => [core.String, [core.String], {arguments: dart.nullable(core.Object), result: dart.nullable(TO)}, {}], (T, TO) => [dart.nullable(core.Object), dart.nullable(core.Object)]),
    pushNamedAndRemoveUntil: dart.gFnType(T => [async.Future$(dart.nullable(T)), [core.String, dart.fnType(core.bool, [navigator$.Route])], {arguments: dart.nullable(core.Object)}, {}], T => [dart.nullable(core.Object)]),
    restorablePushNamedAndRemoveUntil: dart.gFnType(T => [core.String, [core.String, dart.fnType(core.bool, [navigator$.Route])], {arguments: dart.nullable(core.Object)}, {}], T => [dart.nullable(core.Object)]),
    push: dart.gFnType(T => [async.Future$(dart.nullable(T)), [navigator$.Route$(T)]], T => [dart.nullable(core.Object)]),
    [_debugIsStaticCallback]: dart.fnType(core.bool, [core.Function]),
    restorablePush: dart.gFnType(T => [core.String, [dart.fnType(navigator$.Route$(T), [framework.BuildContext, dart.nullable(core.Object)])], {arguments: dart.nullable(core.Object)}, {}], T => [dart.nullable(core.Object)]),
    [_pushEntry]: dart.fnType(dart.void, [navigator$._RouteEntry]),
    [_afterNavigation]: dart.fnType(dart.void, [dart.nullable(navigator$.Route)]),
    pushReplacement: dart.gFnType((T, TO) => [async.Future$(dart.nullable(T)), [navigator$.Route$(T)], {result: dart.nullable(TO)}, {}], (T, TO) => [dart.nullable(core.Object), dart.nullable(core.Object)]),
    restorablePushReplacement: dart.gFnType((T, TO) => [core.String, [dart.fnType(navigator$.Route$(T), [framework.BuildContext, dart.nullable(core.Object)])], {arguments: dart.nullable(core.Object), result: dart.nullable(TO)}, {}], (T, TO) => [dart.nullable(core.Object), dart.nullable(core.Object)]),
    [_pushReplacementEntry]: dart.gFnType(TO => [dart.void, [navigator$._RouteEntry, dart.nullable(TO)]], TO => [dart.nullable(core.Object)]),
    pushAndRemoveUntil: dart.gFnType(T => [async.Future$(dart.nullable(T)), [navigator$.Route$(T), dart.fnType(core.bool, [navigator$.Route])]], T => [dart.nullable(core.Object)]),
    restorablePushAndRemoveUntil: dart.gFnType(T => [core.String, [dart.fnType(navigator$.Route$(T), [framework.BuildContext, dart.nullable(core.Object)]), dart.fnType(core.bool, [navigator$.Route])], {arguments: dart.nullable(core.Object)}, {}], T => [dart.nullable(core.Object)]),
    [_pushEntryAndRemoveUntil]: dart.fnType(dart.void, [navigator$._RouteEntry, dart.fnType(core.bool, [navigator$.Route])]),
    replace: dart.gFnType(T => [dart.void, [], {}, {newRoute: navigator$.Route$(T), oldRoute: navigator$.Route}], T => [dart.nullable(core.Object)]),
    restorableReplace: dart.gFnType(T => [core.String, [], {arguments: dart.nullable(core.Object)}, {newRouteBuilder: dart.fnType(navigator$.Route$(T), [framework.BuildContext, dart.nullable(core.Object)]), oldRoute: navigator$.Route}], T => [dart.nullable(core.Object)]),
    [_replaceEntry]: dart.fnType(dart.void, [navigator$._RouteEntry, navigator$.Route]),
    replaceRouteBelow: dart.gFnType(T => [dart.void, [], {}, {anchorRoute: navigator$.Route, newRoute: navigator$.Route$(T)}], T => [dart.nullable(core.Object)]),
    restorableReplaceRouteBelow: dart.gFnType(T => [core.String, [], {arguments: dart.nullable(core.Object)}, {anchorRoute: navigator$.Route, newRouteBuilder: dart.fnType(navigator$.Route$(T), [framework.BuildContext, dart.nullable(core.Object)])}], T => [dart.nullable(core.Object)]),
    [_replaceEntryBelow]: dart.fnType(dart.void, [navigator$._RouteEntry, navigator$.Route]),
    canPop: dart.fnType(core.bool, []),
    maybePop: dart.gFnType(T => [async.Future$(core.bool), [], [dart.nullable(T)]], T => [dart.nullable(core.Object)]),
    pop: dart.gFnType(T => [dart.void, [], [dart.nullable(T)]], T => [dart.nullable(core.Object)]),
    popUntil: dart.fnType(dart.void, [dart.fnType(core.bool, [navigator$.Route])]),
    removeRoute: dart.fnType(dart.void, [navigator$.Route]),
    removeRouteBelow: dart.fnType(dart.void, [navigator$.Route]),
    finalizeRoute: dart.fnType(dart.void, [navigator$.Route]),
    [_getRouteById]: dart.gFnType(T => [dart.nullable(navigator$.Route$(T)), [core.String]], T => [dart.nullable(core.Object)]),
    didStartUserGesture: dart.fnType(dart.void, []),
    didStopUserGesture: dart.fnType(dart.void, []),
    [_handlePointerDown$]: dart.fnType(dart.void, [events.PointerDownEvent]),
    [_handlePointerUpOrCancel]: dart.fnType(dart.void, [events.PointerEvent]),
    [_cancelActivePointers]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(navigator$.NavigatorState, () => ({
    __proto__: dart.getGetters(navigator$.NavigatorState.__proto__),
    [_overlayKey]: framework.GlobalKey$(overlay$.OverlayState),
    [_effectiveObservers]: core.List$(navigator$.NavigatorObserver),
    [_nextPagelessRestorationScopeId]: core.int,
    restorationId: dart.nullable(core.String),
    overlay: dart.nullable(overlay$.OverlayState),
    [_allRouteOverlayEntries]: core.Iterable$(overlay$.OverlayEntry),
    [_userGesturesInProgress]: core.int,
    userGestureInProgress: core.bool
  }));
  dart.setSetterSignature(navigator$.NavigatorState, () => ({
    __proto__: dart.getSetters(navigator$.NavigatorState.__proto__),
    [_overlayKey]: framework.GlobalKey$(overlay$.OverlayState),
    [_effectiveObservers]: core.List$(navigator$.NavigatorObserver),
    [_userGesturesInProgress]: core.int
  }));
  dart.setLibraryUri(navigator$.NavigatorState, L29);
  dart.setFieldSignature(navigator$.NavigatorState, () => ({
    __proto__: dart.getFields(navigator$.NavigatorState.__proto__),
    [__NavigatorState__overlayKey]: dart.fieldType(dart.nullable(framework.GlobalKey$(overlay$.OverlayState))),
    [__NavigatorState__overlayKey_isSet]: dart.fieldType(core.bool),
    [_history]: dart.fieldType(core.List$(navigator$._RouteEntry)),
    [_serializableHistory]: dart.finalFieldType(navigator$._HistoryProperty),
    [_observedRouteAdditions]: dart.finalFieldType(collection.Queue$(navigator$._NavigatorObservation)),
    [_observedRouteDeletions]: dart.finalFieldType(collection.Queue$(navigator$._NavigatorObservation)),
    focusScopeNode: dart.finalFieldType(focus_manager.FocusScopeNode),
    [_debugLocked]: dart.fieldType(core.bool),
    [_heroControllerFromScope]: dart.fieldType(dart.nullable(heroes.HeroController)),
    [__NavigatorState__effectiveObservers]: dart.fieldType(dart.nullable(core.List$(navigator$.NavigatorObserver))),
    [__NavigatorState__effectiveObservers_isSet]: dart.fieldType(core.bool),
    [_rawNextPagelessRestorationScopeId]: dart.finalFieldType(restoration_properties.RestorableNum$(core.int)),
    [_lastAnnouncedRouteName]: dart.fieldType(dart.nullable(core.String)),
    [_debugUpdatingPage]: dart.fieldType(core.bool),
    [_userGesturesInProgressCount]: dart.fieldType(core.int),
    userGestureInProgressNotifier: dart.finalFieldType(change_notifier.ValueNotifier$(core.bool)),
    [_activePointers]: dart.finalFieldType(core.Set$(core.int))
  }));
  var C355;
  var C356;
  var C357;
  navigator$._RouteRestorationType = class _RouteRestorationType extends core.Object {
    toString() {
      return this[_name$4];
    }
  };
  (navigator$._RouteRestorationType.new = function(index, _name) {
    if (index == null) dart.nullFailed(L28, 5171, 6, "index");
    if (_name == null) dart.nullFailed(L28, 5171, 6, "_name");
    this.index = index;
    this[_name$4] = _name;
    ;
  }).prototype = navigator$._RouteRestorationType.prototype;
  dart.addTypeTests(navigator$._RouteRestorationType);
  dart.addTypeCaches(navigator$._RouteRestorationType);
  dart.setLibraryUri(navigator$._RouteRestorationType, L29);
  dart.setFieldSignature(navigator$._RouteRestorationType, () => ({
    __proto__: dart.getFields(navigator$._RouteRestorationType.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$4]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(navigator$._RouteRestorationType, ['toString']);
  navigator$._RouteRestorationType.named = C355 || CT.C355;
  navigator$._RouteRestorationType.anonymous = C356 || CT.C356;
  navigator$._RouteRestorationType.values = C357 || CT.C357;
  var _serializableData = dart.privateName(navigator$, "_serializableData");
  navigator$._RestorationInformation = class _RestorationInformation extends core.Object {
    static fromSerializableData(data) {
      if (data == null) dart.nullFailed(L28, 5189, 63, "data");
      if (!(data != null)) dart.assertFailed(null, L28, 5190, 12, "data != null");
      let casted = ListOfObjectN().as(data);
      if (!dart.test(casted[$isNotEmpty])) dart.assertFailed(null, L28, 5192, 12, "casted.isNotEmpty");
      let type = navigator$._RouteRestorationType.values[$_get](core.int.as(dart.nullCheck(casted[$_get](0))));
      switch (type) {
        case C355 || CT.C355:
        {
          return navigator$._NamedRestorationInformation.fromSerializableData(casted[$sublist](1));
        }
        case C356 || CT.C356:
        {
          return navigator$._AnonymousRestorationInformation.fromSerializableData(casted[$sublist](1));
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      dart.throw(new core.StateError.new("Invalid type: " + dart.str(type)));
    }
    get isRestorable() {
      return true;
    }
    getSerializableData() {
      this[_serializableData] == null ? this[_serializableData] = this.computeSerializableData() : null;
      return dart.nullCheck(this[_serializableData]);
    }
    computeSerializableData() {
      return JSArrayOfObject().of([this.type.index]);
    }
    toRouteEntry(navigator, opts) {
      if (navigator == null) dart.nullFailed(L28, 5222, 43, "navigator");
      let initialState = opts && 'initialState' in opts ? opts.initialState : C315 || CT.C315;
      if (initialState == null) dart.nullFailed(L28, 5222, 71, "initialState");
      if (!(navigator != null)) dart.assertFailed(null, L28, 5223, 12, "navigator != null");
      if (!(initialState != null)) dart.assertFailed(null, L28, 5224, 12, "initialState != null");
      let route = this.createRoute(navigator);
      if (!(route != null)) dart.assertFailed(null, L28, 5226, 12, "route != null");
      return new navigator$._RouteEntry.new(route, {initialState: initialState, restorationInformation: this});
    }
  };
  (navigator$._RestorationInformation.new = function(type) {
    if (type == null) dart.nullFailed(L28, 5177, 32, "type");
    this[_serializableData] = null;
    this.type = type;
    if (!(type != null)) dart.assertFailed(null, L28, 5177, 47, "type != null");
    ;
  }).prototype = navigator$._RestorationInformation.prototype;
  dart.addTypeTests(navigator$._RestorationInformation);
  dart.addTypeCaches(navigator$._RestorationInformation);
  dart.setMethodSignature(navigator$._RestorationInformation, () => ({
    __proto__: dart.getMethods(navigator$._RestorationInformation.__proto__),
    getSerializableData: dart.fnType(core.Object, []),
    computeSerializableData: dart.fnType(core.List$(core.Object), []),
    toRouteEntry: dart.fnType(navigator$._RouteEntry, [navigator$.NavigatorState], {initialState: navigator$._RouteLifecycle}, {})
  }));
  dart.setGetterSignature(navigator$._RestorationInformation, () => ({
    __proto__: dart.getGetters(navigator$._RestorationInformation.__proto__),
    isRestorable: core.bool
  }));
  dart.setLibraryUri(navigator$._RestorationInformation, L29);
  dart.setFieldSignature(navigator$._RestorationInformation, () => ({
    __proto__: dart.getFields(navigator$._RestorationInformation.__proto__),
    type: dart.finalFieldType(navigator$._RouteRestorationType),
    [_serializableData]: dart.fieldType(dart.nullable(core.Object))
  }));
  var restorationScopeId$0 = dart.privateName(navigator$, "_NamedRestorationInformation.restorationScopeId");
  navigator$._NamedRestorationInformation = class _NamedRestorationInformation extends navigator$._RestorationInformation {
    get restorationScopeId() {
      return this[restorationScopeId$0];
    }
    set restorationScopeId(value) {
      super.restorationScopeId = value;
    }
    static fromSerializableData(data) {
      if (data == null) dart.nullFailed(L28, 5242, 75, "data");
      if (!(dart.notNull(data[$length]) >= 2)) dart.assertFailed(null, L28, 5243, 12, "data.length >= 2");
      return new navigator$._NamedRestorationInformation.new({restorationScopeId: core.int.as(dart.nullCheck(data[$_get](0))), name: core.String.as(dart.nullCheck(data[$_get](1))), arguments: dart.notNull(data[$length]) > 2 ? data[$_get](2) : null});
    }
    computeSerializableData() {
      let t29;
      t29 = super.computeSerializableData();
      return (() => {
        t29[$addAll]((() => {
          let t30 = JSArrayOfObject().of([]);
          t30.push(this.restorationScopeId);
          t30.push(this.name);
          if (this.arguments != null) t30.push(dart.nullCheck(this.arguments));
          return t30;
        })());
        return t29;
      })();
    }
    createRoute(navigator) {
      if (navigator == null) dart.nullFailed(L28, 5267, 45, "navigator");
      let route = dart.nullCheck(navigator[_routeNamed](dart.dynamic, this.name, {arguments: this.arguments, allowNull: false}));
      if (!(route !== null)) dart.assertFailed(null, L28, 5269, 12, "route != null");
      return route;
    }
  };
  (navigator$._NamedRestorationInformation.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    if (name == null) dart.nullFailed(L28, 5237, 19, "name");
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let restorationScopeId = opts && 'restorationScopeId' in opts ? opts.restorationScopeId : null;
    if (restorationScopeId == null) dart.nullFailed(L28, 5239, 19, "restorationScopeId");
    this.name = name;
    this.arguments = $arguments;
    this[restorationScopeId$0] = restorationScopeId;
    if (!(name != null)) dart.assertFailed(null, L28, 5240, 15, "name != null");
    navigator$._NamedRestorationInformation.__proto__.new.call(this, navigator$._RouteRestorationType.named);
    ;
  }).prototype = navigator$._NamedRestorationInformation.prototype;
  dart.addTypeTests(navigator$._NamedRestorationInformation);
  dart.addTypeCaches(navigator$._NamedRestorationInformation);
  dart.setMethodSignature(navigator$._NamedRestorationInformation, () => ({
    __proto__: dart.getMethods(navigator$._NamedRestorationInformation.__proto__),
    createRoute: dart.fnType(navigator$.Route, [navigator$.NavigatorState])
  }));
  dart.setLibraryUri(navigator$._NamedRestorationInformation, L29);
  dart.setFieldSignature(navigator$._NamedRestorationInformation, () => ({
    __proto__: dart.getFields(navigator$._NamedRestorationInformation.__proto__),
    restorationScopeId: dart.finalFieldType(core.int),
    name: dart.finalFieldType(core.String),
    arguments: dart.finalFieldType(dart.nullable(core.Object))
  }));
  var restorationScopeId$1 = dart.privateName(navigator$, "_AnonymousRestorationInformation.restorationScopeId");
  navigator$._AnonymousRestorationInformation = class _AnonymousRestorationInformation extends navigator$._RestorationInformation {
    get restorationScopeId() {
      return this[restorationScopeId$1];
    }
    set restorationScopeId(value) {
      super.restorationScopeId = value;
    }
    static fromSerializableData(data) {
      if (data == null) dart.nullFailed(L28, 5281, 79, "data");
      if (!(dart.notNull(data[$length]) > 1)) dart.assertFailed(null, L28, 5282, 12, "data.length > 1");
      let routeBuilder = BuildContextAndObjectNToRoute().as(dart.nullCheck(ui.PluginUtilities.getCallbackFromHandle(new ui.CallbackHandle.fromRawHandle(core.int.as(dart.nullCheck(data[$_get](1)))))));
      return new navigator$._AnonymousRestorationInformation.new({restorationScopeId: core.int.as(dart.nullCheck(data[$_get](0))), routeBuilder: routeBuilder, arguments: dart.notNull(data[$length]) > 2 ? data[$_get](2) : null});
    }
    get isRestorable() {
      return !true;
    }
    computeSerializableData() {
      let t30;
      if (!dart.test(this.isRestorable)) dart.assertFailed(null, L28, 5297, 12, "isRestorable");
      let handle = ui.PluginUtilities.getCallbackHandle(this.routeBuilder);
      if (!(handle != null)) dart.assertFailed(null, L28, 5299, 12, "handle != null");
      t30 = super.computeSerializableData();
      return (() => {
        t30[$addAll]((() => {
          let t31 = JSArrayOfObject().of([]);
          t31.push(this.restorationScopeId);
          t31.push(dart.nullCheck(handle).toRawHandle());
          if (this.arguments != null) t31.push(dart.nullCheck(this.arguments));
          return t31;
        })());
        return t30;
      })();
    }
    createRoute(navigator) {
      let t32, t31;
      if (navigator == null) dart.nullFailed(L28, 5314, 45, "navigator");
      let result = (t31 = navigator.context, t32 = this.arguments, this.routeBuilder(t31, t32));
      if (!(result != null)) dart.assertFailed(null, L28, 5316, 12, "result != null");
      return result;
    }
  };
  (navigator$._AnonymousRestorationInformation.new = function(opts) {
    let routeBuilder = opts && 'routeBuilder' in opts ? opts.routeBuilder : null;
    if (routeBuilder == null) dart.nullFailed(L28, 5276, 19, "routeBuilder");
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let restorationScopeId = opts && 'restorationScopeId' in opts ? opts.restorationScopeId : null;
    if (restorationScopeId == null) dart.nullFailed(L28, 5278, 19, "restorationScopeId");
    this.routeBuilder = routeBuilder;
    this.arguments = $arguments;
    this[restorationScopeId$1] = restorationScopeId;
    if (!(routeBuilder != null)) dart.assertFailed(null, L28, 5279, 15, "routeBuilder != null");
    navigator$._AnonymousRestorationInformation.__proto__.new.call(this, navigator$._RouteRestorationType.anonymous);
    ;
  }).prototype = navigator$._AnonymousRestorationInformation.prototype;
  dart.addTypeTests(navigator$._AnonymousRestorationInformation);
  dart.addTypeCaches(navigator$._AnonymousRestorationInformation);
  dart.setMethodSignature(navigator$._AnonymousRestorationInformation, () => ({
    __proto__: dart.getMethods(navigator$._AnonymousRestorationInformation.__proto__),
    createRoute: dart.fnType(navigator$.Route, [navigator$.NavigatorState])
  }));
  dart.setLibraryUri(navigator$._AnonymousRestorationInformation, L29);
  dart.setFieldSignature(navigator$._AnonymousRestorationInformation, () => ({
    __proto__: dart.getFields(navigator$._AnonymousRestorationInformation.__proto__),
    restorationScopeId: dart.finalFieldType(core.int),
    routeBuilder: dart.finalFieldType(dart.fnType(navigator$.Route, [framework.BuildContext, dart.nullable(core.Object)])),
    arguments: dart.finalFieldType(dart.nullable(core.Object))
  }));
  var _pageToPagelessRoutes = dart.privateName(navigator$, "_pageToPagelessRoutes");
  var C358;
  var _finalizePage = dart.privateName(navigator$, "_finalizePage");
  var _debugMapsEqual = dart.privateName(navigator$, "_debugMapsEqual");
  var _debugAssertNotDisposed = dart.privateName(restoration$, "_debugAssertNotDisposed");
  const _is_RestorableProperty_default = Symbol('_is_RestorableProperty_default');
  restoration$.RestorableProperty$ = dart.generic(T => {
    class RestorableProperty extends change_notifier.ChangeNotifier {
      get enabled() {
        return true;
      }
      dispose() {
        let t31;
        if (!dart.test(this[_debugAssertNotDisposed]())) dart.assertFailed(null, L38, 479, 12, "_debugAssertNotDisposed()");
        t31 = this[_owner$];
        t31 == null ? null : t31[_unregister](this);
        super.dispose();
        this[_disposed] = true;
      }
      [_register](restorationId, owner) {
        if (restorationId == null) dart.nullFailed(L38, 488, 25, "restorationId");
        if (owner == null) dart.nullFailed(L38, 488, 57, "owner");
        if (!dart.test(this[_debugAssertNotDisposed]())) dart.assertFailed(null, L38, 489, 12, "_debugAssertNotDisposed()");
        if (!(restorationId != null)) dart.assertFailed(null, L38, 490, 12, "restorationId != null");
        if (!(owner != null)) dart.assertFailed(null, L38, 491, 12, "owner != null");
        this[_restorationId] = restorationId;
        this[_owner$] = owner;
      }
      [_unregister]() {
        if (!dart.test(this[_debugAssertNotDisposed]())) dart.assertFailed(null, L38, 496, 12, "_debugAssertNotDisposed()");
        if (!(this[_restorationId] != null)) dart.assertFailed(null, L38, 497, 12, "_restorationId != null");
        if (!(this[_owner$] != null)) dart.assertFailed(null, L38, 498, 12, "_owner != null");
        this[_restorationId] = null;
        this[_owner$] = null;
      }
      get state() {
        if (!dart.test(this.isRegistered)) dart.assertFailed(null, L38, 508, 12, "isRegistered");
        if (!dart.test(this[_debugAssertNotDisposed]())) dart.assertFailed(null, L38, 509, 12, "_debugAssertNotDisposed()");
        return dart.nullCheck(this[_owner$]);
      }
      get isRegistered() {
        if (!dart.test(this[_debugAssertNotDisposed]())) dart.assertFailed(null, L38, 516, 12, "_debugAssertNotDisposed()");
        return this[_restorationId] != null;
      }
      [_debugAssertNotDisposed]() {
        if (!dart.test(dart.fn(() => {
          if (dart.test(this[_disposed])) {
            dart.throw(assertions.FlutterError.new("A " + dart.str(this[$runtimeType]) + " was used after being disposed.\n" + "Once you have called dispose() on a " + dart.str(this[$runtimeType]) + ", it can no longer be used."));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L38, 521, 12, "() {\r\n      if (_disposed) {\r\n        throw FlutterError(\r\n          'A $runtimeType was used after being disposed.\\n'\r\n          'Once you have called dispose() on a $runtimeType, it can no longer be used.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
        return true;
      }
    }
    (RestorableProperty.new = function() {
      this[_disposed] = false;
      this[_restorationId] = null;
      this[_owner$] = null;
      RestorableProperty.__proto__.new.call(this);
      ;
    }).prototype = RestorableProperty.prototype;
    dart.addTypeTests(RestorableProperty);
    RestorableProperty.prototype[_is_RestorableProperty_default] = true;
    dart.addTypeCaches(RestorableProperty);
    dart.setMethodSignature(RestorableProperty, () => ({
      __proto__: dart.getMethods(RestorableProperty.__proto__),
      [_register]: dart.fnType(dart.void, [core.String, restoration$.RestorationMixin$(framework.StatefulWidget)]),
      [_unregister]: dart.fnType(dart.void, []),
      [_debugAssertNotDisposed]: dart.fnType(core.bool, [])
    }));
    dart.setGetterSignature(RestorableProperty, () => ({
      __proto__: dart.getGetters(RestorableProperty.__proto__),
      enabled: core.bool,
      state: framework.State$(framework.StatefulWidget),
      isRegistered: core.bool
    }));
    dart.setLibraryUri(RestorableProperty, L39);
    dart.setFieldSignature(RestorableProperty, () => ({
      __proto__: dart.getFields(RestorableProperty.__proto__),
      [_disposed]: dart.fieldType(core.bool),
      [_restorationId]: dart.fieldType(dart.nullable(core.String)),
      [_owner$]: dart.fieldType(dart.nullable(restoration$.RestorationMixin$(framework.StatefulWidget)))
    }));
    return RestorableProperty;
  });
  restoration$.RestorableProperty = restoration$.RestorableProperty$();
  dart.addTypeTests(restoration$.RestorableProperty, _is_RestorableProperty_default);
  navigator$._HistoryProperty = class _HistoryProperty extends restoration$.RestorableProperty$(dart.nullable(core.Map$(dart.nullable(core.String), core.List$(core.Object)))) {
    update(history) {
      let t31, t31$, t31$0;
      if (history == null) dart.nullFailed(L28, 5327, 33, "history");
      if (!dart.test(this.isRegistered)) dart.assertFailed(null, L28, 5328, 12, "isRegistered");
      let wasUninitialized = this[_pageToPagelessRoutes] == null;
      let needsSerialization = wasUninitialized;
      this[_pageToPagelessRoutes] == null ? this[_pageToPagelessRoutes] = new (IdentityMapOfString$ListOfObject()).new() : null;
      let currentPage = null;
      let newRoutesForCurrentPage = JSArrayOfObject().of([]);
      let oldRoutesForCurrentPage = (t31 = dart.nullCheck(this[_pageToPagelessRoutes])[$_get](null), t31 == null ? C358 || CT.C358 : t31);
      let restorationEnabled = true;
      let newMap = new (IdentityMapOfStringN$ListOfObject()).new();
      let removedPages = dart.nullCheck(this[_pageToPagelessRoutes])[$keys][$toSet]();
      for (let entry of history) {
        if (!dart.test(entry.isPresentForRestoration)) {
          entry.restorationEnabled = false;
          continue;
        }
        if (!dart.test(entry.isPresentForRestoration)) dart.assertFailed(null, L28, 5346, 14, "entry.isPresentForRestoration");
        if (dart.test(entry.hasPage)) {
          needsSerialization = needsSerialization || newRoutesForCurrentPage[$length] != oldRoutesForCurrentPage[$length];
          this[_finalizePage](newRoutesForCurrentPage, currentPage, newMap, removedPages);
          currentPage = entry;
          restorationEnabled = entry.restorationId != null;
          entry.restorationEnabled = restorationEnabled;
          if (restorationEnabled) {
            if (!(entry.restorationId != null)) dart.assertFailed(null, L28, 5354, 18, "entry.restorationId != null");
            newRoutesForCurrentPage = JSArrayOfObject().of([]);
            oldRoutesForCurrentPage = (t31$ = dart.nullCheck(this[_pageToPagelessRoutes])[$_get](entry.restorationId), t31$ == null ? C358 || CT.C358 : t31$);
          } else {
            newRoutesForCurrentPage = C358 || CT.C358;
            oldRoutesForCurrentPage = C358 || CT.C358;
          }
          continue;
        }
        if (!!dart.test(entry.hasPage)) dart.assertFailed(null, L28, 5364, 14, "!entry.hasPage");
        restorationEnabled = restorationEnabled && dart.equals((t31$0 = entry.restorationInformation, t31$0 == null ? null : t31$0.isRestorable), true);
        entry.restorationEnabled = restorationEnabled;
        if (restorationEnabled) {
          if (!(entry.restorationId != null)) dart.assertFailed(null, L28, 5368, 16, "entry.restorationId != null");
          if (!(currentPage == null || currentPage.restorationId != null)) dart.assertFailed(null, L28, 5369, 16, "currentPage == null || currentPage.restorationId != null");
          if (!(entry.restorationInformation != null)) dart.assertFailed(null, L28, 5370, 16, "entry.restorationInformation != null");
          let serializedData = dart.nullCheck(entry.restorationInformation).getSerializableData();
          needsSerialization = needsSerialization || dart.notNull(oldRoutesForCurrentPage[$length]) <= dart.notNull(newRoutesForCurrentPage[$length]) || !dart.equals(oldRoutesForCurrentPage[$_get](newRoutesForCurrentPage[$length]), serializedData);
          newRoutesForCurrentPage[$add](serializedData);
        }
      }
      needsSerialization = needsSerialization || newRoutesForCurrentPage[$length] != oldRoutesForCurrentPage[$length];
      this[_finalizePage](newRoutesForCurrentPage, currentPage, newMap, removedPages);
      needsSerialization = needsSerialization || dart.test(removedPages[$isNotEmpty]);
      if (!(wasUninitialized || !dart.equals(this[_debugMapsEqual](dart.nullCheck(this[_pageToPagelessRoutes]), newMap), needsSerialization))) dart.assertFailed(null, L28, 5383, 12, "wasUninitialized || _debugMapsEqual(_pageToPagelessRoutes!, newMap) != needsSerialization");
      if (needsSerialization) {
        this[_pageToPagelessRoutes] = newMap;
        this.notifyListeners();
      }
    }
    [_finalizePage](routes, page, pageToRoutes, pagesToRemove) {
      let t31, t31$;
      if (routes == null) dart.nullFailed(L28, 5392, 18, "routes");
      if (pageToRoutes == null) dart.nullFailed(L28, 5394, 32, "pageToRoutes");
      if (pagesToRemove == null) dart.nullFailed(L28, 5395, 18, "pagesToRemove");
      if (!(page == null || dart.test(page.hasPage))) dart.assertFailed(null, L28, 5397, 12, "page == null || page.hasPage");
      if (!(pageToRoutes != null)) dart.assertFailed(null, L28, 5398, 12, "pageToRoutes != null");
      if (!!dart.test(pageToRoutes[$containsKey]((t31 = page, t31 == null ? null : t31.restorationId)))) dart.assertFailed(null, L28, 5399, 12, "!pageToRoutes.containsKey(page?.restorationId)");
      if (routes != null && dart.test(routes[$isNotEmpty])) {
        if (!(page == null || page.restorationId != null)) dart.assertFailed(null, L28, 5401, 14, "page == null || page.restorationId != null");
        let restorationId = (t31$ = page, t31$ == null ? null : t31$.restorationId);
        pageToRoutes[$_set](restorationId, routes);
        pagesToRemove.remove(restorationId);
      }
    }
    [_debugMapsEqual](a, b) {
      if (a == null) dart.nullFailed(L28, 5408, 51, "a");
      if (b == null) dart.nullFailed(L28, 5408, 81, "b");
      if (!dart.test(collections.setEquals(StringN(), a[$keys][$toSet](), b[$keys][$toSet]()))) {
        return false;
      }
      for (let key of a[$keys]) {
        if (!dart.test(collections.listEquals(core.Object, a[$_get](key), b[$_get](key)))) {
          return false;
        }
      }
      return true;
    }
    clear() {
      if (!dart.test(this.isRegistered)) dart.assertFailed(null, L28, 5421, 12, "isRegistered");
      if (this[_pageToPagelessRoutes] == null) {
        return;
      }
      this[_pageToPagelessRoutes] = null;
      this.notifyListeners();
    }
    get hasData() {
      return this[_pageToPagelessRoutes] != null;
    }
    restoreEntriesForPage(page, navigator) {
      let t31;
      if (navigator == null) dart.nullFailed(L28, 5433, 77, "navigator");
      if (!dart.test(this.isRegistered)) dart.assertFailed(null, L28, 5434, 12, "isRegistered");
      if (!(page == null || dart.test(page.hasPage))) dart.assertFailed(null, L28, 5435, 12, "page == null || page.hasPage");
      let result = JSArrayOf_RouteEntry().of([]);
      if (this[_pageToPagelessRoutes] == null || page != null && page.restorationId == null) {
        return result;
      }
      let serializedData = dart.nullCheck(this[_pageToPagelessRoutes])[$_get]((t31 = page, t31 == null ? null : t31.restorationId));
      if (serializedData == null) {
        return result;
      }
      for (let data of serializedData) {
        result[$add](navigator$._RestorationInformation.fromSerializableData(data).toRouteEntry(navigator));
      }
      return result;
    }
    createDefaultValue() {
      return null;
    }
    fromPrimitives(data) {
      let casted = core.Map.as(dart.nullCheck(data));
      return casted[$map](StringN(), ListOfObject(), dart.fn((key, value) => new (MapEntryOfStringN$ListOfObject()).__(StringN().as(key), ListOfObject().from(core.List.as(value), {growable: true})), dynamicAnddynamicToMapEntryOfStringN$ListOfObject()));
    }
    initWithValue(value) {
      MapNOfStringN$ListOfObject().as(value);
      this[_pageToPagelessRoutes] = value;
    }
    toPrimitives() {
      return this[_pageToPagelessRoutes];
    }
    get enabled() {
      return this.hasData;
    }
  };
  (navigator$._HistoryProperty.new = function() {
    this[_pageToPagelessRoutes] = null;
    navigator$._HistoryProperty.__proto__.new.call(this);
    ;
  }).prototype = navigator$._HistoryProperty.prototype;
  dart.addTypeTests(navigator$._HistoryProperty);
  dart.addTypeCaches(navigator$._HistoryProperty);
  dart.setMethodSignature(navigator$._HistoryProperty, () => ({
    __proto__: dart.getMethods(navigator$._HistoryProperty.__proto__),
    update: dart.fnType(dart.void, [core.List$(navigator$._RouteEntry)]),
    [_finalizePage]: dart.fnType(dart.void, [core.List$(core.Object), dart.nullable(navigator$._RouteEntry), core.Map$(dart.nullable(core.String), core.List$(core.Object)), core.Set$(dart.nullable(core.String))]),
    [_debugMapsEqual]: dart.fnType(core.bool, [core.Map$(dart.nullable(core.String), core.List$(core.Object)), core.Map$(dart.nullable(core.String), core.List$(core.Object))]),
    clear: dart.fnType(dart.void, []),
    restoreEntriesForPage: dart.fnType(core.List$(navigator$._RouteEntry), [dart.nullable(navigator$._RouteEntry), navigator$.NavigatorState]),
    createDefaultValue: dart.fnType(dart.nullable(core.Map$(dart.nullable(core.String), core.List$(core.Object))), []),
    fromPrimitives: dart.fnType(dart.nullable(core.Map$(dart.nullable(core.String), core.List$(core.Object))), [dart.nullable(core.Object)]),
    initWithValue: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    toPrimitives: dart.fnType(dart.nullable(core.Object), [])
  }));
  dart.setGetterSignature(navigator$._HistoryProperty, () => ({
    __proto__: dart.getGetters(navigator$._HistoryProperty.__proto__),
    hasData: core.bool
  }));
  dart.setLibraryUri(navigator$._HistoryProperty, L29);
  dart.setFieldSignature(navigator$._HistoryProperty, () => ({
    __proto__: dart.getFields(navigator$._HistoryProperty.__proto__),
    [_pageToPagelessRoutes]: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.String), core.List$(core.Object))))
  }));
  var C359;
  var _route = dart.privateName(navigator$, "_route");
  var _disposed$ = dart.privateName(navigator$, "_disposed");
  var _hookOntoRouteFuture = dart.privateName(navigator$, "_hookOntoRouteFuture");
  const _is_RestorableRouteFuture_default = Symbol('_is_RestorableRouteFuture_default');
  var navigatorFinder$ = dart.privateName(navigator$, "RestorableRouteFuture.navigatorFinder");
  var onPresent$ = dart.privateName(navigator$, "RestorableRouteFuture.onPresent");
  var onComplete$ = dart.privateName(navigator$, "RestorableRouteFuture.onComplete");
  navigator$.RestorableRouteFuture$ = dart.generic(T => {
    class RestorableRouteFuture extends restoration$.RestorableProperty$(dart.nullable(core.String)) {
      get navigatorFinder() {
        return this[navigatorFinder$];
      }
      set navigatorFinder(value) {
        super.navigatorFinder = value;
      }
      get onPresent() {
        return this[onPresent$];
      }
      set onPresent(value) {
        super.onPresent = value;
      }
      get onComplete() {
        return this[onComplete$];
      }
      set onComplete(value) {
        super.onComplete = value;
      }
      present($arguments = null) {
        let t32, t31;
        if (!!dart.test(this.isPresent)) dart.assertFailed(null, L28, 5732, 12, "!isPresent");
        if (!dart.test(this.isRegistered)) dart.assertFailed(null, L28, 5733, 12, "isRegistered");
        let routeId = (t31 = this[_navigator], t32 = $arguments, this.onPresent(t31, t32));
        if (!(routeId != null)) dart.assertFailed(null, L28, 5735, 12, "routeId != null");
        this[_hookOntoRouteFuture](routeId);
        this.notifyListeners();
      }
      get isPresent() {
        return this.route != null;
      }
      get route() {
        return this[_route];
      }
      createDefaultValue() {
        return null;
      }
      initWithValue(value) {
        StringN().as(value);
        if (value != null) {
          this[_hookOntoRouteFuture](value);
        }
      }
      toPrimitives() {
        let t31;
        if (!(this.route != null)) dart.assertFailed(null, L28, 5763, 12, "route != null");
        if (!dart.test(this.enabled)) dart.assertFailed(null, L28, 5764, 12, "enabled");
        t31 = this.route;
        return t31 == null ? null : t31.restorationScopeId.value;
      }
      fromPrimitives(data) {
        if (!(data != null)) dart.assertFailed(null, L28, 5770, 12, "data != null");
        return core.String.as(dart.nullCheck(data));
      }
      dispose() {
        let t31;
        super.dispose();
        t31 = this[_route];
        t31 == null ? null : t31.restorationScopeId.removeListener(dart.bind(this, 'notifyListeners'));
        this[_disposed$] = true;
      }
      get enabled() {
        let t31;
        return (t31 = this.route, t31 == null ? null : t31.restorationScopeId.value) != null;
      }
      get [_navigator]() {
        let t31;
        let navigator = (t31 = this.state.context, this.navigatorFinder(t31));
        if (!(navigator != null)) dart.assertFailed(null, L28, 5788, 12, "navigator != null");
        return navigator;
      }
      [_hookOntoRouteFuture](id) {
        if (id == null) dart.nullFailed(L28, 5792, 36, "id");
        if (!(id != null)) dart.assertFailed(null, L28, 5793, 12, "id != null");
        this[_route] = this[_navigator][_getRouteById](T, id);
        if (!(this[_route] != null)) dart.assertFailed(null, L28, 5795, 12, "_route != null");
        dart.nullCheck(this.route).restorationScopeId.addListener(dart.bind(this, 'notifyListeners'));
        dart.nullCheck(this.route).popped.then(core.Null, dart.fn(result => {
          let t31;
          if (dart.test(this[_disposed$])) {
            return;
          }
          t31 = this[_route];
          t31 == null ? null : t31.restorationScopeId.removeListener(dart.bind(this, 'notifyListeners'));
          this[_route] = null;
          this.notifyListeners();
          if (this.onComplete != null) {
            dart.nullCheck(this.onComplete)(T.as(result));
          }
        }, dynamicToNull()));
      }
      static _defaultNavigatorFinder(context) {
        if (context == null) dart.nullFailed(L28, 5810, 62, "context");
        return navigator$.Navigator.of(context);
      }
    }
    (RestorableRouteFuture.new = function(opts) {
      let navigatorFinder = opts && 'navigatorFinder' in opts ? opts.navigatorFinder : C359 || CT.C359;
      if (navigatorFinder == null) dart.nullFailed(L28, 5697, 10, "navigatorFinder");
      let onPresent = opts && 'onPresent' in opts ? opts.onPresent : null;
      if (onPresent == null) dart.nullFailed(L28, 5698, 19, "onPresent");
      let onComplete = opts && 'onComplete' in opts ? opts.onComplete : null;
      this[_route] = null;
      this[_disposed$] = false;
      this[navigatorFinder$] = navigatorFinder;
      this[onPresent$] = onPresent;
      this[onComplete$] = onComplete;
      if (!(onPresent != null)) dart.assertFailed(null, L28, 5700, 15, "onPresent != null");
      if (!(navigatorFinder != null)) dart.assertFailed(null, L28, 5700, 42, "navigatorFinder != null");
      RestorableRouteFuture.__proto__.new.call(this);
      ;
    }).prototype = RestorableRouteFuture.prototype;
    dart.addTypeTests(RestorableRouteFuture);
    RestorableRouteFuture.prototype[_is_RestorableRouteFuture_default] = true;
    dart.addTypeCaches(RestorableRouteFuture);
    dart.setMethodSignature(RestorableRouteFuture, () => ({
      __proto__: dart.getMethods(RestorableRouteFuture.__proto__),
      present: dart.fnType(dart.void, [], [dart.nullable(core.Object)]),
      createDefaultValue: dart.fnType(dart.nullable(core.String), []),
      initWithValue: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      toPrimitives: dart.fnType(dart.nullable(core.Object), []),
      fromPrimitives: dart.fnType(core.String, [dart.nullable(core.Object)]),
      [_hookOntoRouteFuture]: dart.fnType(dart.void, [core.String])
    }));
    dart.setGetterSignature(RestorableRouteFuture, () => ({
      __proto__: dart.getGetters(RestorableRouteFuture.__proto__),
      isPresent: core.bool,
      route: dart.nullable(navigator$.Route$(T)),
      [_navigator]: navigator$.NavigatorState
    }));
    dart.setLibraryUri(RestorableRouteFuture, L29);
    dart.setFieldSignature(RestorableRouteFuture, () => ({
      __proto__: dart.getFields(RestorableRouteFuture.__proto__),
      navigatorFinder: dart.finalFieldType(dart.fnType(navigator$.NavigatorState, [framework.BuildContext])),
      onPresent: dart.finalFieldType(dart.fnType(core.String, [navigator$.NavigatorState, dart.nullable(core.Object)])),
      onComplete: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [T]))),
      [_route]: dart.fieldType(dart.nullable(navigator$.Route$(T))),
      [_disposed$]: dart.fieldType(core.bool)
    }));
    return RestorableRouteFuture;
  });
  navigator$.RestorableRouteFuture = navigator$.RestorableRouteFuture$();
  dart.addTypeTests(navigator$.RestorableRouteFuture, _is_RestorableRouteFuture_default);
  var key$1 = dart.privateName(table$, "TableRow.key");
  var decoration$ = dart.privateName(table$, "TableRow.decoration");
  var children$ = dart.privateName(table$, "TableRow.children");
  table$.TableRow = class TableRow extends core.Object {
    get key() {
      return this[key$1];
    }
    set key(value) {
      super.key = value;
    }
    get decoration() {
      return this[decoration$];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get children() {
      return this[children$];
    }
    set children(value) {
      super.children = value;
    }
    toString() {
      let result = new core.StringBuffer.new();
      result.write("TableRow(");
      if (this.key != null) result.write(dart.str(this.key) + ", ");
      if (this.decoration != null) result.write(dart.str(this.decoration) + ", ");
      if (this.children == null) {
        result.write("child list is null");
      } else if (dart.test(dart.nullCheck(this.children)[$isEmpty])) {
        result.write("no children");
      } else {
        result.write(dart.str(this.children));
      }
      result.write(")");
      return result.toString();
    }
  };
  (table$.TableRow.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let children = opts && 'children' in opts ? opts.children : null;
    this[key$1] = key;
    this[decoration$] = decoration;
    this[children$] = children;
    ;
  }).prototype = table$.TableRow.prototype;
  dart.addTypeTests(table$.TableRow);
  dart.addTypeCaches(table$.TableRow);
  dart.setLibraryUri(table$.TableRow, L40);
  dart.setFieldSignature(table$.TableRow, () => ({
    __proto__: dart.getFields(table$.TableRow.__proto__),
    key: dart.finalFieldType(dart.nullable(key.LocalKey)),
    decoration: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    children: dart.finalFieldType(dart.nullable(core.List$(framework.Widget)))
  }));
  dart.defineExtensionMethods(table$.TableRow, ['toString']);
  var key$2 = dart.privateName(table$, "_TableElementRow.key");
  var children$0 = dart.privateName(table$, "_TableElementRow.children");
  table$._TableElementRow = class _TableElementRow extends core.Object {
    get key() {
      return this[key$2];
    }
    set key(value) {
      super.key = value;
    }
    get children() {
      return this[children$0];
    }
    set children(value) {
      super.children = value;
    }
  };
  (table$._TableElementRow.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : null;
    if (children == null) dart.nullFailed(L41, 75, 52, "children");
    this[key$2] = key;
    this[children$0] = children;
    ;
  }).prototype = table$._TableElementRow.prototype;
  dart.addTypeTests(table$._TableElementRow);
  dart.addTypeCaches(table$._TableElementRow);
  dart.setLibraryUri(table$._TableElementRow, L40);
  dart.setFieldSignature(table$._TableElementRow, () => ({
    __proto__: dart.getFields(table$._TableElementRow.__proto__),
    key: dart.finalFieldType(dart.nullable(key.LocalKey)),
    children: dart.finalFieldType(core.List$(framework.Element))
  }));
  var C360;
  var FlexColumnWidth_value = dart.privateName(table, "FlexColumnWidth.value");
  var C361;
  var _name$5 = dart.privateName(table, "_name");
  var C362;
  var _rowDecorations = dart.privateName(table$, "_rowDecorations");
  var children$1 = dart.privateName(table$, "Table.children");
  var columnWidths$ = dart.privateName(table$, "Table.columnWidths");
  var defaultColumnWidth$ = dart.privateName(table$, "Table.defaultColumnWidth");
  var textDirection$0 = dart.privateName(table$, "Table.textDirection");
  var border$ = dart.privateName(table$, "Table.border");
  var defaultVerticalAlignment$ = dart.privateName(table$, "Table.defaultVerticalAlignment");
  var textBaseline$ = dart.privateName(table$, "Table.textBaseline");
  table$.Table = class Table extends framework.RenderObjectWidget {
    get children() {
      return this[children$1];
    }
    set children(value) {
      super.children = value;
    }
    get columnWidths() {
      return this[columnWidths$];
    }
    set columnWidths(value) {
      super.columnWidths = value;
    }
    get defaultColumnWidth() {
      return this[defaultColumnWidth$];
    }
    set defaultColumnWidth(value) {
      super.defaultColumnWidth = value;
    }
    get textDirection() {
      return this[textDirection$0];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get border() {
      return this[border$];
    }
    set border(value) {
      super.border = value;
    }
    get defaultVerticalAlignment() {
      return this[defaultVerticalAlignment$];
    }
    set defaultVerticalAlignment(value) {
      super.defaultVerticalAlignment = value;
    }
    get textBaseline() {
      return this[textBaseline$];
    }
    set textBaseline(value) {
      super.textBaseline = value;
    }
    createElement() {
      return new table$._TableElement.new(this);
    }
    createRenderObject(context) {
      let t31;
      if (context == null) dart.nullFailed(L41, 309, 47, "context");
      if (!dart.test(debug$0.debugCheckHasDirectionality(context))) dart.assertFailed(null, L41, 310, 12, "debugCheckHasDirectionality(context)");
      return new table.RenderTable.new({columns: dart.test(this.children[$isNotEmpty]) ? dart.nullCheck(this.children[$_get](0).children)[$length] : 0, rows: this.children[$length], columnWidths: this.columnWidths, defaultColumnWidth: this.defaultColumnWidth, textDirection: (t31 = this.textDirection, t31 == null ? basic.Directionality.of(context) : t31), border: this.border, rowDecorations: this[_rowDecorations], configuration: image$.createLocalImageConfiguration(context), defaultVerticalAlignment: this.defaultVerticalAlignment, textBaseline: this.textBaseline});
    }
    updateRenderObject(context, renderObject) {
      let t32, t31;
      if (context == null) dart.nullFailed(L41, 326, 40, "context");
      table.RenderTable.as(renderObject);
      if (renderObject == null) dart.nullFailed(L41, 326, 61, "renderObject");
      if (!dart.test(debug$0.debugCheckHasDirectionality(context))) dart.assertFailed(null, L41, 327, 12, "debugCheckHasDirectionality(context)");
      if (!(renderObject.columns == (dart.test(this.children[$isNotEmpty]) ? dart.nullCheck(this.children[$_get](0).children)[$length] : 0))) dart.assertFailed(null, L41, 328, 12, "renderObject.columns == (children.isNotEmpty ? children[0].children!.length : 0)");
      if (!(renderObject.rows == this.children[$length])) dart.assertFailed(null, L41, 329, 12, "renderObject.rows == children.length");
      t31 = renderObject;
      (() => {
        t31.columnWidths = this.columnWidths;
        t31.defaultColumnWidth = this.defaultColumnWidth;
        t31.textDirection = (t32 = this.textDirection, t32 == null ? basic.Directionality.of(context) : t32);
        t31.border = this.border;
        t31.rowDecorations = this[_rowDecorations];
        t31.configuration = image$.createLocalImageConfiguration(context);
        t31.defaultVerticalAlignment = this.defaultVerticalAlignment;
        t31.textBaseline = this.textBaseline;
        return t31;
      })();
    }
  };
  (table$.Table.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : C360 || CT.C360;
    if (children == null) dart.nullFailed(L41, 177, 10, "children");
    let columnWidths = opts && 'columnWidths' in opts ? opts.columnWidths : null;
    let defaultColumnWidth = opts && 'defaultColumnWidth' in opts ? opts.defaultColumnWidth : C361 || CT.C361;
    if (defaultColumnWidth == null) dart.nullFailed(L41, 179, 10, "defaultColumnWidth");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let defaultVerticalAlignment = opts && 'defaultVerticalAlignment' in opts ? opts.defaultVerticalAlignment : C362 || CT.C362;
    if (defaultVerticalAlignment == null) dart.nullFailed(L41, 182, 10, "defaultVerticalAlignment");
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[children$1] = children;
    this[columnWidths$] = columnWidths;
    this[defaultColumnWidth$] = defaultColumnWidth;
    this[textDirection$0] = textDirection;
    this[border$] = border;
    this[defaultVerticalAlignment$] = defaultVerticalAlignment;
    this[textBaseline$] = textBaseline;
    if (!(children != null)) dart.assertFailed(null, L41, 184, 15, "children != null");
    if (!(defaultColumnWidth != null)) dart.assertFailed(null, L41, 185, 15, "defaultColumnWidth != null");
    if (!(defaultVerticalAlignment != null)) dart.assertFailed(null, L41, 186, 15, "defaultVerticalAlignment != null");
    if (!(!dart.equals(defaultVerticalAlignment, table.TableCellVerticalAlignment.baseline) || textBaseline != null)) dart.assertFailed("textBaseline is required if you specify the defaultVerticalAlignment with TableCellVerticalAlignment.baseline", L41, 187, 15, "defaultVerticalAlignment != TableCellVerticalAlignment.baseline || textBaseline != null");
    if (!dart.test(dart.fn(() => {
      if (dart.test(children[$any](dart.fn(row => {
        if (row == null) dart.nullFailed(L41, 189, 37, "row");
        return row.children == null;
      }, TableRowTobool())))) {
        dart.throw(assertions.FlutterError.new("One of the rows of the table had null children.\n" + "The children property of TableRow must not be null."));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L41, 188, 15, "() {\r\n         if (children.any((TableRow row) => row.children == null)) {\r\n           throw FlutterError(\r\n             'One of the rows of the table had null children.\\n'\r\n             'The children property of TableRow must not be null.'\r\n           );\r\n         }\r\n         return true;\r\n       }()");
    if (!dart.test(dart.fn(() => {
      if (dart.test(children[$any](dart.fn(row => {
        if (row == null) dart.nullFailed(L41, 198, 37, "row");
        return dart.nullCheck(row.children)[$any](dart.fn(cell => {
          if (cell == null) dart.nullFailed(L41, 198, 71, "cell");
          return cell == null;
        }, WidgetTobool()));
      }, TableRowTobool())))) {
        dart.throw(assertions.FlutterError.new("One of the children of one of the rows of the table was null.\n" + "The children of a TableRow must not be null."));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L41, 197, 15, "() {\r\n         if (children.any((TableRow row) => row.children!.any((Widget cell) => cell == null))) {\r\n           throw FlutterError(\r\n             'One of the children of one of the rows of the table was null.\\n'\r\n             'The children of a TableRow must not be null.'\r\n           );\r\n         }\r\n         return true;\r\n       }()");
    if (!dart.test(dart.fn(() => {
      if (dart.test(children[$any](dart.fn(row1 => {
        if (row1 == null) dart.nullFailed(L41, 207, 37, "row1");
        return row1.key != null && dart.test(children[$any](dart.fn(row2 => {
          if (row2 == null) dart.nullFailed(L41, 207, 89, "row2");
          return !dart.equals(row1, row2) && dart.equals(row1.key, row2.key);
        }, TableRowTobool())));
      }, TableRowTobool())))) {
        dart.throw(assertions.FlutterError.new("Two or more TableRow children of this Table had the same key.\n" + "All the keyed TableRow children of a Table must have different Keys."));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L41, 206, 15, "() {\r\n         if (children.any((TableRow row1) => row1.key != null && children.any((TableRow row2) => row1 != row2 && row1.key == row2.key))) {\r\n           throw FlutterError(\r\n             'Two or more TableRow children of this Table had the same key.\\n'\r\n             'All the keyed TableRow children of a Table must have different Keys.'\r\n           );\r\n         }\r\n         return true;\r\n       }()");
    if (!dart.test(dart.fn(() => {
      if (dart.test(children[$isNotEmpty])) {
        let cellCount = dart.nullCheck(children[$first].children)[$length];
        if (dart.test(children[$any](dart.fn(row => {
          if (row == null) dart.nullFailed(L41, 218, 39, "row");
          return dart.nullCheck(row.children)[$length] != cellCount;
        }, TableRowTobool())))) {
          dart.throw(assertions.FlutterError.new("Table contains irregular row lengths.\n" + "Every TableRow in a Table must have the same number of children, so that every cell is filled. " + "Otherwise, the table will contain holes."));
        }
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L41, 215, 15, "() {\r\n         if (children.isNotEmpty) {\r\n           final int cellCount = children.first.children!.length;\r\n           if (children.any((TableRow row) => row.children!.length != cellCount)) {\r\n             throw FlutterError(\r\n               'Table contains irregular row lengths.\\n'\r\n               'Every TableRow in a Table must have the same number of children, so that every cell is filled. '\r\n               'Otherwise, the table will contain holes.'\r\n             );\r\n           }\r\n         }\r\n         return true;\r\n       }()");
    this[_rowDecorations] = dart.test(children[$any](dart.fn(row => {
      if (row == null) dart.nullFailed(L41, 228, 49, "row");
      return row.decoration != null;
    }, TableRowTobool()))) ? children[$map](DecorationN(), dart.fn(row => {
      if (row == null) dart.nullFailed(L41, 229, 69, "row");
      return row.decoration;
    }, TableRowToDecorationN()))[$toList]({growable: false}) : null;
    table$.Table.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    if (!dart.test(dart.fn(() => {
      let flatChildren = this.children[$expand](framework.Widget, dart.fn(row => {
        if (row == null) dart.nullFailed(L41, 233, 75, "row");
        return dart.nullCheck(row.children);
      }, TableRowToListOfWidget()))[$toList]({growable: false});
      if (dart.test(debug$0.debugChildrenHaveDuplicateKeys(this, flatChildren))) {
        dart.throw(assertions.FlutterError.new("Two or more cells in this Table contain widgets with the same key.\n" + "Every widget child of every TableRow in a Table must have different keys. The cells of a Table are " + "flattened out for processing, so separate cells cannot have duplicate keys even if they are in " + "different rows."));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L41, 232, 12, "() {\r\n      final List<Widget> flatChildren = children.expand<Widget>((TableRow row) => row.children!).toList(growable: false);\r\n      if (debugChildrenHaveDuplicateKeys(this, flatChildren)) {\r\n        throw FlutterError(\r\n          'Two or more cells in this Table contain widgets with the same key.\\n'\r\n          'Every widget child of every TableRow in a Table must have different keys. The cells of a Table are '\r\n          'flattened out for processing, so separate cells cannot have duplicate keys even if they are in '\r\n          'different rows.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
  }).prototype = table$.Table.prototype;
  dart.addTypeTests(table$.Table);
  dart.addTypeCaches(table$.Table);
  dart.setMethodSignature(table$.Table, () => ({
    __proto__: dart.getMethods(table$.Table.__proto__),
    createElement: dart.fnType(table$._TableElement, []),
    createRenderObject: dart.fnType(table.RenderTable, [framework.BuildContext])
  }));
  dart.setLibraryUri(table$.Table, L40);
  dart.setFieldSignature(table$.Table, () => ({
    __proto__: dart.getFields(table$.Table.__proto__),
    children: dart.finalFieldType(core.List$(table$.TableRow)),
    columnWidths: dart.finalFieldType(dart.nullable(core.Map$(core.int, table.TableColumnWidth))),
    defaultColumnWidth: dart.finalFieldType(table.TableColumnWidth),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    border: dart.finalFieldType(dart.nullable(table_border.TableBorder)),
    defaultVerticalAlignment: dart.finalFieldType(table.TableCellVerticalAlignment),
    textBaseline: dart.finalFieldType(dart.nullable(ui.TextBaseline)),
    [_rowDecorations]: dart.finalFieldType(dart.nullable(core.List$(dart.nullable(decoration.Decoration))))
  }));
  var _children$ = dart.privateName(table$, "_children");
  var C363;
  var _forgottenChildren = dart.privateName(table$, "_forgottenChildren");
  var _updateRenderObjectChildren = dart.privateName(table$, "_updateRenderObjectChildren");
  var C364;
  var C365;
  var __RenderObjectElement__renderObject = dart.privateName(framework, "_#RenderObjectElement#_renderObject");
  var __RenderObjectElement__renderObject_isSet = dart.privateName(framework, "_#RenderObjectElement#_renderObject#isSet");
  var _debugDoingBuild = dart.privateName(framework, "_debugDoingBuild");
  var _ancestorRenderObjectElement = dart.privateName(framework, "_ancestorRenderObjectElement");
  var _renderObject = dart.privateName(framework, "_renderObject");
  var _parent = dart.privateName(framework, "_parent");
  var _findAncestorRenderObjectElement = dart.privateName(framework, "_findAncestorRenderObjectElement");
  var _findAncestorParentDataElement = dart.privateName(framework, "_findAncestorParentDataElement");
  var _debugUpdateRenderObjectOwner = dart.privateName(framework, "_debugUpdateRenderObjectOwner");
  var _slot = dart.privateName(framework, "_slot");
  var _dirty = dart.privateName(framework, "_dirty");
  var _lifecycleState = dart.privateName(framework, "_lifecycleState");
  var _debugDescribeIncorrectParentDataType = dart.privateName(framework, "_debugDescribeIncorrectParentDataType");
  var _updateParentData = dart.privateName(framework, "_updateParentData");
  var _updateSlot = dart.privateName(framework, "_updateSlot");
  var _cachedHash = dart.privateName(framework, "_cachedHash");
  var __Element__depth = dart.privateName(framework, "_#Element#_depth");
  var __Element__depth_isSet = dart.privateName(framework, "_#Element#_depth#isSet");
  var _owner$0 = dart.privateName(framework, "_owner");
  var _debugForgottenChildrenWithGlobalKey = dart.privateName(framework, "_debugForgottenChildrenWithGlobalKey");
  var _inheritedWidgets = dart.privateName(framework, "_inheritedWidgets");
  var _dependencies = dart.privateName(framework, "_dependencies");
  var _hadUnsatisfiedDependencies = dart.privateName(framework, "_hadUnsatisfiedDependencies");
  var _inDirtyList = dart.privateName(framework, "_inDirtyList");
  var _debugBuiltOnce = dart.privateName(framework, "_debugBuiltOnce");
  var _debugAllowIgnoredCallsToMarkNeedsBuild = dart.privateName(framework, "_debugAllowIgnoredCallsToMarkNeedsBuild");
  var _depth = dart.privateName(framework, "_depth");
  var _debugIsInScope = dart.privateName(framework, "_debugIsInScope");
  var C366;
  var _debugStateLocked = dart.privateName(framework, "_debugStateLocked");
  var _debugElementWasRebuilt = dart.privateName(framework, "_debugElementWasRebuilt");
  var _debugRemoveGlobalKeyReservation = dart.privateName(framework, "_debugRemoveGlobalKeyReservation");
  var _debugReserveFor = dart.privateName(framework, "_debugReserveFor");
  var _register$ = dart.privateName(framework, "_register");
  var _updateInheritance = dart.privateName(framework, "_updateInheritance");
  var _updateDepth = dart.privateName(framework, "_updateDepth");
  var _currentElement$ = dart.privateName(framework, "_currentElement");
  var _debugTrackElementThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans = dart.privateName(framework, "_debugTrackElementThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans");
  var _inactiveElements = dart.privateName(framework, "_inactiveElements");
  var _retakeInactiveElement = dart.privateName(framework, "_retakeInactiveElement");
  var _debugCheckForCycles = dart.privateName(framework, "_debugCheckForCycles");
  var _activateWithParent = dart.privateName(framework, "_activateWithParent");
  var C367;
  var _dependents = dart.privateName(framework, "_dependents");
  var _unregister$ = dart.privateName(framework, "_unregister");
  var _debugBuilding = dart.privateName(framework, "_debugBuilding");
  var _debugCheckStateIsActiveForAncestorLookup = dart.privateName(framework, "_debugCheckStateIsActiveForAncestorLookup");
  var _debugCheckOwnerBuildTargetExists = dart.privateName(framework, "_debugCheckOwnerBuildTargetExists");
  var _debugCurrentBuildTarget = dart.privateName(framework, "_debugCurrentBuildTarget");
  var _debugSetAllowIgnoredCallsToMarkNeedsBuild = dart.privateName(framework, "_debugSetAllowIgnoredCallsToMarkNeedsBuild");
  framework.Element = class Element extends diagnostics$.DiagnosticableTree {
    _equals(other) {
      if (other == null) return false;
      return this === other;
    }
    get hashCode() {
      return this[_cachedHash];
    }
    get slot() {
      return this[_slot];
    }
    get depth() {
      if (!dart.test(dart.fn(() => {
        if (dart.equals(this[_lifecycleState], framework._ElementLifecycle.initial)) {
          dart.throw(assertions.FlutterError.new("Depth is only available when element has been mounted."));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 3081, 12, "() {\r\n      if (_lifecycleState == _ElementLifecycle.initial) {\r\n        throw FlutterError('Depth is only available when element has been mounted.');\r\n      }\r\n      return true;\r\n    }()");
      return this[_depth];
    }
    get [_depth]() {
      let t37;
      return dart.test(this[__Element__depth_isSet]) ? (t37 = this[__Element__depth], t37) : dart.throw(new _internal.LateError.fieldNI("_depth"));
    }
    set [_depth](t37) {
      if (t37 == null) dart.nullFailed(L4, 3089, 12, "null");
      this[__Element__depth_isSet] = true;
      this[__Element__depth] = t37;
    }
    static _sort(a, b) {
      if (a == null) dart.nullFailed(L4, 3091, 28, "a");
      if (b == null) dart.nullFailed(L4, 3091, 39, "b");
      if (dart.notNull(a.depth) < dart.notNull(b.depth)) return -1;
      if (dart.notNull(b.depth) < dart.notNull(a.depth)) return 1;
      if (dart.test(b.dirty) && !dart.test(a.dirty)) return -1;
      if (dart.test(a.dirty) && !dart.test(b.dirty)) return 1;
      return 0;
    }
    static _debugConcreteSubtype(element) {
      if (element == null) dart.nullFailed(L4, 3107, 44, "element");
      return framework.StatefulElement.is(element) ? 1 : framework.StatelessElement.is(element) ? 2 : 0;
    }
    get widget() {
      return this[_widget];
    }
    get owner() {
      return this[_owner$0];
    }
    reassemble() {
      this.markNeedsBuild();
      this.visitChildren(dart.fn(child => {
        if (child == null) dart.nullFailed(L4, 3154, 28, "child");
        child.reassemble();
      }, ElementTovoid()));
    }
    [_debugIsInScope](target) {
      if (target == null) dart.nullFailed(L4, 3159, 32, "target");
      let current = this;
      while (current != null) {
        if (dart.equals(target, current)) return true;
        current = current[_parent];
      }
      return false;
    }
    get renderObject() {
      let result = null;
      function visit(element) {
        if (element == null) dart.nullFailed(L4, 3176, 24, "element");
        if (!(result == null)) dart.assertFailed(null, L4, 3177, 14, "result == null");
        if (framework.RenderObjectElement.is(element))
          result = element.renderObject;
        else
          element.visitChildren(visit);
      }
      dart.fn(visit, ElementTovoid());
      visit(this);
      return result;
    }
    describeMissingAncestor(opts) {
      let expectedAncestorType = opts && 'expectedAncestorType' in opts ? opts.expectedAncestorType : null;
      if (expectedAncestorType == null) dart.nullFailed(L4, 3188, 65, "expectedAncestorType");
      let information = JSArrayOfDiagnosticsNode().of([]);
      let ancestors = JSArrayOfElement().of([]);
      this.visitAncestorElements(dart.fn(element => {
        if (element == null) dart.nullFailed(L4, 3191, 36, "element");
        ancestors[$add](element);
        return true;
      }, ElementTobool()));
      information[$add](new (DiagnosticsPropertyOfElement()).new("The specific widget that could not find a " + dart.str(expectedAncestorType) + " ancestor was", this, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty}));
      if (dart.test(ancestors[$isNotEmpty])) {
        information[$add](framework.Element.describeElements("The ancestors of this widget were", ancestors));
      } else {
        information[$add](new assertions.ErrorDescription.new("This widget is the root of the tree, so it has no " + "ancestors, let alone a \"" + dart.str(expectedAncestorType) + "\" ancestor."));
      }
      return information;
    }
    static describeElements(name, elements) {
      if (name == null) dart.nullFailed(L4, 3214, 50, "name");
      if (elements == null) dart.nullFailed(L4, 3214, 74, "elements");
      return new diagnostics$.DiagnosticsBlock.new({name: name, children: elements[$map](diagnostics$.DiagnosticsNode, dart.fn(element => {
          if (element == null) dart.nullFailed(L4, 3217, 56, "element");
          return new (DiagnosticsPropertyOfElement()).new("", element);
        }, ElementToDiagnosticsPropertyOfElement()))[$toList](), allowTruncate: true});
    }
    describeElement(name, opts) {
      if (name == null) dart.nullFailed(L4, 3223, 42, "name");
      let style = opts && 'style' in opts ? opts.style : C366 || CT.C366;
      if (style == null) dart.nullFailed(L4, 3223, 70, "style");
      return new (DiagnosticsPropertyOfElement()).new(name, this, {style: style});
    }
    describeWidget(name, opts) {
      if (name == null) dart.nullFailed(L4, 3228, 41, "name");
      let style = opts && 'style' in opts ? opts.style : C366 || CT.C366;
      if (style == null) dart.nullFailed(L4, 3228, 69, "style");
      return new (DiagnosticsPropertyOfElement()).new(name, this, {style: style});
    }
    describeOwnershipChain(name) {
      if (name == null) dart.nullFailed(L4, 3233, 49, "name");
      return new diagnostics$.StringProperty.new(name, this.debugGetCreatorChain(10));
    }
    visitChildren(visitor) {
      if (visitor == null) dart.nullFailed(L4, 3254, 37, "visitor");
    }
    debugVisitOnstageChildren(visitor) {
      if (visitor == null) dart.nullFailed(L4, 3276, 49, "visitor");
      return this.visitChildren(visitor);
    }
    visitChildElements(visitor) {
      if (visitor == null) dart.nullFailed(L4, 3280, 42, "visitor");
      if (!dart.test(dart.fn(() => {
        if (this.owner == null || !dart.test(dart.nullCheck(this.owner)[_debugStateLocked])) return true;
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("visitChildElements() called during build."), new assertions.ErrorDescription.new("The BuildContext.visitChildElements() method can't be called during " + "build because the child list is still being updated at that point, " + "so the children might not be constructed yet, or might be old children " + "that are going to be replaced.")])));
      }, VoidTobool())())) dart.assertFailed(null, L4, 3281, 12, "() {\r\n      if (owner == null || !owner!._debugStateLocked)\r\n        return true;\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('visitChildElements() called during build.'),\r\n        ErrorDescription(\r\n          \"The BuildContext.visitChildElements() method can't be called during \"\r\n          'build because the child list is still being updated at that point, '\r\n          'so the children might not be constructed yet, or might be old children '\r\n          'that are going to be replaced.'\r\n        ),\r\n      ]);\r\n    }()");
      this.visitChildren(visitor);
    }
    updateChild(child, newWidget, newSlot) {
      if (newWidget == null) {
        if (child != null) this.deactivateChild(child);
        return null;
      }
      let newChild = null;
      if (child != null) {
        let hasSameSuperclass = true;
        if (!dart.test(dart.fn(() => {
          let oldElementClass = framework.Element._debugConcreteSubtype(child);
          let newWidgetClass = framework.Widget._debugConcreteSubtype(newWidget);
          hasSameSuperclass = oldElementClass == newWidgetClass;
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 3363, 14, "() {\r\n        final int oldElementClass = Element._debugConcreteSubtype(child);\r\n        final int newWidgetClass = Widget._debugConcreteSubtype(newWidget);\r\n        hasSameSuperclass = oldElementClass == newWidgetClass;\r\n        return true;\r\n      }()");
        if (hasSameSuperclass && dart.equals(child.widget, newWidget)) {
          if (!dart.equals(child.slot, newSlot)) this.updateSlotForChild(child, newSlot);
          newChild = child;
        } else if (hasSameSuperclass && dart.test(framework.Widget.canUpdate(child.widget, newWidget))) {
          if (!dart.equals(child.slot, newSlot)) this.updateSlotForChild(child, newSlot);
          child.update(newWidget);
          if (!dart.equals(child.widget, newWidget)) dart.assertFailed(null, L4, 3377, 16, "child.widget == newWidget");
          if (!dart.test(dart.fn(() => {
            dart.nullCheck(child.owner)[_debugElementWasRebuilt](child);
            return true;
          }, VoidTobool())())) dart.assertFailed(null, L4, 3378, 16, "() {\r\n          child.owner!._debugElementWasRebuilt(child);\r\n          return true;\r\n        }()");
          newChild = child;
        } else {
          this.deactivateChild(child);
          if (!(child[_parent] == null)) dart.assertFailed(null, L4, 3385, 16, "child._parent == null");
          newChild = this.inflateWidget(newWidget, newSlot);
        }
      } else {
        newChild = this.inflateWidget(newWidget, newSlot);
      }
      if (!dart.test(dart.fn(() => {
        if (child != null) this[_debugRemoveGlobalKeyReservation](child);
        let key = newWidget.key;
        if (GlobalKeyOfStateOfStatefulWidget().is(key)) {
          key[_debugReserveFor](this, newChild);
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 3392, 12, "() {\r\n      if (child != null)\r\n        _debugRemoveGlobalKeyReservation(child);\r\n      final Key? key = newWidget.key;\r\n      if (key is GlobalKey) {\r\n        key._debugReserveFor(this, newChild);\r\n      }\r\n      return true;\r\n    }()");
      return newChild;
    }
    mount(parent, newSlot) {
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.initial)) dart.assertFailed(null, L4, 3421, 12, "_lifecycleState == _ElementLifecycle.initial");
      if (!(this.widget != null)) dart.assertFailed(null, L4, 3422, 12, "widget != null");
      if (!(this[_parent] == null)) dart.assertFailed(null, L4, 3423, 12, "_parent == null");
      if (!(parent == null || dart.equals(parent[_lifecycleState], framework._ElementLifecycle.active))) dart.assertFailed(null, L4, 3424, 12, "parent == null || parent._lifecycleState == _ElementLifecycle.active");
      if (!(this.slot == null)) dart.assertFailed(null, L4, 3425, 12, "slot == null");
      this[_parent] = parent;
      this[_slot] = newSlot;
      this[_lifecycleState] = framework._ElementLifecycle.active;
      this[_depth] = this[_parent] != null ? dart.notNull(dart.nullCheck(this[_parent]).depth) + 1 : 1;
      if (parent != null) this[_owner$0] = parent.owner;
      let key = this.widget.key;
      if (GlobalKeyOfStateOfStatefulWidget().is(key)) {
        key[_register$](this);
      }
      this[_updateInheritance]();
    }
    [_debugRemoveGlobalKeyReservation](child) {
      if (child == null) dart.nullFailed(L4, 3439, 49, "child");
      framework.GlobalKey._debugRemoveReservationFor(this, child);
    }
    update(newWidget) {
      framework.Widget.as(newWidget);
      if (newWidget == null) dart.nullFailed(L4, 3451, 32, "newWidget");
      if (!(dart.equals(this[_lifecycleState], framework._ElementLifecycle.active) && this.widget != null && newWidget != null && !dart.equals(newWidget, this.widget) && this.depth != null && dart.test(framework.Widget.canUpdate(this.widget, newWidget)))) dart.assertFailed(null, L4, 3454, 12, "_lifecycleState == _ElementLifecycle.active\r\n        && widget != null\r\n        && newWidget != null\r\n        && newWidget != widget\r\n        && depth != null\r\n        && Widget.canUpdate(widget, newWidget)");
      if (!dart.test(dart.fn(() => {
        this[_debugForgottenChildrenWithGlobalKey][$forEach](dart.bind(this, _debugRemoveGlobalKeyReservation));
        this[_debugForgottenChildrenWithGlobalKey].clear();
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 3465, 12, "() {\r\n      _debugForgottenChildrenWithGlobalKey.forEach(_debugRemoveGlobalKeyReservation);\r\n      _debugForgottenChildrenWithGlobalKey.clear();\r\n      return true;\r\n    }()");
      this[_widget] = newWidget;
    }
    updateSlotForChild(child, newSlot) {
      if (child == null) dart.nullFailed(L4, 3479, 35, "child");
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 3480, 12, "_lifecycleState == _ElementLifecycle.active");
      if (!(child != null)) dart.assertFailed(null, L4, 3481, 12, "child != null");
      if (!dart.equals(child[_parent], this)) dart.assertFailed(null, L4, 3482, 12, "child._parent == this");
      function visit(element) {
        if (element == null) dart.nullFailed(L4, 3483, 24, "element");
        element[_updateSlot](newSlot);
        if (!framework.RenderObjectElement.is(element)) element.visitChildren(visit);
      }
      dart.fn(visit, ElementTovoid());
      visit(child);
    }
    [_updateSlot](newSlot) {
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 3492, 12, "_lifecycleState == _ElementLifecycle.active");
      if (!(this.widget != null)) dart.assertFailed(null, L4, 3493, 12, "widget != null");
      if (!(this[_parent] != null)) dart.assertFailed(null, L4, 3494, 12, "_parent != null");
      if (!dart.equals(dart.nullCheck(this[_parent])[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 3495, 12, "_parent!._lifecycleState == _ElementLifecycle.active");
      if (!(this.depth != null)) dart.assertFailed(null, L4, 3496, 12, "depth != null");
      this[_slot] = newSlot;
    }
    [_updateDepth](parentDepth) {
      if (parentDepth == null) dart.nullFailed(L4, 3500, 25, "parentDepth");
      let expectedDepth = dart.notNull(parentDepth) + 1;
      if (dart.notNull(this[_depth]) < expectedDepth) {
        this[_depth] = expectedDepth;
        this.visitChildren(dart.fn(child => {
          if (child == null) dart.nullFailed(L4, 3504, 30, "child");
          child[_updateDepth](expectedDepth);
        }, ElementTovoid()));
      }
    }
    detachRenderObject() {
      this.visitChildren(dart.fn(child => {
        if (child == null) dart.nullFailed(L4, 3519, 28, "child");
        child.detachRenderObject();
      }, ElementTovoid()));
      this[_slot] = null;
    }
    attachRenderObject(newSlot) {
      if (!(this[_slot] == null)) dart.assertFailed(null, L4, 3534, 12, "_slot == null");
      this.visitChildren(dart.fn(child => {
        if (child == null) dart.nullFailed(L4, 3535, 28, "child");
        child.attachRenderObject(newSlot);
      }, ElementTovoid()));
      this[_slot] = newSlot;
    }
    [_retakeInactiveElement](key, newWidget) {
      if (key == null) dart.nullFailed(L4, 3541, 45, "key");
      if (newWidget == null) dart.nullFailed(L4, 3541, 57, "newWidget");
      let element = key[_currentElement$];
      if (element == null) return null;
      if (!dart.test(framework.Widget.canUpdate(element.widget, newWidget))) return null;
      if (!dart.test(dart.fn(() => {
        let t38;
        if (dart.test(debug$0.debugPrintGlobalKeyedWidgetLifecycle)) print.debugPrint("Attempting to take " + dart.str(element) + " from " + dart.str((t38 = element[_parent], t38 == null ? "inactive elements list" : t38)) + " to put in " + dart.str(this) + ".");
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 3553, 12, "() {\r\n      if (debugPrintGlobalKeyedWidgetLifecycle)\r\n        debugPrint('Attempting to take $element from ${element._parent ?? \"inactive elements list\"} to put in $this.');\r\n      return true;\r\n    }()");
      let parent = element[_parent];
      if (parent != null) {
        if (!dart.test(dart.fn(() => {
          if (dart.equals(parent, this)) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("A GlobalKey was used multiple times inside one widget's child list."), new (DiagnosticsPropertyOfGlobalKeyOfStateOfStatefulWidget()).new("The offending GlobalKey was", key), parent.describeElement("The parent of the widgets with that key was"), element.describeElement("The first child to get instantiated with that key became"), new (DiagnosticsPropertyOfWidget()).new("The second child that was to be instantiated with that key was", this.widget, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty}), new assertions.ErrorDescription.new("A GlobalKey can only be specified on one widget at a time in the widget tree.")])));
          }
          dart.nullCheck(parent.owner)[_debugTrackElementThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans](parent, key);
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 3560, 14, "() {\r\n        if (parent == this) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary(\"A GlobalKey was used multiple times inside one widget's child list.\"),\r\n            DiagnosticsProperty<GlobalKey>('The offending GlobalKey was', key),\r\n            parent.describeElement('The parent of the widgets with that key was'),\r\n            element.describeElement('The first child to get instantiated with that key became'),\r\n            DiagnosticsProperty<Widget>('The second child that was to be instantiated with that key was', widget, style: DiagnosticsTreeStyle.errorProperty),\r\n            ErrorDescription('A GlobalKey can only be specified on one widget at a time in the widget tree.'),\r\n          ]);\r\n        }\r\n        parent.owner!._debugTrackElementThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans(\r\n          parent,\r\n          key,\r\n        );\r\n        return true;\r\n      }()");
        parent.forgetChild(element);
        parent.deactivateChild(element);
      }
      if (!(element[_parent] == null)) dart.assertFailed(null, L4, 3580, 12, "element._parent == null");
      dart.nullCheck(this.owner)[_inactiveElements].remove(element);
      return element;
    }
    inflateWidget(newWidget, newSlot) {
      if (newWidget == null) dart.nullFailed(L4, 3602, 32, "newWidget");
      if (!(newWidget != null)) dart.assertFailed(null, L4, 3603, 12, "newWidget != null");
      let key = newWidget.key;
      if (GlobalKeyOfStateOfStatefulWidget().is(key)) {
        let newChild = this[_retakeInactiveElement](key, newWidget);
        if (newChild != null) {
          if (!(newChild[_parent] == null)) dart.assertFailed(null, L4, 3608, 16, "newChild._parent == null");
          if (!dart.test(dart.fn(() => {
            this[_debugCheckForCycles](newChild);
            return true;
          }, VoidTobool())())) dart.assertFailed(null, L4, 3609, 16, "() {\r\n          _debugCheckForCycles(newChild);\r\n          return true;\r\n        }()");
          newChild[_activateWithParent](this, newSlot);
          let updatedChild = this.updateChild(newChild, newWidget, newSlot);
          if (!dart.equals(newChild, updatedChild)) dart.assertFailed(null, L4, 3615, 16, "newChild == updatedChild");
          return dart.nullCheck(updatedChild);
        }
      }
      let newChild = newWidget.createElement();
      if (!dart.test(dart.fn(() => {
        this[_debugCheckForCycles](newChild);
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 3620, 12, "() {\r\n      _debugCheckForCycles(newChild);\r\n      return true;\r\n    }()");
      newChild.mount(this, newSlot);
      if (!dart.equals(newChild[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 3625, 12, "newChild._lifecycleState == _ElementLifecycle.active");
      return newChild;
    }
    [_debugCheckForCycles](newChild) {
      if (newChild == null) dart.nullFailed(L4, 3629, 37, "newChild");
      if (!(newChild[_parent] == null)) dart.assertFailed(null, L4, 3630, 12, "newChild._parent == null");
      if (!dart.test(dart.fn(() => {
        let node = this;
        while (node[_parent] != null)
          node = dart.nullCheck(node[_parent]);
        if (!!node._equals(newChild)) dart.assertFailed(null, L4, 3635, 14, "node != newChild");
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 3631, 12, "() {\r\n      Element node = this;\r\n      while (node._parent != null)\r\n        node = node._parent!;\r\n      assert(node != newChild); // indicates we are about to create a cycle\r\n      return true;\r\n    }()");
    }
    deactivateChild(child) {
      if (child == null) dart.nullFailed(L4, 3655, 32, "child");
      if (!(child != null)) dart.assertFailed(null, L4, 3656, 12, "child != null");
      if (!dart.equals(child[_parent], this)) dart.assertFailed(null, L4, 3657, 12, "child._parent == this");
      child[_parent] = null;
      child.detachRenderObject();
      dart.nullCheck(this.owner)[_inactiveElements].add(child);
      if (!dart.test(dart.fn(() => {
        if (dart.test(debug$0.debugPrintGlobalKeyedWidgetLifecycle)) {
          if (GlobalKeyOfStateOfStatefulWidget().is(child.widget.key)) print.debugPrint("Deactivated " + dart.str(child) + " (keyed child of " + dart.str(this) + ")");
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 3661, 12, "() {\r\n      if (debugPrintGlobalKeyedWidgetLifecycle) {\r\n        if (child.widget.key is GlobalKey)\r\n          debugPrint('Deactivated $child (keyed child of $this)');\r\n      }\r\n      return true;\r\n    }()");
    }
    forgetChild(child) {
      if (child == null) dart.nullFailed(L4, 3689, 28, "child");
      if (!dart.test(dart.fn(() => {
        if (GlobalKeyOfStateOfStatefulWidget().is(child.widget.key)) this[_debugForgottenChildrenWithGlobalKey].add(child);
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 3696, 12, "() {\r\n      if (child.widget.key is GlobalKey)\r\n        _debugForgottenChildrenWithGlobalKey.add(child);\r\n      return true;\r\n    }()");
    }
    [_activateWithParent](parent, newSlot) {
      if (parent == null) dart.nullFailed(L4, 3703, 36, "parent");
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.inactive)) dart.assertFailed(null, L4, 3704, 12, "_lifecycleState == _ElementLifecycle.inactive");
      this[_parent] = parent;
      if (!dart.test(dart.fn(() => {
        if (dart.test(debug$0.debugPrintGlobalKeyedWidgetLifecycle)) print.debugPrint("Reactivating " + dart.str(this) + " (now child of " + dart.str(this[_parent]) + ").");
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 3706, 12, "() {\r\n      if (debugPrintGlobalKeyedWidgetLifecycle)\r\n        debugPrint('Reactivating $this (now child of $_parent).');\r\n      return true;\r\n    }()");
      this[_updateDepth](dart.nullCheck(this[_parent]).depth);
      framework.Element._activateRecursively(this);
      this.attachRenderObject(newSlot);
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 3714, 12, "_lifecycleState == _ElementLifecycle.active");
    }
    static _activateRecursively(element) {
      if (element == null) dart.nullFailed(L4, 3717, 44, "element");
      if (!dart.equals(element[_lifecycleState], framework._ElementLifecycle.inactive)) dart.assertFailed(null, L4, 3718, 12, "element._lifecycleState == _ElementLifecycle.inactive");
      element.activate();
      if (!dart.equals(element[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 3720, 12, "element._lifecycleState == _ElementLifecycle.active");
      element.visitChildren(C367 || CT.C367);
    }
    activate() {
      let t38;
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.inactive)) dart.assertFailed(null, L4, 3734, 12, "_lifecycleState == _ElementLifecycle.inactive");
      if (!(this.widget != null)) dart.assertFailed(null, L4, 3735, 12, "widget != null");
      if (!(this.owner != null)) dart.assertFailed(null, L4, 3736, 12, "owner != null");
      if (!(this.depth != null)) dart.assertFailed(null, L4, 3737, 12, "depth != null");
      let hadDependencies = this[_dependencies] != null && dart.test(dart.nullCheck(this[_dependencies])[$isNotEmpty]) || dart.test(this[_hadUnsatisfiedDependencies]);
      this[_lifecycleState] = framework._ElementLifecycle.active;
      t38 = this[_dependencies];
      t38 == null ? null : t38.clear();
      this[_hadUnsatisfiedDependencies] = false;
      this[_updateInheritance]();
      if (dart.test(this[_dirty])) dart.nullCheck(this.owner).scheduleBuildFor(this);
      if (hadDependencies) this.didChangeDependencies();
    }
    deactivate() {
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 3765, 12, "_lifecycleState == _ElementLifecycle.active");
      if (!(this[_widget] != null)) dart.assertFailed(null, L4, 3766, 12, "_widget != null");
      if (!(this.depth != null)) dart.assertFailed(null, L4, 3767, 12, "depth != null");
      if (this[_dependencies] != null && dart.test(dart.nullCheck(this[_dependencies])[$isNotEmpty])) {
        for (let dependency of dart.nullCheck(this[_dependencies]))
          dependency[_dependents][$remove](this);
      }
      this[_inheritedWidgets] = null;
      this[_lifecycleState] = framework._ElementLifecycle.inactive;
    }
    debugDeactivated() {
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.inactive)) dart.assertFailed(null, L4, 3787, 12, "_lifecycleState == _ElementLifecycle.inactive");
    }
    unmount() {
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.inactive)) dart.assertFailed(null, L4, 3803, 12, "_lifecycleState == _ElementLifecycle.inactive");
      if (!(this[_widget] != null)) dart.assertFailed(null, L4, 3804, 12, "_widget != null");
      if (!(this.depth != null)) dart.assertFailed(null, L4, 3805, 12, "depth != null");
      let key = this[_widget].key;
      if (GlobalKeyOfStateOfStatefulWidget().is(key)) {
        key[_unregister$](this);
      }
      this[_lifecycleState] = framework._ElementLifecycle.defunct;
    }
    findRenderObject() {
      return this.renderObject;
    }
    get size() {
      if (!dart.test(dart.fn(() => {
        if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.active)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Cannot get size of inactive element."), new assertions.ErrorDescription.new("In order for an element to have a valid size, the element must be " + "active, which means it is part of the tree.\n" + "Instead, this element is in the " + dart.str(this[_lifecycleState]) + " state."), this.describeElement("The size getter was called for the following element")])));
        }
        if (dart.test(dart.nullCheck(this.owner)[_debugBuilding])) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Cannot get size during build."), new assertions.ErrorDescription.new("The size of this render object has not yet been determined because " + "the framework is still in the process of building widgets, which " + "means the render tree for this frame has not yet been determined. " + "The size getter should only be called from paint callbacks or " + "interaction event handlers (e.g. gesture callbacks)."), new assertions.ErrorSpacer.new(), new assertions.ErrorHint.new("If you need some sizing information during build to decide which " + "widgets to build, consider using a LayoutBuilder widget, which can " + "tell you the layout constraints at a given location in the tree. See " + "<https://api.flutter.dev/flutter/widgets/LayoutBuilder-class.html> " + "for more details."), new assertions.ErrorSpacer.new(), this.describeElement("The size getter was called for the following element")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 3819, 12, "() {\r\n      if (_lifecycleState != _ElementLifecycle.active) {\r\n        // TODO(jacobr): is this a good separation into contract and violation?\r\n        // I have added a line of white space.\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Cannot get size of inactive element.'),\r\n          ErrorDescription(\r\n            'In order for an element to have a valid size, the element must be '\r\n            'active, which means it is part of the tree.\\n'\r\n            'Instead, this element is in the $_lifecycleState state.'\r\n          ),\r\n          describeElement('The size getter was called for the following element'),\r\n        ]);\r\n      }\r\n      if (owner!._debugBuilding) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Cannot get size during build.'),\r\n          ErrorDescription(\r\n            'The size of this render object has not yet been determined because '\r\n            'the framework is still in the process of building widgets, which '\r\n            'means the render tree for this frame has not yet been determined. '\r\n            'The size getter should only be called from paint callbacks or '\r\n            'interaction event handlers (e.g. gesture callbacks).'\r\n          ),\r\n          ErrorSpacer(),\r\n          ErrorHint(\r\n            'If you need some sizing information during build to decide which '\r\n            'widgets to build, consider using a LayoutBuilder widget, which can '\r\n            'tell you the layout constraints at a given location in the tree. See '\r\n            '<https://api.flutter.dev/flutter/widgets/LayoutBuilder-class.html> '\r\n            'for more details.'\r\n          ),\r\n          ErrorSpacer(),\r\n          describeElement('The size getter was called for the following element'),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      let renderObject = this.findRenderObject();
      if (!dart.test(dart.fn(() => {
        if (renderObject == null) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Cannot get size without a render object."), new assertions.ErrorHint.new("In order for an element to have a valid size, the element must have " + "an associated render object. This element does not have an associated " + "render object, which typically means that the size getter was called " + "too early in the pipeline (e.g., during the build phase) before the " + "framework has created the render tree."), this.describeElement("The size getter was called for the following element")])));
        }
        if (sliver.RenderSliver.is(renderObject)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Cannot get size from a RenderSliver."), new assertions.ErrorHint.new("The render object associated with this element is a " + dart.str(dart.runtimeType(renderObject)) + ", which is a subtype of RenderSliver. " + "Slivers do not have a size per se. They have a more elaborate " + "geometry description, which can be accessed by calling " + "findRenderObject and then using the \"geometry\" getter on the " + "resulting object."), this.describeElement("The size getter was called for the following element"), renderObject.describeForError("The associated render sliver was")])));
        }
        if (!box$.RenderBox.is(renderObject)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Cannot get size from a render object that is not a RenderBox."), new assertions.ErrorHint.new("Instead of being a subtype of RenderBox, the render object associated " + "with this element is a " + dart.str(dart.runtimeType(renderObject)) + ". If this type of " + "render object does have a size, consider calling findRenderObject " + "and extracting its size manually."), this.describeElement("The size getter was called for the following element"), renderObject.describeForError("The associated render object was")])));
        }
        let box = renderObject;
        if (!dart.test(box.hasSize)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Cannot get size from a render object that has not been through layout."), new assertions.ErrorHint.new("The size of this render object has not yet been determined because " + "this render object has not yet been through layout, which typically " + "means that the size getter was called too early in the pipeline " + "(e.g., during the build phase) before the framework has determined " + "the size and position of the render objects during layout."), this.describeElement("The size getter was called for the following element"), box.describeForError("The render object from which the size was to be obtained was")])));
        }
        if (dart.test(box.debugNeedsLayout)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Cannot get size from a render object that has been marked dirty for layout."), new assertions.ErrorHint.new("The size of this render object is ambiguous because this render object has " + "been modified since it was last laid out, which typically means that the size " + "getter was called too early in the pipeline (e.g., during the build phase) " + "before the framework has determined the size and position of the render " + "objects during layout."), this.describeElement("The size getter was called for the following element"), box.describeForError("The render object from which the size was to be obtained was"), new assertions.ErrorHint.new("Consider using debugPrintMarkNeedsLayoutStacks to determine why the render " + "object in question is dirty, if you did not expect this.")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 3858, 12, "() {\r\n      if (renderObject == null) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Cannot get size without a render object.'),\r\n          ErrorHint(\r\n            'In order for an element to have a valid size, the element must have '\r\n            'an associated render object. This element does not have an associated '\r\n            'render object, which typically means that the size getter was called '\r\n            'too early in the pipeline (e.g., during the build phase) before the '\r\n            'framework has created the render tree.'\r\n          ),\r\n          describeElement('The size getter was called for the following element'),\r\n        ]);\r\n      }\r\n      if (renderObject is RenderSliver) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Cannot get size from a RenderSliver.'),\r\n          ErrorHint(\r\n            'The render object associated with this element is a '\r\n            '${renderObject.runtimeType}, which is a subtype of RenderSliver. '\r\n            'Slivers do not have a size per se. They have a more elaborate '\r\n            'geometry description, which can be accessed by calling '\r\n            'findRenderObject and then using the \"geometry\" getter on the '\r\n            'resulting object.'\r\n          ),\r\n          describeElement('The size getter was called for the following element'),\r\n          renderObject.describeForError('The associated render sliver was'),\r\n        ]);\r\n      }\r\n      if (renderObject is! RenderBox) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Cannot get size from a render object that is not a RenderBox.'),\r\n          ErrorHint(\r\n            'Instead of being a subtype of RenderBox, the render object associated '\r\n            'with this element is a ${renderObject.runtimeType}. If this type of '\r\n            'render object does have a size, consider calling findRenderObject '\r\n            'and extracting its size manually.'\r\n          ),\r\n          describeElement('The size getter was called for the following element'),\r\n          renderObject.describeForError('The associated render object was'),\r\n        ]);\r\n      }\r\n      final RenderBox box = renderObject;\r\n      if (!box.hasSize) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Cannot get size from a render object that has not been through layout.'),\r\n          ErrorHint(\r\n            'The size of this render object has not yet been determined because '\r\n            'this render object has not yet been through layout, which typically '\r\n            'means that the size getter was called too early in the pipeline '\r\n            '(e.g., during the build phase) before the framework has determined '\r\n           'the size and position of the render objects during layout.'\r\n          ),\r\n          describeElement('The size getter was called for the following element'),\r\n          box.describeForError('The render object from which the size was to be obtained was'),\r\n        ]);\r\n      }\r\n      if (box.debugNeedsLayout) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Cannot get size from a render object that has been marked dirty for layout.'),\r\n          ErrorHint(\r\n            'The size of this render object is ambiguous because this render object has '\r\n            'been modified since it was last laid out, which typically means that the size '\r\n            'getter was called too early in the pipeline (e.g., during the build phase) '\r\n            'before the framework has determined the size and position of the render '\r\n            'objects during layout.'\r\n          ),\r\n          describeElement('The size getter was called for the following element'),\r\n          box.describeForError('The render object from which the size was to be obtained was'),\r\n          ErrorHint(\r\n            'Consider using debugPrintMarkNeedsLayoutStacks to determine why the render '\r\n            'object in question is dirty, if you did not expect this.'\r\n          ),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      if (box$.RenderBox.is(renderObject)) return renderObject.size;
      return null;
    }
    [_debugCheckStateIsActiveForAncestorLookup]() {
      if (!dart.test(dart.fn(() => {
        if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.active)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Looking up a deactivated widget's ancestor is unsafe."), new assertions.ErrorDescription.new("At this point the state of the widget's element tree is no longer " + "stable."), new assertions.ErrorHint.new("To safely refer to a widget's ancestor in its dispose() method, " + "save a reference to the ancestor by calling dependOnInheritedWidgetOfExactType() " + "in the widget's didChangeDependencies() method.")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 3945, 12, "() {\r\n      if (_lifecycleState != _ElementLifecycle.active) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary(\"Looking up a deactivated widget's ancestor is unsafe.\"),\r\n          ErrorDescription(\r\n            \"At this point the state of the widget's element tree is no longer \"\r\n            'stable.'\r\n          ),\r\n          ErrorHint(\r\n            \"To safely refer to a widget's ancestor in its dispose() method, \"\r\n            'save a reference to the ancestor by calling dependOnInheritedWidgetOfExactType() '\r\n            \"in the widget's didChangeDependencies() method.\"\r\n          ),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      return true;
    }
    inheritFromElement(ancestor, opts) {
      if (ancestor == null) dart.nullFailed(L4, 3971, 55, "ancestor");
      let aspect = opts && 'aspect' in opts ? opts.aspect : null;
      return this.dependOnInheritedElement(ancestor, {aspect: aspect});
    }
    dependOnInheritedElement(ancestor, opts) {
      if (ancestor == null) dart.nullFailed(L4, 3976, 61, "ancestor");
      let aspect = opts && 'aspect' in opts ? opts.aspect : null;
      if (!(ancestor != null)) dart.assertFailed(null, L4, 3977, 12, "ancestor != null");
      this[_dependencies] == null ? this[_dependencies] = new (_HashSetOfInheritedElement()).new() : null;
      dart.nullCheck(this[_dependencies]).add(ancestor);
      ancestor.updateDependencies(this, aspect);
      return ancestor.widget;
    }
    inheritFromWidgetOfExactType(targetType, opts) {
      if (targetType == null) dart.nullFailed(L4, 3990, 54, "targetType");
      let aspect = opts && 'aspect' in opts ? opts.aspect : null;
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, L4, 3991, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_inheritedWidgets] == null ? null : dart.nullCheck(this[_inheritedWidgets])[$_get](targetType);
      if (ancestor != null) {
        if (!framework.InheritedElement.is(ancestor)) dart.assertFailed(null, L4, 3994, 14, "ancestor is InheritedElement");
        return this.inheritFromElement(ancestor, {aspect: aspect});
      }
      this[_hadUnsatisfiedDependencies] = true;
      return null;
    }
    dependOnInheritedWidgetOfExactType(T, opts) {
      let aspect = opts && 'aspect' in opts ? opts.aspect : null;
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, L4, 4003, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_inheritedWidgets] == null ? null : dart.nullCheck(this[_inheritedWidgets])[$_get](dart.wrapType(T));
      if (ancestor != null) {
        if (!framework.InheritedElement.is(ancestor)) dart.assertFailed(null, L4, 4006, 14, "ancestor is InheritedElement");
        return T.as(this.dependOnInheritedElement(ancestor, {aspect: aspect}));
      }
      this[_hadUnsatisfiedDependencies] = true;
      return null;
    }
    ancestorInheritedElementForWidgetOfExactType(targetType) {
      if (targetType == null) dart.nullFailed(L4, 4019, 71, "targetType");
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, L4, 4020, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_inheritedWidgets] == null ? null : dart.nullCheck(this[_inheritedWidgets])[$_get](targetType);
      return ancestor;
    }
    getElementForInheritedWidgetOfExactType(T) {
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, L4, 4027, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_inheritedWidgets] == null ? null : dart.nullCheck(this[_inheritedWidgets])[$_get](dart.wrapType(T));
      return ancestor;
    }
    [_updateInheritance]() {
      let t38;
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 4033, 12, "_lifecycleState == _ElementLifecycle.active");
      this[_inheritedWidgets] = (t38 = this[_parent], t38 == null ? null : t38[_inheritedWidgets]);
    }
    ancestorWidgetOfExactType(targetType) {
      let t38;
      if (targetType == null) dart.nullFailed(L4, 4043, 42, "targetType");
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, L4, 4044, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_parent];
      while (ancestor != null && !dart.equals(dart.runtimeType(ancestor.widget), targetType))
        ancestor = ancestor[_parent];
      t38 = ancestor;
      return t38 == null ? null : t38.widget;
    }
    findAncestorWidgetOfExactType(T) {
      let t38;
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, L4, 4053, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_parent];
      while (ancestor != null && !dart.equals(dart.runtimeType(ancestor.widget), dart.wrapType(T)))
        ancestor = ancestor[_parent];
      return dart.nullable(T).as((t38 = ancestor, t38 == null ? null : t38.widget));
    }
    ancestorStateOfType(matcher) {
      let t38;
      if (matcher == null) dart.nullFailed(L4, 4066, 42, "matcher");
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, L4, 4067, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_parent];
      while (ancestor != null) {
        if (framework.StatefulElement.is(ancestor) && dart.test(matcher.check(ancestor.state))) break;
        ancestor = ancestor[_parent];
      }
      let statefulAncestor = StatefulElementN().as(ancestor);
      t38 = statefulAncestor;
      return t38 == null ? null : t38.state;
    }
    findAncestorStateOfType(T) {
      let t38;
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, L4, 4080, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_parent];
      while (ancestor != null) {
        if (framework.StatefulElement.is(ancestor) && T.is(ancestor.state)) break;
        ancestor = ancestor[_parent];
      }
      let statefulAncestor = StatefulElementN().as(ancestor);
      return dart.nullable(T).as((t38 = statefulAncestor, t38 == null ? null : t38.state));
    }
    rootAncestorStateOfType(matcher) {
      let t38;
      if (matcher == null) dart.nullFailed(L4, 4097, 46, "matcher");
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, L4, 4098, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_parent];
      let statefulAncestor = null;
      while (ancestor != null) {
        if (framework.StatefulElement.is(ancestor) && dart.test(matcher.check(ancestor.state))) statefulAncestor = ancestor;
        ancestor = ancestor[_parent];
      }
      t38 = statefulAncestor;
      return t38 == null ? null : t38.state;
    }
    findRootAncestorStateOfType(T) {
      let t38;
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, L4, 4111, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_parent];
      let statefulAncestor = null;
      while (ancestor != null) {
        if (framework.StatefulElement.is(ancestor) && T.is(ancestor.state)) statefulAncestor = ancestor;
        ancestor = ancestor[_parent];
      }
      return dart.nullable(T).as((t38 = statefulAncestor, t38 == null ? null : t38.state));
    }
    ancestorRenderObjectOfType(matcher) {
      if (matcher == null) dart.nullFailed(L4, 4128, 56, "matcher");
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, L4, 4129, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_parent];
      while (ancestor != null) {
        if (framework.RenderObjectElement.is(ancestor) && dart.test(matcher.check(ancestor.renderObject))) return ancestor.renderObject;
        ancestor = ancestor[_parent];
      }
      return null;
    }
    findAncestorRenderObjectOfType(T) {
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, L4, 4141, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_parent];
      while (ancestor != null) {
        if (framework.RenderObjectElement.is(ancestor) && T.is(ancestor.renderObject)) return T.as(ancestor.renderObject);
        ancestor = ancestor[_parent];
      }
      return null;
    }
    visitAncestorElements(visitor) {
      if (visitor == null) dart.nullFailed(L4, 4152, 35, "visitor");
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, L4, 4153, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_parent];
      while (ancestor != null && dart.test(visitor(ancestor)))
        ancestor = ancestor[_parent];
    }
    didChangeDependencies() {
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 4169, 12, "_lifecycleState == _ElementLifecycle.active");
      if (!dart.test(this[_debugCheckOwnerBuildTargetExists]("didChangeDependencies"))) dart.assertFailed(null, L4, 4170, 12, "_debugCheckOwnerBuildTargetExists('didChangeDependencies')");
      this.markNeedsBuild();
    }
    [_debugCheckOwnerBuildTargetExists](methodName) {
      if (methodName == null) dart.nullFailed(L4, 4174, 49, "methodName");
      if (!dart.test(dart.fn(() => {
        if (dart.nullCheck(this.owner)[_debugCurrentBuildTarget] == null) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(methodName) + " for " + dart.str(dart.runtimeType(this.widget)) + " was called at an " + "inappropriate time."), new assertions.ErrorDescription.new("It may only be called while the widgets are being built."), new assertions.ErrorHint.new("A possible cause of this error is when " + dart.str(methodName) + " is called during " + "one of:\n" + " * network I/O event\n" + " * file I/O event\n" + " * timer\n" + " * microtask (caused by Future.then, async/await, scheduleMicrotask)")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 4175, 12, "() {\r\n      if (owner!._debugCurrentBuildTarget == null) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary(\r\n            '$methodName for ${widget.runtimeType} was called at an '\r\n            'inappropriate time.'\r\n          ),\r\n          ErrorDescription('It may only be called while the widgets are being built.'),\r\n          ErrorHint(\r\n            'A possible cause of this error is when $methodName is called during '\r\n            'one of:\\n'\r\n            ' * network I/O event\\n'\r\n            ' * file I/O event\\n'\r\n            ' * timer\\n'\r\n            ' * microtask (caused by Future.then, async/await, scheduleMicrotask)'\r\n          ),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      return true;
    }
    debugGetCreatorChain(limit) {
      if (limit == null) dart.nullFailed(L4, 4201, 35, "limit");
      let chain = JSArrayOfString().of([]);
      let node = this;
      while (dart.notNull(chain[$length]) < dart.notNull(limit) && node != null) {
        chain[$add](node.toStringShort());
        node = node[_parent];
      }
      if (node != null) chain[$add]("⋯");
      return chain[$join](" ← ");
    }
    debugGetDiagnosticChain() {
      let chain = JSArrayOfElement().of([this]);
      let node = this[_parent];
      while (node != null) {
        chain[$add](node);
        node = node[_parent];
      }
      return chain;
    }
    toStringShort() {
      return this.widget.toStringShort();
    }
    toDiagnosticsNode(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let style = opts && 'style' in opts ? opts.style : null;
      return new framework._ElementDiagnosticableTreeNode.new({name: name, value: this, style: style});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L4, 4241, 56, "properties");
      super.debugFillProperties(properties);
      properties.defaultDiagnosticsTreeStyle = diagnostics$.DiagnosticsTreeStyle.dense;
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.initial)) {
        properties.add(new (ObjectFlagPropertyOfint()).new("depth", this.depth, {ifNull: "no depth"}));
      }
      properties.add(new (ObjectFlagPropertyOfWidget()).new("widget", this.widget, {ifNull: "no widget"}));
      properties.add(new (DiagnosticsPropertyOfKey()).new("key", this.widget.key, {showName: false, defaultValue: null, level: diagnostics$.DiagnosticLevel.hidden}));
      this.widget.debugFillProperties(properties);
      properties.add(new diagnostics$.FlagProperty.new("dirty", {value: this.dirty, ifTrue: "dirty"}));
      if (this[_dependencies] != null && dart.test(dart.nullCheck(this[_dependencies])[$isNotEmpty])) {
        let diagnosticsDependencies = dart.nullCheck(this[_dependencies])[$map](diagnostics$.DiagnosticsNode, dart.fn(element => {
          if (element == null) dart.nullFailed(L4, 4253, 32, "element");
          return element.widget.toDiagnosticsNode({style: diagnostics$.DiagnosticsTreeStyle.sparse});
        }, InheritedElementToDiagnosticsNode()))[$toList]();
        properties.add(new (DiagnosticsPropertyOfListOfDiagnosticsNode()).new("dependencies", diagnosticsDependencies));
      }
    }
    debugDescribeChildren() {
      let children = JSArrayOfDiagnosticsNode().of([]);
      this.visitChildren(dart.fn(child => {
        if (child == null) dart.nullFailed(L4, 4262, 28, "child");
        children[$add](child.toDiagnosticsNode());
      }, ElementTovoid()));
      return children;
    }
    get dirty() {
      return this[_dirty];
    }
    [_debugSetAllowIgnoredCallsToMarkNeedsBuild](value) {
      if (value == null) dart.nullFailed(L4, 4284, 56, "value");
      if (!dart.equals(this[_debugAllowIgnoredCallsToMarkNeedsBuild], !dart.test(value))) dart.assertFailed(null, L4, 4285, 12, "_debugAllowIgnoredCallsToMarkNeedsBuild == !value");
      this[_debugAllowIgnoredCallsToMarkNeedsBuild] = value;
      return true;
    }
    markNeedsBuild() {
      if (!!dart.equals(this[_lifecycleState], framework._ElementLifecycle.defunct)) dart.assertFailed(null, L4, 4298, 12, "_lifecycleState != _ElementLifecycle.defunct");
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.active)) return;
      if (!(this.owner != null)) dart.assertFailed(null, L4, 4301, 12, "owner != null");
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 4302, 12, "_lifecycleState == _ElementLifecycle.active");
      if (!dart.test(dart.fn(() => {
        if (dart.test(dart.nullCheck(this.owner)[_debugBuilding])) {
          if (!(dart.nullCheck(this.owner)[_debugCurrentBuildTarget] != null)) dart.assertFailed(null, L4, 4305, 16, "owner!._debugCurrentBuildTarget != null");
          if (!dart.test(dart.nullCheck(this.owner)[_debugStateLocked])) dart.assertFailed(null, L4, 4306, 16, "owner!._debugStateLocked");
          if (dart.test(this[_debugIsInScope](dart.nullCheck(dart.nullCheck(this.owner)[_debugCurrentBuildTarget])))) return true;
          if (!dart.test(this[_debugAllowIgnoredCallsToMarkNeedsBuild])) {
            let information = JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("setState() or markNeedsBuild() called during build."), new assertions.ErrorDescription.new("This " + dart.str(dart.runtimeType(this.widget)) + " widget cannot be marked as needing to build because the framework " + "is already in the process of building widgets.  A widget can be marked as " + "needing to be built during the build phase only if one of its ancestors " + "is currently building. This exception is allowed because the framework " + "builds parent widgets before children, which means a dirty descendant " + "will always be built. Otherwise, the framework might not visit this " + "widget during this build phase."), this.describeElement("The widget on which setState() or markNeedsBuild() was called was")]);
            if (dart.nullCheck(this.owner)[_debugCurrentBuildTarget] != null) information[$add](dart.nullCheck(dart.nullCheck(this.owner)[_debugCurrentBuildTarget]).describeWidget("The widget which was currently being built when the offending call was made was"));
            dart.throw(new assertions.FlutterError.fromParts(information));
          }
          if (!dart.test(this.dirty)) dart.assertFailed(null, L4, 4329, 16, "dirty");
        } else if (dart.test(dart.nullCheck(this.owner)[_debugStateLocked])) {
          if (!!dart.test(this[_debugAllowIgnoredCallsToMarkNeedsBuild])) dart.assertFailed(null, L4, 4331, 16, "!_debugAllowIgnoredCallsToMarkNeedsBuild");
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("setState() or markNeedsBuild() called when widget tree was locked."), new assertions.ErrorDescription.new("This " + dart.str(dart.runtimeType(this.widget)) + " widget cannot be marked as needing to build " + "because the framework is locked."), this.describeElement("The widget on which setState() or markNeedsBuild() was called was")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 4303, 12, "() {\r\n      if (owner!._debugBuilding) {\r\n        assert(owner!._debugCurrentBuildTarget != null);\r\n        assert(owner!._debugStateLocked);\r\n        if (_debugIsInScope(owner!._debugCurrentBuildTarget!))\r\n          return true;\r\n        if (!_debugAllowIgnoredCallsToMarkNeedsBuild) {\r\n          final List<DiagnosticsNode> information = <DiagnosticsNode>[\r\n            ErrorSummary('setState() or markNeedsBuild() called during build.'),\r\n            ErrorDescription(\r\n              'This ${widget.runtimeType} widget cannot be marked as needing to build because the framework '\r\n              'is already in the process of building widgets.  A widget can be marked as '\r\n              'needing to be built during the build phase only if one of its ancestors '\r\n              'is currently building. This exception is allowed because the framework '\r\n              'builds parent widgets before children, which means a dirty descendant '\r\n              'will always be built. Otherwise, the framework might not visit this '\r\n              'widget during this build phase.'\r\n            ),\r\n            describeElement(\r\n              'The widget on which setState() or markNeedsBuild() was called was',\r\n            ),\r\n          ];\r\n          if (owner!._debugCurrentBuildTarget != null)\r\n            information.add(owner!._debugCurrentBuildTarget!.describeWidget('The widget which was currently being built when the offending call was made was'));\r\n          throw FlutterError.fromParts(information);\r\n        }\r\n        assert(dirty); // can only get here if we're not in scope, but ignored calls are allowed, and our call would somehow be ignored (since we're already dirty)\r\n      } else if (owner!._debugStateLocked) {\r\n        assert(!_debugAllowIgnoredCallsToMarkNeedsBuild);\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('setState() or markNeedsBuild() called when widget tree was locked.'),\r\n          ErrorDescription(\r\n            'This ${widget.runtimeType} widget cannot be marked as needing to build '\r\n            'because the framework is locked.'\r\n          ),\r\n          describeElement('The widget on which setState() or markNeedsBuild() was called was'),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      if (dart.test(this.dirty)) return;
      this[_dirty] = true;
      dart.nullCheck(this.owner).scheduleBuildFor(this);
    }
    rebuild() {
      if (!!dart.equals(this[_lifecycleState], framework._ElementLifecycle.initial)) dart.assertFailed(null, L4, 4353, 12, "_lifecycleState != _ElementLifecycle.initial");
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.active) || !dart.test(this[_dirty])) return;
      if (!dart.test(dart.fn(() => {
        if (debug$0.debugOnRebuildDirtyWidget != null) {
          dart.nullCheck(debug$0.debugOnRebuildDirtyWidget)(this, this[_debugBuiltOnce]);
        }
        if (dart.test(debug$0.debugPrintRebuildDirtyWidgets)) {
          if (!dart.test(this[_debugBuiltOnce])) {
            print.debugPrint("Building " + dart.str(this));
            this[_debugBuiltOnce] = true;
          } else {
            print.debugPrint("Rebuilding " + dart.str(this));
          }
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 4356, 12, "() {\r\n      if (debugOnRebuildDirtyWidget != null) {\r\n        debugOnRebuildDirtyWidget!(this, _debugBuiltOnce);\r\n      }\r\n      if (debugPrintRebuildDirtyWidgets) {\r\n        if (!_debugBuiltOnce) {\r\n          debugPrint('Building $this');\r\n          _debugBuiltOnce = true;\r\n        } else {\r\n          debugPrint('Rebuilding $this');\r\n        }\r\n      }\r\n      return true;\r\n    }()");
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 4370, 12, "_lifecycleState == _ElementLifecycle.active");
      if (!dart.test(dart.nullCheck(this.owner)[_debugStateLocked])) dart.assertFailed(null, L4, 4371, 12, "owner!._debugStateLocked");
      let debugPreviousBuildTarget = null;
      if (!dart.test(dart.fn(() => {
        debugPreviousBuildTarget = dart.nullCheck(this.owner)[_debugCurrentBuildTarget];
        dart.nullCheck(this.owner)[_debugCurrentBuildTarget] = this;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 4373, 12, "() {\r\n      debugPreviousBuildTarget = owner!._debugCurrentBuildTarget;\r\n      owner!._debugCurrentBuildTarget = this;\r\n      return true;\r\n    }()");
      this.performRebuild();
      if (!dart.test(dart.fn(() => {
        if (!dart.equals(dart.nullCheck(this.owner)[_debugCurrentBuildTarget], this)) dart.assertFailed(null, L4, 4380, 14, "owner!._debugCurrentBuildTarget == this");
        dart.nullCheck(this.owner)[_debugCurrentBuildTarget] = debugPreviousBuildTarget;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 4379, 12, "() {\r\n      assert(owner!._debugCurrentBuildTarget == this);\r\n      owner!._debugCurrentBuildTarget = debugPreviousBuildTarget;\r\n      return true;\r\n    }()");
      if (!!dart.test(this[_dirty])) dart.assertFailed(null, L4, 4384, 12, "!_dirty");
    }
  };
  (framework.Element.new = function(widget) {
    if (widget == null) dart.nullFailed(L4, 3036, 18, "widget");
    this[_parent] = null;
    this[_cachedHash] = framework.Element._nextHashCode = (dart.notNull(framework.Element._nextHashCode) + 1)[$modulo](16777215);
    this[_slot] = null;
    this[__Element__depth] = null;
    this[__Element__depth_isSet] = false;
    this[_owner$0] = null;
    this[_lifecycleState] = framework._ElementLifecycle.initial;
    this[_debugForgottenChildrenWithGlobalKey] = new (_HashSetOfElement()).new();
    this[_inheritedWidgets] = null;
    this[_dependencies] = null;
    this[_hadUnsatisfiedDependencies] = false;
    this[_dirty] = true;
    this[_inDirtyList] = false;
    this[_debugBuiltOnce] = false;
    this[_debugAllowIgnoredCallsToMarkNeedsBuild] = false;
    if (!(widget != null)) dart.assertFailed(null, L4, 3037, 14, "widget != null");
    this[_widget] = widget;
    framework.Element.__proto__.new.call(this);
    ;
  }).prototype = framework.Element.prototype;
  dart.addTypeTests(framework.Element);
  dart.addTypeCaches(framework.Element);
  framework.Element[dart.implements] = () => [framework.BuildContext];
  dart.setMethodSignature(framework.Element, () => ({
    __proto__: dart.getMethods(framework.Element.__proto__),
    reassemble: dart.fnType(dart.void, []),
    [_debugIsInScope]: dart.fnType(core.bool, [framework.Element]),
    describeMissingAncestor: dart.fnType(core.List$(diagnostics$.DiagnosticsNode), [], {}, {expectedAncestorType: core.Type}),
    describeElement: dart.fnType(diagnostics$.DiagnosticsNode, [core.String], {style: diagnostics$.DiagnosticsTreeStyle}, {}),
    describeWidget: dart.fnType(diagnostics$.DiagnosticsNode, [core.String], {style: diagnostics$.DiagnosticsTreeStyle}, {}),
    describeOwnershipChain: dart.fnType(diagnostics$.DiagnosticsNode, [core.String]),
    visitChildren: dart.fnType(dart.void, [dart.fnType(dart.void, [framework.Element])]),
    debugVisitOnstageChildren: dart.fnType(dart.void, [dart.fnType(dart.void, [framework.Element])]),
    visitChildElements: dart.fnType(dart.void, [dart.fnType(dart.void, [framework.Element])]),
    updateChild: dart.fnType(dart.nullable(framework.Element), [dart.nullable(framework.Element), dart.nullable(framework.Widget), dart.dynamic]),
    mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic]),
    [_debugRemoveGlobalKeyReservation]: dart.fnType(dart.void, [framework.Element]),
    update: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    updateSlotForChild: dart.fnType(dart.void, [framework.Element, dart.dynamic]),
    [_updateSlot]: dart.fnType(dart.void, [dart.dynamic]),
    [_updateDepth]: dart.fnType(dart.void, [core.int]),
    detachRenderObject: dart.fnType(dart.void, []),
    attachRenderObject: dart.fnType(dart.void, [dart.dynamic]),
    [_retakeInactiveElement]: dart.fnType(dart.nullable(framework.Element), [framework.GlobalKey$(framework.State$(framework.StatefulWidget)), framework.Widget]),
    inflateWidget: dart.fnType(framework.Element, [framework.Widget, dart.dynamic]),
    [_debugCheckForCycles]: dart.fnType(dart.void, [framework.Element]),
    deactivateChild: dart.fnType(dart.void, [framework.Element]),
    forgetChild: dart.fnType(dart.void, [framework.Element]),
    [_activateWithParent]: dart.fnType(dart.void, [framework.Element, dart.dynamic]),
    activate: dart.fnType(dart.void, []),
    deactivate: dart.fnType(dart.void, []),
    debugDeactivated: dart.fnType(dart.void, []),
    unmount: dart.fnType(dart.void, []),
    findRenderObject: dart.fnType(dart.nullable(object$.RenderObject), []),
    [_debugCheckStateIsActiveForAncestorLookup]: dart.fnType(core.bool, []),
    inheritFromElement: dart.fnType(framework.InheritedWidget, [framework.InheritedElement], {aspect: dart.nullable(core.Object)}, {}),
    dependOnInheritedElement: dart.fnType(framework.InheritedWidget, [framework.InheritedElement], {aspect: dart.nullable(core.Object)}, {}),
    inheritFromWidgetOfExactType: dart.fnType(dart.nullable(framework.InheritedWidget), [core.Type], {aspect: dart.nullable(core.Object)}, {}),
    dependOnInheritedWidgetOfExactType: dart.gFnType(T => [dart.nullable(T), [], {aspect: dart.nullable(core.Object)}, {}], T => [framework.InheritedWidget]),
    ancestorInheritedElementForWidgetOfExactType: dart.fnType(dart.nullable(framework.InheritedElement), [core.Type]),
    getElementForInheritedWidgetOfExactType: dart.gFnType(T => [dart.nullable(framework.InheritedElement), []], T => [framework.InheritedWidget]),
    [_updateInheritance]: dart.fnType(dart.void, []),
    ancestorWidgetOfExactType: dart.fnType(dart.nullable(framework.Widget), [core.Type]),
    findAncestorWidgetOfExactType: dart.gFnType(T => [dart.nullable(T), []], T => [framework.Widget]),
    ancestorStateOfType: dart.fnType(dart.nullable(framework.State$(framework.StatefulWidget)), [framework.TypeMatcher]),
    findAncestorStateOfType: dart.gFnType(T => [dart.nullable(T), []], T => [framework.State$(framework.StatefulWidget)]),
    rootAncestorStateOfType: dart.fnType(dart.nullable(framework.State$(framework.StatefulWidget)), [framework.TypeMatcher]),
    findRootAncestorStateOfType: dart.gFnType(T => [dart.nullable(T), []], T => [framework.State$(framework.StatefulWidget)]),
    ancestorRenderObjectOfType: dart.fnType(dart.nullable(object$.RenderObject), [framework.TypeMatcher]),
    findAncestorRenderObjectOfType: dart.gFnType(T => [dart.nullable(T), []], T => [object$.RenderObject]),
    visitAncestorElements: dart.fnType(dart.void, [dart.fnType(core.bool, [framework.Element])]),
    didChangeDependencies: dart.fnType(dart.void, []),
    [_debugCheckOwnerBuildTargetExists]: dart.fnType(core.bool, [core.String]),
    debugGetCreatorChain: dart.fnType(core.String, [core.int]),
    debugGetDiagnosticChain: dart.fnType(core.List$(framework.Element), []),
    [_debugSetAllowIgnoredCallsToMarkNeedsBuild]: dart.fnType(core.bool, [core.bool]),
    markNeedsBuild: dart.fnType(dart.void, []),
    rebuild: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(framework.Element, () => ({
    __proto__: dart.getGetters(framework.Element.__proto__),
    slot: dart.dynamic,
    depth: core.int,
    [_depth]: core.int,
    widget: framework.Widget,
    owner: dart.nullable(framework.BuildOwner),
    renderObject: dart.nullable(object$.RenderObject),
    size: dart.nullable(ui.Size),
    dirty: core.bool
  }));
  dart.setSetterSignature(framework.Element, () => ({
    __proto__: dart.getSetters(framework.Element.__proto__),
    [_depth]: core.int
  }));
  dart.setLibraryUri(framework.Element, L5);
  dart.setFieldSignature(framework.Element, () => ({
    __proto__: dart.getFields(framework.Element.__proto__),
    [_parent]: dart.fieldType(dart.nullable(framework.Element)),
    [_cachedHash]: dart.finalFieldType(core.int),
    [_slot]: dart.fieldType(dart.dynamic),
    [__Element__depth]: dart.fieldType(dart.nullable(core.int)),
    [__Element__depth_isSet]: dart.fieldType(core.bool),
    [_widget]: dart.fieldType(framework.Widget),
    [_owner$0]: dart.fieldType(dart.nullable(framework.BuildOwner)),
    [_lifecycleState]: dart.fieldType(framework._ElementLifecycle),
    [_debugForgottenChildrenWithGlobalKey]: dart.finalFieldType(core.Set$(framework.Element)),
    [_inheritedWidgets]: dart.fieldType(dart.nullable(core.Map$(core.Type, framework.InheritedElement))),
    [_dependencies]: dart.fieldType(dart.nullable(core.Set$(framework.InheritedElement))),
    [_hadUnsatisfiedDependencies]: dart.fieldType(core.bool),
    [_dirty]: dart.fieldType(core.bool),
    [_inDirtyList]: dart.fieldType(core.bool),
    [_debugBuiltOnce]: dart.fieldType(core.bool),
    [_debugAllowIgnoredCallsToMarkNeedsBuild]: dart.fieldType(core.bool)
  }));
  dart.defineExtensionMethods(framework.Element, ['_equals']);
  dart.defineExtensionAccessors(framework.Element, ['hashCode']);
  dart.defineLazy(framework.Element, {
    /*framework.Element._nextHashCode*/get _nextHashCode() {
      return 1;
    },
    set _nextHashCode(_) {}
  }, false);
  framework.RenderObjectElement = class RenderObjectElement extends framework.Element {
    get widget() {
      return framework.RenderObjectWidget.as(super.widget);
    }
    get renderObject() {
      return this[_renderObject];
    }
    get [_renderObject]() {
      let t31;
      return dart.test(this[__RenderObjectElement__renderObject_isSet]) ? (t31 = this[__RenderObjectElement__renderObject], t31) : dart.throw(new _internal.LateError.fieldNI("_renderObject"));
    }
    set [_renderObject](t31) {
      if (t31 == null) dart.nullFailed(L4, 5480, 21, "null");
      this[__RenderObjectElement__renderObject_isSet] = true;
      this[__RenderObjectElement__renderObject] = t31;
    }
    get debugDoingBuild() {
      return this[_debugDoingBuild];
    }
    [_findAncestorRenderObjectElement]() {
      let ancestor = this[_parent];
      while (ancestor != null && !framework.RenderObjectElement.is(ancestor))
        ancestor = ancestor[_parent];
      return RenderObjectElementN().as(ancestor);
    }
    [_findAncestorParentDataElement]() {
      let ancestor = this[_parent];
      let result = null;
      while (ancestor != null && !framework.RenderObjectElement.is(ancestor)) {
        if (ParentDataElementOfParentData().is(ancestor)) {
          result = ancestor;
          break;
        }
        ancestor = ancestor[_parent];
      }
      if (!dart.test(dart.fn(() => {
        if (result == null || ancestor == null) {
          return true;
        }
        let badAncestors = JSArrayOfParentDataElementOfParentData().of([]);
        ancestor = dart.nullCheck(ancestor)[_parent];
        while (ancestor != null && !framework.RenderObjectElement.is(ancestor)) {
          if (ParentDataElementOfParentData().is(ancestor)) {
            badAncestors[$add](ParentDataElementOfParentData().as(dart.nullCheck(ancestor)));
          }
          ancestor = dart.nullCheck(ancestor)[_parent];
        }
        if (dart.test(badAncestors[$isNotEmpty])) {
          badAncestors[$insert](0, result);
          try {
            dart.throw(new assertions.FlutterError.fromParts((() => {
              let t32 = JSArrayOfDiagnosticsNode().of([]);
              t32.push(new assertions.ErrorSummary.new("Incorrect use of ParentDataWidget."));
              t32.push(new assertions.ErrorDescription.new("The following ParentDataWidgets are providing parent data to the same RenderObject:"));
              for (let ancestor of badAncestors)
                t32.push(new assertions.ErrorDescription.new("- " + dart.str(ancestor.widget) + " (typically placed directly inside a " + dart.str(ancestor.widget.debugTypicalAncestorWidgetClass) + " widget)"));
              t32.push(new assertions.ErrorDescription.new("However, a RenderObject can only receive parent data from at most one ParentDataWidget."));
              t32.push(new assertions.ErrorHint.new("Usually, this indicates that at least one of the offending ParentDataWidgets listed above is not placed directly inside a compatible ancestor widget."));
              t32.push(new assertions.ErrorDescription.new("The ownership chain for the RenderObject that received the parent data was:\n  " + dart.str(this.debugGetCreatorChain(10))));
              return t32;
            })()));
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (assertions.FlutterError.is(e)) {
              framework._debugReportException(new assertions.ErrorSummary.new("while looking for parent data."), e, e[$stackTrace]);
            } else
              throw e$;
          }
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 5505, 12, "() {\r\n      if (result == null || ancestor == null) {\r\n        return true;\r\n      }\r\n      // Check that no other ParentDataWidgets want to provide parent data.\r\n      final List<ParentDataElement<ParentData>> badAncestors = <ParentDataElement<ParentData>>[];\r\n      ancestor = ancestor!._parent;\r\n      while (ancestor != null && ancestor is! RenderObjectElement) {\r\n        if (ancestor is ParentDataElement<ParentData>) {\r\n          badAncestors.add(ancestor! as ParentDataElement<ParentData>);\r\n        }\r\n        ancestor = ancestor!._parent;\r\n      }\r\n      if (badAncestors.isNotEmpty) {\r\n        badAncestors.insert(0, result);\r\n        try {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('Incorrect use of ParentDataWidget.'),\r\n            ErrorDescription('The following ParentDataWidgets are providing parent data to the same RenderObject:'),\r\n            for (final ParentDataElement<ParentData> ancestor in badAncestors)\r\n              ErrorDescription('- ${ancestor.widget} (typically placed directly inside a ${ancestor.widget.debugTypicalAncestorWidgetClass} widget)'),\r\n            ErrorDescription('However, a RenderObject can only receive parent data from at most one ParentDataWidget.'),\r\n            ErrorHint('Usually, this indicates that at least one of the offending ParentDataWidgets listed above is not placed directly inside a compatible ancestor widget.'),\r\n            ErrorDescription('The ownership chain for the RenderObject that received the parent data was:\\n  ${debugGetCreatorChain(10)}'),\r\n          ]);\r\n        } on FlutterError catch (e) {\r\n          _debugReportException(ErrorSummary('while looking for parent data.'), e, e.stackTrace);\r\n        }\r\n      }\r\n      return true;\r\n    }()");
      return result;
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      if (!dart.test(dart.fn(() => {
        this[_debugDoingBuild] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 5542, 12, "() {\r\n      _debugDoingBuild = true;\r\n      return true;\r\n    }()");
      this[_renderObject] = this.widget.createRenderObject(this);
      if (!dart.test(dart.fn(() => {
        this[_debugDoingBuild] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 5547, 12, "() {\r\n      _debugDoingBuild = false;\r\n      return true;\r\n    }()");
      if (!dart.test(dart.fn(() => {
        this[_debugUpdateRenderObjectOwner]();
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 5551, 12, "() {\r\n      _debugUpdateRenderObjectOwner();\r\n      return true;\r\n    }()");
      if (!dart.equals(this[_slot], newSlot)) dart.assertFailed(null, L4, 5555, 12, "_slot == newSlot");
      this.attachRenderObject(newSlot);
      this[_dirty] = false;
    }
    update(newWidget) {
      framework.RenderObjectWidget.as(newWidget);
      if (newWidget == null) dart.nullFailed(L4, 5561, 44, "newWidget");
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, L4, 5563, 12, "widget == newWidget");
      if (!dart.test(dart.fn(() => {
        this[_debugUpdateRenderObjectOwner]();
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 5564, 12, "() {\r\n      _debugUpdateRenderObjectOwner();\r\n      return true;\r\n    }()");
      if (!dart.test(dart.fn(() => {
        this[_debugDoingBuild] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 5568, 12, "() {\r\n      _debugDoingBuild = true;\r\n      return true;\r\n    }()");
      this.widget.updateRenderObject(this, this.renderObject);
      if (!dart.test(dart.fn(() => {
        this[_debugDoingBuild] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 5573, 12, "() {\r\n      _debugDoingBuild = false;\r\n      return true;\r\n    }()");
      this[_dirty] = false;
    }
    [_debugUpdateRenderObjectOwner]() {
      if (!dart.test(dart.fn(() => {
        this[_renderObject].debugCreator = new framework.DebugCreator.new(this);
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 5581, 12, "() {\r\n      _renderObject.debugCreator = DebugCreator(this);\r\n      return true;\r\n    }()");
    }
    performRebuild() {
      if (!dart.test(dart.fn(() => {
        this[_debugDoingBuild] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 5589, 12, "() {\r\n      _debugDoingBuild = true;\r\n      return true;\r\n    }()");
      this.widget.updateRenderObject(this, this.renderObject);
      if (!dart.test(dart.fn(() => {
        this[_debugDoingBuild] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 5594, 12, "() {\r\n      _debugDoingBuild = false;\r\n      return true;\r\n    }()");
      this[_dirty] = false;
    }
    updateChildren(oldChildren, newWidgets, opts) {
      if (oldChildren == null) dart.nullFailed(L4, 5646, 46, "oldChildren");
      if (newWidgets == null) dart.nullFailed(L4, 5646, 72, "newWidgets");
      let forgottenChildren = opts && 'forgottenChildren' in opts ? opts.forgottenChildren : null;
      if (!(oldChildren != null)) dart.assertFailed(null, L4, 5647, 12, "oldChildren != null");
      if (!(newWidgets != null)) dart.assertFailed(null, L4, 5648, 12, "newWidgets != null");
      function replaceWithNullIfForgotten(child) {
        if (child == null) dart.nullFailed(L4, 5650, 49, "child");
        return forgottenChildren != null && dart.test(forgottenChildren.contains(child)) ? null : child;
      }
      dart.fn(replaceWithNullIfForgotten, ElementToElementN());
      let newChildrenTop = 0;
      let oldChildrenTop = 0;
      let newChildrenBottom = dart.notNull(newWidgets[$length]) - 1;
      let oldChildrenBottom = dart.notNull(oldChildren[$length]) - 1;
      let newChildren = oldChildren[$length] == newWidgets[$length] ? oldChildren : ListOfElement().filled(newWidgets[$length], framework._NullElement.instance, {growable: false});
      let previousChild = null;
      while (oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom) {
        let oldChild = replaceWithNullIfForgotten(oldChildren[$_get](oldChildrenTop));
        let newWidget = newWidgets[$_get](newChildrenTop);
        if (!(oldChild == null || dart.equals(oldChild[_lifecycleState], framework._ElementLifecycle.active))) dart.assertFailed(null, L4, 5699, 14, "oldChild == null || oldChild._lifecycleState == _ElementLifecycle.active");
        if (oldChild == null || !dart.test(framework.Widget.canUpdate(oldChild.widget, newWidget))) break;
        let newChild = dart.nullCheck(this.updateChild(oldChild, newWidget, new (IndexedSlotOfElementN()).new(newChildrenTop, previousChild)));
        if (!dart.equals(newChild[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 5703, 14, "newChild._lifecycleState == _ElementLifecycle.active");
        newChildren[$_set](newChildrenTop, newChild);
        previousChild = newChild;
        newChildrenTop = newChildrenTop + 1;
        oldChildrenTop = oldChildrenTop + 1;
      }
      while (oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom) {
        let oldChild = replaceWithNullIfForgotten(oldChildren[$_get](oldChildrenBottom));
        let newWidget = newWidgets[$_get](newChildrenBottom);
        if (!(oldChild == null || dart.equals(oldChild[_lifecycleState], framework._ElementLifecycle.active))) dart.assertFailed(null, L4, 5714, 14, "oldChild == null || oldChild._lifecycleState == _ElementLifecycle.active");
        if (oldChild == null || !dart.test(framework.Widget.canUpdate(oldChild.widget, newWidget))) break;
        oldChildrenBottom = oldChildrenBottom - 1;
        newChildrenBottom = newChildrenBottom - 1;
      }
      let haveOldChildren = oldChildrenTop <= oldChildrenBottom;
      let oldKeyedChildren = null;
      if (haveOldChildren) {
        oldKeyedChildren = new (LinkedMapOfKey$Element()).new();
        while (oldChildrenTop <= oldChildrenBottom) {
          let oldChild = replaceWithNullIfForgotten(oldChildren[$_get](oldChildrenTop));
          if (!(oldChild == null || dart.equals(oldChild[_lifecycleState], framework._ElementLifecycle.active))) dart.assertFailed(null, L4, 5728, 16, "oldChild == null || oldChild._lifecycleState == _ElementLifecycle.active");
          if (oldChild != null) {
            if (oldChild.widget.key != null)
              oldKeyedChildren[$_set](dart.nullCheck(oldChild.widget.key), oldChild);
            else
              this.deactivateChild(oldChild);
          }
          oldChildrenTop = oldChildrenTop + 1;
        }
      }
      while (newChildrenTop <= newChildrenBottom) {
        let oldChild = null;
        let newWidget = newWidgets[$_get](newChildrenTop);
        if (haveOldChildren) {
          let key = newWidget.key;
          if (key != null) {
            oldChild = dart.nullCheck(oldKeyedChildren)[$_get](key);
            if (oldChild != null) {
              if (dart.test(framework.Widget.canUpdate(oldChild.widget, newWidget))) {
                oldKeyedChildren[$remove](key);
              } else {
                oldChild = null;
              }
            }
          }
        }
        if (!(oldChild == null || dart.test(framework.Widget.canUpdate(oldChild.widget, newWidget)))) dart.assertFailed(null, L4, 5759, 14, "oldChild == null || Widget.canUpdate(oldChild.widget, newWidget)");
        let newChild = dart.nullCheck(this.updateChild(oldChild, newWidget, new (IndexedSlotOfElementN()).new(newChildrenTop, previousChild)));
        if (!dart.equals(newChild[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 5761, 14, "newChild._lifecycleState == _ElementLifecycle.active");
        if (!(dart.equals(oldChild, newChild) || oldChild == null || !dart.equals(oldChild[_lifecycleState], framework._ElementLifecycle.active))) dart.assertFailed(null, L4, 5762, 14, "oldChild == newChild || oldChild == null || oldChild._lifecycleState != _ElementLifecycle.active");
        newChildren[$_set](newChildrenTop, newChild);
        previousChild = newChild;
        newChildrenTop = newChildrenTop + 1;
      }
      if (!(oldChildrenTop === oldChildrenBottom + 1)) dart.assertFailed(null, L4, 5769, 12, "oldChildrenTop == oldChildrenBottom + 1");
      if (!(newChildrenTop === newChildrenBottom + 1)) dart.assertFailed(null, L4, 5770, 12, "newChildrenTop == newChildrenBottom + 1");
      if (!(dart.notNull(newWidgets[$length]) - newChildrenTop === dart.notNull(oldChildren[$length]) - oldChildrenTop)) dart.assertFailed(null, L4, 5771, 12, "newWidgets.length - newChildrenTop == oldChildren.length - oldChildrenTop");
      newChildrenBottom = dart.notNull(newWidgets[$length]) - 1;
      oldChildrenBottom = dart.notNull(oldChildren[$length]) - 1;
      while (oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom) {
        let oldChild = oldChildren[$_get](oldChildrenTop);
        if (!(replaceWithNullIfForgotten(oldChild) != null)) dart.assertFailed(null, L4, 5778, 14, "replaceWithNullIfForgotten(oldChild) != null");
        if (!dart.equals(oldChild[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 5779, 14, "oldChild._lifecycleState == _ElementLifecycle.active");
        let newWidget = newWidgets[$_get](newChildrenTop);
        if (!dart.test(framework.Widget.canUpdate(oldChild.widget, newWidget))) dart.assertFailed(null, L4, 5781, 14, "Widget.canUpdate(oldChild.widget, newWidget)");
        let newChild = dart.nullCheck(this.updateChild(oldChild, newWidget, new (IndexedSlotOfElementN()).new(newChildrenTop, previousChild)));
        if (!dart.equals(newChild[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 5783, 14, "newChild._lifecycleState == _ElementLifecycle.active");
        if (!(dart.equals(oldChild, newChild) || oldChild == null || !dart.equals(oldChild[_lifecycleState], framework._ElementLifecycle.active))) dart.assertFailed(null, L4, 5784, 14, "oldChild == newChild || oldChild == null || oldChild._lifecycleState != _ElementLifecycle.active");
        newChildren[$_set](newChildrenTop, newChild);
        previousChild = newChild;
        newChildrenTop = newChildrenTop + 1;
        oldChildrenTop = oldChildrenTop + 1;
      }
      if (haveOldChildren && dart.test(dart.nullCheck(oldKeyedChildren)[$isNotEmpty])) {
        for (let oldChild of oldKeyedChildren[$values]) {
          if (forgottenChildren == null || !dart.test(forgottenChildren.contains(oldChild))) this.deactivateChild(oldChild);
        }
      }
      if (!dart.test(newChildren[$every](dart.fn(element => {
        if (element == null) dart.nullFailed(L4, 5798, 39, "element");
        return !framework._NullElement.is(element);
      }, ElementTobool())))) dart.assertFailed(null, L4, 5798, 12, "newChildren.every((Element element) => element is! _NullElement)");
      return newChildren;
    }
    deactivate() {
      super.deactivate();
      if (!!dart.test(this.renderObject.attached)) dart.assertFailed("A RenderObject was still attached when attempting to deactivate its " + "RenderObjectElement: " + dart.str(this.renderObject), L4, 5805, 12, "!renderObject.attached");
    }
    unmount() {
      super.unmount();
      if (!!dart.test(this.renderObject.attached)) dart.assertFailed("A RenderObject was still attached when attempting to unmount its " + "RenderObjectElement: " + dart.str(this.renderObject), L4, 5813, 12, "!renderObject.attached");
      this.widget.didUnmountRenderObject(this.renderObject);
    }
    [_updateParentData](parentDataWidget) {
      if (parentDataWidget == null) dart.nullFailed(L4, 5819, 55, "parentDataWidget");
      let applyParentData = true;
      if (!dart.test(dart.fn(() => {
        try {
          if (!dart.test(parentDataWidget.debugIsValidRenderObject(this.renderObject))) {
            applyParentData = false;
            dart.throw(new assertions.FlutterError.fromParts((() => {
              let t34 = JSArrayOfDiagnosticsNode().of([]);
              t34.push(new assertions.ErrorSummary.new("Incorrect use of ParentDataWidget."));
              for (let t35 of parentDataWidget[_debugDescribeIncorrectParentDataType]({parentData: this.renderObject.parentData, parentDataCreator: dart.nullCheck(this[_ancestorRenderObjectElement]).widget, ownershipChain: new assertions.ErrorDescription.new(this.debugGetCreatorChain(10))}))
                t34.push(t35);
              return t34;
            })()));
          }
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (assertions.FlutterError.is(e)) {
            framework._debugReportException(new assertions.ErrorSummary.new("while applying parent data."), e, e[$stackTrace]);
          } else
            throw e$;
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 5821, 12, "() {\r\n      try {\r\n        if (!parentDataWidget.debugIsValidRenderObject(renderObject)) {\r\n          applyParentData = false;\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('Incorrect use of ParentDataWidget.'),\r\n            ...parentDataWidget._debugDescribeIncorrectParentDataType(\r\n              parentData: renderObject.parentData,\r\n              parentDataCreator: _ancestorRenderObjectElement!.widget,\r\n              ownershipChain: ErrorDescription(debugGetCreatorChain(10)),\r\n            ),\r\n          ]);\r\n        }\r\n      } on FlutterError catch (e) {\r\n        // Catching the exception directly to avoid activating the ErrorWidget.\r\n        // Since the tree is in a broken state, adding the ErrorWidget would\r\n        // cause more exceptions.\r\n        _debugReportException(ErrorSummary('while applying parent data.'), e, e.stackTrace);\r\n      }\r\n      return true;\r\n    }()");
      if (applyParentData) parentDataWidget.applyParentData(this.renderObject);
    }
    [_updateSlot](newSlot) {
      let oldSlot = this.slot;
      if (!!dart.equals(oldSlot, newSlot)) dart.assertFailed(null, L4, 5849, 12, "oldSlot != newSlot");
      super[_updateSlot](newSlot);
      if (!dart.equals(this.slot, newSlot)) dart.assertFailed(null, L4, 5851, 12, "slot == newSlot");
      dart.nullCheck(this[_ancestorRenderObjectElement]).moveRenderObjectChild(this.renderObject, oldSlot, this.slot);
    }
    attachRenderObject(newSlot) {
      let t37;
      if (!(this[_ancestorRenderObjectElement] == null)) dart.assertFailed(null, L4, 5857, 12, "_ancestorRenderObjectElement == null");
      this[_slot] = newSlot;
      this[_ancestorRenderObjectElement] = this[_findAncestorRenderObjectElement]();
      t37 = this[_ancestorRenderObjectElement];
      t37 == null ? null : t37.insertRenderObjectChild(this.renderObject, newSlot);
      let parentDataElement = this[_findAncestorParentDataElement]();
      if (parentDataElement != null) this[_updateParentData](parentDataElement.widget);
    }
    detachRenderObject() {
      if (this[_ancestorRenderObjectElement] != null) {
        dart.nullCheck(this[_ancestorRenderObjectElement]).removeRenderObjectChild(this.renderObject, this.slot);
        this[_ancestorRenderObjectElement] = null;
      }
      this[_slot] = null;
    }
    insertChildRenderObject(child, slot) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L4, 5901, 55, "child");
      if (!dart.dtest((dart.fn(() => {
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("RenderObjectElement.insertChildRenderObject() is deprecated."), this.toDiagnosticsNode({name: "insertChildRenderObject() was called on this Element", style: diagnostics$.DiagnosticsTreeStyle.shallow}), new assertions.ErrorDescription.new("insertChildRenderObject() has been deprecated in favor of " + "insertRenderObjectChild(). See https://github.com/flutter/flutter/issues/63269 " + "for details."), new assertions.ErrorHint.new("Rather than overriding insertChildRenderObject() in your " + "RenderObjectElement subclass, override insertRenderObjectChild() instead, " + "and DON'T call super.insertRenderObjectChild(). If you're implementing a " + "new RenderObjectElement, you should override/implement " + "insertRenderObjectChild(), moveRenderObjectChild(), and " + "removeRenderObjectChild().")])));
      }, VoidToNever())(), dart.throw(new _internal.ReachabilityError.new("`null` encountered as the result from expression with type `Never`."))))) dart.assertFailed(null, L4, 5902, 12, "() {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('RenderObjectElement.insertChildRenderObject() is deprecated.'),\r\n        toDiagnosticsNode(\r\n          name: 'insertChildRenderObject() was called on this Element',\r\n          style: DiagnosticsTreeStyle.shallow,\r\n        ),\r\n        ErrorDescription('insertChildRenderObject() has been deprecated in favor of '\r\n          'insertRenderObjectChild(). See https://github.com/flutter/flutter/issues/63269 '\r\n          'for details.'),\r\n        ErrorHint('Rather than overriding insertChildRenderObject() in your '\r\n          'RenderObjectElement subclass, override insertRenderObjectChild() instead, '\r\n          \"and DON'T call super.insertRenderObjectChild(). If you're implementing a \"\r\n          'new RenderObjectElement, you should override/implement '\r\n          'insertRenderObjectChild(), moveRenderObjectChild(), and '\r\n          'removeRenderObjectChild().'),\r\n      ]);\r\n    }()");
    }
    insertRenderObjectChild(child, slot) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L4, 5931, 55, "child");
      this.insertChildRenderObject(child, slot);
    }
    moveChildRenderObject(child, slot) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L4, 5974, 53, "child");
      if (!dart.dtest((dart.fn(() => {
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("RenderObjectElement.moveChildRenderObject() is deprecated."), this.toDiagnosticsNode({name: "super.moveChildRenderObject() was called on this Element", style: diagnostics$.DiagnosticsTreeStyle.shallow}), new assertions.ErrorDescription.new("moveChildRenderObject() has been deprecated in favor of " + "moveRenderObjectChild(). See https://github.com/flutter/flutter/issues/63269 " + "for details."), new assertions.ErrorHint.new("Rather than overriding moveChildRenderObject() in your " + "RenderObjectElement subclass, override moveRenderObjectChild() instead, " + "and DON'T call super.moveRenderObjectChild(). If you're implementing a " + "new RenderObjectElement, you should override/implement " + "insertRenderObjectChild(), moveRenderObjectChild(), and " + "removeRenderObjectChild().")])));
      }, VoidToNever())(), dart.throw(new _internal.ReachabilityError.new("`null` encountered as the result from expression with type `Never`."))))) dart.assertFailed(null, L4, 5975, 12, "() {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('RenderObjectElement.moveChildRenderObject() is deprecated.'),\r\n        toDiagnosticsNode(\r\n          name: 'super.moveChildRenderObject() was called on this Element',\r\n          style: DiagnosticsTreeStyle.shallow,\r\n        ),\r\n        ErrorDescription('moveChildRenderObject() has been deprecated in favor of '\r\n            'moveRenderObjectChild(). See https://github.com/flutter/flutter/issues/63269 '\r\n            'for details.'),\r\n        ErrorHint('Rather than overriding moveChildRenderObject() in your '\r\n            'RenderObjectElement subclass, override moveRenderObjectChild() instead, '\r\n            \"and DON'T call super.moveRenderObjectChild(). If you're implementing a \"\r\n            'new RenderObjectElement, you should override/implement '\r\n            'insertRenderObjectChild(), moveRenderObjectChild(), and '\r\n            'removeRenderObjectChild().'),\r\n      ]);\r\n    }()");
    }
    moveRenderObjectChild(child, oldSlot, newSlot) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L4, 6010, 53, "child");
      this.moveChildRenderObject(child, newSlot);
    }
    removeChildRenderObject(child) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L4, 6041, 55, "child");
      if (!dart.dtest((dart.fn(() => {
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("RenderObjectElement.removeChildRenderObject() is deprecated."), this.toDiagnosticsNode({name: "super.removeChildRenderObject() was called on this Element", style: diagnostics$.DiagnosticsTreeStyle.shallow}), new assertions.ErrorDescription.new("removeChildRenderObject() has been deprecated in favor of " + "removeRenderObjectChild(). See https://github.com/flutter/flutter/issues/63269 " + "for details."), new assertions.ErrorHint.new("Rather than overriding removeChildRenderObject() in your " + "RenderObjectElement subclass, override removeRenderObjectChild() instead, " + "and DON'T call super.removeRenderObjectChild(). If you're implementing a " + "new RenderObjectElement, you should override/implement " + "insertRenderObjectChild(), moveRenderObjectChild(), and " + "removeRenderObjectChild().")])));
      }, VoidToNever())(), dart.throw(new _internal.ReachabilityError.new("`null` encountered as the result from expression with type `Never`."))))) dart.assertFailed(null, L4, 6042, 12, "() {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('RenderObjectElement.removeChildRenderObject() is deprecated.'),\r\n        toDiagnosticsNode(\r\n          name: 'super.removeChildRenderObject() was called on this Element',\r\n          style: DiagnosticsTreeStyle.shallow,\r\n        ),\r\n        ErrorDescription('removeChildRenderObject() has been deprecated in favor of '\r\n            'removeRenderObjectChild(). See https://github.com/flutter/flutter/issues/63269 '\r\n            'for details.'),\r\n        ErrorHint('Rather than overriding removeChildRenderObject() in your '\r\n            'RenderObjectElement subclass, override removeRenderObjectChild() instead, '\r\n            \"and DON'T call super.removeRenderObjectChild(). If you're implementing a \"\r\n            'new RenderObjectElement, you should override/implement '\r\n            'insertRenderObjectChild(), moveRenderObjectChild(), and '\r\n            'removeRenderObjectChild().'),\r\n      ]);\r\n    }()");
    }
    removeRenderObjectChild(child, slot) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L4, 6067, 55, "child");
      this.removeChildRenderObject(child);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L4, 6072, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfRenderObject()).new("renderObject", this.renderObject, {defaultValue: null}));
    }
  };
  (framework.RenderObjectElement.new = function(widget) {
    if (widget == null) dart.nullFailed(L4, 5472, 42, "widget");
    this[__RenderObjectElement__renderObject] = null;
    this[__RenderObjectElement__renderObject_isSet] = false;
    this[_debugDoingBuild] = false;
    this[_ancestorRenderObjectElement] = null;
    framework.RenderObjectElement.__proto__.new.call(this, widget);
    ;
  }).prototype = framework.RenderObjectElement.prototype;
  dart.addTypeTests(framework.RenderObjectElement);
  dart.addTypeCaches(framework.RenderObjectElement);
  dart.setMethodSignature(framework.RenderObjectElement, () => ({
    __proto__: dart.getMethods(framework.RenderObjectElement.__proto__),
    [_findAncestorRenderObjectElement]: dart.fnType(dart.nullable(framework.RenderObjectElement), []),
    [_findAncestorParentDataElement]: dart.fnType(dart.nullable(framework.ParentDataElement$(object$.ParentData)), []),
    [_debugUpdateRenderObjectOwner]: dart.fnType(dart.void, []),
    performRebuild: dart.fnType(dart.void, []),
    updateChildren: dart.fnType(core.List$(framework.Element), [core.List$(framework.Element), core.List$(framework.Widget)], {forgottenChildren: dart.nullable(core.Set$(framework.Element))}, {}),
    [_updateParentData]: dart.fnType(dart.void, [framework.ParentDataWidget$(object$.ParentData)]),
    insertChildRenderObject: dart.fnType(dart.void, [dart.nullable(core.Object), dart.nullable(core.Object)]),
    insertRenderObjectChild: dart.fnType(dart.void, [dart.nullable(core.Object), dart.nullable(core.Object)]),
    moveChildRenderObject: dart.fnType(dart.void, [dart.nullable(core.Object), dart.nullable(core.Object)]),
    moveRenderObjectChild: dart.fnType(dart.void, [dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object)]),
    removeChildRenderObject: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    removeRenderObjectChild: dart.fnType(dart.void, [dart.nullable(core.Object), dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(framework.RenderObjectElement, () => ({
    __proto__: dart.getGetters(framework.RenderObjectElement.__proto__),
    widget: framework.RenderObjectWidget,
    renderObject: object$.RenderObject,
    [_renderObject]: object$.RenderObject,
    debugDoingBuild: core.bool
  }));
  dart.setSetterSignature(framework.RenderObjectElement, () => ({
    __proto__: dart.getSetters(framework.RenderObjectElement.__proto__),
    [_renderObject]: object$.RenderObject
  }));
  dart.setLibraryUri(framework.RenderObjectElement, L5);
  dart.setFieldSignature(framework.RenderObjectElement, () => ({
    __proto__: dart.getFields(framework.RenderObjectElement.__proto__),
    [__RenderObjectElement__renderObject]: dart.fieldType(dart.nullable(object$.RenderObject)),
    [__RenderObjectElement__renderObject_isSet]: dart.fieldType(core.bool),
    [_debugDoingBuild]: dart.fieldType(core.bool),
    [_ancestorRenderObjectElement]: dart.fieldType(dart.nullable(framework.RenderObjectElement))
  }));
  table$._TableElement = class _TableElement extends framework.RenderObjectElement {
    get widget() {
      return table$.Table.as(super.widget);
    }
    get renderObject() {
      return table.RenderTable.as(super.renderObject);
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      this[_children$] = this.widget.children[$map](table$._TableElementRow, dart.fn(row => {
        if (row == null) dart.nullFailed(L41, 359, 65, "row");
        return new table$._TableElementRow.new({key: row.key, children: dart.nullCheck(row.children)[$map](framework.Element, dart.fn(child => {
            if (child == null) dart.nullFailed(L41, 362, 54, "child");
            if (!(child != null)) dart.assertFailed(null, L41, 363, 18, "child != null");
            return this.inflateWidget(child, null);
          }, WidgetToElement()))[$toList]({growable: false})});
      }, TableRowTo_TableElementRow()))[$toList]({growable: false});
      this[_updateRenderObjectChildren]();
    }
    insertRenderObjectChild(child, slot) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L41, 372, 45, "child");
      this.renderObject.setupParentData(child);
    }
    moveRenderObjectChild(child, oldSlot, newSlot) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L41, 377, 43, "child");
    }
    removeRenderObjectChild(child, slot) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L41, 381, 45, "child");
      let childParentData = table.TableCellParentData.as(dart.nullCheck(child.parentData));
      this.renderObject.setChild(dart.nullCheck(childParentData.x), dart.nullCheck(childParentData.y), null);
    }
    update(newWidget) {
      table$.Table.as(newWidget);
      if (newWidget == null) dart.nullFailed(L41, 389, 21, "newWidget");
      let oldKeyedRows = new (LinkedMapOfLocalKey$ListOfElement()).new();
      for (let row of this[_children$]) {
        if (row.key != null) {
          oldKeyedRows[$_set](dart.nullCheck(row.key), row.children);
        }
      }
      let oldUnkeyedRows = this[_children$][$where](dart.fn(row => {
        if (row == null) dart.nullFailed(L41, 396, 89, "row");
        return row.key == null;
      }, _TableElementRowTobool()))[$iterator];
      let newChildren = JSArrayOf_TableElementRow().of([]);
      let taken = LinkedHashSetOfListOfElement().new();
      for (let row of newWidget.children) {
        let oldChildren = null;
        if (row.key != null && dart.test(oldKeyedRows[$containsKey](row.key))) {
          oldChildren = dart.nullCheck(oldKeyedRows[$_get](row.key));
          taken.add(oldChildren);
        } else if (row.key == null && dart.test(oldUnkeyedRows.moveNext())) {
          oldChildren = oldUnkeyedRows.current.children;
        } else {
          oldChildren = C364 || CT.C364;
        }
        newChildren[$add](new table$._TableElementRow.new({key: row.key, children: this.updateChildren(oldChildren, dart.nullCheck(row.children), {forgottenChildren: this[_forgottenChildren]})}));
      }
      while (dart.test(oldUnkeyedRows.moveNext()))
        this.updateChildren(oldUnkeyedRows.current.children, C365 || CT.C365, {forgottenChildren: this[_forgottenChildren]});
      for (let oldChildren of oldKeyedRows[$values][$where](dart.fn(list => {
        if (list == null) dart.nullFailed(L41, 416, 86, "list");
        return !dart.test(taken.contains(list));
      }, ListOfElementTobool())))
        this.updateChildren(oldChildren, C365 || CT.C365, {forgottenChildren: this[_forgottenChildren]});
      this[_children$] = newChildren;
      this[_updateRenderObjectChildren]();
      this[_forgottenChildren].clear();
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, L41, 423, 12, "widget == newWidget");
    }
    [_updateRenderObjectChildren]() {
      if (!(this.renderObject != null)) dart.assertFailed(null, L41, 427, 12, "renderObject != null");
      this.renderObject.setFlatChildren(dart.test(this[_children$][$isNotEmpty]) ? this[_children$][$_get](0).children[$length] : 0, this[_children$][$expand](box$.RenderBox, dart.fn(row => {
        if (row == null) dart.nullFailed(L41, 430, 53, "row");
        return row.children[$map](box$.RenderBox, dart.fn(child => {
          if (child == null) dart.nullFailed(L41, 431, 53, "child");
          let box = box$.RenderBox.as(dart.nullCheck(child.renderObject));
          return box;
        }, ElementToRenderBox()));
      }, _TableElementRowToIterableOfRenderBox()))[$toList]());
    }
    visitChildren(visitor) {
      if (visitor == null) dart.nullFailed(L41, 440, 37, "visitor");
      for (let child of this[_children$][$expand](framework.Element, dart.fn(row => {
        if (row == null) dart.nullFailed(L41, 441, 77, "row");
        return row.children;
      }, _TableElementRowToListOfElement()))) {
        if (!dart.test(this[_forgottenChildren].contains(child))) visitor(child);
      }
    }
    forgetChild(child) {
      if (child == null) dart.nullFailed(L41, 448, 28, "child");
      this[_forgottenChildren].add(child);
      super.forgetChild(child);
      return true;
    }
  };
  (table$._TableElement.new = function(widget) {
    if (widget == null) dart.nullFailed(L41, 343, 23, "widget");
    this[_children$] = C363 || CT.C363;
    this[_forgottenChildren] = new (_HashSetOfElement()).new();
    table$._TableElement.__proto__.new.call(this, widget);
    ;
  }).prototype = table$._TableElement.prototype;
  dart.addTypeTests(table$._TableElement);
  dart.addTypeCaches(table$._TableElement);
  dart.setMethodSignature(table$._TableElement, () => ({
    __proto__: dart.getMethods(table$._TableElement.__proto__),
    [_updateRenderObjectChildren]: dart.fnType(dart.void, []),
    forgetChild: dart.fnType(core.bool, [framework.Element])
  }));
  dart.setGetterSignature(table$._TableElement, () => ({
    __proto__: dart.getGetters(table$._TableElement.__proto__),
    widget: table$.Table,
    renderObject: table.RenderTable
  }));
  dart.setLibraryUri(table$._TableElement, L40);
  dart.setFieldSignature(table$._TableElement, () => ({
    __proto__: dart.getFields(table$._TableElement.__proto__),
    [_children$]: dart.fieldType(core.List$(table$._TableElementRow)),
    [_forgottenChildren]: dart.finalFieldType(core.Set$(framework.Element))
  }));
  const _is_ParentDataWidget_default = Symbol('_is_ParentDataWidget_default');
  framework.ParentDataWidget$ = dart.generic(T => {
    var ParentDataElementOfT = () => (ParentDataElementOfT = dart.constFn(framework.ParentDataElement$(T)))();
    class ParentDataWidget extends framework.ProxyWidget {
      createElement() {
        return new (ParentDataElementOfT()).new(this);
      }
      debugIsValidRenderObject(renderObject) {
        if (renderObject == null) dart.nullFailed(L4, 1588, 46, "renderObject");
        if (!!dart.wrapType(T)._equals(dart.wrapType(dart.dynamic))) dart.assertFailed(null, L4, 1589, 12, "T != dynamic");
        if (!!dart.wrapType(T)._equals(dart.wrapType(object$.ParentData))) dart.assertFailed(null, L4, 1590, 12, "T != ParentData");
        return T.is(renderObject.parentData);
      }
      [_debugDescribeIncorrectParentDataType](opts) {
        let parentData = opts && 'parentData' in opts ? opts.parentData : null;
        let parentDataCreator = opts && 'parentDataCreator' in opts ? opts.parentDataCreator : null;
        let ownershipChain = opts && 'ownershipChain' in opts ? opts.ownershipChain : null;
        return new (SyncIterableOfDiagnosticsNode()).new((function* _debugDescribeIncorrectParentDataType() {
          if (!!dart.wrapType(T)._equals(dart.wrapType(dart.dynamic))) dart.assertFailed(null, L4, 1606, 12, "T != dynamic");
          if (!!dart.wrapType(T)._equals(dart.wrapType(object$.ParentData))) dart.assertFailed(null, L4, 1607, 12, "T != ParentData");
          if (!(this.debugTypicalAncestorWidgetClass != null)) dart.assertFailed(null, L4, 1608, 12, "debugTypicalAncestorWidgetClass != null");
          let description = "The ParentDataWidget " + dart.str(this) + " wants to apply ParentData of type " + dart.str(dart.wrapType(T)) + " to a RenderObject";
          if (parentData == null) {
            yield new assertions.ErrorDescription.new(description + ", which has not been set up to receive any ParentData.");
          } else {
            yield new assertions.ErrorDescription.new(description + ", which has been set up to accept ParentData of incompatible type " + dart.str(dart.runtimeType(parentData)) + ".");
          }
          yield new assertions.ErrorHint.new("Usually, this means that the " + dart.str(this[$runtimeType]) + " widget has the wrong ancestor RenderObjectWidget. " + "Typically, " + dart.str(this[$runtimeType]) + " widgets are placed directly inside " + dart.str(this.debugTypicalAncestorWidgetClass) + " widgets.");
          if (parentDataCreator != null) {
            yield new assertions.ErrorHint.new("The offending " + dart.str(this[$runtimeType]) + " is currently placed inside a " + dart.str(dart.runtimeType(parentDataCreator)) + " widget.");
          }
          if (ownershipChain != null) {
            yield new assertions.ErrorDescription.new("The ownership chain for the RenderObject that received the incompatible parent data was:\n  " + dart.str(ownershipChain));
          }
        }).bind(this));
      }
      debugCanApplyOutOfTurn() {
        return false;
      }
    }
    (ParentDataWidget.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(L4, 1573, 54, "child");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      ParentDataWidget.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = ParentDataWidget.prototype;
    dart.addTypeTests(ParentDataWidget);
    ParentDataWidget.prototype[_is_ParentDataWidget_default] = true;
    dart.addTypeCaches(ParentDataWidget);
    dart.setMethodSignature(ParentDataWidget, () => ({
      __proto__: dart.getMethods(ParentDataWidget.__proto__),
      createElement: dart.fnType(framework.ParentDataElement$(T), []),
      debugIsValidRenderObject: dart.fnType(core.bool, [object$.RenderObject]),
      [_debugDescribeIncorrectParentDataType]: dart.fnType(core.Iterable$(diagnostics$.DiagnosticsNode), [], {ownershipChain: dart.nullable(diagnostics$.DiagnosticsNode), parentDataCreator: dart.nullable(framework.RenderObjectWidget)}, {parentData: dart.nullable(object$.ParentData)}),
      debugCanApplyOutOfTurn: dart.fnType(core.bool, [])
    }));
    dart.setLibraryUri(ParentDataWidget, L5);
    return ParentDataWidget;
  });
  framework.ParentDataWidget = framework.ParentDataWidget$();
  dart.addTypeTests(framework.ParentDataWidget, _is_ParentDataWidget_default);
  var verticalAlignment$ = dart.privateName(table$, "TableCell.verticalAlignment");
  table$.TableCell = class TableCell extends framework.ParentDataWidget$(table.TableCellParentData) {
    get verticalAlignment() {
      return this[verticalAlignment$];
    }
    set verticalAlignment(value) {
      super.verticalAlignment = value;
    }
    applyParentData(renderObject) {
      if (renderObject == null) dart.nullFailed(L41, 473, 37, "renderObject");
      let parentData = table.TableCellParentData.as(dart.nullCheck(renderObject.parentData));
      if (!dart.equals(parentData.verticalAlignment, this.verticalAlignment)) {
        parentData.verticalAlignment = this.verticalAlignment;
        let targetParent = renderObject.parent;
        if (object$.RenderObject.is(targetParent)) targetParent.markNeedsLayout();
      }
    }
    get debugTypicalAncestorWidgetClass() {
      return dart.wrapType(table$.Table);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L41, 487, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfTableCellVerticalAlignment()).new("verticalAlignment", this.verticalAlignment));
    }
  };
  (table$.TableCell.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let verticalAlignment = opts && 'verticalAlignment' in opts ? opts.verticalAlignment : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L41, 466, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[verticalAlignment$] = verticalAlignment;
    table$.TableCell.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = table$.TableCell.prototype;
  dart.addTypeTests(table$.TableCell);
  dart.addTypeCaches(table$.TableCell);
  dart.setMethodSignature(table$.TableCell, () => ({
    __proto__: dart.getMethods(table$.TableCell.__proto__),
    applyParentData: dart.fnType(dart.void, [object$.RenderObject])
  }));
  dart.setGetterSignature(table$.TableCell, () => ({
    __proto__: dart.getGetters(table$.TableCell.__proto__),
    debugTypicalAncestorWidgetClass: core.Type
  }));
  dart.setLibraryUri(table$.TableCell, L40);
  dart.setFieldSignature(table$.TableCell, () => ({
    __proto__: dart.getFields(table$.TableCell.__proto__),
    verticalAlignment: dart.finalFieldType(dart.nullable(table.TableCellVerticalAlignment))
  }));
  const _is_InheritedModel_default = Symbol('_is_InheritedModel_default');
  inherited_model.InheritedModel$ = dart.generic(T => {
    var InheritedModelElementOfT = () => (InheritedModelElementOfT = dart.constFn(inherited_model.InheritedModelElement$(T)))();
    class InheritedModel extends framework.InheritedWidget {
      createElement() {
        return new (InheritedModelElementOfT()).new(this);
      }
      isSupportedAspect(aspect) {
        if (aspect == null) dart.nullFailed(L42, 118, 33, "aspect");
        return true;
      }
      static _findModels(T, context, aspect, results) {
        if (context == null) dart.nullFailed(L42, 122, 74, "context");
        if (aspect == null) dart.nullFailed(L42, 122, 90, "aspect");
        if (results == null) dart.nullFailed(L42, 122, 121, "results");
        let model = context.getElementForInheritedWidgetOfExactType(T);
        if (model == null) return;
        results[$add](model);
        if (!T.is(model.widget)) dart.assertFailed(null, L42, 129, 12, "model.widget is T");
        let modelWidget = T.as(model.widget);
        if (dart.test(modelWidget.isSupportedAspect(aspect))) return;
        let modelParent = null;
        model.visitAncestorElements(dart.fn(ancestor => {
          if (ancestor == null) dart.nullFailed(L42, 135, 42, "ancestor");
          modelParent = ancestor;
          return false;
        }, ElementTobool()));
        if (modelParent == null) return;
        inherited_model.InheritedModel._findModels(T, dart.nullCheck(modelParent), aspect, results);
      }
      static inheritFrom(T, context, opts) {
        if (context == null) dart.nullFailed(L42, 160, 72, "context");
        let aspect = opts && 'aspect' in opts ? opts.aspect : null;
        if (aspect == null) return context.dependOnInheritedWidgetOfExactType(T);
        let models = JSArrayOfInheritedElement().of([]);
        inherited_model.InheritedModel._findModels(T, context, aspect, models);
        if (dart.test(models[$isEmpty])) {
          return null;
        }
        let lastModel = models[$last];
        for (let model of models) {
          let value = T.as(context.dependOnInheritedElement(model, {aspect: aspect}));
          if (dart.equals(model, lastModel)) return value;
        }
        if (!false) dart.assertFailed(null, L42, 179, 12, "false");
        return null;
      }
    }
    (InheritedModel.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(L42, 100, 52, "child");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      InheritedModel.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = InheritedModel.prototype;
    dart.addTypeTests(InheritedModel);
    InheritedModel.prototype[_is_InheritedModel_default] = true;
    dart.addTypeCaches(InheritedModel);
    dart.setMethodSignature(InheritedModel, () => ({
      __proto__: dart.getMethods(InheritedModel.__proto__),
      createElement: dart.fnType(inherited_model.InheritedModelElement$(T), []),
      isSupportedAspect: dart.fnType(core.bool, [core.Object])
    }));
    dart.setLibraryUri(InheritedModel, L43);
    return InheritedModel;
  });
  inherited_model.InheritedModel = inherited_model.InheritedModel$();
  dart.addTypeTests(inherited_model.InheritedModel, _is_InheritedModel_default);
  var _child = dart.privateName(framework, "_child");
  var _firstBuild = dart.privateName(framework, "_firstBuild");
  framework.ComponentElement = class ComponentElement extends framework.Element {
    get debugDoingBuild() {
      return this[_debugDoingBuild];
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      if (!(this[_child] == null)) dart.assertFailed(null, L4, 4656, 12, "_child == null");
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 4657, 12, "_lifecycleState == _ElementLifecycle.active");
      this[_firstBuild]();
      if (!(this[_child] != null)) dart.assertFailed(null, L4, 4659, 12, "_child != null");
    }
    [_firstBuild]() {
      this.rebuild();
    }
    performRebuild() {
      if (!false && dart.test(debug$0.debugProfileBuildsEnabled)) developer.Timeline.startSync(dart.str(dart.runtimeType(this.widget)), {arguments: debug$.timelineArgumentsIndicatingLandmarkEvent});
      if (!dart.test(this[_debugSetAllowIgnoredCallsToMarkNeedsBuild](true))) dart.assertFailed(null, L4, 4677, 12, "_debugSetAllowIgnoredCallsToMarkNeedsBuild(true)");
      let built = null;
      try {
        if (!dart.test(dart.fn(() => {
          this[_debugDoingBuild] = true;
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 4680, 14, "() {\r\n        _debugDoingBuild = true;\r\n        return true;\r\n      }()");
        built = this.build();
        if (!dart.test(dart.fn(() => {
          this[_debugDoingBuild] = false;
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 4685, 14, "() {\r\n        _debugDoingBuild = false;\r\n        return true;\r\n      }()");
        debug$0.debugWidgetBuilderValue(this.widget, built);
      } catch (e$) {
        let e = dart.getThrown(e$);
        let stack = dart.stackTrace(e$);
        if (core.Object.is(e)) {
          this[_debugDoingBuild] = false;
          built = framework.ErrorWidget.builder(framework._debugReportException(new assertions.ErrorDescription.new("building " + dart.str(this)), e, stack, {informationCollector: dart.fn(() => new (SyncIterableOfDiagnosticsNode()).new((function*() {
              yield new object$.DiagnosticsDebugCreator.new(new framework.DebugCreator.new(this));
            }).bind(this)), VoidToIterableOfDiagnosticsNode())}));
        } else
          throw e$;
      } finally {
        this[_dirty] = false;
        if (!dart.test(this[_debugSetAllowIgnoredCallsToMarkNeedsBuild](false))) dart.assertFailed(null, L4, 4706, 14, "_debugSetAllowIgnoredCallsToMarkNeedsBuild(false)");
      }
      try {
        this[_child] = this.updateChild(this[_child], built, this.slot);
        if (!(this[_child] != null)) dart.assertFailed(null, L4, 4710, 14, "_child != null");
      } catch (e$0) {
        let e = dart.getThrown(e$0);
        let stack = dart.stackTrace(e$0);
        if (core.Object.is(e)) {
          built = framework.ErrorWidget.builder(framework._debugReportException(new assertions.ErrorDescription.new("building " + dart.str(this)), e, stack, {informationCollector: dart.fn(() => new (SyncIterableOfDiagnosticsNode()).new((function*() {
              yield new object$.DiagnosticsDebugCreator.new(new framework.DebugCreator.new(this));
            }).bind(this)), VoidToIterableOfDiagnosticsNode())}));
          this[_child] = this.updateChild(null, built, this.slot);
        } else
          throw e$0;
      }
      if (!false && dart.test(debug$0.debugProfileBuildsEnabled)) developer.Timeline.finishSync();
    }
    visitChildren(visitor) {
      if (visitor == null) dart.nullFailed(L4, 4736, 37, "visitor");
      if (this[_child] != null) visitor(dart.nullCheck(this[_child]));
    }
    forgetChild(child) {
      if (child == null) dart.nullFailed(L4, 4742, 28, "child");
      if (!dart.equals(child, this[_child])) dart.assertFailed(null, L4, 4743, 12, "child == _child");
      this[_child] = null;
      super.forgetChild(child);
    }
  };
  (framework.ComponentElement.new = function(widget) {
    if (widget == null) dart.nullFailed(L4, 4645, 27, "widget");
    this[_child] = null;
    this[_debugDoingBuild] = false;
    framework.ComponentElement.__proto__.new.call(this, widget);
    ;
  }).prototype = framework.ComponentElement.prototype;
  dart.addTypeTests(framework.ComponentElement);
  dart.addTypeCaches(framework.ComponentElement);
  dart.setMethodSignature(framework.ComponentElement, () => ({
    __proto__: dart.getMethods(framework.ComponentElement.__proto__),
    [_firstBuild]: dart.fnType(dart.void, []),
    performRebuild: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(framework.ComponentElement, () => ({
    __proto__: dart.getGetters(framework.ComponentElement.__proto__),
    debugDoingBuild: core.bool
  }));
  dart.setLibraryUri(framework.ComponentElement, L5);
  dart.setFieldSignature(framework.ComponentElement, () => ({
    __proto__: dart.getFields(framework.ComponentElement.__proto__),
    [_child]: dart.fieldType(dart.nullable(framework.Element)),
    [_debugDoingBuild]: dart.fieldType(core.bool)
  }));
  framework.ProxyElement = class ProxyElement extends framework.ComponentElement {
    get widget() {
      return framework.ProxyWidget.as(super.widget);
    }
    build() {
      return this.widget.child;
    }
    update(newWidget) {
      framework.ProxyWidget.as(newWidget);
      if (newWidget == null) dart.nullFailed(L4, 5034, 27, "newWidget");
      let oldWidget = this.widget;
      if (!(this.widget != null)) dart.assertFailed(null, L4, 5036, 12, "widget != null");
      if (!!dart.equals(this.widget, newWidget)) dart.assertFailed(null, L4, 5037, 12, "widget != newWidget");
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, L4, 5039, 12, "widget == newWidget");
      this.updated(oldWidget);
      this[_dirty] = true;
      this.rebuild();
    }
    updated(oldWidget) {
      framework.ProxyWidget.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L4, 5051, 38, "oldWidget");
      this.notifyClients(oldWidget);
    }
  };
  (framework.ProxyElement.new = function(widget) {
    if (widget == null) dart.nullFailed(L4, 5025, 28, "widget");
    framework.ProxyElement.__proto__.new.call(this, widget);
    ;
  }).prototype = framework.ProxyElement.prototype;
  dart.addTypeTests(framework.ProxyElement);
  dart.addTypeCaches(framework.ProxyElement);
  dart.setMethodSignature(framework.ProxyElement, () => ({
    __proto__: dart.getMethods(framework.ProxyElement.__proto__),
    build: dart.fnType(framework.Widget, []),
    updated: dart.fnType(dart.void, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(framework.ProxyElement, () => ({
    __proto__: dart.getGetters(framework.ProxyElement.__proto__),
    widget: framework.ProxyWidget
  }));
  dart.setLibraryUri(framework.ProxyElement, L5);
  framework.InheritedElement = class InheritedElement extends framework.ProxyElement {
    get widget() {
      return framework.InheritedWidget.as(super.widget);
    }
    [_updateInheritance]() {
      let t38;
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 5141, 12, "_lifecycleState == _ElementLifecycle.active");
      let incomingWidgets = (t38 = this[_parent], t38 == null ? null : t38[_inheritedWidgets]);
      if (incomingWidgets != null)
        this[_inheritedWidgets] = HashMapOfType$InheritedElement().from(incomingWidgets);
      else
        this[_inheritedWidgets] = new (LinkedMapOfType$InheritedElement()).new();
      dart.nullCheck(this[_inheritedWidgets])[$_set](dart.runtimeType(this.widget), this);
    }
    debugDeactivated() {
      if (!dart.test(dart.fn(() => {
        if (!dart.test(this[_dependents][$isEmpty])) dart.assertFailed(null, L4, 5153, 14, "_dependents.isEmpty");
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 5152, 12, "() {\r\n      assert(_dependents.isEmpty);\r\n      return true;\r\n    }()");
      super.debugDeactivated();
    }
    getDependencies(dependent) {
      if (dependent == null) dart.nullFailed(L4, 5184, 35, "dependent");
      return this[_dependents][$_get](dependent);
    }
    setDependencies(dependent, value) {
      if (dependent == null) dart.nullFailed(L4, 5211, 32, "dependent");
      this[_dependents][$_set](dependent, value);
    }
    updateDependencies(dependent, aspect) {
      if (dependent == null) dart.nullFailed(L4, 5238, 35, "dependent");
      this.setDependencies(dependent, null);
    }
    notifyDependent(oldWidget, dependent) {
      framework.InheritedWidget.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L4, 5259, 50, "oldWidget");
      if (dependent == null) dart.nullFailed(L4, 5259, 69, "dependent");
      dependent.didChangeDependencies();
    }
    updated(oldWidget) {
      framework.InheritedWidget.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L4, 5270, 32, "oldWidget");
      if (dart.test(this.widget.updateShouldNotify(oldWidget))) super.updated(oldWidget);
    }
    notifyClients(oldWidget) {
      framework.InheritedWidget.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L4, 5287, 38, "oldWidget");
      if (!dart.test(this[_debugCheckOwnerBuildTargetExists]("notifyClients"))) dart.assertFailed(null, L4, 5288, 12, "_debugCheckOwnerBuildTargetExists('notifyClients')");
      for (let dependent of this[_dependents][$keys]) {
        if (!dart.test(dart.fn(() => {
          let ancestor = dependent[_parent];
          while (!dart.equals(ancestor, this) && ancestor != null)
            ancestor = ancestor[_parent];
          return dart.equals(ancestor, this);
        }, VoidTobool())())) dart.assertFailed(null, L4, 5290, 14, "() {\r\n        // check that it really is our descendant\r\n        Element? ancestor = dependent._parent;\r\n        while (ancestor != this && ancestor != null)\r\n          ancestor = ancestor._parent;\r\n        return ancestor == this;\r\n      }()");
        if (!dart.test(dart.nullCheck(dependent[_dependencies]).contains(this))) dart.assertFailed(null, L4, 5298, 14, "dependent._dependencies!.contains(this)");
        this.notifyDependent(oldWidget, dependent);
      }
    }
  };
  (framework.InheritedElement.new = function(widget) {
    if (widget == null) dart.nullFailed(L4, 5132, 36, "widget");
    this[_dependents] = new (LinkedMapOfElement$ObjectN()).new();
    framework.InheritedElement.__proto__.new.call(this, widget);
    ;
  }).prototype = framework.InheritedElement.prototype;
  dart.addTypeTests(framework.InheritedElement);
  dart.addTypeCaches(framework.InheritedElement);
  dart.setMethodSignature(framework.InheritedElement, () => ({
    __proto__: dart.getMethods(framework.InheritedElement.__proto__),
    getDependencies: dart.fnType(dart.nullable(core.Object), [framework.Element]),
    setDependencies: dart.fnType(dart.void, [framework.Element, dart.nullable(core.Object)]),
    updateDependencies: dart.fnType(dart.void, [framework.Element, dart.nullable(core.Object)]),
    notifyDependent: dart.fnType(dart.void, [dart.nullable(core.Object), framework.Element]),
    notifyClients: dart.fnType(dart.void, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(framework.InheritedElement, () => ({
    __proto__: dart.getGetters(framework.InheritedElement.__proto__),
    widget: framework.InheritedWidget
  }));
  dart.setLibraryUri(framework.InheritedElement, L5);
  dart.setFieldSignature(framework.InheritedElement, () => ({
    __proto__: dart.getFields(framework.InheritedElement.__proto__),
    [_dependents]: dart.finalFieldType(core.Map$(framework.Element, dart.nullable(core.Object)))
  }));
  const _is_InheritedModelElement_default = Symbol('_is_InheritedModelElement_default');
  inherited_model.InheritedModelElement$ = dart.generic(T => {
    var InheritedModelOfT = () => (InheritedModelOfT = dart.constFn(inherited_model.InheritedModel$(T)))();
    var SetOfT = () => (SetOfT = dart.constFn(core.Set$(T)))();
    var SetNOfT = () => (SetNOfT = dart.constFn(dart.nullable(SetOfT())))();
    var _HashSetOfT = () => (_HashSetOfT = dart.constFn(collection._HashSet$(T)))();
    class InheritedModelElement extends framework.InheritedElement {
      get widget() {
        return InheritedModelOfT().as(super.widget);
      }
      updateDependencies(dependent, aspect) {
        let t38, t38$;
        if (dependent == null) dart.nullFailed(L42, 193, 35, "dependent");
        let dependencies = SetNOfT().as(this.getDependencies(dependent));
        if (dependencies != null && dart.test(dependencies[$isEmpty])) return;
        if (aspect == null) {
          this.setDependencies(dependent, new (_HashSetOfT()).new());
        } else {
          if (!T.is(aspect)) dart.assertFailed(null, L42, 201, 14, "aspect is T");
          this.setDependencies(dependent, (t38$ = (t38 = dependencies, t38 == null ? new (_HashSetOfT()).new() : t38), (() => {
            t38$.add(T.as(aspect));
            return t38$;
          })()));
        }
      }
      notifyDependent(oldWidget, dependent) {
        InheritedModelOfT().as(oldWidget);
        if (oldWidget == null) dart.nullFailed(L42, 207, 42, "oldWidget");
        if (dependent == null) dart.nullFailed(L42, 207, 61, "dependent");
        let dependencies = SetNOfT().as(this.getDependencies(dependent));
        if (dependencies == null) return;
        if (dart.test(dependencies[$isEmpty]) || dart.test(this.widget.updateShouldNotifyDependent(oldWidget, dependencies))) dependent.didChangeDependencies();
      }
    }
    (InheritedModelElement.new = function(widget) {
      if (widget == null) dart.nullFailed(L42, 187, 43, "widget");
      InheritedModelElement.__proto__.new.call(this, widget);
      ;
    }).prototype = InheritedModelElement.prototype;
    dart.addTypeTests(InheritedModelElement);
    InheritedModelElement.prototype[_is_InheritedModelElement_default] = true;
    dart.addTypeCaches(InheritedModelElement);
    dart.setGetterSignature(InheritedModelElement, () => ({
      __proto__: dart.getGetters(InheritedModelElement.__proto__),
      widget: inherited_model.InheritedModel$(T)
    }));
    dart.setLibraryUri(InheritedModelElement, L43);
    return InheritedModelElement;
  });
  inherited_model.InheritedModelElement = inherited_model.InheritedModelElement$();
  dart.addTypeTests(inherited_model.InheritedModelElement, _is_InheritedModelElement_default);
  var C369;
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  var C368;
  var C372;
  var C373;
  var C374;
  var C371;
  var C370;
  var C377;
  var C378;
  var C379;
  var C376;
  var C375;
  var C382;
  var C383;
  var C381;
  var C380;
  var C386;
  var C387;
  var C385;
  var C384;
  var child$8 = dart.privateName(visibility, "Visibility.child");
  var replacement$ = dart.privateName(visibility, "Visibility.replacement");
  var visible$ = dart.privateName(visibility, "Visibility.visible");
  var maintainState$0 = dart.privateName(visibility, "Visibility.maintainState");
  var maintainAnimation$ = dart.privateName(visibility, "Visibility.maintainAnimation");
  var maintainSize$ = dart.privateName(visibility, "Visibility.maintainSize");
  var maintainSemantics$ = dart.privateName(visibility, "Visibility.maintainSemantics");
  var maintainInteractivity$ = dart.privateName(visibility, "Visibility.maintainInteractivity");
  visibility.Visibility = class Visibility extends framework.StatelessWidget {
    get child() {
      return this[child$8];
    }
    set child(value) {
      super.child = value;
    }
    get replacement() {
      return this[replacement$];
    }
    set replacement(value) {
      super.replacement = value;
    }
    get visible() {
      return this[visible$];
    }
    set visible(value) {
      super.visible = value;
    }
    get maintainState() {
      return this[maintainState$0];
    }
    set maintainState(value) {
      super.maintainState = value;
    }
    get maintainAnimation() {
      return this[maintainAnimation$];
    }
    set maintainAnimation(value) {
      super.maintainAnimation = value;
    }
    get maintainSize() {
      return this[maintainSize$];
    }
    set maintainSize(value) {
      super.maintainSize = value;
    }
    get maintainSemantics() {
      return this[maintainSemantics$];
    }
    set maintainSemantics(value) {
      super.maintainSemantics = value;
    }
    get maintainInteractivity() {
      return this[maintainInteractivity$];
    }
    set maintainInteractivity(value) {
      super.maintainInteractivity = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(L44, 216, 29, "context");
      if (dart.test(this.maintainSize)) {
        let result = this.child;
        if (!dart.test(this.maintainInteractivity)) {
          result = new basic.IgnorePointer.new({child: this.child, ignoring: !dart.test(this.visible), ignoringSemantics: !dart.test(this.visible) && !dart.test(this.maintainSemantics), $creationLocationd_0dea112b090073317d4: C370 || CT.C370});
        }
        return new basic.Opacity.new({opacity: dart.test(this.visible) ? 1.0 : 0.0, alwaysIncludeSemantics: this.maintainSemantics, child: result, $creationLocationd_0dea112b090073317d4: C375 || CT.C375});
      }
      if (!!dart.test(this.maintainInteractivity)) dart.assertFailed(null, L44, 232, 12, "!maintainInteractivity");
      if (!!dart.test(this.maintainSemantics)) dart.assertFailed(null, L44, 233, 12, "!maintainSemantics");
      if (!!dart.test(this.maintainSize)) dart.assertFailed(null, L44, 234, 12, "!maintainSize");
      if (dart.test(this.maintainState)) {
        let result = this.child;
        if (!dart.test(this.maintainAnimation)) result = new ticker_provider.TickerMode.new({child: this.child, enabled: this.visible, $creationLocationd_0dea112b090073317d4: C380 || CT.C380});
        return new basic.Offstage.new({child: result, offstage: !dart.test(this.visible), $creationLocationd_0dea112b090073317d4: C384 || CT.C384});
      }
      if (!!dart.test(this.maintainAnimation)) dart.assertFailed(null, L44, 244, 12, "!maintainAnimation");
      if (!!dart.test(this.maintainState)) dart.assertFailed(null, L44, 245, 12, "!maintainState");
      return dart.test(this.visible) ? this.child : this.replacement;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L44, 250, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.FlagProperty.new("visible", {value: this.visible, ifFalse: "hidden", ifTrue: "visible"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainState", {value: this.maintainState, ifFalse: "maintainState"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainAnimation", {value: this.maintainAnimation, ifFalse: "maintainAnimation"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainSize", {value: this.maintainSize, ifFalse: "maintainSize"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainSemantics", {value: this.maintainSemantics, ifFalse: "maintainSemantics"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainInteractivity", {value: this.maintainInteractivity, ifFalse: "maintainInteractivity"}));
    }
  };
  (visibility.Visibility.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L44, 57, 19, "child");
    let replacement = opts && 'replacement' in opts ? opts.replacement : C368 || CT.C368;
    if (replacement == null) dart.nullFailed(L44, 58, 10, "replacement");
    let visible = opts && 'visible' in opts ? opts.visible : true;
    if (visible == null) dart.nullFailed(L44, 59, 10, "visible");
    let maintainState = opts && 'maintainState' in opts ? opts.maintainState : false;
    if (maintainState == null) dart.nullFailed(L44, 60, 10, "maintainState");
    let maintainAnimation = opts && 'maintainAnimation' in opts ? opts.maintainAnimation : false;
    if (maintainAnimation == null) dart.nullFailed(L44, 61, 10, "maintainAnimation");
    let maintainSize = opts && 'maintainSize' in opts ? opts.maintainSize : false;
    if (maintainSize == null) dart.nullFailed(L44, 62, 10, "maintainSize");
    let maintainSemantics = opts && 'maintainSemantics' in opts ? opts.maintainSemantics : false;
    if (maintainSemantics == null) dart.nullFailed(L44, 63, 10, "maintainSemantics");
    let maintainInteractivity = opts && 'maintainInteractivity' in opts ? opts.maintainInteractivity : false;
    if (maintainInteractivity == null) dart.nullFailed(L44, 64, 10, "maintainInteractivity");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$8] = child;
    this[replacement$] = replacement;
    this[visible$] = visible;
    this[maintainState$0] = maintainState;
    this[maintainAnimation$] = maintainAnimation;
    this[maintainSize$] = maintainSize;
    this[maintainSemantics$] = maintainSemantics;
    this[maintainInteractivity$] = maintainInteractivity;
    if (!(child != null)) dart.assertFailed(null, L44, 65, 15, "child != null");
    if (!(replacement != null)) dart.assertFailed(null, L44, 66, 15, "replacement != null");
    if (!(visible != null)) dart.assertFailed(null, L44, 67, 15, "visible != null");
    if (!(maintainState != null)) dart.assertFailed(null, L44, 68, 15, "maintainState != null");
    if (!(maintainAnimation != null)) dart.assertFailed(null, L44, 69, 15, "maintainAnimation != null");
    if (!(maintainSize != null)) dart.assertFailed(null, L44, 70, 15, "maintainSize != null");
    if (!(dart.equals(maintainState, true) || dart.equals(maintainAnimation, false))) dart.assertFailed("Cannot maintain animations if the state is not also maintained.", L44, 72, 10, "maintainState == true || maintainAnimation == false");
    if (!(dart.equals(maintainAnimation, true) || dart.equals(maintainSize, false))) dart.assertFailed("Cannot maintain size if animations are not maintained.", L44, 76, 10, "maintainAnimation == true || maintainSize == false");
    if (!(dart.equals(maintainSize, true) || dart.equals(maintainSemantics, false))) dart.assertFailed("Cannot maintain semantics if size is not maintained.", L44, 80, 10, "maintainSize == true || maintainSemantics == false");
    if (!(dart.equals(maintainSize, true) || dart.equals(maintainInteractivity, false))) dart.assertFailed("Cannot maintain interactivity if size is not maintained.", L44, 84, 10, "maintainSize == true || maintainInteractivity == false");
    visibility.Visibility.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = visibility.Visibility.prototype;
  dart.addTypeTests(visibility.Visibility);
  dart.addTypeCaches(visibility.Visibility);
  dart.setMethodSignature(visibility.Visibility, () => ({
    __proto__: dart.getMethods(visibility.Visibility.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(visibility.Visibility, L45);
  dart.setFieldSignature(visibility.Visibility, () => ({
    __proto__: dart.getFields(visibility.Visibility.__proto__),
    child: dart.finalFieldType(framework.Widget),
    replacement: dart.finalFieldType(framework.Widget),
    visible: dart.finalFieldType(core.bool),
    maintainState: dart.finalFieldType(core.bool),
    maintainAnimation: dart.finalFieldType(core.bool),
    maintainSize: dart.finalFieldType(core.bool),
    maintainSemantics: dart.finalFieldType(core.bool),
    maintainInteractivity: dart.finalFieldType(core.bool)
  }));
  var C389;
  var C388;
  var C392;
  var C393;
  var C394;
  var C391;
  var C390;
  var C397;
  var C398;
  var C399;
  var C396;
  var C395;
  var C402;
  var C403;
  var C401;
  var C400;
  var C406;
  var C407;
  var C405;
  var C404;
  var sliver$0 = dart.privateName(visibility, "SliverVisibility.sliver");
  var replacementSliver$ = dart.privateName(visibility, "SliverVisibility.replacementSliver");
  var visible$0 = dart.privateName(visibility, "SliverVisibility.visible");
  var maintainState$1 = dart.privateName(visibility, "SliverVisibility.maintainState");
  var maintainAnimation$0 = dart.privateName(visibility, "SliverVisibility.maintainAnimation");
  var maintainSize$0 = dart.privateName(visibility, "SliverVisibility.maintainSize");
  var maintainSemantics$0 = dart.privateName(visibility, "SliverVisibility.maintainSemantics");
  var maintainInteractivity$0 = dart.privateName(visibility, "SliverVisibility.maintainInteractivity");
  visibility.SliverVisibility = class SliverVisibility extends framework.StatelessWidget {
    get sliver() {
      return this[sliver$0];
    }
    set sliver(value) {
      super.sliver = value;
    }
    get replacementSliver() {
      return this[replacementSliver$];
    }
    set replacementSliver(value) {
      super.replacementSliver = value;
    }
    get visible() {
      return this[visible$0];
    }
    set visible(value) {
      super.visible = value;
    }
    get maintainState() {
      return this[maintainState$1];
    }
    set maintainState(value) {
      super.maintainState = value;
    }
    get maintainAnimation() {
      return this[maintainAnimation$0];
    }
    set maintainAnimation(value) {
      super.maintainAnimation = value;
    }
    get maintainSize() {
      return this[maintainSize$0];
    }
    set maintainSize(value) {
      super.maintainSize = value;
    }
    get maintainSemantics() {
      return this[maintainSemantics$0];
    }
    set maintainSemantics(value) {
      super.maintainSemantics = value;
    }
    get maintainInteractivity() {
      return this[maintainInteractivity$0];
    }
    set maintainInteractivity(value) {
      super.maintainInteractivity = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(L44, 454, 29, "context");
      if (dart.test(this.maintainSize)) {
        let result = this.sliver;
        if (!dart.test(this.maintainInteractivity)) {
          result = new sliver$.SliverIgnorePointer.new({sliver: this.sliver, ignoring: !dart.test(this.visible), ignoringSemantics: !dart.test(this.visible) && !dart.test(this.maintainSemantics), $creationLocationd_0dea112b090073317d4: C390 || CT.C390});
        }
        return new sliver$.SliverOpacity.new({opacity: dart.test(this.visible) ? 1.0 : 0.0, alwaysIncludeSemantics: this.maintainSemantics, sliver: result, $creationLocationd_0dea112b090073317d4: C395 || CT.C395});
      }
      if (!!dart.test(this.maintainInteractivity)) dart.assertFailed(null, L44, 470, 12, "!maintainInteractivity");
      if (!!dart.test(this.maintainSemantics)) dart.assertFailed(null, L44, 471, 12, "!maintainSemantics");
      if (!!dart.test(this.maintainSize)) dart.assertFailed(null, L44, 472, 12, "!maintainSize");
      if (dart.test(this.maintainState)) {
        let result = this.sliver;
        if (!dart.test(this.maintainAnimation)) result = new ticker_provider.TickerMode.new({child: this.sliver, enabled: this.visible, $creationLocationd_0dea112b090073317d4: C400 || CT.C400});
        return new sliver$.SliverOffstage.new({sliver: result, offstage: !dart.test(this.visible), $creationLocationd_0dea112b090073317d4: C404 || CT.C404});
      }
      if (!!dart.test(this.maintainAnimation)) dart.assertFailed(null, L44, 482, 12, "!maintainAnimation");
      if (!!dart.test(this.maintainState)) dart.assertFailed(null, L44, 483, 12, "!maintainState");
      return dart.test(this.visible) ? this.sliver : this.replacementSliver;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L44, 488, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.FlagProperty.new("visible", {value: this.visible, ifFalse: "hidden", ifTrue: "visible"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainState", {value: this.maintainState, ifFalse: "maintainState"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainAnimation", {value: this.maintainAnimation, ifFalse: "maintainAnimation"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainSize", {value: this.maintainSize, ifFalse: "maintainSize"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainSemantics", {value: this.maintainSemantics, ifFalse: "maintainSemantics"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainInteractivity", {value: this.maintainInteractivity, ifFalse: "maintainInteractivity"}));
    }
  };
  (visibility.SliverVisibility.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    if (sliver == null) dart.nullFailed(L44, 302, 19, "sliver");
    let replacementSliver = opts && 'replacementSliver' in opts ? opts.replacementSliver : C388 || CT.C388;
    if (replacementSliver == null) dart.nullFailed(L44, 303, 10, "replacementSliver");
    let visible = opts && 'visible' in opts ? opts.visible : true;
    if (visible == null) dart.nullFailed(L44, 304, 10, "visible");
    let maintainState = opts && 'maintainState' in opts ? opts.maintainState : false;
    if (maintainState == null) dart.nullFailed(L44, 305, 10, "maintainState");
    let maintainAnimation = opts && 'maintainAnimation' in opts ? opts.maintainAnimation : false;
    if (maintainAnimation == null) dart.nullFailed(L44, 306, 10, "maintainAnimation");
    let maintainSize = opts && 'maintainSize' in opts ? opts.maintainSize : false;
    if (maintainSize == null) dart.nullFailed(L44, 307, 10, "maintainSize");
    let maintainSemantics = opts && 'maintainSemantics' in opts ? opts.maintainSemantics : false;
    if (maintainSemantics == null) dart.nullFailed(L44, 308, 10, "maintainSemantics");
    let maintainInteractivity = opts && 'maintainInteractivity' in opts ? opts.maintainInteractivity : false;
    if (maintainInteractivity == null) dart.nullFailed(L44, 309, 10, "maintainInteractivity");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[sliver$0] = sliver;
    this[replacementSliver$] = replacementSliver;
    this[visible$0] = visible;
    this[maintainState$1] = maintainState;
    this[maintainAnimation$0] = maintainAnimation;
    this[maintainSize$0] = maintainSize;
    this[maintainSemantics$0] = maintainSemantics;
    this[maintainInteractivity$0] = maintainInteractivity;
    if (!(sliver != null)) dart.assertFailed(null, L44, 310, 15, "sliver != null");
    if (!(replacementSliver != null)) dart.assertFailed(null, L44, 311, 15, "replacementSliver != null");
    if (!(visible != null)) dart.assertFailed(null, L44, 312, 15, "visible != null");
    if (!(maintainState != null)) dart.assertFailed(null, L44, 313, 15, "maintainState != null");
    if (!(maintainAnimation != null)) dart.assertFailed(null, L44, 314, 15, "maintainAnimation != null");
    if (!(maintainSize != null)) dart.assertFailed(null, L44, 315, 15, "maintainSize != null");
    if (!(maintainSemantics != null)) dart.assertFailed(null, L44, 316, 15, "maintainSemantics != null");
    if (!(maintainInteractivity != null)) dart.assertFailed(null, L44, 317, 15, "maintainInteractivity != null");
    if (!(dart.equals(maintainState, true) || dart.equals(maintainAnimation, false))) dart.assertFailed("Cannot maintain animations if the state is not also maintained.", L44, 319, 10, "maintainState == true || maintainAnimation == false");
    if (!(dart.equals(maintainAnimation, true) || dart.equals(maintainSize, false))) dart.assertFailed("Cannot maintain size if animations are not maintained.", L44, 323, 10, "maintainAnimation == true || maintainSize == false");
    if (!(dart.equals(maintainSize, true) || dart.equals(maintainSemantics, false))) dart.assertFailed("Cannot maintain semantics if size is not maintained.", L44, 327, 10, "maintainSize == true || maintainSemantics == false");
    if (!(dart.equals(maintainSize, true) || dart.equals(maintainInteractivity, false))) dart.assertFailed("Cannot maintain interactivity if size is not maintained.", L44, 331, 10, "maintainSize == true || maintainInteractivity == false");
    visibility.SliverVisibility.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = visibility.SliverVisibility.prototype;
  dart.addTypeTests(visibility.SliverVisibility);
  dart.addTypeCaches(visibility.SliverVisibility);
  dart.setMethodSignature(visibility.SliverVisibility, () => ({
    __proto__: dart.getMethods(visibility.SliverVisibility.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(visibility.SliverVisibility, L45);
  dart.setFieldSignature(visibility.SliverVisibility, () => ({
    __proto__: dart.getFields(visibility.SliverVisibility.__proto__),
    sliver: dart.finalFieldType(framework.Widget),
    replacementSliver: dart.finalFieldType(framework.Widget),
    visible: dart.finalFieldType(core.bool),
    maintainState: dart.finalFieldType(core.bool),
    maintainAnimation: dart.finalFieldType(core.bool),
    maintainSize: dart.finalFieldType(core.bool),
    maintainSemantics: dart.finalFieldType(core.bool),
    maintainInteractivity: dart.finalFieldType(core.bool)
  }));
  var _handleChange = dart.privateName(transitions, "_handleChange");
  transitions._AnimatedState = class _AnimatedState extends framework.State$(transitions.AnimatedWidget) {
    initState() {
      super.initState();
      this.widget.listenable.addListener(dart.bind(this, _handleChange));
    }
    didUpdateWidget(oldWidget) {
      transitions.AnimatedWidget.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L23, 158, 39, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.listenable, oldWidget.listenable)) {
        oldWidget.listenable.removeListener(dart.bind(this, _handleChange));
        this.widget.listenable.addListener(dart.bind(this, _handleChange));
      }
    }
    dispose() {
      this.widget.listenable.removeListener(dart.bind(this, _handleChange));
      super.dispose();
    }
    [_handleChange]() {
      this.setState(dart.fn(() => {
      }, VoidTovoid()));
    }
    build(context) {
      if (context == null) dart.nullFailed(L23, 179, 29, "context");
      return this.widget.build(context);
    }
  };
  (transitions._AnimatedState.new = function() {
    transitions._AnimatedState.__proto__.new.call(this);
    ;
  }).prototype = transitions._AnimatedState.prototype;
  dart.addTypeTests(transitions._AnimatedState);
  dart.addTypeCaches(transitions._AnimatedState);
  dart.setMethodSignature(transitions._AnimatedState, () => ({
    __proto__: dart.getMethods(transitions._AnimatedState.__proto__),
    [_handleChange]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(transitions._AnimatedState, L24);
  var C410;
  var C411;
  var C412;
  var C409;
  var C408;
  var textDirection$1 = dart.privateName(transitions, "SlideTransition.textDirection");
  var transformHitTests$ = dart.privateName(transitions, "SlideTransition.transformHitTests");
  var child$9 = dart.privateName(transitions, "SlideTransition.child");
  transitions.SlideTransition = class SlideTransition extends transitions.AnimatedWidget {
    get textDirection() {
      return this[textDirection$1];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get transformHitTests() {
      return this[transformHitTests$];
    }
    set transformHitTests(value) {
      super.transformHitTests = value;
    }
    get child() {
      return this[child$9];
    }
    set child(value) {
      super.child = value;
    }
    get position() {
      return AnimationOfOffset().as(this.listenable);
    }
    build(context) {
      if (context == null) dart.nullFailed(L23, 298, 29, "context");
      let offset = this.position.value;
      if (dart.equals(this.textDirection, ui.TextDirection.rtl)) offset = new ui.Offset.new(-dart.notNull(offset.dx), offset.dy);
      return new basic.FractionalTranslation.new({translation: offset, transformHitTests: this.transformHitTests, child: this.child, $creationLocationd_0dea112b090073317d4: C408 || CT.C408});
    }
  };
  (transitions.SlideTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let position = opts && 'position' in opts ? opts.position : null;
    if (position == null) dart.nullFailed(L23, 257, 32, "position");
    let transformHitTests = opts && 'transformHitTests' in opts ? opts.transformHitTests : true;
    if (transformHitTests == null) dart.nullFailed(L23, 258, 10, "transformHitTests");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[transformHitTests$] = transformHitTests;
    this[textDirection$1] = textDirection;
    this[child$9] = child;
    if (!(position != null)) dart.assertFailed(null, L23, 261, 15, "position != null");
    transitions.SlideTransition.__proto__.new.call(this, {key: key, listenable: position, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.SlideTransition.prototype;
  dart.addTypeTests(transitions.SlideTransition);
  dart.addTypeCaches(transitions.SlideTransition);
  dart.setMethodSignature(transitions.SlideTransition, () => ({
    __proto__: dart.getMethods(transitions.SlideTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(transitions.SlideTransition, () => ({
    __proto__: dart.getGetters(transitions.SlideTransition.__proto__),
    position: animation.Animation$(ui.Offset)
  }));
  dart.setLibraryUri(transitions.SlideTransition, L24);
  dart.setFieldSignature(transitions.SlideTransition, () => ({
    __proto__: dart.getFields(transitions.SlideTransition.__proto__),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    transformHitTests: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  var Alignment_y = dart.privateName(alignment$, "Alignment.y");
  var Alignment_x = dart.privateName(alignment$, "Alignment.x");
  var C413;
  var C416;
  var C417;
  var C418;
  var C415;
  var C414;
  var alignment$0 = dart.privateName(transitions, "ScaleTransition.alignment");
  var child$10 = dart.privateName(transitions, "ScaleTransition.child");
  transitions.ScaleTransition = class ScaleTransition extends transitions.AnimatedWidget {
    get alignment() {
      return this[alignment$0];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get child() {
      return this[child$10];
    }
    set child(value) {
      super.child = value;
    }
    get scale() {
      return AnimationOfdouble().as(this.listenable);
    }
    build(context) {
      let t40;
      if (context == null) dart.nullFailed(L23, 401, 29, "context");
      let scaleValue = this.scale.value;
      let transform = (t40 = vector_math_64.Matrix4.identity(), (() => {
        t40.scale(scaleValue, scaleValue, 1.0);
        return t40;
      })());
      return new basic.Transform.new({transform: transform, alignment: this.alignment, child: this.child, $creationLocationd_0dea112b090073317d4: C414 || CT.C414});
    }
  };
  (transitions.ScaleTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let scale = opts && 'scale' in opts ? opts.scale : null;
    if (scale == null) dart.nullFailed(L23, 376, 32, "scale");
    let alignment = opts && 'alignment' in opts ? opts.alignment : C413 || CT.C413;
    if (alignment == null) dart.nullFailed(L23, 377, 10, "alignment");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$0] = alignment;
    this[child$10] = child;
    if (!(scale != null)) dart.assertFailed(null, L23, 379, 15, "scale != null");
    transitions.ScaleTransition.__proto__.new.call(this, {key: key, listenable: scale, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.ScaleTransition.prototype;
  dart.addTypeTests(transitions.ScaleTransition);
  dart.addTypeCaches(transitions.ScaleTransition);
  dart.setMethodSignature(transitions.ScaleTransition, () => ({
    __proto__: dart.getMethods(transitions.ScaleTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(transitions.ScaleTransition, () => ({
    __proto__: dart.getGetters(transitions.ScaleTransition.__proto__),
    scale: animation.Animation$(core.double)
  }));
  dart.setLibraryUri(transitions.ScaleTransition, L24);
  dart.setFieldSignature(transitions.ScaleTransition, () => ({
    __proto__: dart.getFields(transitions.ScaleTransition.__proto__),
    alignment: dart.finalFieldType(alignment$.Alignment),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  var C421;
  var C422;
  var C423;
  var C420;
  var C419;
  var alignment$1 = dart.privateName(transitions, "RotationTransition.alignment");
  var child$11 = dart.privateName(transitions, "RotationTransition.child");
  transitions.RotationTransition = class RotationTransition extends transitions.AnimatedWidget {
    get alignment() {
      return this[alignment$1];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get child() {
      return this[child$11];
    }
    set child(value) {
      super.child = value;
    }
    get turns() {
      return AnimationOfdouble().as(this.listenable);
    }
    build(context) {
      if (context == null) dart.nullFailed(L23, 501, 29, "context");
      let turnsValue = this.turns.value;
      let transform = vector_math_64.Matrix4.rotationZ(dart.notNull(turnsValue) * 3.141592653589793 * 2.0);
      return new basic.Transform.new({transform: transform, alignment: this.alignment, child: this.child, $creationLocationd_0dea112b090073317d4: C419 || CT.C419});
    }
  };
  (transitions.RotationTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let turns = opts && 'turns' in opts ? opts.turns : null;
    if (turns == null) dart.nullFailed(L23, 476, 32, "turns");
    let alignment = opts && 'alignment' in opts ? opts.alignment : C413 || CT.C413;
    if (alignment == null) dart.nullFailed(L23, 477, 10, "alignment");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$1] = alignment;
    this[child$11] = child;
    if (!(turns != null)) dart.assertFailed(null, L23, 479, 15, "turns != null");
    transitions.RotationTransition.__proto__.new.call(this, {key: key, listenable: turns, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.RotationTransition.prototype;
  dart.addTypeTests(transitions.RotationTransition);
  dart.addTypeCaches(transitions.RotationTransition);
  dart.setMethodSignature(transitions.RotationTransition, () => ({
    __proto__: dart.getMethods(transitions.RotationTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(transitions.RotationTransition, () => ({
    __proto__: dart.getGetters(transitions.RotationTransition.__proto__),
    turns: animation.Animation$(core.double)
  }));
  dart.setLibraryUri(transitions.RotationTransition, L24);
  dart.setFieldSignature(transitions.RotationTransition, () => ({
    __proto__: dart.getFields(transitions.RotationTransition.__proto__),
    alignment: dart.finalFieldType(alignment$.Alignment),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  var _name$6 = dart.privateName(basic_types, "_name");
  var C424;
  var C427;
  var C428;
  var C429;
  var C430;
  var C426;
  var C425;
  var C433;
  var C432;
  var C431;
  var axis$ = dart.privateName(transitions, "SizeTransition.axis");
  var axisAlignment$ = dart.privateName(transitions, "SizeTransition.axisAlignment");
  var child$12 = dart.privateName(transitions, "SizeTransition.child");
  transitions.SizeTransition = class SizeTransition extends transitions.AnimatedWidget {
    get axis() {
      return this[axis$];
    }
    set axis(value) {
      super.axis = value;
    }
    get axisAlignment() {
      return this[axisAlignment$];
    }
    set axisAlignment(value) {
      super.axisAlignment = value;
    }
    get child() {
      return this[child$12];
    }
    set child(value) {
      super.child = value;
    }
    get sizeFactor() {
      return AnimationOfdouble().as(this.listenable);
    }
    build(context) {
      if (context == null) dart.nullFailed(L23, 634, 29, "context");
      let alignment = null;
      if (dart.equals(this.axis, basic_types.Axis.vertical))
        alignment = new alignment$.AlignmentDirectional.new(-1.0, this.axisAlignment);
      else
        alignment = new alignment$.AlignmentDirectional.new(this.axisAlignment, -1.0);
      return new basic.ClipRect.new({child: new basic.Align.new({alignment: alignment, heightFactor: dart.equals(this.axis, basic_types.Axis.vertical) ? math.max(core.double, this.sizeFactor.value, 0.0) : null, widthFactor: dart.equals(this.axis, basic_types.Axis.horizontal) ? math.max(core.double, this.sizeFactor.value, 0.0) : null, child: this.child, $creationLocationd_0dea112b090073317d4: C425 || CT.C425}), $creationLocationd_0dea112b090073317d4: C431 || CT.C431});
    }
  };
  (transitions.SizeTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let axis = opts && 'axis' in opts ? opts.axis : C424 || CT.C424;
    if (axis == null) dart.nullFailed(L23, 592, 10, "axis");
    let sizeFactor = opts && 'sizeFactor' in opts ? opts.sizeFactor : null;
    if (sizeFactor == null) dart.nullFailed(L23, 593, 32, "sizeFactor");
    let axisAlignment = opts && 'axisAlignment' in opts ? opts.axisAlignment : 0;
    if (axisAlignment == null) dart.nullFailed(L23, 594, 10, "axisAlignment");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[axis$] = axis;
    this[axisAlignment$] = axisAlignment;
    this[child$12] = child;
    if (!(axis != null)) dart.assertFailed(null, L23, 596, 15, "axis != null");
    if (!(sizeFactor != null)) dart.assertFailed(null, L23, 597, 15, "sizeFactor != null");
    if (!(axisAlignment != null)) dart.assertFailed(null, L23, 598, 15, "axisAlignment != null");
    transitions.SizeTransition.__proto__.new.call(this, {key: key, listenable: sizeFactor, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.SizeTransition.prototype;
  dart.addTypeTests(transitions.SizeTransition);
  dart.addTypeCaches(transitions.SizeTransition);
  dart.setMethodSignature(transitions.SizeTransition, () => ({
    __proto__: dart.getMethods(transitions.SizeTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(transitions.SizeTransition, () => ({
    __proto__: dart.getGetters(transitions.SizeTransition.__proto__),
    sizeFactor: animation.Animation$(core.double)
  }));
  dart.setLibraryUri(transitions.SizeTransition, L24);
  dart.setFieldSignature(transitions.SizeTransition, () => ({
    __proto__: dart.getFields(transitions.SizeTransition.__proto__),
    axis: dart.finalFieldType(basic_types.Axis),
    axisAlignment: dart.finalFieldType(core.double),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  framework.SingleChildRenderObjectWidget = class SingleChildRenderObjectWidget extends framework.RenderObjectWidget {
    get child() {
      return this[child$13];
    }
    set child(value) {
      super.child = value;
    }
    createElement() {
      return new framework.SingleChildRenderObjectElement.new(this);
    }
  };
  (framework.SingleChildRenderObjectWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$13] = child;
    framework.SingleChildRenderObjectWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.SingleChildRenderObjectWidget.prototype;
  dart.addTypeTests(framework.SingleChildRenderObjectWidget);
  dart.addTypeCaches(framework.SingleChildRenderObjectWidget);
  const child$13 = SingleChildRenderObjectWidget_child;
  dart.setMethodSignature(framework.SingleChildRenderObjectWidget, () => ({
    __proto__: dart.getMethods(framework.SingleChildRenderObjectWidget.__proto__),
    createElement: dart.fnType(framework.SingleChildRenderObjectElement, [])
  }));
  dart.setLibraryUri(framework.SingleChildRenderObjectWidget, L5);
  dart.setFieldSignature(framework.SingleChildRenderObjectWidget, () => ({
    __proto__: dart.getFields(framework.SingleChildRenderObjectWidget.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  var opacity$ = dart.privateName(transitions, "FadeTransition.opacity");
  var alwaysIncludeSemantics$ = dart.privateName(transitions, "FadeTransition.alwaysIncludeSemantics");
  transitions.FadeTransition = class FadeTransition extends framework.SingleChildRenderObjectWidget {
    get opacity() {
      return this[opacity$];
    }
    set opacity(value) {
      super.opacity = value;
    }
    get alwaysIncludeSemantics() {
      return this[alwaysIncludeSemantics$];
    }
    set alwaysIncludeSemantics(value) {
      super.alwaysIncludeSemantics = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L23, 741, 57, "context");
      return new proxy_box.RenderAnimatedOpacity.new({opacity: this.opacity, alwaysIncludeSemantics: this.alwaysIncludeSemantics});
    }
    updateRenderObject(context, renderObject) {
      let t40;
      if (context == null) dart.nullFailed(L23, 749, 40, "context");
      proxy_box.RenderAnimatedOpacity.as(renderObject);
      if (renderObject == null) dart.nullFailed(L23, 749, 71, "renderObject");
      t40 = renderObject;
      (() => {
        t40.opacity = this.opacity;
        t40.alwaysIncludeSemantics = this.alwaysIncludeSemantics;
        return t40;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L23, 756, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAnimationOfdouble()).new("opacity", this.opacity));
      properties.add(new diagnostics$.FlagProperty.new("alwaysIncludeSemantics", {value: this.alwaysIncludeSemantics, ifTrue: "alwaysIncludeSemantics"}));
    }
  };
  (transitions.FadeTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let opacity = opts && 'opacity' in opts ? opts.opacity : null;
    if (opacity == null) dart.nullFailed(L23, 716, 19, "opacity");
    let alwaysIncludeSemantics = opts && 'alwaysIncludeSemantics' in opts ? opts.alwaysIncludeSemantics : false;
    if (alwaysIncludeSemantics == null) dart.nullFailed(L23, 717, 10, "alwaysIncludeSemantics");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[opacity$] = opacity;
    this[alwaysIncludeSemantics$] = alwaysIncludeSemantics;
    if (!(opacity != null)) dart.assertFailed(null, L23, 719, 15, "opacity != null");
    transitions.FadeTransition.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.FadeTransition.prototype;
  dart.addTypeTests(transitions.FadeTransition);
  dart.addTypeCaches(transitions.FadeTransition);
  dart.setMethodSignature(transitions.FadeTransition, () => ({
    __proto__: dart.getMethods(transitions.FadeTransition.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderAnimatedOpacity, [framework.BuildContext])
  }));
  dart.setLibraryUri(transitions.FadeTransition, L24);
  dart.setFieldSignature(transitions.FadeTransition, () => ({
    __proto__: dart.getFields(transitions.FadeTransition.__proto__),
    opacity: dart.finalFieldType(animation.Animation$(core.double)),
    alwaysIncludeSemantics: dart.finalFieldType(core.bool)
  }));
  var opacity$0 = dart.privateName(transitions, "SliverFadeTransition.opacity");
  var alwaysIncludeSemantics$0 = dart.privateName(transitions, "SliverFadeTransition.alwaysIncludeSemantics");
  transitions.SliverFadeTransition = class SliverFadeTransition extends framework.SingleChildRenderObjectWidget {
    get opacity() {
      return this[opacity$0];
    }
    set opacity(value) {
      super.opacity = value;
    }
    get alwaysIncludeSemantics() {
      return this[alwaysIncludeSemantics$0];
    }
    set alwaysIncludeSemantics(value) {
      super.alwaysIncludeSemantics = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L23, 856, 63, "context");
      return new proxy_sliver.RenderSliverAnimatedOpacity.new({opacity: this.opacity, alwaysIncludeSemantics: this.alwaysIncludeSemantics});
    }
    updateRenderObject(context, renderObject) {
      let t40;
      if (context == null) dart.nullFailed(L23, 864, 40, "context");
      proxy_sliver.RenderSliverAnimatedOpacity.as(renderObject);
      if (renderObject == null) dart.nullFailed(L23, 864, 77, "renderObject");
      t40 = renderObject;
      (() => {
        t40.opacity = this.opacity;
        t40.alwaysIncludeSemantics = this.alwaysIncludeSemantics;
        return t40;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L23, 871, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAnimationOfdouble()).new("opacity", this.opacity));
      properties.add(new diagnostics$.FlagProperty.new("alwaysIncludeSemantics", {value: this.alwaysIncludeSemantics, ifTrue: "alwaysIncludeSemantics"}));
    }
  };
  (transitions.SliverFadeTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let opacity = opts && 'opacity' in opts ? opts.opacity : null;
    if (opacity == null) dart.nullFailed(L23, 831, 19, "opacity");
    let alwaysIncludeSemantics = opts && 'alwaysIncludeSemantics' in opts ? opts.alwaysIncludeSemantics : false;
    if (alwaysIncludeSemantics == null) dart.nullFailed(L23, 832, 10, "alwaysIncludeSemantics");
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[opacity$0] = opacity;
    this[alwaysIncludeSemantics$0] = alwaysIncludeSemantics;
    if (!(opacity != null)) dart.assertFailed(null, L23, 834, 15, "opacity != null");
    transitions.SliverFadeTransition.__proto__.new.call(this, {key: key, child: sliver, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.SliverFadeTransition.prototype;
  dart.addTypeTests(transitions.SliverFadeTransition);
  dart.addTypeCaches(transitions.SliverFadeTransition);
  dart.setMethodSignature(transitions.SliverFadeTransition, () => ({
    __proto__: dart.getMethods(transitions.SliverFadeTransition.__proto__),
    createRenderObject: dart.fnType(proxy_sliver.RenderSliverAnimatedOpacity, [framework.BuildContext])
  }));
  dart.setLibraryUri(transitions.SliverFadeTransition, L24);
  dart.setFieldSignature(transitions.SliverFadeTransition, () => ({
    __proto__: dart.getFields(transitions.SliverFadeTransition.__proto__),
    opacity: dart.finalFieldType(animation.Animation$(core.double)),
    alwaysIncludeSemantics: dart.finalFieldType(core.bool)
  }));
  transitions.RelativeRectTween = class RelativeRectTween extends tween.Tween$(stack.RelativeRect) {
    lerp(t) {
      if (t == null) dart.nullFailed(L23, 894, 28, "t");
      return dart.nullCheck(stack.RelativeRect.lerp(this.begin, this.end, t));
    }
  };
  (transitions.RelativeRectTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    transitions.RelativeRectTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = transitions.RelativeRectTween.prototype;
  dart.addTypeTests(transitions.RelativeRectTween);
  dart.addTypeCaches(transitions.RelativeRectTween);
  dart.setLibraryUri(transitions.RelativeRectTween, L24);
  var C436;
  var C437;
  var C435;
  var C434;
  var child$14 = dart.privateName(transitions, "PositionedTransition.child");
  transitions.PositionedTransition = class PositionedTransition extends transitions.AnimatedWidget {
    get child() {
      return this[child$14];
    }
    set child(value) {
      super.child = value;
    }
    get rect() {
      return AnimationOfRelativeRect().as(this.listenable);
    }
    build(context) {
      if (context == null) dart.nullFailed(L23, 995, 29, "context");
      return new basic.Positioned.fromRelativeRect({rect: this.rect.value, child: this.child, $creationLocationd_0dea112b090073317d4: C434 || CT.C434});
    }
  };
  (transitions.PositionedTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let rect = opts && 'rect' in opts ? opts.rect : null;
    if (rect == null) dart.nullFailed(L23, 981, 38, "rect");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L23, 982, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$14] = child;
    if (!(rect != null)) dart.assertFailed(null, L23, 983, 15, "rect != null");
    transitions.PositionedTransition.__proto__.new.call(this, {key: key, listenable: rect, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.PositionedTransition.prototype;
  dart.addTypeTests(transitions.PositionedTransition);
  dart.addTypeCaches(transitions.PositionedTransition);
  dart.setMethodSignature(transitions.PositionedTransition, () => ({
    __proto__: dart.getMethods(transitions.PositionedTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(transitions.PositionedTransition, () => ({
    __proto__: dart.getGetters(transitions.PositionedTransition.__proto__),
    rect: animation.Animation$(stack.RelativeRect)
  }));
  dart.setLibraryUri(transitions.PositionedTransition, L24);
  dart.setFieldSignature(transitions.PositionedTransition, () => ({
    __proto__: dart.getFields(transitions.PositionedTransition.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C440;
  var C441;
  var C442;
  var C443;
  var C444;
  var C439;
  var C438;
  var size$ = dart.privateName(transitions, "RelativePositionedTransition.size");
  var child$15 = dart.privateName(transitions, "RelativePositionedTransition.child");
  transitions.RelativePositionedTransition = class RelativePositionedTransition extends transitions.AnimatedWidget {
    get size() {
      return this[size$];
    }
    set size(value) {
      super.size = value;
    }
    get child() {
      return this[child$15];
    }
    set child(value) {
      super.child = value;
    }
    get rect() {
      return AnimationOfRect().as(this.listenable);
    }
    build(context) {
      if (context == null) dart.nullFailed(L23, 1114, 29, "context");
      let offsets = stack.RelativeRect.fromSize(this.rect.value, this.size);
      return new basic.Positioned.new({top: offsets.top, right: offsets.right, bottom: offsets.bottom, left: offsets.left, child: this.child, $creationLocationd_0dea112b090073317d4: C438 || CT.C438});
    }
  };
  (transitions.RelativePositionedTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let rect = opts && 'rect' in opts ? opts.rect : null;
    if (rect == null) dart.nullFailed(L23, 1088, 30, "rect");
    let size = opts && 'size' in opts ? opts.size : null;
    if (size == null) dart.nullFailed(L23, 1089, 19, "size");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L23, 1090, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[size$] = size;
    this[child$15] = child;
    if (!(rect != null)) dart.assertFailed(null, L23, 1091, 15, "rect != null");
    if (!(size != null)) dart.assertFailed(null, L23, 1092, 15, "size != null");
    if (!(child != null)) dart.assertFailed(null, L23, 1093, 15, "child != null");
    transitions.RelativePositionedTransition.__proto__.new.call(this, {key: key, listenable: rect, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.RelativePositionedTransition.prototype;
  dart.addTypeTests(transitions.RelativePositionedTransition);
  dart.addTypeCaches(transitions.RelativePositionedTransition);
  dart.setMethodSignature(transitions.RelativePositionedTransition, () => ({
    __proto__: dart.getMethods(transitions.RelativePositionedTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(transitions.RelativePositionedTransition, () => ({
    __proto__: dart.getGetters(transitions.RelativePositionedTransition.__proto__),
    rect: animation.Animation$(ui.Rect)
  }));
  dart.setLibraryUri(transitions.RelativePositionedTransition, L24);
  dart.setFieldSignature(transitions.RelativePositionedTransition, () => ({
    __proto__: dart.getFields(transitions.RelativePositionedTransition.__proto__),
    size: dart.finalFieldType(ui.Size),
    child: dart.finalFieldType(framework.Widget)
  }));
  var _name$7 = dart.privateName(proxy_box, "_name");
  var C445;
  var C448;
  var C449;
  var C450;
  var C447;
  var C446;
  var decoration$0 = dart.privateName(transitions, "DecoratedBoxTransition.decoration");
  var position$ = dart.privateName(transitions, "DecoratedBoxTransition.position");
  var child$16 = dart.privateName(transitions, "DecoratedBoxTransition.child");
  transitions.DecoratedBoxTransition = class DecoratedBoxTransition extends transitions.AnimatedWidget {
    get decoration() {
      return this[decoration$0];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get position() {
      return this[position$];
    }
    set position(value) {
      super.position = value;
    }
    get child() {
      return this[child$16];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(L23, 1239, 29, "context");
      return new container.DecoratedBox.new({decoration: this.decoration.value, position: this.position, child: this.child, $creationLocationd_0dea112b090073317d4: C446 || CT.C446});
    }
  };
  (transitions.DecoratedBoxTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    if (decoration == null) dart.nullFailed(L23, 1217, 19, "decoration");
    let position = opts && 'position' in opts ? opts.position : C445 || CT.C445;
    if (position == null) dart.nullFailed(L23, 1218, 10, "position");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L23, 1219, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[decoration$0] = decoration;
    this[position$] = position;
    this[child$16] = child;
    if (!(decoration != null)) dart.assertFailed(null, L23, 1220, 15, "decoration != null");
    if (!(child != null)) dart.assertFailed(null, L23, 1221, 15, "child != null");
    transitions.DecoratedBoxTransition.__proto__.new.call(this, {key: key, listenable: decoration, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.DecoratedBoxTransition.prototype;
  dart.addTypeTests(transitions.DecoratedBoxTransition);
  dart.addTypeCaches(transitions.DecoratedBoxTransition);
  dart.setMethodSignature(transitions.DecoratedBoxTransition, () => ({
    __proto__: dart.getMethods(transitions.DecoratedBoxTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(transitions.DecoratedBoxTransition, L24);
  dart.setFieldSignature(transitions.DecoratedBoxTransition, () => ({
    __proto__: dart.getFields(transitions.DecoratedBoxTransition.__proto__),
    decoration: dart.finalFieldType(animation.Animation$(decoration.Decoration)),
    position: dart.finalFieldType(proxy_box.DecorationPosition),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C453;
  var C454;
  var C455;
  var C456;
  var C452;
  var C451;
  var widthFactor$ = dart.privateName(transitions, "AlignTransition.widthFactor");
  var heightFactor$ = dart.privateName(transitions, "AlignTransition.heightFactor");
  var child$17 = dart.privateName(transitions, "AlignTransition.child");
  transitions.AlignTransition = class AlignTransition extends transitions.AnimatedWidget {
    get widthFactor() {
      return this[widthFactor$];
    }
    set widthFactor(value) {
      super.widthFactor = value;
    }
    get heightFactor() {
      return this[heightFactor$];
    }
    set heightFactor(value) {
      super.heightFactor = value;
    }
    get child() {
      return this[child$17];
    }
    set child(value) {
      super.child = value;
    }
    get alignment() {
      return AnimationOfAlignmentGeometry().as(this.listenable);
    }
    build(context) {
      if (context == null) dart.nullFailed(L23, 1300, 29, "context");
      return new basic.Align.new({alignment: this.alignment.value, widthFactor: this.widthFactor, heightFactor: this.heightFactor, child: this.child, $creationLocationd_0dea112b090073317d4: C451 || CT.C451});
    }
  };
  (transitions.AlignTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    if (alignment == null) dart.nullFailed(L23, 1277, 43, "alignment");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L23, 1278, 19, "child");
    let widthFactor = opts && 'widthFactor' in opts ? opts.widthFactor : null;
    let heightFactor = opts && 'heightFactor' in opts ? opts.heightFactor : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$17] = child;
    this[widthFactor$] = widthFactor;
    this[heightFactor$] = heightFactor;
    if (!(alignment != null)) dart.assertFailed(null, L23, 1281, 15, "alignment != null");
    if (!(child != null)) dart.assertFailed(null, L23, 1282, 15, "child != null");
    transitions.AlignTransition.__proto__.new.call(this, {key: key, listenable: alignment, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.AlignTransition.prototype;
  dart.addTypeTests(transitions.AlignTransition);
  dart.addTypeCaches(transitions.AlignTransition);
  dart.setMethodSignature(transitions.AlignTransition, () => ({
    __proto__: dart.getMethods(transitions.AlignTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(transitions.AlignTransition, () => ({
    __proto__: dart.getGetters(transitions.AlignTransition.__proto__),
    alignment: animation.Animation$(alignment$.AlignmentGeometry)
  }));
  dart.setLibraryUri(transitions.AlignTransition, L24);
  dart.setFieldSignature(transitions.AlignTransition, () => ({
    __proto__: dart.getFields(transitions.AlignTransition.__proto__),
    widthFactor: dart.finalFieldType(dart.nullable(core.double)),
    heightFactor: dart.finalFieldType(dart.nullable(core.double)),
    child: dart.finalFieldType(framework.Widget)
  }));
  var _name$8 = dart.privateName(paragraph, "_name");
  var C457;
  var C460;
  var C461;
  var C462;
  var C463;
  var C464;
  var C465;
  var C459;
  var C458;
  var textAlign$ = dart.privateName(transitions, "DefaultTextStyleTransition.textAlign");
  var softWrap$ = dart.privateName(transitions, "DefaultTextStyleTransition.softWrap");
  var overflow$ = dart.privateName(transitions, "DefaultTextStyleTransition.overflow");
  var maxLines$ = dart.privateName(transitions, "DefaultTextStyleTransition.maxLines");
  var child$18 = dart.privateName(transitions, "DefaultTextStyleTransition.child");
  transitions.DefaultTextStyleTransition = class DefaultTextStyleTransition extends transitions.AnimatedWidget {
    get textAlign() {
      return this[textAlign$];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get softWrap() {
      return this[softWrap$];
    }
    set softWrap(value) {
      super.softWrap = value;
    }
    get overflow() {
      return this[overflow$];
    }
    set overflow(value) {
      super.overflow = value;
    }
    get maxLines() {
      return this[maxLines$];
    }
    set maxLines(value) {
      super.maxLines = value;
    }
    get child() {
      return this[child$18];
    }
    set child(value) {
      super.child = value;
    }
    get style() {
      return AnimationOfTextStyle().as(this.listenable);
    }
    build(context) {
      if (context == null) dart.nullFailed(L23, 1405, 29, "context");
      return new text.DefaultTextStyle.new({style: this.style.value, textAlign: this.textAlign, softWrap: this.softWrap, overflow: this.overflow, maxLines: this.maxLines, child: this.child, $creationLocationd_0dea112b090073317d4: C458 || CT.C458});
    }
  };
  (transitions.DefaultTextStyleTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let style = opts && 'style' in opts ? opts.style : null;
    if (style == null) dart.nullFailed(L23, 1369, 35, "style");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L23, 1370, 19, "child");
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let softWrap = opts && 'softWrap' in opts ? opts.softWrap : true;
    if (softWrap == null) dart.nullFailed(L23, 1372, 10, "softWrap");
    let overflow = opts && 'overflow' in opts ? opts.overflow : C457 || CT.C457;
    if (overflow == null) dart.nullFailed(L23, 1373, 10, "overflow");
    let maxLines = opts && 'maxLines' in opts ? opts.maxLines : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$18] = child;
    this[textAlign$] = textAlign;
    this[softWrap$] = softWrap;
    this[overflow$] = overflow;
    this[maxLines$] = maxLines;
    if (!(style != null)) dart.assertFailed(null, L23, 1375, 15, "style != null");
    if (!(child != null)) dart.assertFailed(null, L23, 1376, 15, "child != null");
    transitions.DefaultTextStyleTransition.__proto__.new.call(this, {key: key, listenable: style, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.DefaultTextStyleTransition.prototype;
  dart.addTypeTests(transitions.DefaultTextStyleTransition);
  dart.addTypeCaches(transitions.DefaultTextStyleTransition);
  dart.setMethodSignature(transitions.DefaultTextStyleTransition, () => ({
    __proto__: dart.getMethods(transitions.DefaultTextStyleTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(transitions.DefaultTextStyleTransition, () => ({
    __proto__: dart.getGetters(transitions.DefaultTextStyleTransition.__proto__),
    style: animation.Animation$(text_style.TextStyle)
  }));
  dart.setLibraryUri(transitions.DefaultTextStyleTransition, L24);
  dart.setFieldSignature(transitions.DefaultTextStyleTransition, () => ({
    __proto__: dart.getFields(transitions.DefaultTextStyleTransition.__proto__),
    textAlign: dart.finalFieldType(dart.nullable(ui.TextAlign)),
    softWrap: dart.finalFieldType(core.bool),
    overflow: dart.finalFieldType(paragraph.TextOverflow),
    maxLines: dart.finalFieldType(dart.nullable(core.int)),
    child: dart.finalFieldType(framework.Widget)
  }));
  var builder$ = dart.privateName(transitions, "AnimatedBuilder.builder");
  var child$19 = dart.privateName(transitions, "AnimatedBuilder.child");
  transitions.AnimatedBuilder = class AnimatedBuilder extends transitions.AnimatedWidget {
    get builder() {
      return this[builder$];
    }
    set builder(value) {
      super.builder = value;
    }
    get child() {
      return this[child$19];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      let t41, t40;
      if (context == null) dart.nullFailed(L23, 1527, 29, "context");
      t40 = context;
      t41 = this.child;
      return this.builder(t40, t41);
    }
  };
  (transitions.AnimatedBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    if (animation == null) dart.nullFailed(L23, 1502, 25, "animation");
    let builder = opts && 'builder' in opts ? opts.builder : null;
    if (builder == null) dart.nullFailed(L23, 1503, 19, "builder");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[builder$] = builder;
    this[child$19] = child;
    if (!(animation != null)) dart.assertFailed(null, L23, 1505, 15, "animation != null");
    if (!(builder != null)) dart.assertFailed(null, L23, 1506, 15, "builder != null");
    transitions.AnimatedBuilder.__proto__.new.call(this, {key: key, listenable: animation, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.AnimatedBuilder.prototype;
  dart.addTypeTests(transitions.AnimatedBuilder);
  dart.addTypeCaches(transitions.AnimatedBuilder);
  dart.setMethodSignature(transitions.AnimatedBuilder, () => ({
    __proto__: dart.getMethods(transitions.AnimatedBuilder.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(transitions.AnimatedBuilder, L24);
  dart.setFieldSignature(transitions.AnimatedBuilder, () => ({
    __proto__: dart.getFields(transitions.AnimatedBuilder.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  var _mounted = dart.privateName(overlay$, "_mounted");
  var _overlay = dart.privateName(overlay$, "_overlay");
  var _key$ = dart.privateName(overlay$, "_key");
  var _opaque = dart.privateName(overlay$, "_opaque");
  var _maintainState = dart.privateName(overlay$, "_maintainState");
  var _didChangeEntryOpacity = dart.privateName(overlay$, "_didChangeEntryOpacity");
  var _updateMounted = dart.privateName(overlay$, "_updateMounted");
  var _entries = dart.privateName(overlay$, "_entries");
  var _markDirty = dart.privateName(overlay$, "_markDirty");
  var _markNeedsBuild = dart.privateName(overlay$, "_markNeedsBuild");
  var builder$0 = dart.privateName(overlay$, "OverlayEntry.builder");
  overlay$.OverlayEntry = class OverlayEntry extends change_notifier.ChangeNotifier {
    get builder() {
      return this[builder$0];
    }
    set builder(value) {
      super.builder = value;
    }
    get opaque() {
      return this[_opaque];
    }
    set opaque(value) {
      let t40;
      if (value == null) dart.nullFailed(L46, 88, 19, "value");
      if (dart.equals(this[_opaque], value)) return;
      this[_opaque] = value;
      t40 = this[_overlay];
      t40 == null ? null : t40[_didChangeEntryOpacity]();
    }
    get maintainState() {
      return this[_maintainState];
    }
    set maintainState(value) {
      if (value == null) dart.nullFailed(L46, 111, 26, "value");
      if (!(this[_maintainState] != null)) dart.assertFailed(null, L46, 112, 12, "_maintainState != null");
      if (dart.equals(this[_maintainState], value)) return;
      this[_maintainState] = value;
      if (!(this[_overlay] != null)) dart.assertFailed(null, L46, 116, 12, "_overlay != null");
      dart.nullCheck(this[_overlay])[_didChangeEntryOpacity]();
    }
    get mounted() {
      return this[_mounted];
    }
    [_updateMounted](value) {
      if (value == null) dart.nullFailed(L46, 125, 28, "value");
      if (dart.equals(value, this[_mounted])) {
        return;
      }
      this[_mounted] = value;
      this.notifyListeners();
    }
    remove() {
      if (!(this[_overlay] != null)) dart.assertFailed(null, L46, 147, 12, "_overlay != null");
      let overlay = dart.nullCheck(this[_overlay]);
      this[_overlay] = null;
      if (!dart.test(overlay.mounted)) return;
      overlay[_entries][$remove](this);
      if (dart.equals(dart.nullCheck(binding$.SchedulerBinding.instance).schedulerPhase, binding$.SchedulerPhase.persistentCallbacks)) {
        dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.fn(duration => {
          if (duration == null) dart.nullFailed(L46, 155, 65, "duration");
          overlay[_markDirty]();
        }, DurationTovoid()));
      } else {
        overlay[_markDirty]();
      }
    }
    markNeedsBuild() {
      let t40;
      t40 = this[_key$].currentState;
      t40 == null ? null : t40[_markNeedsBuild]();
    }
    toString() {
      return dart.str(diagnostics$.describeIdentity(this)) + "(opaque: " + dart.str(this.opaque) + "; maintainState: " + dart.str(this.maintainState) + ")";
    }
  };
  (overlay$.OverlayEntry.new = function(opts) {
    let builder = opts && 'builder' in opts ? opts.builder : null;
    if (builder == null) dart.nullFailed(L46, 65, 19, "builder");
    let opaque = opts && 'opaque' in opts ? opts.opaque : false;
    if (opaque == null) dart.nullFailed(L46, 66, 10, "opaque");
    let maintainState = opts && 'maintainState' in opts ? opts.maintainState : false;
    if (maintainState == null) dart.nullFailed(L46, 67, 10, "maintainState");
    this[_mounted] = false;
    this[_overlay] = null;
    this[_key$] = GlobalKeyOf_OverlayEntryWidgetState().new();
    this[builder$0] = builder;
    if (!(builder != null)) dart.assertFailed(null, L46, 68, 15, "builder != null");
    if (!(opaque != null)) dart.assertFailed(null, L46, 69, 15, "opaque != null");
    if (!(maintainState != null)) dart.assertFailed(null, L46, 70, 15, "maintainState != null");
    this[_opaque] = opaque;
    this[_maintainState] = maintainState;
    overlay$.OverlayEntry.__proto__.new.call(this);
    ;
  }).prototype = overlay$.OverlayEntry.prototype;
  dart.addTypeTests(overlay$.OverlayEntry);
  dart.addTypeCaches(overlay$.OverlayEntry);
  dart.setMethodSignature(overlay$.OverlayEntry, () => ({
    __proto__: dart.getMethods(overlay$.OverlayEntry.__proto__),
    [_updateMounted]: dart.fnType(dart.void, [core.bool]),
    remove: dart.fnType(dart.void, []),
    markNeedsBuild: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(overlay$.OverlayEntry, () => ({
    __proto__: dart.getGetters(overlay$.OverlayEntry.__proto__),
    opaque: core.bool,
    maintainState: core.bool,
    mounted: core.bool
  }));
  dart.setSetterSignature(overlay$.OverlayEntry, () => ({
    __proto__: dart.getSetters(overlay$.OverlayEntry.__proto__),
    opaque: core.bool,
    maintainState: core.bool
  }));
  dart.setLibraryUri(overlay$.OverlayEntry, L47);
  dart.setFieldSignature(overlay$.OverlayEntry, () => ({
    __proto__: dart.getFields(overlay$.OverlayEntry.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext])),
    [_opaque]: dart.fieldType(core.bool),
    [_maintainState]: dart.fieldType(core.bool),
    [_mounted]: dart.fieldType(core.bool),
    [_overlay]: dart.fieldType(dart.nullable(overlay$.OverlayState)),
    [_key$]: dart.finalFieldType(framework.GlobalKey$(overlay$._OverlayEntryWidgetState))
  }));
  dart.defineExtensionMethods(overlay$.OverlayEntry, ['toString']);
  var entry$ = dart.privateName(overlay$, "_OverlayEntryWidget.entry");
  var tickerEnabled$ = dart.privateName(overlay$, "_OverlayEntryWidget.tickerEnabled");
  overlay$._OverlayEntryWidget = class _OverlayEntryWidget extends framework.StatefulWidget {
    get entry() {
      return this[entry$];
    }
    set entry(value) {
      super.entry = value;
    }
    get tickerEnabled() {
      return this[tickerEnabled$];
    }
    set tickerEnabled(value) {
      super.tickerEnabled = value;
    }
    createState() {
      return new overlay$._OverlayEntryWidgetState.new();
    }
  };
  (overlay$._OverlayEntryWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    if (key == null) dart.nullFailed(L46, 176, 18, "key");
    let entry = opts && 'entry' in opts ? opts.entry : null;
    if (entry == null) dart.nullFailed(L46, 177, 19, "entry");
    let tickerEnabled = opts && 'tickerEnabled' in opts ? opts.tickerEnabled : true;
    if (tickerEnabled == null) dart.nullFailed(L46, 178, 10, "tickerEnabled");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[entry$] = entry;
    this[tickerEnabled$] = tickerEnabled;
    if (!(key != null)) dart.assertFailed(null, L46, 179, 15, "key != null");
    if (!(entry != null)) dart.assertFailed(null, L46, 180, 15, "entry != null");
    if (!(tickerEnabled != null)) dart.assertFailed(null, L46, 181, 15, "tickerEnabled != null");
    overlay$._OverlayEntryWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = overlay$._OverlayEntryWidget.prototype;
  dart.addTypeTests(overlay$._OverlayEntryWidget);
  dart.addTypeCaches(overlay$._OverlayEntryWidget);
  dart.setMethodSignature(overlay$._OverlayEntryWidget, () => ({
    __proto__: dart.getMethods(overlay$._OverlayEntryWidget.__proto__),
    createState: dart.fnType(overlay$._OverlayEntryWidgetState, [])
  }));
  dart.setLibraryUri(overlay$._OverlayEntryWidget, L47);
  dart.setFieldSignature(overlay$._OverlayEntryWidget, () => ({
    __proto__: dart.getFields(overlay$._OverlayEntryWidget.__proto__),
    entry: dart.finalFieldType(overlay$.OverlayEntry),
    tickerEnabled: dart.finalFieldType(core.bool)
  }));
  var C468;
  var C469;
  var C467;
  var C466;
  overlay$._OverlayEntryWidgetState = class _OverlayEntryWidgetState extends framework.State$(overlay$._OverlayEntryWidget) {
    initState() {
      super.initState();
      this.widget.entry[_updateMounted](true);
    }
    dispose() {
      this.widget.entry[_updateMounted](false);
      super.dispose();
    }
    build(context) {
      let t41, t40;
      if (context == null) dart.nullFailed(L46, 205, 29, "context");
      return new ticker_provider.TickerMode.new({enabled: this.widget.tickerEnabled, child: (t40 = this.widget.entry, t41 = context, t40.builder(t41)), $creationLocationd_0dea112b090073317d4: C466 || CT.C466});
    }
    [_markNeedsBuild]() {
      this.setState(dart.fn(() => {
      }, VoidTovoid()));
    }
  };
  (overlay$._OverlayEntryWidgetState.new = function() {
    overlay$._OverlayEntryWidgetState.__proto__.new.call(this);
    ;
  }).prototype = overlay$._OverlayEntryWidgetState.prototype;
  dart.addTypeTests(overlay$._OverlayEntryWidgetState);
  dart.addTypeCaches(overlay$._OverlayEntryWidgetState);
  dart.setMethodSignature(overlay$._OverlayEntryWidgetState, () => ({
    __proto__: dart.getMethods(overlay$._OverlayEntryWidgetState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_markNeedsBuild]: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(overlay$._OverlayEntryWidgetState, L47);
  var C470;
  var initialEntries$ = dart.privateName(overlay$, "Overlay.initialEntries");
  var clipBehavior$ = dart.privateName(overlay$, "Overlay.clipBehavior");
  overlay$.Overlay = class Overlay extends framework.StatefulWidget {
    get initialEntries() {
      return this[initialEntries$];
    }
    set initialEntries(value) {
      super.initialEntries = value;
    }
    get clipBehavior() {
      return this[clipBehavior$];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    static of(context, opts) {
      if (context == null) dart.nullFailed(L46, 288, 18, "context");
      let rootOverlay = opts && 'rootOverlay' in opts ? opts.rootOverlay : false;
      if (rootOverlay == null) dart.nullFailed(L46, 289, 10, "rootOverlay");
      let debugRequiredFor = opts && 'debugRequiredFor' in opts ? opts.debugRequiredFor : null;
      let result = dart.test(rootOverlay) ? context.findRootAncestorStateOfType(overlay$.OverlayState) : context.findAncestorStateOfType(overlay$.OverlayState);
      if (!dart.test(dart.fn(() => {
        if (debugRequiredFor != null && result == null) {
          let information = (() => {
            let t40 = JSArrayOfDiagnosticsNode().of([]);
            t40.push(new assertions.ErrorSummary.new("No Overlay widget found."));
            t40.push(new assertions.ErrorDescription.new(dart.str(dart.runtimeType(debugRequiredFor)) + " widgets require an Overlay widget ancestor for correct operation."));
            t40.push(new assertions.ErrorHint.new("The most common way to add an Overlay to an application is to include a MaterialApp or Navigator widget in the runApp() call."));
            t40.push(new (DiagnosticsPropertyOfWidget()).new("The specific widget that failed to find an overlay was", debugRequiredFor, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty}));
            if (!dart.equals(context.widget, debugRequiredFor)) t40.push(context.describeElement("The context from which that widget was searching for an overlay was"));
            return t40;
          })();
          dart.throw(new assertions.FlutterError.fromParts(information));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L46, 295, 12, "() {\r\n      if (debugRequiredFor != null && result == null) {\r\n        final List<DiagnosticsNode> information = <DiagnosticsNode>[\r\n          ErrorSummary('No Overlay widget found.'),\r\n          ErrorDescription('${debugRequiredFor.runtimeType} widgets require an Overlay widget ancestor for correct operation.'),\r\n          ErrorHint('The most common way to add an Overlay to an application is to include a MaterialApp or Navigator widget in the runApp() call.'),\r\n          DiagnosticsProperty<Widget>('The specific widget that failed to find an overlay was', debugRequiredFor, style: DiagnosticsTreeStyle.errorProperty),\r\n          if (context.widget != debugRequiredFor)\r\n            context.describeElement('The context from which that widget was searching for an overlay was')\r\n        ];\r\n\r\n        throw FlutterError.fromParts(information);\r\n      }\r\n      return true;\r\n    }()");
      return result;
    }
    createState() {
      return new overlay$.OverlayState.new();
    }
  };
  (overlay$.Overlay.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let initialEntries = opts && 'initialEntries' in opts ? opts.initialEntries : C147 || CT.C147;
    if (initialEntries == null) dart.nullFailed(L46, 244, 10, "initialEntries");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C470 || CT.C470;
    if (clipBehavior == null) dart.nullFailed(L46, 245, 10, "clipBehavior");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[initialEntries$] = initialEntries;
    this[clipBehavior$] = clipBehavior;
    if (!(initialEntries != null)) dart.assertFailed(null, L46, 246, 15, "initialEntries != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L46, 247, 15, "clipBehavior != null");
    overlay$.Overlay.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = overlay$.Overlay.prototype;
  dart.addTypeTests(overlay$.Overlay);
  dart.addTypeCaches(overlay$.Overlay);
  dart.setMethodSignature(overlay$.Overlay, () => ({
    __proto__: dart.getMethods(overlay$.Overlay.__proto__),
    createState: dart.fnType(overlay$.OverlayState, [])
  }));
  dart.setLibraryUri(overlay$.Overlay, L47);
  dart.setFieldSignature(overlay$.Overlay, () => ({
    __proto__: dart.getFields(overlay$.Overlay.__proto__),
    initialEntries: dart.finalFieldType(core.List$(overlay$.OverlayEntry)),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var _insertionIndex = dart.privateName(overlay$, "_insertionIndex");
  var _debugVerifyInsertPosition = dart.privateName(overlay$, "_debugVerifyInsertPosition");
  var C473;
  var C474;
  var C472;
  var C471;
  var C477;
  var C478;
  var C479;
  var C476;
  var C475;
  var C482;
  var C483;
  var C484;
  var C481;
  var C480;
  const State_TickerProviderStateMixin$36$ = class State_TickerProviderStateMixin extends framework.State$(overlay$.Overlay) {};
  (State_TickerProviderStateMixin$36$.new = function() {
    ticker_provider.TickerProviderStateMixin$(overlay$.Overlay)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$, ticker_provider.TickerProviderStateMixin$(overlay$.Overlay));
  overlay$.OverlayState = class OverlayState extends State_TickerProviderStateMixin$36$ {
    initState() {
      super.initState();
      this.insertAll(this.widget.initialEntries);
    }
    [_insertionIndex](below, above) {
      if (!(above == null || below == null)) dart.assertFailed(null, L46, 331, 12, "above == null || below == null");
      if (below != null) return this[_entries][$indexOf](below);
      if (above != null) return dart.notNull(this[_entries][$indexOf](above)) + 1;
      return this[_entries][$length];
    }
    insert(entry, opts) {
      if (entry == null) dart.nullFailed(L46, 346, 28, "entry");
      let below = opts && 'below' in opts ? opts.below : null;
      let above = opts && 'above' in opts ? opts.above : null;
      if (!dart.test(this[_debugVerifyInsertPosition](above, below))) dart.assertFailed(null, L46, 347, 12, "_debugVerifyInsertPosition(above, below)");
      if (!!dart.test(this[_entries][$contains](entry))) dart.assertFailed("The specified entry is already present in the Overlay.", L46, 348, 12, "!_entries.contains(entry)");
      if (!(entry[_overlay] == null)) dart.assertFailed("The specified entry is already present in another Overlay.", L46, 349, 12, "entry._overlay == null");
      entry[_overlay] = this;
      this.setState(dart.fn(() => {
        this[_entries][$insert](this[_insertionIndex](below, above), entry);
      }, VoidTovoid()));
    }
    insertAll(entries, opts) {
      if (entries == null) dart.nullFailed(L46, 363, 41, "entries");
      let below = opts && 'below' in opts ? opts.below : null;
      let above = opts && 'above' in opts ? opts.above : null;
      if (!dart.test(this[_debugVerifyInsertPosition](above, below))) dart.assertFailed(null, L46, 364, 12, "_debugVerifyInsertPosition(above, below)");
      if (!dart.test(entries[$every](dart.fn(entry => {
        if (entry == null) dart.nullFailed(L46, 366, 35, "entry");
        return !dart.test(this[_entries][$contains](entry));
      }, OverlayEntryTobool())))) dart.assertFailed("One or more of the specified entries are already present in the Overlay.", L46, 366, 7, "entries.every((OverlayEntry entry) => !_entries.contains(entry))");
      if (!dart.test(entries[$every](dart.fn(entry => {
        if (entry == null) dart.nullFailed(L46, 370, 35, "entry");
        return entry[_overlay] == null;
      }, OverlayEntryTobool())))) dart.assertFailed("One or more of the specified entries are already present in another Overlay.", L46, 370, 7, "entries.every((OverlayEntry entry) => entry._overlay == null)");
      if (dart.test(entries[$isEmpty])) return;
      for (let entry of entries) {
        if (!(entry[_overlay] == null)) dart.assertFailed(null, L46, 376, 14, "entry._overlay == null");
        entry[_overlay] = this;
      }
      this.setState(dart.fn(() => {
        this[_entries][$insertAll](this[_insertionIndex](below, above), entries);
      }, VoidTovoid()));
    }
    [_debugVerifyInsertPosition](above, below, opts) {
      let t41, t41$, t41$0, t41$1;
      let newEntries = opts && 'newEntries' in opts ? opts.newEntries : null;
      if (!(above == null || below == null)) dart.assertFailed("Only one of `above` and `below` may be specified.", L46, 386, 7, "above == null || below == null");
      if (!(above == null || dart.equals(above[_overlay], this) && dart.test(this[_entries][$contains](above)) && dart.test((t41$ = (t41 = newEntries, t41 == null ? null : t41[$contains](above)), t41$ == null ? true : t41$)))) dart.assertFailed("The provided entry used for `above` must be present in the Overlay" + (newEntries != null ? " and in the `newEntriesList`" : "") + ".", L46, 390, 7, "above == null || (above._overlay == this && _entries.contains(above) && (newEntries?.contains(above) ?? true))");
      if (!(below == null || dart.equals(below[_overlay], this) && dart.test(this[_entries][$contains](below)) && dart.test((t41$1 = (t41$0 = newEntries, t41$0 == null ? null : t41$0[$contains](below)), t41$1 == null ? true : t41$1)))) dart.assertFailed("The provided entry used for `below` must be present in the Overlay" + (newEntries != null ? " and in the `newEntriesList`" : "") + ".", L46, 394, 7, "below == null || (below._overlay == this && _entries.contains(below) && (newEntries?.contains(below) ?? true))");
      return true;
    }
    rearrange(newEntries, opts) {
      let t41;
      if (newEntries == null) dart.nullFailed(L46, 417, 41, "newEntries");
      let below = opts && 'below' in opts ? opts.below : null;
      let above = opts && 'above' in opts ? opts.above : null;
      let newEntriesList = ListOfOverlayEntry().is(newEntries) ? newEntries : newEntries[$toList]({growable: false});
      if (!dart.test(this[_debugVerifyInsertPosition](above, below, {newEntries: newEntriesList}))) dart.assertFailed(null, L46, 419, 12, "_debugVerifyInsertPosition(above, below, newEntries: newEntriesList)");
      if (!dart.test(newEntriesList[$every](dart.fn(entry => {
        if (entry == null) dart.nullFailed(L46, 421, 42, "entry");
        return entry[_overlay] == null || dart.equals(entry[_overlay], this);
      }, OverlayEntryTobool())))) dart.assertFailed("One or more of the specified entries are already present in another Overlay.", L46, 421, 7, "newEntriesList.every((OverlayEntry entry) => entry._overlay == null || entry._overlay == this)");
      if (!dart.test(newEntriesList[$every](dart.fn(entry => {
        if (entry == null) dart.nullFailed(L46, 425, 42, "entry");
        return this[_entries][$indexOf](entry) == this[_entries][$lastIndexOf](entry);
      }, OverlayEntryTobool())))) dart.assertFailed("One or more of the specified entries are specified multiple times.", L46, 425, 7, "newEntriesList.every((OverlayEntry entry) => _entries.indexOf(entry) == _entries.lastIndexOf(entry))");
      if (dart.test(newEntriesList[$isEmpty])) return;
      if (dart.test(collections.listEquals(overlay$.OverlayEntry, this[_entries], newEntriesList))) return;
      let old = LinkedHashSetOfOverlayEntry().from(this[_entries]);
      for (let entry of newEntriesList) {
        t41 = entry;
        t41[_overlay] == null ? t41[_overlay] = this : null;
      }
      this.setState(dart.fn(() => {
        this[_entries][$clear]();
        this[_entries][$addAll](newEntriesList);
        old.removeAll(newEntriesList);
        this[_entries][$insertAll](this[_insertionIndex](below, above), old);
      }, VoidTovoid()));
    }
    [_markDirty]() {
      if (dart.test(this.mounted)) {
        this.setState(dart.fn(() => {
        }, VoidTovoid()));
      }
    }
    debugIsVisible(entry) {
      if (entry == null) dart.nullFailed(L46, 456, 36, "entry");
      let result = false;
      if (!dart.test(this[_entries][$contains](entry))) dart.assertFailed(null, L46, 458, 12, "_entries.contains(entry)");
      if (!dart.test(dart.fn(() => {
        for (let i = dart.notNull(this[_entries][$length]) - 1; i > 0; i = i - 1) {
          let candidate = this[_entries][$_get](i);
          if (dart.equals(candidate, entry)) {
            result = true;
            break;
          }
          if (dart.test(candidate.opaque)) break;
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L46, 459, 12, "() {\r\n      for (int i = _entries.length - 1; i > 0; i -= 1) {\r\n        final OverlayEntry candidate = _entries[i];\r\n        if (candidate == entry) {\r\n          result = true;\r\n          break;\r\n        }\r\n        if (candidate.opaque)\r\n          break;\r\n      }\r\n      return true;\r\n    }()");
      return result;
    }
    [_didChangeEntryOpacity]() {
      this.setState(dart.fn(() => {
      }, VoidTovoid()));
    }
    build(context) {
      if (context == null) dart.nullFailed(L46, 482, 29, "context");
      let children = JSArrayOfWidget().of([]);
      let onstage = true;
      let onstageCount = 0;
      for (let i = dart.notNull(this[_entries][$length]) - 1; i >= 0; i = i - 1) {
        let entry = this[_entries][$_get](i);
        if (onstage) {
          onstageCount = onstageCount + 1;
          children[$add](new overlay$._OverlayEntryWidget.new({key: entry[_key$], entry: entry, $creationLocationd_0dea112b090073317d4: C471 || CT.C471}));
          if (dart.test(entry.opaque)) onstage = false;
        } else if (dart.test(entry.maintainState)) {
          children[$add](new overlay$._OverlayEntryWidget.new({key: entry[_key$], entry: entry, tickerEnabled: false, $creationLocationd_0dea112b090073317d4: C475 || CT.C475}));
        }
      }
      return new overlay$._Theatre.new({skipCount: dart.notNull(children[$length]) - onstageCount, children: children[$reversed][$toList]({growable: false}), clipBehavior: this.widget.clipBehavior, $creationLocationd_0dea112b090073317d4: C480 || CT.C480});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L46, 514, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfListOfOverlayEntry()).new("entries", this[_entries]));
    }
  };
  (overlay$.OverlayState.new = function() {
    this[_entries] = JSArrayOfOverlayEntry().of([]);
    overlay$.OverlayState.__proto__.new.call(this);
    ;
  }).prototype = overlay$.OverlayState.prototype;
  dart.addTypeTests(overlay$.OverlayState);
  dart.addTypeCaches(overlay$.OverlayState);
  dart.setMethodSignature(overlay$.OverlayState, () => ({
    __proto__: dart.getMethods(overlay$.OverlayState.__proto__),
    [_insertionIndex]: dart.fnType(core.int, [dart.nullable(overlay$.OverlayEntry), dart.nullable(overlay$.OverlayEntry)]),
    insert: dart.fnType(dart.void, [overlay$.OverlayEntry], {above: dart.nullable(overlay$.OverlayEntry), below: dart.nullable(overlay$.OverlayEntry)}, {}),
    insertAll: dart.fnType(dart.void, [core.Iterable$(overlay$.OverlayEntry)], {above: dart.nullable(overlay$.OverlayEntry), below: dart.nullable(overlay$.OverlayEntry)}, {}),
    [_debugVerifyInsertPosition]: dart.fnType(core.bool, [dart.nullable(overlay$.OverlayEntry), dart.nullable(overlay$.OverlayEntry)], {newEntries: dart.nullable(core.Iterable$(overlay$.OverlayEntry))}, {}),
    rearrange: dart.fnType(dart.void, [core.Iterable$(overlay$.OverlayEntry)], {above: dart.nullable(overlay$.OverlayEntry), below: dart.nullable(overlay$.OverlayEntry)}, {}),
    [_markDirty]: dart.fnType(dart.void, []),
    debugIsVisible: dart.fnType(core.bool, [overlay$.OverlayEntry]),
    [_didChangeEntryOpacity]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(overlay$.OverlayState, L47);
  dart.setFieldSignature(overlay$.OverlayState, () => ({
    __proto__: dart.getFields(overlay$.OverlayState.__proto__),
    [_entries]: dart.finalFieldType(core.List$(overlay$.OverlayEntry))
  }));
  var children$2 = dart.privateName(framework, "MultiChildRenderObjectWidget.children");
  framework.MultiChildRenderObjectWidget = class MultiChildRenderObjectWidget extends framework.RenderObjectWidget {
    get children() {
      return this[children$2];
    }
    set children(value) {
      super.children = value;
    }
    createElement() {
      return new framework.MultiChildRenderObjectElement.new(this);
    }
  };
  (framework.MultiChildRenderObjectWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : C365 || CT.C365;
    if (children == null) dart.nullFailed(L4, 1919, 49, "children");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[children$2] = children;
    if (!(children != null)) dart.assertFailed(null, L4, 1920, 14, "children != null");
    framework.MultiChildRenderObjectWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    if (!dart.test(dart.fn(() => {
      for (let index = 0; index < dart.notNull(this.children[$length]); index = index + 1) {
        if (this.children[$_get](index) == null) {
          dart.throw(assertions.FlutterError.new(dart.str(this[$runtimeType]) + "'s children must not contain any null values, " + "but a null value was found at index " + dart.str(index)));
        }
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L4, 1922, 12, "() {\r\n      for (int index = 0; index < children.length; index++) {\r\n        // TODO(a14n): remove this check to have a lot more const widget\r\n        if (children[index] == null) { // ignore: dead_code\r\n          throw FlutterError(\r\n              \"$runtimeType's children must not contain any null values, \"\r\n                  'but a null value was found at index $index'\r\n          );\r\n        }\r\n      }\r\n      return true;\r\n    }()");
  }).prototype = framework.MultiChildRenderObjectWidget.prototype;
  dart.addTypeTests(framework.MultiChildRenderObjectWidget);
  dart.addTypeCaches(framework.MultiChildRenderObjectWidget);
  dart.setMethodSignature(framework.MultiChildRenderObjectWidget, () => ({
    __proto__: dart.getMethods(framework.MultiChildRenderObjectWidget.__proto__),
    createElement: dart.fnType(framework.MultiChildRenderObjectElement, [])
  }));
  dart.setLibraryUri(framework.MultiChildRenderObjectWidget, L5);
  dart.setFieldSignature(framework.MultiChildRenderObjectWidget, () => ({
    __proto__: dart.getFields(framework.MultiChildRenderObjectWidget.__proto__),
    children: dart.finalFieldType(core.List$(framework.Widget))
  }));
  overlay$._Theatre = class _Theatre extends framework.MultiChildRenderObjectWidget {
    createElement() {
      return new overlay$._TheatreElement.new(this);
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L46, 547, 50, "context");
      return new overlay$._RenderTheatre.new({skipCount: this.skipCount, textDirection: basic.Directionality.of(context), clipBehavior: this.clipBehavior});
    }
    updateRenderObject(context, renderObject) {
      let t41;
      if (context == null) dart.nullFailed(L46, 556, 40, "context");
      overlay$._RenderTheatre.as(renderObject);
      if (renderObject == null) dart.nullFailed(L46, 556, 64, "renderObject");
      t41 = renderObject;
      (() => {
        t41.skipCount = this.skipCount;
        t41.textDirection = basic.Directionality.of(context);
        t41.clipBehavior = this.clipBehavior;
        return t41;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L46, 564, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.IntProperty.new("skipCount", this.skipCount));
    }
  };
  (overlay$._Theatre.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let skipCount = opts && 'skipCount' in opts ? opts.skipCount : 0;
    if (skipCount == null) dart.nullFailed(L46, 529, 10, "skipCount");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C470 || CT.C470;
    if (clipBehavior == null) dart.nullFailed(L46, 530, 10, "clipBehavior");
    let children = opts && 'children' in opts ? opts.children : C365 || CT.C365;
    if (children == null) dart.nullFailed(L46, 531, 18, "children");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.skipCount = skipCount;
    this.clipBehavior = clipBehavior;
    if (!(skipCount != null)) dart.assertFailed(null, L46, 532, 15, "skipCount != null");
    if (!(dart.notNull(skipCount) >= 0)) dart.assertFailed(null, L46, 533, 15, "skipCount >= 0");
    if (!(children != null)) dart.assertFailed(null, L46, 534, 15, "children != null");
    if (!(dart.notNull(children[$length]) >= dart.notNull(skipCount))) dart.assertFailed(null, L46, 535, 15, "children.length >= skipCount");
    if (!(clipBehavior != null)) dart.assertFailed(null, L46, 536, 15, "clipBehavior != null");
    overlay$._Theatre.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = overlay$._Theatre.prototype;
  dart.addTypeTests(overlay$._Theatre);
  dart.addTypeCaches(overlay$._Theatre);
  dart.setMethodSignature(overlay$._Theatre, () => ({
    __proto__: dart.getMethods(overlay$._Theatre.__proto__),
    createElement: dart.fnType(overlay$._TheatreElement, []),
    createRenderObject: dart.fnType(overlay$._RenderTheatre, [framework.BuildContext])
  }));
  dart.setLibraryUri(overlay$._Theatre, L47);
  dart.setFieldSignature(overlay$._Theatre, () => ({
    __proto__: dart.getFields(overlay$._Theatre.__proto__),
    skipCount: dart.finalFieldType(core.int),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var __MultiChildRenderObjectElement__children = dart.privateName(framework, "_#MultiChildRenderObjectElement#_children");
  var __MultiChildRenderObjectElement__children_isSet = dart.privateName(framework, "_#MultiChildRenderObjectElement#_children#isSet");
  var _forgottenChildren$ = dart.privateName(framework, "_forgottenChildren");
  var _children$0 = dart.privateName(framework, "_children");
  framework.MultiChildRenderObjectElement = class MultiChildRenderObjectElement extends framework.RenderObjectElement {
    get widget() {
      return framework.MultiChildRenderObjectWidget.as(super.widget);
    }
    get children() {
      return this[_children$0][$where](dart.fn(child => {
        if (child == null) dart.nullFailed(L4, 6235, 62, "child");
        return !dart.test(this[_forgottenChildren$].contains(child));
      }, ElementTobool()));
    }
    get [_children$0]() {
      let t41;
      return dart.test(this[__MultiChildRenderObjectElement__children_isSet]) ? (t41 = this[__MultiChildRenderObjectElement__children], t41) : dart.throw(new _internal.LateError.fieldNI("_children"));
    }
    set [_children$0](t41) {
      if (t41 == null) dart.nullFailed(L4, 6237, 22, "null");
      this[__MultiChildRenderObjectElement__children_isSet] = true;
      this[__MultiChildRenderObjectElement__children] = t41;
    }
    insertRenderObjectChild(child, slot) {
      let t42;
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L4, 6243, 45, "child");
      IndexedSlotOfElementN().as(slot);
      if (slot == null) dart.nullFailed(L4, 6243, 74, "slot");
      let renderObject = ContainerRenderObjectMixinOfRenderObject$ContainerParentDataMixinOfRenderObject().as(this.renderObject);
      if (!dart.test(renderObject.debugValidateChild(child))) dart.assertFailed(null, L4, 6246, 12, "renderObject.debugValidateChild(child)");
      renderObject.insert(child, {after: (t42 = slot.value, t42 == null ? null : t42.renderObject)});
      if (!dart.equals(renderObject, this.renderObject)) dart.assertFailed(null, L4, 6248, 12, "renderObject == this.renderObject");
    }
    moveRenderObjectChild(child, oldSlot, newSlot) {
      let t42;
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L4, 6252, 43, "child");
      IndexedSlotOfElementN().as(oldSlot);
      if (oldSlot == null) dart.nullFailed(L4, 6252, 72, "oldSlot");
      IndexedSlotOfElementN().as(newSlot);
      if (newSlot == null) dart.nullFailed(L4, 6252, 103, "newSlot");
      let renderObject = ContainerRenderObjectMixinOfRenderObject$ContainerParentDataMixinOfRenderObject().as(this.renderObject);
      if (!dart.equals(child.parent, renderObject)) dart.assertFailed(null, L4, 6255, 12, "child.parent == renderObject");
      renderObject.move(child, {after: (t42 = newSlot.value, t42 == null ? null : t42.renderObject)});
      if (!dart.equals(renderObject, this.renderObject)) dart.assertFailed(null, L4, 6257, 12, "renderObject == this.renderObject");
    }
    removeRenderObjectChild(child, slot) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L4, 6261, 45, "child");
      let renderObject = ContainerRenderObjectMixinOfRenderObject$ContainerParentDataMixinOfRenderObject().as(this.renderObject);
      if (!dart.equals(child.parent, renderObject)) dart.assertFailed(null, L4, 6264, 12, "child.parent == renderObject");
      renderObject.remove(child);
      if (!dart.equals(renderObject, this.renderObject)) dart.assertFailed(null, L4, 6266, 12, "renderObject == this.renderObject");
    }
    visitChildren(visitor) {
      if (visitor == null) dart.nullFailed(L4, 6270, 37, "visitor");
      for (let child of this[_children$0]) {
        if (!dart.test(this[_forgottenChildren$].contains(child))) visitor(child);
      }
    }
    forgetChild(child) {
      if (child == null) dart.nullFailed(L4, 6278, 28, "child");
      if (!dart.test(this[_children$0][$contains](child))) dart.assertFailed(null, L4, 6279, 12, "_children.contains(child)");
      if (!!dart.test(this[_forgottenChildren$].contains(child))) dart.assertFailed(null, L4, 6280, 12, "!_forgottenChildren.contains(child)");
      this[_forgottenChildren$].add(child);
      super.forgetChild(child);
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      let children = ListOfElement().filled(this.widget.children[$length], framework._NullElement.instance, {growable: false});
      let previousChild = null;
      for (let i = 0; i < dart.notNull(children[$length]); i = i + 1) {
        let newChild = this.inflateWidget(this.widget.children[$_get](i), new (IndexedSlotOfElementN()).new(i, previousChild));
        children[$_set](i, newChild);
        previousChild = newChild;
      }
      this[_children$0] = children;
    }
    update(newWidget) {
      framework.MultiChildRenderObjectWidget.as(newWidget);
      if (newWidget == null) dart.nullFailed(L4, 6299, 44, "newWidget");
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, L4, 6301, 12, "widget == newWidget");
      this[_children$0] = this.updateChildren(this[_children$0], this.widget.children, {forgottenChildren: this[_forgottenChildren$]});
      this[_forgottenChildren$].clear();
    }
  };
  (framework.MultiChildRenderObjectElement.new = function(widget) {
    if (widget == null) dart.nullFailed(L4, 6222, 62, "widget");
    this[__MultiChildRenderObjectElement__children] = null;
    this[__MultiChildRenderObjectElement__children_isSet] = false;
    this[_forgottenChildren$] = new (_HashSetOfElement()).new();
    if (!!dart.test(debug$0.debugChildrenHaveDuplicateKeys(widget, widget.children))) dart.assertFailed(null, L4, 6223, 14, "!debugChildrenHaveDuplicateKeys(widget, widget.children)");
    framework.MultiChildRenderObjectElement.__proto__.new.call(this, widget);
    ;
  }).prototype = framework.MultiChildRenderObjectElement.prototype;
  dart.addTypeTests(framework.MultiChildRenderObjectElement);
  dart.addTypeCaches(framework.MultiChildRenderObjectElement);
  dart.setGetterSignature(framework.MultiChildRenderObjectElement, () => ({
    __proto__: dart.getGetters(framework.MultiChildRenderObjectElement.__proto__),
    widget: framework.MultiChildRenderObjectWidget,
    children: core.Iterable$(framework.Element),
    [_children$0]: core.List$(framework.Element)
  }));
  dart.setSetterSignature(framework.MultiChildRenderObjectElement, () => ({
    __proto__: dart.getSetters(framework.MultiChildRenderObjectElement.__proto__),
    [_children$0]: core.List$(framework.Element)
  }));
  dart.setLibraryUri(framework.MultiChildRenderObjectElement, L5);
  dart.setFieldSignature(framework.MultiChildRenderObjectElement, () => ({
    __proto__: dart.getFields(framework.MultiChildRenderObjectElement.__proto__),
    [__MultiChildRenderObjectElement__children]: dart.fieldType(dart.nullable(core.List$(framework.Element))),
    [__MultiChildRenderObjectElement__children_isSet]: dart.fieldType(core.bool),
    [_forgottenChildren$]: dart.finalFieldType(core.Set$(framework.Element))
  }));
  overlay$._TheatreElement = class _TheatreElement extends framework.MultiChildRenderObjectElement {
    get widget() {
      return overlay$._Theatre.as(super.widget);
    }
    get renderObject() {
      return overlay$._RenderTheatre.as(super.renderObject);
    }
    debugVisitOnstageChildren(visitor) {
      if (visitor == null) dart.nullFailed(L46, 580, 49, "visitor");
      if (!(dart.notNull(this.children[$length]) >= dart.notNull(this.widget.skipCount))) dart.assertFailed(null, L46, 581, 12, "children.length >= widget.skipCount");
      this.children[$skip](this.widget.skipCount)[$forEach](visitor);
    }
  };
  (overlay$._TheatreElement.new = function(widget) {
    if (widget == null) dart.nullFailed(L46, 571, 28, "widget");
    overlay$._TheatreElement.__proto__.new.call(this, widget);
    ;
  }).prototype = overlay$._TheatreElement.prototype;
  dart.addTypeTests(overlay$._TheatreElement);
  dart.addTypeCaches(overlay$._TheatreElement);
  dart.setGetterSignature(overlay$._TheatreElement, () => ({
    __proto__: dart.getGetters(overlay$._TheatreElement.__proto__),
    widget: overlay$._Theatre,
    renderObject: overlay$._RenderTheatre
  }));
  dart.setLibraryUri(overlay$._TheatreElement, L47);
  var _hasVisualOverflow = dart.privateName(overlay$, "_hasVisualOverflow");
  var _resolvedAlignment = dart.privateName(overlay$, "_resolvedAlignment");
  var _clipBehavior = dart.privateName(overlay$, "_clipBehavior");
  var _clipRectLayer = dart.privateName(overlay$, "_clipRectLayer");
  var _textDirection = dart.privateName(overlay$, "_textDirection");
  var _skipCount = dart.privateName(overlay$, "_skipCount");
  var _resolve = dart.privateName(overlay$, "_resolve");
  var _markNeedResolution = dart.privateName(overlay$, "_markNeedResolution");
  var _firstOnstageChild = dart.privateName(overlay$, "_firstOnstageChild");
  var _lastOnstageChild = dart.privateName(overlay$, "_lastOnstageChild");
  var _onstageChildCount = dart.privateName(overlay$, "_onstageChildCount");
  const RenderBox_ContainerRenderObjectMixin$36 = class RenderBox_ContainerRenderObjectMixin extends box$.RenderBox {};
  (RenderBox_ContainerRenderObjectMixin$36.new = function() {
    object$.ContainerRenderObjectMixin$(box$.RenderBox, stack.StackParentData)[dart.mixinNew].call(this);
    RenderBox_ContainerRenderObjectMixin$36.__proto__.new.call(this);
  }).prototype = RenderBox_ContainerRenderObjectMixin$36.prototype;
  dart.applyMixin(RenderBox_ContainerRenderObjectMixin$36, object$.ContainerRenderObjectMixin$(box$.RenderBox, stack.StackParentData));
  overlay$._RenderTheatre = class _RenderTheatre extends RenderBox_ContainerRenderObjectMixin$36 {
    setupParentData(child) {
      box$.RenderBox.as(child);
      if (child == null) dart.nullFailed(L46, 605, 34, "child");
      if (!stack.StackParentData.is(child.parentData)) child.parentData = new stack.StackParentData.new();
    }
    [_resolve]() {
      if (this[_resolvedAlignment] != null) return;
      this[_resolvedAlignment] = alignment$.AlignmentDirectional.topStart.resolve(this.textDirection);
    }
    [_markNeedResolution]() {
      this[_resolvedAlignment] = null;
      this.markNeedsLayout();
    }
    get textDirection() {
      return this[_textDirection];
    }
    set textDirection(value) {
      if (value == null) dart.nullFailed(L46, 625, 35, "value");
      if (dart.equals(this[_textDirection], value)) return;
      this[_textDirection] = value;
      this[_markNeedResolution]();
    }
    get skipCount() {
      return this[_skipCount];
    }
    set skipCount(value) {
      if (value == null) dart.nullFailed(L46, 634, 21, "value");
      if (!(value != null)) dart.assertFailed(null, L46, 635, 12, "value != null");
      if (this[_skipCount] != value) {
        this[_skipCount] = value;
        this.markNeedsLayout();
      }
    }
    get clipBehavior() {
      return this[_clipBehavior];
    }
    set clipBehavior(value) {
      if (value == null) dart.nullFailed(L46, 647, 25, "value");
      if (!(value != null)) dart.assertFailed(null, L46, 648, 12, "value != null");
      if (!dart.equals(value, this[_clipBehavior])) {
        this[_clipBehavior] = value;
        this.markNeedsPaint();
        this.markNeedsSemanticsUpdate();
      }
    }
    get [_firstOnstageChild]() {
      if (this.skipCount == super.childCount) {
        return null;
      }
      let child = super.firstChild;
      for (let toSkip = this.skipCount; dart.notNull(toSkip) > 0; toSkip = dart.notNull(toSkip) - 1) {
        let childParentData = stack.StackParentData.as(dart.nullCheck(dart.nullCheck(child).parentData));
        child = childParentData.nextSibling;
        if (!(child != null)) dart.assertFailed(null, L46, 664, 14, "child != null");
      }
      return child;
    }
    get [_lastOnstageChild]() {
      return this.skipCount == super.childCount ? null : this.lastChild;
    }
    get [_onstageChildCount]() {
      return dart.notNull(this.childCount) - dart.notNull(this.skipCount);
    }
    computeMinIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(L46, 674, 42, "height");
      return stack.RenderStack.getIntrinsicDimension(this[_firstOnstageChild], dart.fn(child => {
        if (child == null) dart.nullFailed(L46, 675, 77, "child");
        return child.getMinIntrinsicWidth(height);
      }, RenderBoxTodouble()));
    }
    computeMaxIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(L46, 679, 42, "height");
      return stack.RenderStack.getIntrinsicDimension(this[_firstOnstageChild], dart.fn(child => {
        if (child == null) dart.nullFailed(L46, 680, 77, "child");
        return child.getMaxIntrinsicWidth(height);
      }, RenderBoxTodouble()));
    }
    computeMinIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(L46, 684, 43, "width");
      return stack.RenderStack.getIntrinsicDimension(this[_firstOnstageChild], dart.fn(child => {
        if (child == null) dart.nullFailed(L46, 685, 77, "child");
        return child.getMinIntrinsicHeight(width);
      }, RenderBoxTodouble()));
    }
    computeMaxIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(L46, 689, 43, "width");
      return stack.RenderStack.getIntrinsicDimension(this[_firstOnstageChild], dart.fn(child => {
        if (child == null) dart.nullFailed(L46, 690, 77, "child");
        return child.getMaxIntrinsicHeight(width);
      }, RenderBoxTodouble()));
    }
    computeDistanceToActualBaseline(baseline) {
      if (baseline == null) dart.nullFailed(L46, 694, 56, "baseline");
      if (!!dart.test(this.debugNeedsLayout)) dart.assertFailed(null, L46, 695, 12, "!debugNeedsLayout");
      let result = null;
      let child = this[_firstOnstageChild];
      while (child != null) {
        if (!!dart.test(child.debugNeedsLayout)) dart.assertFailed(null, L46, 699, 14, "!child.debugNeedsLayout");
        let childParentData = stack.StackParentData.as(dart.nullCheck(child.parentData));
        let candidate = child.getDistanceToActualBaseline(baseline);
        if (candidate != null) {
          candidate = dart.notNull(candidate) + dart.notNull(childParentData.offset.dy);
          if (result != null) {
            result = math.min(core.double, result, candidate);
          } else {
            result = candidate;
          }
        }
        child = childParentData.nextSibling;
      }
      return result;
    }
    get sizedByParent() {
      return true;
    }
    computeDryLayout(constraints) {
      if (constraints == null) dart.nullFailed(L46, 719, 40, "constraints");
      if (!dart.test(constraints.biggest.isFinite)) dart.assertFailed(null, L46, 720, 12, "constraints.biggest.isFinite");
      return constraints.biggest;
    }
    performLayout() {
      this[_hasVisualOverflow] = false;
      if (this[_onstageChildCount] === 0) {
        return;
      }
      this[_resolve]();
      if (!(this[_resolvedAlignment] != null)) dart.assertFailed(null, L46, 733, 12, "_resolvedAlignment != null");
      let nonPositionedConstraints = new box$.BoxConstraints.tight(this.constraints.biggest);
      let child = this[_firstOnstageChild];
      while (child != null) {
        let childParentData = stack.StackParentData.as(dart.nullCheck(child.parentData));
        if (!dart.test(childParentData.isPositioned)) {
          child.layout(nonPositionedConstraints, {parentUsesSize: true});
          childParentData.offset = dart.nullCheck(this[_resolvedAlignment]).alongOffset(ui.Offset.as(this.size['-'](child.size)));
        } else {
          this[_hasVisualOverflow] = dart.test(stack.RenderStack.layoutPositionedChild(child, childParentData, this.size, dart.nullCheck(this[_resolvedAlignment]))) || dart.test(this[_hasVisualOverflow]);
        }
        if (!dart.equals(child.parentData, childParentData)) dart.assertFailed(null, L46, 749, 14, "child.parentData == childParentData");
        child = childParentData.nextSibling;
      }
    }
    hitTestChildren(result, opts) {
      if (result == null) dart.nullFailed(L46, 755, 41, "result");
      let position = opts && 'position' in opts ? opts.position : null;
      if (position == null) dart.nullFailed(L46, 755, 67, "position");
      let child = this[_lastOnstageChild];
      for (let i = 0; i < dart.notNull(this[_onstageChildCount]); i = i + 1) {
        if (!(child != null)) dart.assertFailed(null, L46, 758, 14, "child != null");
        let childParentData = stack.StackParentData.as(dart.nullCheck(dart.nullCheck(child).parentData));
        let isHit = result.addWithPaintOffset({offset: childParentData.offset, position: position, hitTest: dart.fn((result, transformed) => {
            if (result == null) dart.nullFailed(L46, 763, 36, "result");
            if (!dart.equals(transformed, position['-'](childParentData.offset))) dart.assertFailed(null, L46, 764, 18, "transformed == position - childParentData.offset");
            return dart.nullCheck(child).hitTest(result, {position: dart.nullCheck(transformed)});
          }, BoxHitTestResultAndOffsetNTobool())});
        if (dart.test(isHit)) return true;
        child = childParentData.previousSibling;
      }
      return false;
    }
    paintStack(context, offset) {
      if (context == null) dart.nullFailed(L46, 776, 35, "context");
      if (offset == null) dart.nullFailed(L46, 776, 51, "offset");
      let child = this[_firstOnstageChild];
      while (child != null) {
        let childParentData = stack.StackParentData.as(dart.nullCheck(child.parentData));
        context.paintChild(child, childParentData.offset['+'](offset));
        child = childParentData.nextSibling;
      }
    }
    paint(context, offset) {
      if (context == null) dart.nullFailed(L46, 786, 30, "context");
      if (offset == null) dart.nullFailed(L46, 786, 46, "offset");
      if (dart.test(this[_hasVisualOverflow]) && !dart.equals(this.clipBehavior, ui.Clip.none)) {
        this[_clipRectLayer] = context.pushClipRect(this.needsCompositing, offset, ui.Offset.zero['&'](this.size), dart.bind(this, 'paintStack'), {clipBehavior: this.clipBehavior, oldLayer: this[_clipRectLayer]});
      } else {
        this[_clipRectLayer] = null;
        this.paintStack(context, offset);
      }
    }
    visitChildrenForSemantics(visitor) {
      if (visitor == null) dart.nullFailed(L46, 799, 54, "visitor");
      let child = this[_firstOnstageChild];
      while (child != null) {
        visitor(child);
        let childParentData = stack.StackParentData.as(dart.nullCheck(child.parentData));
        child = childParentData.nextSibling;
      }
    }
    describeApproximatePaintClip(child) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L46, 809, 51, "child");
      return dart.test(this[_hasVisualOverflow]) ? ui.Offset.zero['&'](this.size) : null;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L46, 812, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.IntProperty.new("skipCount", this.skipCount));
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection));
    }
    debugDescribeChildren() {
      let offstageChildren = JSArrayOfDiagnosticsNode().of([]);
      let onstageChildren = JSArrayOfDiagnosticsNode().of([]);
      let count = 1;
      let onstage = false;
      let child = this.firstChild;
      let firstOnstageChild = this[_firstOnstageChild];
      while (child != null) {
        if (dart.equals(child, firstOnstageChild)) {
          onstage = true;
          count = 1;
        }
        if (onstage) {
          onstageChildren[$add](child.toDiagnosticsNode({name: "onstage " + dart.str(count)}));
        } else {
          offstageChildren[$add](child.toDiagnosticsNode({name: "offstage " + dart.str(count), style: diagnostics$.DiagnosticsTreeStyle.offstage}));
        }
        let childParentData = stack.StackParentData.as(dart.nullCheck(child.parentData));
        child = childParentData.nextSibling;
        count = count + 1;
      }
      return (() => {
        let t42 = JSArrayOfDiagnosticsNode().of([]);
        for (let t43 of onstageChildren)
          t42.push(t43);
        if (dart.test(offstageChildren[$isNotEmpty]))
          for (let t44 of offstageChildren)
            t42.push(t44);
        else
          t42.push(diagnostics$.DiagnosticsNode.message("no offstage children", {style: diagnostics$.DiagnosticsTreeStyle.offstage}));
        return t42;
      })();
    }
  };
  (overlay$._RenderTheatre.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(L46, 589, 28, "textDirection");
    let skipCount = opts && 'skipCount' in opts ? opts.skipCount : 0;
    if (skipCount == null) dart.nullFailed(L46, 590, 9, "skipCount");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C470 || CT.C470;
    if (clipBehavior == null) dart.nullFailed(L46, 591, 10, "clipBehavior");
    this[_hasVisualOverflow] = false;
    this[_resolvedAlignment] = null;
    this[_clipBehavior] = ui.Clip.hardEdge;
    this[_clipRectLayer] = null;
    if (!(skipCount != null)) dart.assertFailed(null, L46, 592, 15, "skipCount != null");
    if (!(dart.notNull(skipCount) >= 0)) dart.assertFailed(null, L46, 593, 15, "skipCount >= 0");
    if (!(textDirection != null)) dart.assertFailed(null, L46, 594, 15, "textDirection != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L46, 595, 15, "clipBehavior != null");
    this[_textDirection] = textDirection;
    this[_skipCount] = skipCount;
    this[_clipBehavior] = clipBehavior;
    overlay$._RenderTheatre.__proto__.new.call(this);
    this.addAll(children);
  }).prototype = overlay$._RenderTheatre.prototype;
  dart.addTypeTests(overlay$._RenderTheatre);
  dart.addTypeCaches(overlay$._RenderTheatre);
  dart.setMethodSignature(overlay$._RenderTheatre, () => ({
    __proto__: dart.getMethods(overlay$._RenderTheatre.__proto__),
    [_resolve]: dart.fnType(dart.void, []),
    [_markNeedResolution]: dart.fnType(dart.void, []),
    paintStack: dart.fnType(dart.void, [object$.PaintingContext, ui.Offset])
  }));
  dart.setGetterSignature(overlay$._RenderTheatre, () => ({
    __proto__: dart.getGetters(overlay$._RenderTheatre.__proto__),
    textDirection: ui.TextDirection,
    skipCount: core.int,
    clipBehavior: ui.Clip,
    [_firstOnstageChild]: dart.nullable(box$.RenderBox),
    [_lastOnstageChild]: dart.nullable(box$.RenderBox),
    [_onstageChildCount]: core.int
  }));
  dart.setSetterSignature(overlay$._RenderTheatre, () => ({
    __proto__: dart.getSetters(overlay$._RenderTheatre.__proto__),
    textDirection: ui.TextDirection,
    skipCount: core.int,
    clipBehavior: ui.Clip
  }));
  dart.setLibraryUri(overlay$._RenderTheatre, L47);
  dart.setFieldSignature(overlay$._RenderTheatre, () => ({
    __proto__: dart.getFields(overlay$._RenderTheatre.__proto__),
    [_hasVisualOverflow]: dart.fieldType(core.bool),
    [_resolvedAlignment]: dart.fieldType(dart.nullable(alignment$.Alignment)),
    [_textDirection]: dart.fieldType(ui.TextDirection),
    [_skipCount]: dart.fieldType(core.int),
    [_clipBehavior]: dart.fieldType(ui.Clip),
    [_clipRectLayer]: dart.fieldType(dart.nullable(layer.ClipRectLayer))
  }));
  var _name$9 = dart.privateName(text_selection, "_name");
  var C485;
  var C486;
  var C487;
  var C488;
  text_selection.TextSelectionHandleType = class TextSelectionHandleType extends core.Object {
    toString() {
      return this[_name$9];
    }
  };
  (text_selection.TextSelectionHandleType.new = function(index, _name) {
    if (index == null) dart.nullFailed(L48, 53, 6, "index");
    if (_name == null) dart.nullFailed(L48, 53, 6, "_name");
    this.index = index;
    this[_name$9] = _name;
    ;
  }).prototype = text_selection.TextSelectionHandleType.prototype;
  dart.addTypeTests(text_selection.TextSelectionHandleType);
  dart.addTypeCaches(text_selection.TextSelectionHandleType);
  dart.setLibraryUri(text_selection.TextSelectionHandleType, L49);
  dart.setFieldSignature(text_selection.TextSelectionHandleType, () => ({
    __proto__: dart.getFields(text_selection.TextSelectionHandleType.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$9]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(text_selection.TextSelectionHandleType, ['toString']);
  text_selection.TextSelectionHandleType.left = C485 || CT.C485;
  text_selection.TextSelectionHandleType.right = C486 || CT.C486;
  text_selection.TextSelectionHandleType.collapsed = C487 || CT.C487;
  text_selection.TextSelectionHandleType.values = C488 || CT.C488;
  var C489;
  var C490;
  var C491;
  text_selection._TextSelectionHandlePosition = class _TextSelectionHandlePosition extends core.Object {
    toString() {
      return this[_name$9];
    }
  };
  (text_selection._TextSelectionHandlePosition.new = function(index, _name) {
    if (index == null) dart.nullFailed(L48, 66, 6, "index");
    if (_name == null) dart.nullFailed(L48, 66, 6, "_name");
    this.index = index;
    this[_name$9] = _name;
    ;
  }).prototype = text_selection._TextSelectionHandlePosition.prototype;
  dart.addTypeTests(text_selection._TextSelectionHandlePosition);
  dart.addTypeCaches(text_selection._TextSelectionHandlePosition);
  dart.setLibraryUri(text_selection._TextSelectionHandlePosition, L49);
  dart.setFieldSignature(text_selection._TextSelectionHandlePosition, () => ({
    __proto__: dart.getFields(text_selection._TextSelectionHandlePosition.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$9]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(text_selection._TextSelectionHandlePosition, ['toString']);
  text_selection._TextSelectionHandlePosition.start = C489 || CT.C489;
  text_selection._TextSelectionHandlePosition.end = C490 || CT.C490;
  text_selection._TextSelectionHandlePosition.values = C491 || CT.C491;
  var shouldPaint = dart.privateName(text_selection, "ToolbarItemsParentData.shouldPaint");
  text_selection.ToolbarItemsParentData = class ToolbarItemsParentData extends box$.ContainerBoxParentData$(box$.RenderBox) {
    get shouldPaint() {
      return this[shouldPaint];
    }
    set shouldPaint(value) {
      this[shouldPaint] = value;
    }
    toString() {
      return dart.str(super.toString()) + "; shouldPaint=" + dart.str(this.shouldPaint);
    }
  };
  (text_selection.ToolbarItemsParentData.new = function() {
    this[shouldPaint] = false;
    text_selection.ToolbarItemsParentData.__proto__.new.call(this);
    ;
  }).prototype = text_selection.ToolbarItemsParentData.prototype;
  dart.addTypeTests(text_selection.ToolbarItemsParentData);
  dart.addTypeCaches(text_selection.ToolbarItemsParentData);
  dart.setLibraryUri(text_selection.ToolbarItemsParentData, L49);
  dart.setFieldSignature(text_selection.ToolbarItemsParentData, () => ({
    __proto__: dart.getFields(text_selection.ToolbarItemsParentData.__proto__),
    shouldPaint: dart.fieldType(core.bool)
  }));
  dart.defineExtensionMethods(text_selection.ToolbarItemsParentData, ['toString']);
  text_selection.TextSelectionControls = class TextSelectionControls extends core.Object {
    canCut(delegate) {
      if (delegate == null) dart.nullFailed(L48, 147, 37, "delegate");
      return dart.test(delegate.cutEnabled) && !dart.test(delegate.textEditingValue.selection.isCollapsed);
    }
    canCopy(delegate) {
      if (delegate == null) dart.nullFailed(L48, 158, 38, "delegate");
      return dart.test(delegate.copyEnabled) && !dart.test(delegate.textEditingValue.selection.isCollapsed);
    }
    canPaste(delegate) {
      if (delegate == null) dart.nullFailed(L48, 171, 39, "delegate");
      return delegate.pasteEnabled;
    }
    canSelectAll(delegate) {
      if (delegate == null) dart.nullFailed(L48, 181, 43, "delegate");
      return dart.test(delegate.selectAllEnabled) && delegate.textEditingValue.text[$isNotEmpty] && dart.test(delegate.textEditingValue.selection.isCollapsed);
    }
    handleCut(delegate) {
      if (delegate == null) dart.nullFailed(L48, 191, 40, "delegate");
      let value = delegate.textEditingValue;
      clipboard.Clipboard.setData(new clipboard.ClipboardData.new({text: value.selection.textInside(value.text)}));
      delegate.textEditingValue = new text_input.TextEditingValue.new({text: dart.notNull(value.selection.textBefore(value.text)) + dart.notNull(value.selection.textAfter(value.text)), selection: new text_editing.TextSelection.collapsed({offset: value.selection.start})});
      delegate.bringIntoView(delegate.textEditingValue.selection.extent);
      delegate.hideToolbar();
    }
    handleCopy(delegate, clipboardStatus) {
      let t45;
      if (delegate == null) dart.nullFailed(L48, 213, 41, "delegate");
      let value = delegate.textEditingValue;
      clipboard.Clipboard.setData(new clipboard.ClipboardData.new({text: value.selection.textInside(value.text)}));
      t45 = clipboardStatus;
      t45 == null ? null : t45.update();
      delegate.textEditingValue = new text_input.TextEditingValue.new({text: value.text, selection: new text_editing.TextSelection.collapsed({offset: value.selection.end})});
      delegate.bringIntoView(delegate.textEditingValue.selection.extent);
      delegate.hideToolbar();
    }
    handlePaste(delegate) {
      if (delegate == null) dart.nullFailed(L48, 238, 50, "delegate");
      return async.async(dart.void, function* handlePaste() {
        let value = delegate.textEditingValue;
        let data = (yield clipboard.Clipboard.getData("text/plain"));
        if (data != null) {
          delegate.textEditingValue = new text_input.TextEditingValue.new({text: dart.notNull(value.selection.textBefore(value.text)) + dart.nullCheck(data.text) + dart.notNull(value.selection.textAfter(value.text)), selection: new text_editing.TextSelection.collapsed({offset: dart.notNull(value.selection.start) + dart.nullCheck(data.text).length})});
        }
        delegate.bringIntoView(delegate.textEditingValue.selection.extent);
        delegate.hideToolbar();
      });
    }
    handleSelectAll(delegate) {
      if (delegate == null) dart.nullFailed(L48, 262, 46, "delegate");
      delegate.textEditingValue = new text_input.TextEditingValue.new({text: delegate.textEditingValue.text, selection: new text_editing.TextSelection.new({baseOffset: 0, extentOffset: delegate.textEditingValue.text.length})});
      delegate.bringIntoView(delegate.textEditingValue.selection.extent);
    }
  };
  (text_selection.TextSelectionControls.new = function() {
    ;
  }).prototype = text_selection.TextSelectionControls.prototype;
  dart.addTypeTests(text_selection.TextSelectionControls);
  dart.addTypeCaches(text_selection.TextSelectionControls);
  dart.setMethodSignature(text_selection.TextSelectionControls, () => ({
    __proto__: dart.getMethods(text_selection.TextSelectionControls.__proto__),
    canCut: dart.fnType(core.bool, [text_input.TextSelectionDelegate]),
    canCopy: dart.fnType(core.bool, [text_input.TextSelectionDelegate]),
    canPaste: dart.fnType(core.bool, [text_input.TextSelectionDelegate]),
    canSelectAll: dart.fnType(core.bool, [text_input.TextSelectionDelegate]),
    handleCut: dart.fnType(dart.void, [text_input.TextSelectionDelegate]),
    handleCopy: dart.fnType(dart.void, [text_input.TextSelectionDelegate, dart.nullable(text_selection.ClipboardStatusNotifier)]),
    handlePaste: dart.fnType(async.Future$(dart.void), [text_input.TextSelectionDelegate]),
    handleSelectAll: dart.fnType(dart.void, [text_input.TextSelectionDelegate])
  }));
  dart.setLibraryUri(text_selection.TextSelectionControls, L49);
  var _name$10 = dart.privateName(recognizer, "_name");
  var C492;
  var __TextSelectionOverlay__toolbarController = dart.privateName(text_selection, "_#TextSelectionOverlay#_toolbarController");
  var __TextSelectionOverlay__toolbarController_isSet = dart.privateName(text_selection, "_#TextSelectionOverlay#_toolbarController#isSet");
  var _handles = dart.privateName(text_selection, "_handles");
  var _toolbar = dart.privateName(text_selection, "_toolbar");
  var _handlesVisible = dart.privateName(text_selection, "_handlesVisible");
  var _value$ = dart.privateName(text_selection, "_value");
  var _toolbarController = dart.privateName(text_selection, "_toolbarController");
  var _toolbarOpacity = dart.privateName(text_selection, "_toolbarOpacity");
  var _selection$ = dart.privateName(text_selection, "_selection");
  var _markNeedsBuild$ = dart.privateName(text_selection, "_markNeedsBuild");
  var _buildHandle = dart.privateName(text_selection, "_buildHandle");
  var _buildToolbar = dart.privateName(text_selection, "_buildToolbar");
  var C493;
  var _handleSelectionHandleChanged = dart.privateName(text_selection, "_handleSelectionHandleChanged");
  var C496;
  var C497;
  var C498;
  var C499;
  var C500;
  var C501;
  var C502;
  var C503;
  var C504;
  var C495;
  var C494;
  var C507;
  var C508;
  var C506;
  var C505;
  var C509;
  var C512;
  var C513;
  var C514;
  var C515;
  var C511;
  var C510;
  var C518;
  var C519;
  var C517;
  var C516;
  var context$ = dart.privateName(text_selection, "TextSelectionOverlay.context");
  var debugRequiredFor$ = dart.privateName(text_selection, "TextSelectionOverlay.debugRequiredFor");
  var toolbarLayerLink$ = dart.privateName(text_selection, "TextSelectionOverlay.toolbarLayerLink");
  var startHandleLayerLink$ = dart.privateName(text_selection, "TextSelectionOverlay.startHandleLayerLink");
  var endHandleLayerLink$ = dart.privateName(text_selection, "TextSelectionOverlay.endHandleLayerLink");
  var renderObject$ = dart.privateName(text_selection, "TextSelectionOverlay.renderObject");
  var selectionControls$ = dart.privateName(text_selection, "TextSelectionOverlay.selectionControls");
  var selectionDelegate$ = dart.privateName(text_selection, "TextSelectionOverlay.selectionDelegate");
  var dragStartBehavior$ = dart.privateName(text_selection, "TextSelectionOverlay.dragStartBehavior");
  var onSelectionHandleTapped$ = dart.privateName(text_selection, "TextSelectionOverlay.onSelectionHandleTapped");
  var clipboardStatus$ = dart.privateName(text_selection, "TextSelectionOverlay.clipboardStatus");
  var C520;
  text_selection.TextSelectionOverlay = class TextSelectionOverlay extends core.Object {
    get context() {
      return this[context$];
    }
    set context(value) {
      super.context = value;
    }
    get debugRequiredFor() {
      return this[debugRequiredFor$];
    }
    set debugRequiredFor(value) {
      super.debugRequiredFor = value;
    }
    get toolbarLayerLink() {
      return this[toolbarLayerLink$];
    }
    set toolbarLayerLink(value) {
      super.toolbarLayerLink = value;
    }
    get startHandleLayerLink() {
      return this[startHandleLayerLink$];
    }
    set startHandleLayerLink(value) {
      super.startHandleLayerLink = value;
    }
    get endHandleLayerLink() {
      return this[endHandleLayerLink$];
    }
    set endHandleLayerLink(value) {
      super.endHandleLayerLink = value;
    }
    get renderObject() {
      return this[renderObject$];
    }
    set renderObject(value) {
      super.renderObject = value;
    }
    get selectionControls() {
      return this[selectionControls$];
    }
    set selectionControls(value) {
      super.selectionControls = value;
    }
    get selectionDelegate() {
      return this[selectionDelegate$];
    }
    set selectionDelegate(value) {
      super.selectionDelegate = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get onSelectionHandleTapped() {
      return this[onSelectionHandleTapped$];
    }
    set onSelectionHandleTapped(value) {
      super.onSelectionHandleTapped = value;
    }
    get clipboardStatus() {
      return this[clipboardStatus$];
    }
    set clipboardStatus(value) {
      super.clipboardStatus = value;
    }
    get [_toolbarController]() {
      let t45;
      return dart.test(this[__TextSelectionOverlay__toolbarController_isSet]) ? (t45 = this[__TextSelectionOverlay__toolbarController], t45) : dart.throw(new _internal.LateError.fieldNI("_toolbarController"));
    }
    set [_toolbarController](t45) {
      if (t45 == null) dart.nullFailed(L48, 377, 28, "null");
      this[__TextSelectionOverlay__toolbarController_isSet] = true;
      this[__TextSelectionOverlay__toolbarController] = t45;
    }
    get [_toolbarOpacity]() {
      return this[_toolbarController].view;
    }
    get value() {
      return this[_value$];
    }
    get [_selection$]() {
      return this[_value$].selection;
    }
    get handlesVisible() {
      return this[_handlesVisible];
    }
    set handlesVisible(visible) {
      if (visible == null) dart.nullFailed(L48, 411, 27, "visible");
      if (!(visible != null)) dart.assertFailed(null, L48, 412, 12, "visible != null");
      if (dart.equals(this[_handlesVisible], visible)) return;
      this[_handlesVisible] = visible;
      if (dart.equals(dart.nullCheck(binding$.SchedulerBinding.instance).schedulerPhase, binding$.SchedulerPhase.persistentCallbacks)) {
        dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.bind(this, _markNeedsBuild$));
      } else {
        this[_markNeedsBuild$]();
      }
    }
    showHandles() {
      if (!(this[_handles] == null)) dart.assertFailed(null, L48, 427, 12, "_handles == null");
      this[_handles] = JSArrayOfOverlayEntry().of([new overlay$.OverlayEntry.new({builder: dart.fn(context => {
            if (context == null) dart.nullFailed(L48, 429, 43, "context");
            return this[_buildHandle](context, text_selection._TextSelectionHandlePosition.start);
          }, BuildContextToWidget())}), new overlay$.OverlayEntry.new({builder: dart.fn(context => {
            if (context == null) dart.nullFailed(L48, 430, 43, "context");
            return this[_buildHandle](context, text_selection._TextSelectionHandlePosition.end);
          }, BuildContextToWidget())})]);
      dart.nullCheck(overlay$.Overlay.of(this.context, {rootOverlay: true, debugRequiredFor: this.debugRequiredFor})).insertAll(dart.nullCheck(this[_handles]));
    }
    hideHandles() {
      if (this[_handles] != null) {
        dart.nullCheck(this[_handles])[$_get](0).remove();
        dart.nullCheck(this[_handles])[$_get](1).remove();
        this[_handles] = null;
      }
    }
    showToolbar() {
      if (!(this[_toolbar] == null)) dart.assertFailed(null, L48, 447, 12, "_toolbar == null");
      this[_toolbar] = new overlay$.OverlayEntry.new({builder: dart.bind(this, _buildToolbar)});
      dart.nullCheck(overlay$.Overlay.of(this.context, {rootOverlay: true, debugRequiredFor: this.debugRequiredFor})).insert(dart.nullCheck(this[_toolbar]));
      this[_toolbarController].forward({from: 0.0});
    }
    update(newValue) {
      if (newValue == null) dart.nullFailed(L48, 462, 32, "newValue");
      if (dart.equals(this[_value$], newValue)) return;
      this[_value$] = newValue;
      if (dart.equals(dart.nullCheck(binding$.SchedulerBinding.instance).schedulerPhase, binding$.SchedulerPhase.persistentCallbacks)) {
        dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.bind(this, _markNeedsBuild$));
      } else {
        this[_markNeedsBuild$]();
      }
    }
    updateForScroll() {
      this[_markNeedsBuild$]();
    }
    [_markNeedsBuild$](duration = null) {
      let t46;
      if (this[_handles] != null) {
        dart.nullCheck(this[_handles])[$_get](0).markNeedsBuild();
        dart.nullCheck(this[_handles])[$_get](1).markNeedsBuild();
      }
      t46 = this[_toolbar];
      t46 == null ? null : t46.markNeedsBuild();
    }
    get handlesAreVisible() {
      return this[_handles] != null && dart.test(this.handlesVisible);
    }
    get toolbarIsVisible() {
      return this[_toolbar] != null;
    }
    hide() {
      if (this[_handles] != null) {
        dart.nullCheck(this[_handles])[$_get](0).remove();
        dart.nullCheck(this[_handles])[$_get](1).remove();
        this[_handles] = null;
      }
      if (this[_toolbar] != null) {
        this.hideToolbar();
      }
    }
    hideToolbar() {
      if (!(this[_toolbar] != null)) dart.assertFailed(null, L48, 511, 12, "_toolbar != null");
      this[_toolbarController].stop();
      dart.nullCheck(this[_toolbar]).remove();
      this[_toolbar] = null;
    }
    dispose() {
      this.hide();
      this[_toolbarController].dispose();
    }
    [_buildHandle](context, position) {
      if (context == null) dart.nullFailed(L48, 523, 36, "context");
      if (position == null) dart.nullFailed(L48, 523, 74, "position");
      if (dart.test(this[_selection$].isCollapsed) && dart.equals(position, text_selection._TextSelectionHandlePosition.end) || this.selectionControls == null) return new container.Container.new({$creationLocationd_0dea112b090073317d4: C493 || CT.C493});
      return new visibility.Visibility.new({visible: this.handlesVisible, child: new text_selection._TextSelectionHandleOverlay.new({onSelectionHandleChanged: dart.fn(newSelection => {
            if (newSelection == null) dart.nullFailed(L48, 530, 50, "newSelection");
            this[_handleSelectionHandleChanged](newSelection, position);
          }, TextSelectionTovoid()), onSelectionHandleTapped: this.onSelectionHandleTapped, startHandleLayerLink: this.startHandleLayerLink, endHandleLayerLink: this.endHandleLayerLink, renderObject: this.renderObject, selection: this[_selection$], selectionControls: this.selectionControls, position: position, dragStartBehavior: this.dragStartBehavior, $creationLocationd_0dea112b090073317d4: C494 || CT.C494}), $creationLocationd_0dea112b090073317d4: C505 || CT.C505});
    }
    [_buildToolbar](context) {
      if (context == null) dart.nullFailed(L48, 542, 37, "context");
      if (this.selectionControls == null) return new container.Container.new({$creationLocationd_0dea112b090073317d4: C509 || CT.C509});
      let endpoints = this.renderObject.getEndpointsForSelection(this[_selection$]);
      let editingRegion = new ui.Rect.fromPoints(this.renderObject.localToGlobal(ui.Offset.zero), this.renderObject.localToGlobal(this.renderObject.size.bottomRight(ui.Offset.zero)));
      let isMultiline = dart.notNull(endpoints[$last].point.dy) - dart.notNull(endpoints[$first].point.dy) > dart.notNull(this.renderObject.preferredLineHeight) / 2;
      let midX = isMultiline ? dart.notNull(editingRegion.width) / 2 : (dart.notNull(endpoints[$first].point.dx) + dart.notNull(endpoints[$last].point.dx)) / 2;
      let midpoint = new ui.Offset.new(midX, dart.notNull(endpoints[$_get](0).point.dy) - dart.notNull(this.renderObject.preferredLineHeight));
      return new transitions.FadeTransition.new({opacity: this[_toolbarOpacity], child: new basic.CompositedTransformFollower.new({link: this.toolbarLayerLink, showWhenUnlinked: false, offset: editingRegion.topLeft._negate(), child: dart.nullCheck(this.selectionControls).buildToolbar(context, editingRegion, this.renderObject.preferredLineHeight, midpoint, endpoints, dart.nullCheck(this.selectionDelegate), dart.nullCheck(this.clipboardStatus)), $creationLocationd_0dea112b090073317d4: C510 || CT.C510}), $creationLocationd_0dea112b090073317d4: C516 || CT.C516});
    }
    [_handleSelectionHandleChanged](newSelection, position) {
      if (newSelection == null) dart.nullFailed(L48, 589, 52, "newSelection");
      if (position == null) dart.nullFailed(L48, 589, 95, "position");
      let textPosition = null;
      switch (position) {
        case C489 || CT.C489:
        {
          textPosition = newSelection.base;
          break;
        }
        case C490 || CT.C490:
        {
          textPosition = newSelection.extent;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      dart.nullCheck(this.selectionDelegate).textEditingValue = this[_value$].copyWith({selection: newSelection, composing: ui.TextRange.empty});
      dart.nullCheck(this.selectionDelegate).bringIntoView(textPosition);
    }
  };
  (text_selection.TextSelectionOverlay.new = function(opts) {
    let value = opts && 'value' in opts ? opts.value : null;
    if (value == null) dart.nullFailed(L48, 283, 31, "value");
    let context = opts && 'context' in opts ? opts.context : null;
    if (context == null) dart.nullFailed(L48, 284, 19, "context");
    let debugRequiredFor = opts && 'debugRequiredFor' in opts ? opts.debugRequiredFor : null;
    let toolbarLayerLink = opts && 'toolbarLayerLink' in opts ? opts.toolbarLayerLink : null;
    if (toolbarLayerLink == null) dart.nullFailed(L48, 286, 19, "toolbarLayerLink");
    let startHandleLayerLink = opts && 'startHandleLayerLink' in opts ? opts.startHandleLayerLink : null;
    if (startHandleLayerLink == null) dart.nullFailed(L48, 287, 19, "startHandleLayerLink");
    let endHandleLayerLink = opts && 'endHandleLayerLink' in opts ? opts.endHandleLayerLink : null;
    if (endHandleLayerLink == null) dart.nullFailed(L48, 288, 19, "endHandleLayerLink");
    let renderObject = opts && 'renderObject' in opts ? opts.renderObject : null;
    if (renderObject == null) dart.nullFailed(L48, 289, 19, "renderObject");
    let selectionControls = opts && 'selectionControls' in opts ? opts.selectionControls : null;
    let handlesVisible = opts && 'handlesVisible' in opts ? opts.handlesVisible : false;
    if (handlesVisible == null) dart.nullFailed(L48, 291, 10, "handlesVisible");
    let selectionDelegate = opts && 'selectionDelegate' in opts ? opts.selectionDelegate : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C492 || CT.C492;
    if (dragStartBehavior == null) dart.nullFailed(L48, 293, 10, "dragStartBehavior");
    let onSelectionHandleTapped = opts && 'onSelectionHandleTapped' in opts ? opts.onSelectionHandleTapped : null;
    let clipboardStatus = opts && 'clipboardStatus' in opts ? opts.clipboardStatus : null;
    this[__TextSelectionOverlay__toolbarController] = null;
    this[__TextSelectionOverlay__toolbarController_isSet] = false;
    this[_handles] = null;
    this[_toolbar] = null;
    this[_handlesVisible] = false;
    this[context$] = context;
    this[debugRequiredFor$] = debugRequiredFor;
    this[toolbarLayerLink$] = toolbarLayerLink;
    this[startHandleLayerLink$] = startHandleLayerLink;
    this[endHandleLayerLink$] = endHandleLayerLink;
    this[renderObject$] = renderObject;
    this[selectionControls$] = selectionControls;
    this[selectionDelegate$] = selectionDelegate;
    this[dragStartBehavior$] = dragStartBehavior;
    this[onSelectionHandleTapped$] = onSelectionHandleTapped;
    this[clipboardStatus$] = clipboardStatus;
    if (!(value != null)) dart.assertFailed(null, L48, 296, 15, "value != null");
    if (!(context != null)) dart.assertFailed(null, L48, 297, 15, "context != null");
    if (!(handlesVisible != null)) dart.assertFailed(null, L48, 298, 15, "handlesVisible != null");
    this[_handlesVisible] = handlesVisible;
    this[_value$] = value;
    let overlay = overlay$.Overlay.of(this.context, {rootOverlay: true});
    if (!(overlay != null)) dart.assertFailed("No Overlay widget exists above " + dart.str(this.context) + ".\n" + "Usually the Navigator created by WidgetsApp provides the overlay. Perhaps your " + "app content was created above the Navigator with the WidgetsApp builder parameter.", L48, 302, 12, "overlay != null");
    this[_toolbarController] = new animation_controller.AnimationController.new({duration: text_selection.TextSelectionOverlay.fadeDuration, vsync: dart.nullCheck(overlay)});
  }).prototype = text_selection.TextSelectionOverlay.prototype;
  dart.addTypeTests(text_selection.TextSelectionOverlay);
  dart.addTypeCaches(text_selection.TextSelectionOverlay);
  dart.setMethodSignature(text_selection.TextSelectionOverlay, () => ({
    __proto__: dart.getMethods(text_selection.TextSelectionOverlay.__proto__),
    showHandles: dart.fnType(dart.void, []),
    hideHandles: dart.fnType(dart.void, []),
    showToolbar: dart.fnType(dart.void, []),
    update: dart.fnType(dart.void, [text_input.TextEditingValue]),
    updateForScroll: dart.fnType(dart.void, []),
    [_markNeedsBuild$]: dart.fnType(dart.void, [], [dart.nullable(core.Duration)]),
    hide: dart.fnType(dart.void, []),
    hideToolbar: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, []),
    [_buildHandle]: dart.fnType(framework.Widget, [framework.BuildContext, text_selection._TextSelectionHandlePosition]),
    [_buildToolbar]: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_handleSelectionHandleChanged]: dart.fnType(dart.void, [text_editing.TextSelection, text_selection._TextSelectionHandlePosition])
  }));
  dart.setGetterSignature(text_selection.TextSelectionOverlay, () => ({
    __proto__: dart.getGetters(text_selection.TextSelectionOverlay.__proto__),
    [_toolbarController]: animation_controller.AnimationController,
    [_toolbarOpacity]: animation.Animation$(core.double),
    value: text_input.TextEditingValue,
    [_selection$]: text_editing.TextSelection,
    handlesVisible: core.bool,
    handlesAreVisible: core.bool,
    toolbarIsVisible: core.bool
  }));
  dart.setSetterSignature(text_selection.TextSelectionOverlay, () => ({
    __proto__: dart.getSetters(text_selection.TextSelectionOverlay.__proto__),
    [_toolbarController]: animation_controller.AnimationController,
    handlesVisible: core.bool
  }));
  dart.setLibraryUri(text_selection.TextSelectionOverlay, L49);
  dart.setFieldSignature(text_selection.TextSelectionOverlay, () => ({
    __proto__: dart.getFields(text_selection.TextSelectionOverlay.__proto__),
    context: dart.finalFieldType(framework.BuildContext),
    debugRequiredFor: dart.finalFieldType(dart.nullable(framework.Widget)),
    toolbarLayerLink: dart.finalFieldType(layer.LayerLink),
    startHandleLayerLink: dart.finalFieldType(layer.LayerLink),
    endHandleLayerLink: dart.finalFieldType(layer.LayerLink),
    renderObject: dart.finalFieldType(editable.RenderEditable),
    selectionControls: dart.finalFieldType(dart.nullable(text_selection.TextSelectionControls)),
    selectionDelegate: dart.finalFieldType(dart.nullable(text_input.TextSelectionDelegate)),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    onSelectionHandleTapped: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    clipboardStatus: dart.finalFieldType(dart.nullable(text_selection.ClipboardStatusNotifier)),
    [__TextSelectionOverlay__toolbarController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [__TextSelectionOverlay__toolbarController_isSet]: dart.fieldType(core.bool),
    [_value$]: dart.fieldType(text_input.TextEditingValue),
    [_handles]: dart.fieldType(dart.nullable(core.List$(overlay$.OverlayEntry))),
    [_toolbar]: dart.fieldType(dart.nullable(overlay$.OverlayEntry)),
    [_handlesVisible]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(text_selection.TextSelectionOverlay, {
    /*text_selection.TextSelectionOverlay.fadeDuration*/get fadeDuration() {
      return C520 || CT.C520;
    }
  }, false);
  var _visibility = dart.privateName(text_selection, "_visibility");
  var selection$0 = dart.privateName(text_selection, "_TextSelectionHandleOverlay.selection");
  var position$0 = dart.privateName(text_selection, "_TextSelectionHandleOverlay.position");
  var startHandleLayerLink$0 = dart.privateName(text_selection, "_TextSelectionHandleOverlay.startHandleLayerLink");
  var endHandleLayerLink$0 = dart.privateName(text_selection, "_TextSelectionHandleOverlay.endHandleLayerLink");
  var renderObject$0 = dart.privateName(text_selection, "_TextSelectionHandleOverlay.renderObject");
  var onSelectionHandleChanged$ = dart.privateName(text_selection, "_TextSelectionHandleOverlay.onSelectionHandleChanged");
  var onSelectionHandleTapped$0 = dart.privateName(text_selection, "_TextSelectionHandleOverlay.onSelectionHandleTapped");
  var selectionControls$0 = dart.privateName(text_selection, "_TextSelectionHandleOverlay.selectionControls");
  var dragStartBehavior$0 = dart.privateName(text_selection, "_TextSelectionHandleOverlay.dragStartBehavior");
  text_selection._TextSelectionHandleOverlay = class _TextSelectionHandleOverlay extends framework.StatefulWidget {
    get selection() {
      return this[selection$0];
    }
    set selection(value) {
      super.selection = value;
    }
    get position() {
      return this[position$0];
    }
    set position(value) {
      super.position = value;
    }
    get startHandleLayerLink() {
      return this[startHandleLayerLink$0];
    }
    set startHandleLayerLink(value) {
      super.startHandleLayerLink = value;
    }
    get endHandleLayerLink() {
      return this[endHandleLayerLink$0];
    }
    set endHandleLayerLink(value) {
      super.endHandleLayerLink = value;
    }
    get renderObject() {
      return this[renderObject$0];
    }
    set renderObject(value) {
      super.renderObject = value;
    }
    get onSelectionHandleChanged() {
      return this[onSelectionHandleChanged$];
    }
    set onSelectionHandleChanged(value) {
      super.onSelectionHandleChanged = value;
    }
    get onSelectionHandleTapped() {
      return this[onSelectionHandleTapped$0];
    }
    set onSelectionHandleTapped(value) {
      super.onSelectionHandleTapped = value;
    }
    get selectionControls() {
      return this[selectionControls$0];
    }
    set selectionControls(value) {
      super.selectionControls = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$0];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    createState() {
      return new text_selection._TextSelectionHandleOverlayState.new();
    }
    get [_visibility]() {
      switch (this.position) {
        case C489 || CT.C489:
        {
          return this.renderObject.selectionStartInViewport;
        }
        case C490 || CT.C490:
        {
          return this.renderObject.selectionEndInViewport;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
  };
  (text_selection._TextSelectionHandleOverlay.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let selection = opts && 'selection' in opts ? opts.selection : null;
    if (selection == null) dart.nullFailed(L48, 608, 19, "selection");
    let position = opts && 'position' in opts ? opts.position : null;
    if (position == null) dart.nullFailed(L48, 609, 19, "position");
    let startHandleLayerLink = opts && 'startHandleLayerLink' in opts ? opts.startHandleLayerLink : null;
    if (startHandleLayerLink == null) dart.nullFailed(L48, 610, 19, "startHandleLayerLink");
    let endHandleLayerLink = opts && 'endHandleLayerLink' in opts ? opts.endHandleLayerLink : null;
    if (endHandleLayerLink == null) dart.nullFailed(L48, 611, 19, "endHandleLayerLink");
    let renderObject = opts && 'renderObject' in opts ? opts.renderObject : null;
    if (renderObject == null) dart.nullFailed(L48, 612, 19, "renderObject");
    let onSelectionHandleChanged = opts && 'onSelectionHandleChanged' in opts ? opts.onSelectionHandleChanged : null;
    if (onSelectionHandleChanged == null) dart.nullFailed(L48, 613, 19, "onSelectionHandleChanged");
    let onSelectionHandleTapped = opts && 'onSelectionHandleTapped' in opts ? opts.onSelectionHandleTapped : null;
    let selectionControls = opts && 'selectionControls' in opts ? opts.selectionControls : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C492 || CT.C492;
    if (dragStartBehavior == null) dart.nullFailed(L48, 616, 10, "dragStartBehavior");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[selection$0] = selection;
    this[position$0] = position;
    this[startHandleLayerLink$0] = startHandleLayerLink;
    this[endHandleLayerLink$0] = endHandleLayerLink;
    this[renderObject$0] = renderObject;
    this[onSelectionHandleChanged$] = onSelectionHandleChanged;
    this[onSelectionHandleTapped$0] = onSelectionHandleTapped;
    this[selectionControls$0] = selectionControls;
    this[dragStartBehavior$0] = dragStartBehavior;
    text_selection._TextSelectionHandleOverlay.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_selection._TextSelectionHandleOverlay.prototype;
  dart.addTypeTests(text_selection._TextSelectionHandleOverlay);
  dart.addTypeCaches(text_selection._TextSelectionHandleOverlay);
  dart.setMethodSignature(text_selection._TextSelectionHandleOverlay, () => ({
    __proto__: dart.getMethods(text_selection._TextSelectionHandleOverlay.__proto__),
    createState: dart.fnType(text_selection._TextSelectionHandleOverlayState, [])
  }));
  dart.setGetterSignature(text_selection._TextSelectionHandleOverlay, () => ({
    __proto__: dart.getGetters(text_selection._TextSelectionHandleOverlay.__proto__),
    [_visibility]: change_notifier.ValueListenable$(core.bool)
  }));
  dart.setLibraryUri(text_selection._TextSelectionHandleOverlay, L49);
  dart.setFieldSignature(text_selection._TextSelectionHandleOverlay, () => ({
    __proto__: dart.getFields(text_selection._TextSelectionHandleOverlay.__proto__),
    selection: dart.finalFieldType(text_editing.TextSelection),
    position: dart.finalFieldType(text_selection._TextSelectionHandlePosition),
    startHandleLayerLink: dart.finalFieldType(layer.LayerLink),
    endHandleLayerLink: dart.finalFieldType(layer.LayerLink),
    renderObject: dart.finalFieldType(editable.RenderEditable),
    onSelectionHandleChanged: dart.finalFieldType(dart.fnType(dart.void, [text_editing.TextSelection])),
    onSelectionHandleTapped: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    selectionControls: dart.finalFieldType(dart.nullable(text_selection.TextSelectionControls)),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior)
  }));
  var ___TextSelectionHandleOverlayState__dragPosition = dart.privateName(text_selection, "_#_TextSelectionHandleOverlayState#_dragPosition");
  var ___TextSelectionHandleOverlayState__dragPosition_isSet = dart.privateName(text_selection, "_#_TextSelectionHandleOverlayState#_dragPosition#isSet");
  var ___TextSelectionHandleOverlayState__controller = dart.privateName(text_selection, "_#_TextSelectionHandleOverlayState#_controller");
  var ___TextSelectionHandleOverlayState__controller_isSet = dart.privateName(text_selection, "_#_TextSelectionHandleOverlayState#_controller#isSet");
  var _dragPosition = dart.privateName(text_selection, "_dragPosition");
  var _controller$ = dart.privateName(text_selection, "_controller");
  var _opacity = dart.privateName(text_selection, "_opacity");
  var _handleVisibilityChanged = dart.privateName(text_selection, "_handleVisibilityChanged");
  var _handleDragStart = dart.privateName(text_selection, "_handleDragStart");
  var _handleDragUpdate = dart.privateName(text_selection, "_handleDragUpdate");
  var _handleTap$0 = dart.privateName(text_selection, "_handleTap");
  var _chooseType = dart.privateName(text_selection, "_chooseType");
  var C523;
  var C524;
  var C522;
  var C521;
  var C527;
  var C528;
  var C529;
  var C530;
  var C531;
  var C532;
  var C526;
  var C525;
  var C535;
  var C536;
  var C537;
  var C538;
  var C534;
  var C533;
  var C541;
  var C542;
  var C540;
  var C539;
  var C545;
  var C546;
  var C547;
  var C548;
  var C544;
  var C543;
  var _ticker = dart.privateName(ticker_provider, "_ticker");
  const _is_SingleTickerProviderStateMixin_default = Symbol('_is_SingleTickerProviderStateMixin_default');
  ticker_provider.SingleTickerProviderStateMixin$ = dart.generic(T => {
    class SingleTickerProviderStateMixin extends framework.State$(T) {}
    SingleTickerProviderStateMixin[dart.mixinOn] = State => class SingleTickerProviderStateMixin extends State {
      createTicker(onTick) {
        if (onTick == null) dart.nullFailed(L36, 115, 38, "onTick");
        if (!dart.test(dart.fn(() => {
          if (this[_ticker] == null) return true;
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(this[$runtimeType]) + " is a SingleTickerProviderStateMixin but multiple tickers were created."), new assertions.ErrorDescription.new("A SingleTickerProviderStateMixin can only be used as a TickerProvider once."), new assertions.ErrorHint.new("If a State is used for multiple AnimationController objects, or if it is passed to other " + "objects and those objects might use it more than one time in total, then instead of " + "mixing in a SingleTickerProviderStateMixin, use a regular TickerProviderStateMixin.")])));
        }, VoidTobool())())) dart.assertFailed(null, L36, 116, 12, "() {\r\n      if (_ticker == null)\r\n        return true;\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('$runtimeType is a SingleTickerProviderStateMixin but multiple tickers were created.'),\r\n        ErrorDescription('A SingleTickerProviderStateMixin can only be used as a TickerProvider once.'),\r\n        ErrorHint(\r\n          'If a State is used for multiple AnimationController objects, or if it is passed to other '\r\n          'objects and those objects might use it more than one time in total, then instead of '\r\n          'mixing in a SingleTickerProviderStateMixin, use a regular TickerProviderStateMixin.'\r\n        )\r\n      ]);\r\n    }()");
        this[_ticker] = new ticker.Ticker.new(onTick, {debugLabel: true ? "created by " + dart.str(this) : null});
        return dart.nullCheck(this[_ticker]);
      }
      dispose() {
        if (!dart.test(dart.fn(() => {
          if (this[_ticker] == null || !dart.test(dart.nullCheck(this[_ticker]).isActive)) return true;
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(this) + " was disposed with an active Ticker."), new assertions.ErrorDescription.new(dart.str(this[$runtimeType]) + " created a Ticker via its SingleTickerProviderStateMixin, but at the time " + "dispose() was called on the mixin, that Ticker was still active. The Ticker must " + "be disposed before calling super.dispose()."), new assertions.ErrorHint.new("Tickers used by AnimationControllers " + "should be disposed by calling dispose() on the AnimationController itself. " + "Otherwise, the ticker will leak."), dart.nullCheck(this[_ticker]).describeForError("The offending ticker was")])));
        }, VoidTobool())())) dart.assertFailed(null, L36, 139, 12, "() {\r\n      if (_ticker == null || !_ticker!.isActive)\r\n        return true;\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('$this was disposed with an active Ticker.'),\r\n        ErrorDescription(\r\n          '$runtimeType created a Ticker via its SingleTickerProviderStateMixin, but at the time '\r\n          'dispose() was called on the mixin, that Ticker was still active. The Ticker must '\r\n          'be disposed before calling super.dispose().'\r\n        ),\r\n        ErrorHint(\r\n          'Tickers used by AnimationControllers '\r\n          'should be disposed by calling dispose() on the AnimationController itself. '\r\n          'Otherwise, the ticker will leak.'\r\n        ),\r\n        _ticker!.describeForError('The offending ticker was')\r\n      ]);\r\n    }()");
        super.dispose();
      }
      didChangeDependencies() {
        if (this[_ticker] != null) dart.nullCheck(this[_ticker]).muted = !dart.test(ticker_provider.TickerMode.of(this.context));
        super.didChangeDependencies();
      }
      debugFillProperties(properties) {
        if (properties == null) dart.nullFailed(L36, 168, 56, "properties");
        super.debugFillProperties(properties);
        let tickerDescription = null;
        if (this[_ticker] != null) {
          if (dart.test(dart.nullCheck(this[_ticker]).isActive) && dart.test(dart.nullCheck(this[_ticker]).muted))
            tickerDescription = "active but muted";
          else if (dart.test(dart.nullCheck(this[_ticker]).isActive))
            tickerDescription = "active";
          else if (dart.test(dart.nullCheck(this[_ticker]).muted))
            tickerDescription = "inactive and muted";
          else
            tickerDescription = "inactive";
        }
        properties.add(new (DiagnosticsPropertyOfTicker()).new("ticker", this[_ticker], {description: tickerDescription, showSeparator: false, defaultValue: null}));
      }
    };
    (SingleTickerProviderStateMixin[dart.mixinNew] = function() {
      this[_ticker] = null;
    }).prototype = SingleTickerProviderStateMixin.prototype;
    dart.addTypeTests(SingleTickerProviderStateMixin);
    SingleTickerProviderStateMixin.prototype[_is_SingleTickerProviderStateMixin_default] = true;
    dart.addTypeCaches(SingleTickerProviderStateMixin);
    SingleTickerProviderStateMixin[dart.implements] = () => [ticker.TickerProvider, framework.State$(T)];
    dart.setMethodSignature(SingleTickerProviderStateMixin, () => ({
      __proto__: dart.getMethods(SingleTickerProviderStateMixin.__proto__),
      createTicker: dart.fnType(ticker.Ticker, [dart.fnType(dart.void, [core.Duration])])
    }));
    dart.setLibraryUri(SingleTickerProviderStateMixin, L37);
    dart.setFieldSignature(SingleTickerProviderStateMixin, () => ({
      __proto__: dart.getFields(SingleTickerProviderStateMixin.__proto__),
      [_ticker]: dart.fieldType(dart.nullable(ticker.Ticker))
    }));
    return SingleTickerProviderStateMixin;
  });
  ticker_provider.SingleTickerProviderStateMixin = ticker_provider.SingleTickerProviderStateMixin$();
  dart.addTypeTests(ticker_provider.SingleTickerProviderStateMixin, _is_SingleTickerProviderStateMixin_default);
  const State_SingleTickerProviderStateMixin$36 = class State_SingleTickerProviderStateMixin extends framework.State$(text_selection._TextSelectionHandleOverlay) {};
  (State_SingleTickerProviderStateMixin$36.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(text_selection._TextSelectionHandleOverlay)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36, ticker_provider.SingleTickerProviderStateMixin$(text_selection._TextSelectionHandleOverlay));
  text_selection._TextSelectionHandleOverlayState = class _TextSelectionHandleOverlayState extends State_SingleTickerProviderStateMixin$36 {
    get [_dragPosition]() {
      let t46;
      return dart.test(this[___TextSelectionHandleOverlayState__dragPosition_isSet]) ? (t46 = this[___TextSelectionHandleOverlayState__dragPosition], t46) : dart.throw(new _internal.LateError.fieldNI("_dragPosition"));
    }
    set [_dragPosition](t46) {
      if (t46 == null) dart.nullFailed(L48, 644, 15, "null");
      this[___TextSelectionHandleOverlayState__dragPosition_isSet] = true;
      this[___TextSelectionHandleOverlayState__dragPosition] = t46;
    }
    get [_controller$]() {
      let t47;
      return dart.test(this[___TextSelectionHandleOverlayState__controller_isSet]) ? (t47 = this[___TextSelectionHandleOverlayState__controller], t47) : dart.throw(new _internal.LateError.fieldNI("_controller"));
    }
    set [_controller$](t47) {
      if (t47 == null) dart.nullFailed(L48, 646, 28, "null");
      this[___TextSelectionHandleOverlayState__controller_isSet] = true;
      this[___TextSelectionHandleOverlayState__controller] = t47;
    }
    get [_opacity]() {
      return this[_controller$].view;
    }
    initState() {
      super.initState();
      this[_controller$] = new animation_controller.AnimationController.new({duration: text_selection.TextSelectionOverlay.fadeDuration, vsync: this});
      this[_handleVisibilityChanged]();
      this.widget[_visibility].addListener(dart.bind(this, _handleVisibilityChanged));
    }
    [_handleVisibilityChanged]() {
      if (dart.test(this.widget[_visibility].value)) {
        this[_controller$].forward();
      } else {
        this[_controller$].reverse();
      }
    }
    didUpdateWidget(oldWidget) {
      text_selection._TextSelectionHandleOverlay.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L48, 668, 52, "oldWidget");
      super.didUpdateWidget(oldWidget);
      oldWidget[_visibility].removeListener(dart.bind(this, _handleVisibilityChanged));
      this[_handleVisibilityChanged]();
      this.widget[_visibility].addListener(dart.bind(this, _handleVisibilityChanged));
    }
    dispose() {
      this.widget[_visibility].removeListener(dart.bind(this, _handleVisibilityChanged));
      this[_controller$].dispose();
      super.dispose();
    }
    [_handleDragStart](details) {
      if (details == null) dart.nullFailed(L48, 682, 42, "details");
      let handleSize = dart.nullCheck(this.widget.selectionControls).getHandleSize(this.widget.renderObject.preferredLineHeight);
      this[_dragPosition] = details.globalPosition['+'](new ui.Offset.new(0.0, -dart.notNull(handleSize.height)));
    }
    [_handleDragUpdate](details) {
      let t49, t48, t49$, t48$;
      if (details == null) dart.nullFailed(L48, 689, 44, "details");
      this[_dragPosition] = this[_dragPosition]['+'](details.delta);
      let position = this.widget.renderObject.getPositionForPoint(this[_dragPosition]);
      if (dart.test(this.widget.selection.isCollapsed)) {
        t48 = this.widget;
        t49 = new text_editing.TextSelection.fromPosition(position);
        t48.onSelectionHandleChanged(t49);
        return;
      }
      let newSelection = null;
      switch (this.widget.position) {
        case C489 || CT.C489:
        {
          newSelection = new text_editing.TextSelection.new({baseOffset: position.offset, extentOffset: this.widget.selection.extentOffset});
          break;
        }
        case C490 || CT.C490:
        {
          newSelection = new text_editing.TextSelection.new({baseOffset: this.widget.selection.baseOffset, extentOffset: position.offset});
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      if (dart.notNull(newSelection.baseOffset) >= dart.notNull(newSelection.extentOffset)) return;
      t48$ = this.widget;
      t49$ = newSelection;
      t48$.onSelectionHandleChanged(t49$);
    }
    [_handleTap$0]() {
      if (this.widget.onSelectionHandleTapped != null) dart.nullCheck(this.widget.onSelectionHandleTapped)();
    }
    build(context) {
      if (context == null) dart.nullFailed(L48, 726, 29, "context");
      let layerLink = null;
      let type = null;
      switch (this.widget.position) {
        case C489 || CT.C489:
        {
          layerLink = this.widget.startHandleLayerLink;
          type = this[_chooseType](this.widget.renderObject.textDirection, text_selection.TextSelectionHandleType.left, text_selection.TextSelectionHandleType.right);
          break;
        }
        case C490 || CT.C490:
        {
          if (!!dart.test(this.widget.selection.isCollapsed)) dart.assertFailed(null, L48, 741, 16, "!widget.selection.isCollapsed");
          layerLink = this.widget.endHandleLayerLink;
          type = this[_chooseType](this.widget.renderObject.textDirection, text_selection.TextSelectionHandleType.right, text_selection.TextSelectionHandleType.left);
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let handleAnchor = dart.nullCheck(this.widget.selectionControls).getHandleAnchor(type, this.widget.renderObject.preferredLineHeight);
      let handleSize = dart.nullCheck(this.widget.selectionControls).getHandleSize(this.widget.renderObject.preferredLineHeight);
      let handleRect = new ui.Rect.fromLTWH(-dart.notNull(handleAnchor.dx), -dart.notNull(handleAnchor.dy), handleSize.width, handleSize.height);
      let interactiveRect = handleRect.expandToInclude(new ui.Rect.fromCircle({center: handleRect.center, radius: 48 / 2}));
      let padding = new stack.RelativeRect.fromLTRB(math.max(core.double, (dart.notNull(interactiveRect.width) - dart.notNull(handleRect.width)) / 2, 0.0), math.max(core.double, (dart.notNull(interactiveRect.height) - dart.notNull(handleRect.height)) / 2, 0.0), math.max(core.double, (dart.notNull(interactiveRect.width) - dart.notNull(handleRect.width)) / 2, 0.0), math.max(core.double, (dart.notNull(interactiveRect.height) - dart.notNull(handleRect.height)) / 2, 0.0));
      return new basic.CompositedTransformFollower.new({link: layerLink, offset: interactiveRect.topLeft, showWhenUnlinked: false, child: new transitions.FadeTransition.new({opacity: this[_opacity], child: new container.Container.new({alignment: alignment$.Alignment.topLeft, width: interactiveRect.width, height: interactiveRect.height, child: new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.translucent, dragStartBehavior: this.widget.dragStartBehavior, onPanStart: dart.bind(this, _handleDragStart), onPanUpdate: dart.bind(this, _handleDragUpdate), onTap: dart.bind(this, _handleTap$0), child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({left: padding.left, top: padding.top, right: padding.right, bottom: padding.bottom}), child: dart.nullCheck(this.widget.selectionControls).buildHandle(context, type, this.widget.renderObject.preferredLineHeight), $creationLocationd_0dea112b090073317d4: C521 || CT.C521}), $creationLocationd_0dea112b090073317d4: C525 || CT.C525}), $creationLocationd_0dea112b090073317d4: C533 || CT.C533}), $creationLocationd_0dea112b090073317d4: C539 || CT.C539}), $creationLocationd_0dea112b090073317d4: C543 || CT.C543});
    }
    [_chooseType](textDirection, ltrType, rtlType) {
      if (textDirection == null) dart.nullFailed(L48, 813, 19, "textDirection");
      if (ltrType == null) dart.nullFailed(L48, 814, 29, "ltrType");
      if (rtlType == null) dart.nullFailed(L48, 815, 29, "rtlType");
      if (dart.test(this.widget.selection.isCollapsed)) return text_selection.TextSelectionHandleType.collapsed;
      if (!(textDirection != null)) dart.assertFailed(null, L48, 820, 12, "textDirection != null");
      switch (textDirection) {
        case C80 || CT.C80:
        {
          return ltrType;
        }
        case C79 || CT.C79:
        {
          return rtlType;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
  };
  (text_selection._TextSelectionHandleOverlayState.new = function() {
    this[___TextSelectionHandleOverlayState__dragPosition] = null;
    this[___TextSelectionHandleOverlayState__dragPosition_isSet] = false;
    this[___TextSelectionHandleOverlayState__controller] = null;
    this[___TextSelectionHandleOverlayState__controller_isSet] = false;
    text_selection._TextSelectionHandleOverlayState.__proto__.new.call(this);
    ;
  }).prototype = text_selection._TextSelectionHandleOverlayState.prototype;
  dart.addTypeTests(text_selection._TextSelectionHandleOverlayState);
  dart.addTypeCaches(text_selection._TextSelectionHandleOverlayState);
  dart.setMethodSignature(text_selection._TextSelectionHandleOverlayState, () => ({
    __proto__: dart.getMethods(text_selection._TextSelectionHandleOverlayState.__proto__),
    [_handleVisibilityChanged]: dart.fnType(dart.void, []),
    [_handleDragStart]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [_handleDragUpdate]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [_handleTap$0]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_chooseType]: dart.fnType(text_selection.TextSelectionHandleType, [ui.TextDirection, text_selection.TextSelectionHandleType, text_selection.TextSelectionHandleType])
  }));
  dart.setGetterSignature(text_selection._TextSelectionHandleOverlayState, () => ({
    __proto__: dart.getGetters(text_selection._TextSelectionHandleOverlayState.__proto__),
    [_dragPosition]: ui.Offset,
    [_controller$]: animation_controller.AnimationController,
    [_opacity]: animation.Animation$(core.double)
  }));
  dart.setSetterSignature(text_selection._TextSelectionHandleOverlayState, () => ({
    __proto__: dart.getSetters(text_selection._TextSelectionHandleOverlayState.__proto__),
    [_dragPosition]: ui.Offset,
    [_controller$]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(text_selection._TextSelectionHandleOverlayState, L49);
  dart.setFieldSignature(text_selection._TextSelectionHandleOverlayState, () => ({
    __proto__: dart.getFields(text_selection._TextSelectionHandleOverlayState.__proto__),
    [___TextSelectionHandleOverlayState__dragPosition]: dart.fieldType(dart.nullable(ui.Offset)),
    [___TextSelectionHandleOverlayState__dragPosition_isSet]: dart.fieldType(core.bool),
    [___TextSelectionHandleOverlayState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [___TextSelectionHandleOverlayState__controller_isSet]: dart.fieldType(core.bool)
  }));
  text_selection.TextSelectionGestureDetectorBuilderDelegate = class TextSelectionGestureDetectorBuilderDelegate extends core.Object {};
  (text_selection.TextSelectionGestureDetectorBuilderDelegate.new = function() {
    ;
  }).prototype = text_selection.TextSelectionGestureDetectorBuilderDelegate.prototype;
  dart.addTypeTests(text_selection.TextSelectionGestureDetectorBuilderDelegate);
  dart.addTypeCaches(text_selection.TextSelectionGestureDetectorBuilderDelegate);
  dart.setLibraryUri(text_selection.TextSelectionGestureDetectorBuilderDelegate, L49);
  var _shouldShowSelectionToolbar = dart.privateName(text_selection, "_shouldShowSelectionToolbar");
  var C551;
  var C552;
  var C553;
  var C554;
  var C555;
  var C556;
  var C557;
  var C558;
  var C559;
  var C560;
  var C561;
  var C562;
  var C563;
  var C564;
  var C565;
  var C550;
  var C549;
  var delegate$ = dart.privateName(text_selection, "TextSelectionGestureDetectorBuilder.delegate");
  text_selection.TextSelectionGestureDetectorBuilder = class TextSelectionGestureDetectorBuilder extends core.Object {
    get delegate() {
      return this[delegate$];
    }
    set delegate(value) {
      super.delegate = value;
    }
    get shouldShowSelectionToolbar() {
      return this[_shouldShowSelectionToolbar];
    }
    get editableText() {
      return dart.nullCheck(this.delegate.editableTextKey.currentState);
    }
    get renderEditable() {
      return this.editableText.renderEditable;
    }
    onTapDown(details) {
      if (details == null) dart.nullFailed(L48, 917, 33, "details");
      this.renderEditable.handleTapDown(details);
      let kind = details.kind;
      this[_shouldShowSelectionToolbar] = kind == null || dart.equals(kind, ui.PointerDeviceKind.touch) || dart.equals(kind, ui.PointerDeviceKind.stylus);
    }
    onForcePressStart(details) {
      if (details == null) dart.nullFailed(L48, 941, 44, "details");
      if (!dart.test(this.delegate.forcePressEnabled)) dart.assertFailed(null, L48, 942, 12, "delegate.forcePressEnabled");
      this[_shouldShowSelectionToolbar] = true;
      if (dart.test(this.delegate.selectionEnabled)) {
        this.renderEditable.selectWordsInRange({from: details.globalPosition, cause: editable.SelectionChangedCause.forcePress});
      }
    }
    onForcePressEnd(details) {
      if (details == null) dart.nullFailed(L48, 964, 42, "details");
      if (!dart.test(this.delegate.forcePressEnabled)) dart.assertFailed(null, L48, 965, 12, "delegate.forcePressEnabled");
      this.renderEditable.selectWordsInRange({from: details.globalPosition, cause: editable.SelectionChangedCause.forcePress});
      if (dart.test(this.shouldShowSelectionToolbar)) this.editableText.showToolbar();
    }
    onSingleTapUp(details) {
      if (details == null) dart.nullFailed(L48, 983, 35, "details");
      if (dart.test(this.delegate.selectionEnabled)) {
        this.renderEditable.selectWordEdge({cause: editable.SelectionChangedCause.tap});
      }
    }
    onSingleTapCancel() {
    }
    onSingleLongTapStart(details) {
      if (details == null) dart.nullFailed(L48, 1010, 51, "details");
      if (dart.test(this.delegate.selectionEnabled)) {
        this.renderEditable.selectPositionAt({from: details.globalPosition, cause: editable.SelectionChangedCause.longPress});
      }
    }
    onSingleLongTapMoveUpdate(details) {
      if (details == null) dart.nullFailed(L48, 1029, 61, "details");
      if (dart.test(this.delegate.selectionEnabled)) {
        this.renderEditable.selectPositionAt({from: details.globalPosition, cause: editable.SelectionChangedCause.longPress});
      }
    }
    onSingleLongTapEnd(details) {
      if (details == null) dart.nullFailed(L48, 1047, 47, "details");
      if (dart.test(this.shouldShowSelectionToolbar)) this.editableText.showToolbar();
    }
    onDoubleTapDown(details) {
      if (details == null) dart.nullFailed(L48, 1062, 39, "details");
      if (dart.test(this.delegate.selectionEnabled)) {
        this.renderEditable.selectWord({cause: editable.SelectionChangedCause.tap});
        if (dart.test(this.shouldShowSelectionToolbar)) this.editableText.showToolbar();
      }
    }
    onDragSelectionStart(details) {
      if (details == null) dart.nullFailed(L48, 1079, 46, "details");
      let kind = details.kind;
      this[_shouldShowSelectionToolbar] = kind == null || dart.equals(kind, ui.PointerDeviceKind.touch) || dart.equals(kind, ui.PointerDeviceKind.stylus);
      this.renderEditable.selectPositionAt({from: details.globalPosition, cause: editable.SelectionChangedCause.drag});
    }
    onDragSelectionUpdate(startDetails, updateDetails) {
      if (startDetails == null) dart.nullFailed(L48, 1101, 47, "startDetails");
      if (updateDetails == null) dart.nullFailed(L48, 1101, 79, "updateDetails");
      this.renderEditable.selectPositionAt({from: startDetails.globalPosition, to: updateDetails.globalPosition, cause: editable.SelectionChangedCause.drag});
    }
    onDragSelectionEnd(details) {
      if (details == null) dart.nullFailed(L48, 1118, 42, "details");
    }
    buildGestureDetector(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let behavior = opts && 'behavior' in opts ? opts.behavior : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(L48, 1127, 21, "child");
      return new text_selection.TextSelectionGestureDetector.new({key: key, onTapDown: dart.bind(this, 'onTapDown'), onForcePressStart: dart.test(this.delegate.forcePressEnabled) ? dart.bind(this, 'onForcePressStart') : null, onForcePressEnd: dart.test(this.delegate.forcePressEnabled) ? dart.bind(this, 'onForcePressEnd') : null, onSingleTapUp: dart.bind(this, 'onSingleTapUp'), onSingleTapCancel: dart.bind(this, 'onSingleTapCancel'), onSingleLongTapStart: dart.bind(this, 'onSingleLongTapStart'), onSingleLongTapMoveUpdate: dart.bind(this, 'onSingleLongTapMoveUpdate'), onSingleLongTapEnd: dart.bind(this, 'onSingleLongTapEnd'), onDoubleTapDown: dart.bind(this, 'onDoubleTapDown'), onDragSelectionStart: dart.bind(this, 'onDragSelectionStart'), onDragSelectionUpdate: dart.bind(this, 'onDragSelectionUpdate'), onDragSelectionEnd: dart.bind(this, 'onDragSelectionEnd'), behavior: behavior, child: child, $creationLocationd_0dea112b090073317d4: C549 || CT.C549});
    }
  };
  (text_selection.TextSelectionGestureDetectorBuilder.new = function(opts) {
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    if (delegate == null) dart.nullFailed(L48, 879, 19, "delegate");
    this[_shouldShowSelectionToolbar] = true;
    this[delegate$] = delegate;
    if (!(delegate != null)) dart.assertFailed(null, L48, 880, 15, "delegate != null");
    ;
  }).prototype = text_selection.TextSelectionGestureDetectorBuilder.prototype;
  dart.addTypeTests(text_selection.TextSelectionGestureDetectorBuilder);
  dart.addTypeCaches(text_selection.TextSelectionGestureDetectorBuilder);
  dart.setMethodSignature(text_selection.TextSelectionGestureDetectorBuilder, () => ({
    __proto__: dart.getMethods(text_selection.TextSelectionGestureDetectorBuilder.__proto__),
    onTapDown: dart.fnType(dart.void, [tap$.TapDownDetails]),
    onForcePressStart: dart.fnType(dart.void, [force_press.ForcePressDetails]),
    onForcePressEnd: dart.fnType(dart.void, [force_press.ForcePressDetails]),
    onSingleTapUp: dart.fnType(dart.void, [tap$.TapUpDetails]),
    onSingleTapCancel: dart.fnType(dart.void, []),
    onSingleLongTapStart: dart.fnType(dart.void, [long_press.LongPressStartDetails]),
    onSingleLongTapMoveUpdate: dart.fnType(dart.void, [long_press.LongPressMoveUpdateDetails]),
    onSingleLongTapEnd: dart.fnType(dart.void, [long_press.LongPressEndDetails]),
    onDoubleTapDown: dart.fnType(dart.void, [tap$.TapDownDetails]),
    onDragSelectionStart: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    onDragSelectionUpdate: dart.fnType(dart.void, [drag_details.DragStartDetails, drag_details.DragUpdateDetails]),
    onDragSelectionEnd: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    buildGestureDetector: dart.fnType(framework.Widget, [], {behavior: dart.nullable(proxy_box.HitTestBehavior), key: dart.nullable(key.Key)}, {child: framework.Widget})
  }));
  dart.setGetterSignature(text_selection.TextSelectionGestureDetectorBuilder, () => ({
    __proto__: dart.getGetters(text_selection.TextSelectionGestureDetectorBuilder.__proto__),
    shouldShowSelectionToolbar: core.bool,
    editableText: editable_text.EditableTextState,
    renderEditable: editable.RenderEditable
  }));
  dart.setLibraryUri(text_selection.TextSelectionGestureDetectorBuilder, L49);
  dart.setFieldSignature(text_selection.TextSelectionGestureDetectorBuilder, () => ({
    __proto__: dart.getFields(text_selection.TextSelectionGestureDetectorBuilder.__proto__),
    delegate: dart.finalFieldType(text_selection.TextSelectionGestureDetectorBuilderDelegate),
    [_shouldShowSelectionToolbar]: dart.fieldType(core.bool)
  }));
  var onTapDown$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onTapDown");
  var onForcePressStart$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onForcePressStart");
  var onForcePressEnd$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onForcePressEnd");
  var onSingleTapUp$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onSingleTapUp");
  var onSingleTapCancel$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onSingleTapCancel");
  var onSingleLongTapStart$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onSingleLongTapStart");
  var onSingleLongTapMoveUpdate$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onSingleLongTapMoveUpdate");
  var onSingleLongTapEnd$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onSingleLongTapEnd");
  var onDoubleTapDown$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onDoubleTapDown");
  var onDragSelectionStart$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onDragSelectionStart");
  var onDragSelectionUpdate$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onDragSelectionUpdate");
  var onDragSelectionEnd$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onDragSelectionEnd");
  var behavior$ = dart.privateName(text_selection, "TextSelectionGestureDetector.behavior");
  var child$20 = dart.privateName(text_selection, "TextSelectionGestureDetector.child");
  text_selection.TextSelectionGestureDetector = class TextSelectionGestureDetector extends framework.StatefulWidget {
    get onTapDown() {
      return this[onTapDown$];
    }
    set onTapDown(value) {
      super.onTapDown = value;
    }
    get onForcePressStart() {
      return this[onForcePressStart$];
    }
    set onForcePressStart(value) {
      super.onForcePressStart = value;
    }
    get onForcePressEnd() {
      return this[onForcePressEnd$];
    }
    set onForcePressEnd(value) {
      super.onForcePressEnd = value;
    }
    get onSingleTapUp() {
      return this[onSingleTapUp$];
    }
    set onSingleTapUp(value) {
      super.onSingleTapUp = value;
    }
    get onSingleTapCancel() {
      return this[onSingleTapCancel$];
    }
    set onSingleTapCancel(value) {
      super.onSingleTapCancel = value;
    }
    get onSingleLongTapStart() {
      return this[onSingleLongTapStart$];
    }
    set onSingleLongTapStart(value) {
      super.onSingleLongTapStart = value;
    }
    get onSingleLongTapMoveUpdate() {
      return this[onSingleLongTapMoveUpdate$];
    }
    set onSingleLongTapMoveUpdate(value) {
      super.onSingleLongTapMoveUpdate = value;
    }
    get onSingleLongTapEnd() {
      return this[onSingleLongTapEnd$];
    }
    set onSingleLongTapEnd(value) {
      super.onSingleLongTapEnd = value;
    }
    get onDoubleTapDown() {
      return this[onDoubleTapDown$];
    }
    set onDoubleTapDown(value) {
      super.onDoubleTapDown = value;
    }
    get onDragSelectionStart() {
      return this[onDragSelectionStart$];
    }
    set onDragSelectionStart(value) {
      super.onDragSelectionStart = value;
    }
    get onDragSelectionUpdate() {
      return this[onDragSelectionUpdate$];
    }
    set onDragSelectionUpdate(value) {
      super.onDragSelectionUpdate = value;
    }
    get onDragSelectionEnd() {
      return this[onDragSelectionEnd$];
    }
    set onDragSelectionEnd(value) {
      super.onDragSelectionEnd = value;
    }
    get behavior() {
      return this[behavior$];
    }
    set behavior(value) {
      super.behavior = value;
    }
    get child() {
      return this[child$20];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new text_selection._TextSelectionGestureDetectorState.new();
    }
  };
  (text_selection.TextSelectionGestureDetector.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
    let onForcePressStart = opts && 'onForcePressStart' in opts ? opts.onForcePressStart : null;
    let onForcePressEnd = opts && 'onForcePressEnd' in opts ? opts.onForcePressEnd : null;
    let onSingleTapUp = opts && 'onSingleTapUp' in opts ? opts.onSingleTapUp : null;
    let onSingleTapCancel = opts && 'onSingleTapCancel' in opts ? opts.onSingleTapCancel : null;
    let onSingleLongTapStart = opts && 'onSingleLongTapStart' in opts ? opts.onSingleLongTapStart : null;
    let onSingleLongTapMoveUpdate = opts && 'onSingleLongTapMoveUpdate' in opts ? opts.onSingleLongTapMoveUpdate : null;
    let onSingleLongTapEnd = opts && 'onSingleLongTapEnd' in opts ? opts.onSingleLongTapEnd : null;
    let onDoubleTapDown = opts && 'onDoubleTapDown' in opts ? opts.onDoubleTapDown : null;
    let onDragSelectionStart = opts && 'onDragSelectionStart' in opts ? opts.onDragSelectionStart : null;
    let onDragSelectionUpdate = opts && 'onDragSelectionUpdate' in opts ? opts.onDragSelectionUpdate : null;
    let onDragSelectionEnd = opts && 'onDragSelectionEnd' in opts ? opts.onDragSelectionEnd : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L48, 1181, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[onTapDown$] = onTapDown;
    this[onForcePressStart$] = onForcePressStart;
    this[onForcePressEnd$] = onForcePressEnd;
    this[onSingleTapUp$] = onSingleTapUp;
    this[onSingleTapCancel$] = onSingleTapCancel;
    this[onSingleLongTapStart$] = onSingleLongTapStart;
    this[onSingleLongTapMoveUpdate$] = onSingleLongTapMoveUpdate;
    this[onSingleLongTapEnd$] = onSingleLongTapEnd;
    this[onDoubleTapDown$] = onDoubleTapDown;
    this[onDragSelectionStart$] = onDragSelectionStart;
    this[onDragSelectionUpdate$] = onDragSelectionUpdate;
    this[onDragSelectionEnd$] = onDragSelectionEnd;
    this[behavior$] = behavior;
    this[child$20] = child;
    if (!(child != null)) dart.assertFailed(null, L48, 1182, 15, "child != null");
    text_selection.TextSelectionGestureDetector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_selection.TextSelectionGestureDetector.prototype;
  dart.addTypeTests(text_selection.TextSelectionGestureDetector);
  dart.addTypeCaches(text_selection.TextSelectionGestureDetector);
  dart.setMethodSignature(text_selection.TextSelectionGestureDetector, () => ({
    __proto__: dart.getMethods(text_selection.TextSelectionGestureDetector.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(text_selection.TextSelectionGestureDetector, L49);
  dart.setFieldSignature(text_selection.TextSelectionGestureDetector, () => ({
    __proto__: dart.getFields(text_selection.TextSelectionGestureDetector.__proto__),
    onTapDown: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [tap$.TapDownDetails]))),
    onForcePressStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [force_press.ForcePressDetails]))),
    onForcePressEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [force_press.ForcePressDetails]))),
    onSingleTapUp: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [tap$.TapUpDetails]))),
    onSingleTapCancel: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onSingleLongTapStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [long_press.LongPressStartDetails]))),
    onSingleLongTapMoveUpdate: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [long_press.LongPressMoveUpdateDetails]))),
    onSingleLongTapEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [long_press.LongPressEndDetails]))),
    onDoubleTapDown: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [tap$.TapDownDetails]))),
    onDragSelectionStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragStartDetails]))),
    onDragSelectionUpdate: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragStartDetails, drag_details.DragUpdateDetails]))),
    onDragSelectionEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragEndDetails]))),
    behavior: dart.finalFieldType(dart.nullable(proxy_box.HitTestBehavior)),
    child: dart.finalFieldType(framework.Widget)
  }));
  var _doubleTapTimer = dart.privateName(text_selection, "_doubleTapTimer");
  var _lastTapOffset = dart.privateName(text_selection, "_lastTapOffset");
  var _isDoubleTap = dart.privateName(text_selection, "_isDoubleTap");
  var _lastDragStartDetails = dart.privateName(text_selection, "_lastDragStartDetails");
  var _lastDragUpdateDetails = dart.privateName(text_selection, "_lastDragUpdateDetails");
  var _dragUpdateThrottleTimer = dart.privateName(text_selection, "_dragUpdateThrottleTimer");
  var _isWithinDoubleTapTolerance = dart.privateName(text_selection, "_isWithinDoubleTapTolerance");
  var _doubleTapTimeout = dart.privateName(text_selection, "_doubleTapTimeout");
  var _handleTapDown = dart.privateName(text_selection, "_handleTapDown");
  var _handleTapUp = dart.privateName(text_selection, "_handleTapUp");
  var _handleTapCancel = dart.privateName(text_selection, "_handleTapCancel");
  var _handleDragUpdateThrottled = dart.privateName(text_selection, "_handleDragUpdateThrottled");
  var _handleDragEnd = dart.privateName(text_selection, "_handleDragEnd");
  var _forcePressStarted = dart.privateName(text_selection, "_forcePressStarted");
  var _forcePressEnded = dart.privateName(text_selection, "_forcePressEnded");
  var _handleLongPressStart = dart.privateName(text_selection, "_handleLongPressStart");
  var _handleLongPressMoveUpdate = dart.privateName(text_selection, "_handleLongPressMoveUpdate");
  var _handleLongPressEnd = dart.privateName(text_selection, "_handleLongPressEnd");
  var C568;
  var C569;
  var C570;
  var C571;
  var C567;
  var C566;
  text_selection._TextSelectionGestureDetectorState = class _TextSelectionGestureDetectorState extends framework.State$(text_selection.TextSelectionGestureDetector) {
    dispose() {
      let t48, t48$;
      t48 = this[_doubleTapTimer];
      t48 == null ? null : t48.cancel();
      t48$ = this[_dragUpdateThrottleTimer];
      t48$ == null ? null : t48$.cancel();
      super.dispose();
    }
    [_handleTapDown](details) {
      if (details == null) dart.nullFailed(L48, 1266, 38, "details");
      if (this.widget.onTapDown != null) {
        dart.nullCheck(this.widget.onTapDown)(details);
      }
      if (this[_doubleTapTimer] != null && dart.test(this[_isWithinDoubleTapTolerance](details.globalPosition))) {
        if (this.widget.onDoubleTapDown != null) {
          dart.nullCheck(this.widget.onDoubleTapDown)(details);
        }
        dart.nullCheck(this[_doubleTapTimer]).cancel();
        this[_doubleTapTimeout]();
        this[_isDoubleTap] = true;
      }
    }
    [_handleTapUp](details) {
      if (details == null) dart.nullFailed(L48, 1287, 34, "details");
      if (!dart.test(this[_isDoubleTap])) {
        if (this.widget.onSingleTapUp != null) {
          dart.nullCheck(this.widget.onSingleTapUp)(details);
        }
        this[_lastTapOffset] = details.globalPosition;
        this[_doubleTapTimer] = async.Timer.new(constants.kDoubleTapTimeout, dart.bind(this, _doubleTapTimeout));
      }
      this[_isDoubleTap] = false;
    }
    [_handleTapCancel]() {
      if (this.widget.onSingleTapCancel != null) {
        dart.nullCheck(this.widget.onSingleTapCancel)();
      }
    }
    [_handleDragStart](details) {
      if (details == null) dart.nullFailed(L48, 1308, 42, "details");
      if (!(this[_lastDragStartDetails] == null)) dart.assertFailed(null, L48, 1309, 12, "_lastDragStartDetails == null");
      this[_lastDragStartDetails] = details;
      if (this.widget.onDragSelectionStart != null) {
        dart.nullCheck(this.widget.onDragSelectionStart)(details);
      }
    }
    [_handleDragUpdate](details) {
      if (details == null) dart.nullFailed(L48, 1316, 44, "details");
      this[_lastDragUpdateDetails] = details;
      this[_dragUpdateThrottleTimer] == null ? this[_dragUpdateThrottleTimer] = async.Timer.new(text_selection._kDragSelectionUpdateThrottle, dart.bind(this, _handleDragUpdateThrottled)) : null;
    }
    [_handleDragUpdateThrottled]() {
      if (!(this[_lastDragStartDetails] != null)) dart.assertFailed(null, L48, 1329, 12, "_lastDragStartDetails != null");
      if (!(this[_lastDragUpdateDetails] != null)) dart.assertFailed(null, L48, 1330, 12, "_lastDragUpdateDetails != null");
      if (this.widget.onDragSelectionUpdate != null) {
        dart.nullCheck(this.widget.onDragSelectionUpdate)(dart.nullCheck(this[_lastDragStartDetails]), dart.nullCheck(this[_lastDragUpdateDetails]));
      }
      this[_dragUpdateThrottleTimer] = null;
      this[_lastDragUpdateDetails] = null;
    }
    [_handleDragEnd](details) {
      if (details == null) dart.nullFailed(L48, 1338, 38, "details");
      if (!(this[_lastDragStartDetails] != null)) dart.assertFailed(null, L48, 1339, 12, "_lastDragStartDetails != null");
      if (this[_dragUpdateThrottleTimer] != null) {
        dart.nullCheck(this[_dragUpdateThrottleTimer]).cancel();
        this[_handleDragUpdateThrottled]();
      }
      if (this.widget.onDragSelectionEnd != null) {
        dart.nullCheck(this.widget.onDragSelectionEnd)(details);
      }
      this[_dragUpdateThrottleTimer] = null;
      this[_lastDragStartDetails] = null;
      this[_lastDragUpdateDetails] = null;
    }
    [_forcePressStarted](details) {
      let t48;
      if (details == null) dart.nullFailed(L48, 1354, 45, "details");
      t48 = this[_doubleTapTimer];
      t48 == null ? null : t48.cancel();
      this[_doubleTapTimer] = null;
      if (this.widget.onForcePressStart != null) dart.nullCheck(this.widget.onForcePressStart)(details);
    }
    [_forcePressEnded](details) {
      if (details == null) dart.nullFailed(L48, 1361, 43, "details");
      if (this.widget.onForcePressEnd != null) dart.nullCheck(this.widget.onForcePressEnd)(details);
    }
    [_handleLongPressStart](details) {
      if (details == null) dart.nullFailed(L48, 1366, 52, "details");
      if (!dart.test(this[_isDoubleTap]) && this.widget.onSingleLongTapStart != null) {
        dart.nullCheck(this.widget.onSingleLongTapStart)(details);
      }
    }
    [_handleLongPressMoveUpdate](details) {
      if (details == null) dart.nullFailed(L48, 1372, 62, "details");
      if (!dart.test(this[_isDoubleTap]) && this.widget.onSingleLongTapMoveUpdate != null) {
        dart.nullCheck(this.widget.onSingleLongTapMoveUpdate)(details);
      }
    }
    [_handleLongPressEnd](details) {
      if (details == null) dart.nullFailed(L48, 1378, 48, "details");
      if (!dart.test(this[_isDoubleTap]) && this.widget.onSingleLongTapEnd != null) {
        dart.nullCheck(this.widget.onSingleLongTapEnd)(details);
      }
      this[_isDoubleTap] = false;
    }
    [_doubleTapTimeout]() {
      this[_doubleTapTimer] = null;
      this[_lastTapOffset] = null;
    }
    [_isWithinDoubleTapTolerance](secondTapOffset) {
      if (secondTapOffset == null) dart.nullFailed(L48, 1390, 43, "secondTapOffset");
      if (!(secondTapOffset != null)) dart.assertFailed(null, L48, 1391, 12, "secondTapOffset != null");
      if (this[_lastTapOffset] == null) {
        return false;
      }
      let difference = secondTapOffset['-'](dart.nullCheck(this[_lastTapOffset]));
      return dart.notNull(difference.distance) <= 100;
    }
    build(context) {
      if (context == null) dart.nullFailed(L48, 1401, 29, "context");
      let gestures = new (LinkedMapOfType$GestureRecognizerFactoryOfGestureRecognizer()).new();
      gestures[$_set](dart.wrapType(text_selection._TransparentTapGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOf_TransparentTapGestureRecognizer()).new(dart.fn(() => new text_selection._TransparentTapGestureRecognizer.new({debugOwner: this}), VoidTo_TransparentTapGestureRecognizer()), dart.fn(instance => {
        let t48;
        if (instance == null) dart.nullFailed(L48, 1409, 41, "instance");
        t48 = instance;
        (() => {
          t48.onTapDown = dart.bind(this, _handleTapDown);
          t48.onTapUp = dart.bind(this, _handleTapUp);
          t48.onTapCancel = dart.bind(this, _handleTapCancel);
          return t48;
        })();
      }, _TransparentTapGestureRecognizerTovoid())));
      if (this.widget.onSingleLongTapStart != null || this.widget.onSingleLongTapMoveUpdate != null || this.widget.onSingleLongTapEnd != null) {
        gestures[$_set](dart.wrapType(long_press.LongPressGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfLongPressGestureRecognizer()).new(dart.fn(() => new long_press.LongPressGestureRecognizer.new({debugOwner: this, kind: ui.PointerDeviceKind.touch}), VoidToLongPressGestureRecognizer()), dart.fn(instance => {
          let t48;
          if (instance == null) dart.nullFailed(L48, 1422, 37, "instance");
          t48 = instance;
          (() => {
            t48.onLongPressStart = dart.bind(this, _handleLongPressStart);
            t48.onLongPressMoveUpdate = dart.bind(this, _handleLongPressMoveUpdate);
            t48.onLongPressEnd = dart.bind(this, _handleLongPressEnd);
            return t48;
          })();
        }, LongPressGestureRecognizerTovoid())));
      }
      if (this.widget.onDragSelectionStart != null || this.widget.onDragSelectionUpdate != null || this.widget.onDragSelectionEnd != null) {
        gestures[$_set](dart.wrapType(monodrag.HorizontalDragGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfHorizontalDragGestureRecognizer()).new(dart.fn(() => new monodrag.HorizontalDragGestureRecognizer.new({debugOwner: this, kind: ui.PointerDeviceKind.mouse}), VoidToHorizontalDragGestureRecognizer()), dart.fn(instance => {
          let t48;
          if (instance == null) dart.nullFailed(L48, 1438, 42, "instance");
          t48 = instance;
          (() => {
            t48.dragStartBehavior = recognizer.DragStartBehavior.down;
            t48.onStart = dart.bind(this, _handleDragStart);
            t48.onUpdate = dart.bind(this, _handleDragUpdate);
            t48.onEnd = dart.bind(this, _handleDragEnd);
            return t48;
          })();
        }, HorizontalDragGestureRecognizerTovoid())));
      }
      if (this.widget.onForcePressStart != null || this.widget.onForcePressEnd != null) {
        gestures[$_set](dart.wrapType(force_press.ForcePressGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfForcePressGestureRecognizer()).new(dart.fn(() => new force_press.ForcePressGestureRecognizer.new({debugOwner: this}), VoidToForcePressGestureRecognizer()), dart.fn(instance => {
          let t48;
          if (instance == null) dart.nullFailed(L48, 1453, 38, "instance");
          t48 = instance;
          (() => {
            t48.onStart = this.widget.onForcePressStart != null ? dart.bind(this, _forcePressStarted) : null;
            t48.onEnd = this.widget.onForcePressEnd != null ? dart.bind(this, _forcePressEnded) : null;
            return t48;
          })();
        }, ForcePressGestureRecognizerTovoid())));
      }
      return new gesture_detector.RawGestureDetector.new({gestures: gestures, excludeFromSemantics: true, behavior: this.widget.behavior, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C566 || CT.C566});
    }
  };
  (text_selection._TextSelectionGestureDetectorState.new = function() {
    this[_doubleTapTimer] = null;
    this[_lastTapOffset] = null;
    this[_isDoubleTap] = false;
    this[_lastDragStartDetails] = null;
    this[_lastDragUpdateDetails] = null;
    this[_dragUpdateThrottleTimer] = null;
    text_selection._TextSelectionGestureDetectorState.__proto__.new.call(this);
    ;
  }).prototype = text_selection._TextSelectionGestureDetectorState.prototype;
  dart.addTypeTests(text_selection._TextSelectionGestureDetectorState);
  dart.addTypeCaches(text_selection._TextSelectionGestureDetectorState);
  dart.setMethodSignature(text_selection._TextSelectionGestureDetectorState, () => ({
    __proto__: dart.getMethods(text_selection._TextSelectionGestureDetectorState.__proto__),
    [_handleTapDown]: dart.fnType(dart.void, [tap$.TapDownDetails]),
    [_handleTapUp]: dart.fnType(dart.void, [tap$.TapUpDetails]),
    [_handleTapCancel]: dart.fnType(dart.void, []),
    [_handleDragStart]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [_handleDragUpdate]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [_handleDragUpdateThrottled]: dart.fnType(dart.void, []),
    [_handleDragEnd]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    [_forcePressStarted]: dart.fnType(dart.void, [force_press.ForcePressDetails]),
    [_forcePressEnded]: dart.fnType(dart.void, [force_press.ForcePressDetails]),
    [_handleLongPressStart]: dart.fnType(dart.void, [long_press.LongPressStartDetails]),
    [_handleLongPressMoveUpdate]: dart.fnType(dart.void, [long_press.LongPressMoveUpdateDetails]),
    [_handleLongPressEnd]: dart.fnType(dart.void, [long_press.LongPressEndDetails]),
    [_doubleTapTimeout]: dart.fnType(dart.void, []),
    [_isWithinDoubleTapTolerance]: dart.fnType(core.bool, [ui.Offset]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(text_selection._TextSelectionGestureDetectorState, L49);
  dart.setFieldSignature(text_selection._TextSelectionGestureDetectorState, () => ({
    __proto__: dart.getFields(text_selection._TextSelectionGestureDetectorState.__proto__),
    [_doubleTapTimer]: dart.fieldType(dart.nullable(async.Timer)),
    [_lastTapOffset]: dart.fieldType(dart.nullable(ui.Offset)),
    [_isDoubleTap]: dart.fieldType(core.bool),
    [_lastDragStartDetails]: dart.fieldType(dart.nullable(drag_details.DragStartDetails)),
    [_lastDragUpdateDetails]: dart.fieldType(dart.nullable(drag_details.DragUpdateDetails)),
    [_dragUpdateThrottleTimer]: dart.fieldType(dart.nullable(async.Timer))
  }));
  text_selection._TransparentTapGestureRecognizer = class _TransparentTapGestureRecognizer extends tap$.TapGestureRecognizer {
    rejectGesture(pointer) {
      if (pointer == null) dart.nullFailed(L48, 1485, 26, "pointer");
      if (dart.equals(this.state, recognizer.GestureRecognizerState.ready)) {
        this.acceptGesture(pointer);
      } else {
        super.rejectGesture(pointer);
      }
    }
  };
  (text_selection._TransparentTapGestureRecognizer.new = function(opts) {
    let debugOwner = opts && 'debugOwner' in opts ? opts.debugOwner : null;
    text_selection._TransparentTapGestureRecognizer.__proto__.new.call(this, {debugOwner: debugOwner});
    ;
  }).prototype = text_selection._TransparentTapGestureRecognizer.prototype;
  dart.addTypeTests(text_selection._TransparentTapGestureRecognizer);
  dart.addTypeCaches(text_selection._TransparentTapGestureRecognizer);
  dart.setLibraryUri(text_selection._TransparentTapGestureRecognizer, L49);
  var C572;
  var _disposed$0 = dart.privateName(text_selection, "_disposed");
  var C573;
  var C574;
  var C575;
  var C576;
  var C577;
  var C578;
  var C579;
  text_selection.ClipboardStatus = class ClipboardStatus extends core.Object {
    toString() {
      return this[_name$9];
    }
  };
  (text_selection.ClipboardStatus.new = function(index, _name) {
    if (index == null) dart.nullFailed(L48, 1599, 6, "index");
    if (_name == null) dart.nullFailed(L48, 1599, 6, "_name");
    this.index = index;
    this[_name$9] = _name;
    ;
  }).prototype = text_selection.ClipboardStatus.prototype;
  dart.addTypeTests(text_selection.ClipboardStatus);
  dart.addTypeCaches(text_selection.ClipboardStatus);
  dart.setLibraryUri(text_selection.ClipboardStatus, L49);
  dart.setFieldSignature(text_selection.ClipboardStatus, () => ({
    __proto__: dart.getFields(text_selection.ClipboardStatus.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$9]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(text_selection.ClipboardStatus, ['toString']);
  text_selection.ClipboardStatus.pasteable = C577 || CT.C577;
  text_selection.ClipboardStatus.unknown = C572 || CT.C572;
  text_selection.ClipboardStatus.notPasteable = C578 || CT.C578;
  text_selection.ClipboardStatus.values = C579 || CT.C579;
  const ValueNotifier_WidgetsBindingObserver$36 = class ValueNotifier_WidgetsBindingObserver extends change_notifier.ValueNotifier$(text_selection.ClipboardStatus) {};
  (ValueNotifier_WidgetsBindingObserver$36.new = function(_value) {
    ValueNotifier_WidgetsBindingObserver$36.__proto__.new.call(this, _value);
  }).prototype = ValueNotifier_WidgetsBindingObserver$36.prototype;
  dart.applyMixin(ValueNotifier_WidgetsBindingObserver$36, binding$5.WidgetsBindingObserver);
  text_selection.ClipboardStatusNotifier = class ClipboardStatusNotifier extends ValueNotifier_WidgetsBindingObserver$36 {
    get disposed() {
      return this[_disposed$0];
    }
    update() {
      return async.async(dart.void, (function* update() {
        switch (platform.defaultTargetPlatform) {
          case C103 || CT.C103:
          {
            this.value = text_selection.ClipboardStatus.pasteable;
            return;
          }
          case C99 || CT.C99:
          case C100 || CT.C100:
          case C101 || CT.C101:
          case C104 || CT.C104:
          case C102 || CT.C102:
          {
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        let data = null;
        try {
          data = (yield clipboard.Clipboard.getData("text/plain"));
        } catch (e) {
          let stacktrace = dart.getThrown(e);
          if (core.Object.is(stacktrace)) {
            if (dart.test(this[_disposed$0]) || dart.equals(this.value, text_selection.ClipboardStatus.unknown)) {
              return;
            }
            this.value = text_selection.ClipboardStatus.unknown;
            return;
          } else
            throw e;
        }
        let clipboardStatus = data != null && data.text != null && dart.nullCheck(data.text)[$isNotEmpty] ? text_selection.ClipboardStatus.pasteable : text_selection.ClipboardStatus.notPasteable;
        if (dart.test(this[_disposed$0]) || dart.equals(clipboardStatus, this.value)) {
          return;
        }
        this.value = clipboardStatus;
      }).bind(this));
    }
    addListener(listener) {
      if (listener == null) dart.nullFailed(L48, 1559, 33, "listener");
      if (!dart.test(this.hasListeners)) {
        dart.nullCheck(binding$5.WidgetsBinding.instance).addObserver(this);
      }
      if (dart.equals(this.value, text_selection.ClipboardStatus.unknown)) {
        this.update();
      }
      super.addListener(listener);
    }
    removeListener(listener) {
      if (listener == null) dart.nullFailed(L48, 1570, 36, "listener");
      super.removeListener(listener);
      if (!dart.test(this.hasListeners)) {
        dart.nullCheck(binding$5.WidgetsBinding.instance).removeObserver(this);
      }
    }
    didChangeAppLifecycleState(state) {
      if (state == null) dart.nullFailed(L48, 1578, 53, "state");
      switch (state) {
        case C573 || CT.C573:
        {
          this.update();
          break;
        }
        case C574 || CT.C574:
        case C575 || CT.C575:
        case C576 || CT.C576:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    dispose() {
      super.dispose();
      dart.nullCheck(binding$5.WidgetsBinding.instance).removeObserver(this);
      this[_disposed$0] = true;
    }
  };
  (text_selection.ClipboardStatusNotifier.new = function(opts) {
    let value = opts && 'value' in opts ? opts.value : C572 || CT.C572;
    if (value == null) dart.nullFailed(L48, 1508, 21, "value");
    this[_disposed$0] = false;
    text_selection.ClipboardStatusNotifier.__proto__.new.call(this, value);
    ;
  }).prototype = text_selection.ClipboardStatusNotifier.prototype;
  dart.addTypeTests(text_selection.ClipboardStatusNotifier);
  dart.addTypeCaches(text_selection.ClipboardStatusNotifier);
  dart.setMethodSignature(text_selection.ClipboardStatusNotifier, () => ({
    __proto__: dart.getMethods(text_selection.ClipboardStatusNotifier.__proto__),
    update: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setGetterSignature(text_selection.ClipboardStatusNotifier, () => ({
    __proto__: dart.getGetters(text_selection.ClipboardStatusNotifier.__proto__),
    disposed: core.bool
  }));
  dart.setLibraryUri(text_selection.ClipboardStatusNotifier, L49);
  dart.setFieldSignature(text_selection.ClipboardStatusNotifier, () => ({
    __proto__: dart.getFields(text_selection.ClipboardStatusNotifier.__proto__),
    [_disposed$0]: dart.fieldType(core.bool)
  }));
  var C580;
  dart.defineLazy(text_selection, {
    /*text_selection._kDragSelectionUpdateThrottle*/get _kDragSelectionUpdateThrottle() {
      return C580 || CT.C580;
    }
  }, false);
  var C581;
  inherited_theme.InheritedTheme = class InheritedTheme extends framework.InheritedWidget {
    static captureAll(context, child, opts) {
      if (context == null) dart.nullFailed(L50, 124, 41, "context");
      if (child == null) dart.nullFailed(L50, 124, 57, "child");
      let to = opts && 'to' in opts ? opts.to : null;
      if (!(child != null)) dart.assertFailed(null, L50, 125, 12, "child != null");
      if (!(context != null)) dart.assertFailed(null, L50, 126, 12, "context != null");
      return inherited_theme.InheritedTheme.capture({from: context, to: to}).wrap(child);
    }
    static capture(opts) {
      let from = opts && 'from' in opts ? opts.from : null;
      if (from == null) dart.nullFailed(L50, 145, 57, "from");
      let to = opts && 'to' in opts ? opts.to : null;
      if (!(from != null)) dart.assertFailed(null, L50, 146, 12, "from != null");
      if (dart.equals(from, to)) {
        return new inherited_theme.CapturedThemes.__(C581 || CT.C581);
      }
      let themes = JSArrayOfInheritedTheme().of([]);
      let themeTypes = LinkedHashSetOfType().new();
      let debugDidFindAncestor = null;
      let debugDidFindAncestor$35isSet = false;
      function debugDidFindAncestor$35get() {
        return debugDidFindAncestor$35isSet ? debugDidFindAncestor : dart.throw(new _internal.LateError.localNI("debugDidFindAncestor"));
      }
      dart.fn(debugDidFindAncestor$35get, VoidTobool());
      function debugDidFindAncestor$35set(t51) {
        if (t51 == null) dart.nullFailed(L50, 155, 15, "null");
        debugDidFindAncestor$35isSet = true;
        return debugDidFindAncestor = t51;
      }
      dart.fn(debugDidFindAncestor$35set, boolTodynamic());
      if (!dart.test(dart.fn(() => {
        debugDidFindAncestor$35set(to == null);
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L50, 156, 12, "() {\r\n      debugDidFindAncestor = to == null;\r\n      return true;\r\n    }()");
      from.visitAncestorElements(dart.fn(ancestor => {
        if (ancestor == null) dart.nullFailed(L50, 160, 41, "ancestor");
        if (dart.equals(ancestor, to)) {
          if (!dart.test(dart.fn(() => {
            debugDidFindAncestor$35set(true);
            return true;
          }, VoidTobool())())) dart.assertFailed(null, L50, 162, 16, "() {\r\n          debugDidFindAncestor = true;\r\n          return true;\r\n        }()");
          return false;
        }
        if (framework.InheritedElement.is(ancestor) && inherited_theme.InheritedTheme.is(ancestor.widget)) {
          let theme = inherited_theme.InheritedTheme.as(ancestor.widget);
          let themeType = dart.runtimeType(theme);
          if (!dart.test(themeTypes.contains(themeType))) {
            themeTypes.add(themeType);
            themes[$add](theme);
          }
        }
        return true;
      }, ElementTobool()));
      if (!dart.test(debugDidFindAncestor$35get())) dart.assertFailed("The provided `to` context must be an ancestor of the `from` context.", L50, 182, 12, "debugDidFindAncestor");
      return new inherited_theme.CapturedThemes.__(themes);
    }
  };
  (inherited_theme.InheritedTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L50, 97, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    inherited_theme.InheritedTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = inherited_theme.InheritedTheme.prototype;
  dart.addTypeTests(inherited_theme.InheritedTheme);
  dart.addTypeCaches(inherited_theme.InheritedTheme);
  dart.setLibraryUri(inherited_theme.InheritedTheme, L51);
  var _themes$ = dart.privateName(inherited_theme, "_themes");
  var C584;
  var C585;
  var C583;
  var C582;
  inherited_theme.CapturedThemes = class CapturedThemes extends core.Object {
    wrap(child) {
      if (child == null) dart.nullFailed(L50, 197, 22, "child");
      return new inherited_theme._CaptureAll.new({themes: this[_themes$], child: child, $creationLocationd_0dea112b090073317d4: C582 || CT.C582});
    }
  };
  (inherited_theme.CapturedThemes.__ = function(_themes) {
    if (_themes == null) dart.nullFailed(L50, 192, 25, "_themes");
    this[_themes$] = _themes;
    ;
  }).prototype = inherited_theme.CapturedThemes.prototype;
  dart.addTypeTests(inherited_theme.CapturedThemes);
  dart.addTypeCaches(inherited_theme.CapturedThemes);
  dart.setMethodSignature(inherited_theme.CapturedThemes, () => ({
    __proto__: dart.getMethods(inherited_theme.CapturedThemes.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.Widget])
  }));
  dart.setLibraryUri(inherited_theme.CapturedThemes, L51);
  dart.setFieldSignature(inherited_theme.CapturedThemes, () => ({
    __proto__: dart.getFields(inherited_theme.CapturedThemes.__proto__),
    [_themes$]: dart.finalFieldType(core.List$(inherited_theme.InheritedTheme))
  }));
  var themes$ = dart.privateName(inherited_theme, "_CaptureAll.themes");
  var child$21 = dart.privateName(inherited_theme, "_CaptureAll.child");
  inherited_theme._CaptureAll = class _CaptureAll extends framework.StatelessWidget {
    get themes() {
      return this[themes$];
    }
    set themes(value) {
      super.themes = value;
    }
    get child() {
      return this[child$21];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(L50, 213, 29, "context");
      let wrappedChild = this.child;
      for (let theme of this.themes)
        wrappedChild = theme.wrap(context, wrappedChild);
      return wrappedChild;
    }
  };
  (inherited_theme._CaptureAll.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let themes = opts && 'themes' in opts ? opts.themes : null;
    if (themes == null) dart.nullFailed(L50, 205, 19, "themes");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L50, 206, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[themes$] = themes;
    this[child$21] = child;
    if (!(themes != null)) dart.assertFailed(null, L50, 207, 15, "themes != null");
    if (!(child != null)) dart.assertFailed(null, L50, 207, 39, "child != null");
    inherited_theme._CaptureAll.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = inherited_theme._CaptureAll.prototype;
  dart.addTypeTests(inherited_theme._CaptureAll);
  dart.addTypeCaches(inherited_theme._CaptureAll);
  dart.setMethodSignature(inherited_theme._CaptureAll, () => ({
    __proto__: dart.getMethods(inherited_theme._CaptureAll.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(inherited_theme._CaptureAll, L51);
  dart.setFieldSignature(inherited_theme._CaptureAll, () => ({
    __proto__: dart.getFields(inherited_theme._CaptureAll.__proto__),
    themes: dart.finalFieldType(core.List$(inherited_theme.InheritedTheme)),
    child: dart.finalFieldType(framework.Widget)
  }));
  var _name$11 = dart.privateName(text_painter, "_name");
  var C586;
  var C587;
  var C589;
  var C588;
  var C592;
  var C593;
  var C594;
  var C595;
  var C596;
  var C597;
  var C598;
  var C599;
  var C591;
  var C590;
  var C602;
  var C601;
  var C600;
  var C604;
  var DefaultTextStyle_textHeightBehavior = dart.privateName(text, "DefaultTextStyle.textHeightBehavior");
  var DefaultTextStyle_textWidthBasis = dart.privateName(text, "DefaultTextStyle.textWidthBasis");
  var DefaultTextStyle_maxLines = dart.privateName(text, "DefaultTextStyle.maxLines");
  var DefaultTextStyle_overflow = dart.privateName(text, "DefaultTextStyle.overflow");
  var DefaultTextStyle_softWrap = dart.privateName(text, "DefaultTextStyle.softWrap");
  var DefaultTextStyle_textAlign = dart.privateName(text, "DefaultTextStyle.textAlign");
  var DefaultTextStyle_style = dart.privateName(text, "DefaultTextStyle.style");
  var C603;
  var C607;
  var C608;
  var C609;
  var C610;
  var C611;
  var C612;
  var C613;
  var C614;
  var C606;
  var C605;
  text.DefaultTextStyle = class DefaultTextStyle extends inherited_theme.InheritedTheme {
    get style() {
      return this[style$];
    }
    set style(value) {
      super.style = value;
    }
    get textAlign() {
      return this[textAlign$0];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get softWrap() {
      return this[softWrap$0];
    }
    set softWrap(value) {
      super.softWrap = value;
    }
    get overflow() {
      return this[overflow$0];
    }
    set overflow(value) {
      super.overflow = value;
    }
    get maxLines() {
      return this[maxLines$0];
    }
    set maxLines(value) {
      super.maxLines = value;
    }
    get textWidthBasis() {
      return this[textWidthBasis$];
    }
    set textWidthBasis(value) {
      super.textWidthBasis = value;
    }
    get textHeightBehavior() {
      return this[textHeightBehavior$];
    }
    set textHeightBehavior(value) {
      super.textHeightBehavior = value;
    }
    static merge(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
      let softWrap = opts && 'softWrap' in opts ? opts.softWrap : null;
      let overflow = opts && 'overflow' in opts ? opts.overflow : null;
      let maxLines = opts && 'maxLines' in opts ? opts.maxLines : null;
      let textWidthBasis = opts && 'textWidthBasis' in opts ? opts.textWidthBasis : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(L52, 98, 21, "child");
      if (!(child != null)) dart.assertFailed(null, L52, 100, 12, "child != null");
      return new basic.Builder.new({builder: dart.fn(context => {
          let t53, t53$, t53$0, t53$1, t53$2;
          if (context == null) dart.nullFailed(L52, 102, 30, "context");
          let parent = text.DefaultTextStyle.of(context);
          return new text.DefaultTextStyle.new({key: key, style: parent.style.merge(style), textAlign: (t53 = textAlign, t53 == null ? parent.textAlign : t53), softWrap: (t53$ = softWrap, t53$ == null ? parent.softWrap : t53$), overflow: (t53$0 = overflow, t53$0 == null ? parent.overflow : t53$0), maxLines: (t53$1 = maxLines, t53$1 == null ? parent.maxLines : t53$1), textWidthBasis: (t53$2 = textWidthBasis, t53$2 == null ? parent.textWidthBasis : t53$2), child: child, $creationLocationd_0dea112b090073317d4: C590 || CT.C590});
        }, BuildContextToDefaultTextStyle()), $creationLocationd_0dea112b090073317d4: C600 || CT.C600});
    }
    static of(context) {
      let t53;
      if (context == null) dart.nullFailed(L52, 167, 43, "context");
      t53 = context.dependOnInheritedWidgetOfExactType(text.DefaultTextStyle);
      return t53 == null ? C603 || CT.C603 : t53;
    }
    updateShouldNotify(oldWidget) {
      text.DefaultTextStyle.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L52, 172, 44, "oldWidget");
      return !dart.equals(this.style, oldWidget.style) || !dart.equals(this.textAlign, oldWidget.textAlign) || !dart.equals(this.softWrap, oldWidget.softWrap) || !dart.equals(this.overflow, oldWidget.overflow) || this.maxLines != oldWidget.maxLines || !dart.equals(this.textWidthBasis, oldWidget.textWidthBasis) || !dart.equals(this.textHeightBehavior, oldWidget.textHeightBehavior);
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(L52, 183, 28, "context");
      if (child == null) dart.nullFailed(L52, 183, 44, "child");
      return new text.DefaultTextStyle.new({style: this.style, textAlign: this.textAlign, softWrap: this.softWrap, overflow: this.overflow, maxLines: this.maxLines, textWidthBasis: this.textWidthBasis, textHeightBehavior: this.textHeightBehavior, child: child, $creationLocationd_0dea112b090073317d4: C605 || CT.C605});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L52, 197, 56, "properties");
      super.debugFillProperties(properties);
      this.style.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfTextAlign()).new("textAlign", this.textAlign, {defaultValue: null}));
      properties.add(new diagnostics$.FlagProperty.new("softWrap", {value: this.softWrap, ifTrue: "wrapping at box width", ifFalse: "no wrapping except at line break characters", showName: true}));
      properties.add(new (EnumPropertyOfTextOverflow()).new("overflow", this.overflow, {defaultValue: null}));
      properties.add(new diagnostics$.IntProperty.new("maxLines", this.maxLines, {defaultValue: null}));
      properties.add(new (EnumPropertyOfTextWidthBasis()).new("textWidthBasis", this.textWidthBasis, {defaultValue: text_painter.TextWidthBasis.parent}));
      properties.add(new (DiagnosticsPropertyOfTextHeightBehavior()).new("textHeightBehavior", this.textHeightBehavior, {defaultValue: null}));
    }
  };
  (text.DefaultTextStyle.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let style = opts && 'style' in opts ? opts.style : null;
    if (style == null) dart.nullFailed(L52, 42, 19, "style");
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let softWrap = opts && 'softWrap' in opts ? opts.softWrap : true;
    if (softWrap == null) dart.nullFailed(L52, 44, 10, "softWrap");
    let overflow = opts && 'overflow' in opts ? opts.overflow : C457 || CT.C457;
    if (overflow == null) dart.nullFailed(L52, 45, 10, "overflow");
    let maxLines = opts && 'maxLines' in opts ? opts.maxLines : null;
    let textWidthBasis = opts && 'textWidthBasis' in opts ? opts.textWidthBasis : C586 || CT.C586;
    if (textWidthBasis == null) dart.nullFailed(L52, 47, 10, "textWidthBasis");
    let textHeightBehavior = opts && 'textHeightBehavior' in opts ? opts.textHeightBehavior : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L52, 49, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[style$] = style;
    this[textAlign$0] = textAlign;
    this[softWrap$0] = softWrap;
    this[overflow$0] = overflow;
    this[maxLines$0] = maxLines;
    this[textWidthBasis$] = textWidthBasis;
    this[textHeightBehavior$] = textHeightBehavior;
    if (!(style != null)) dart.assertFailed(null, L52, 50, 15, "style != null");
    if (!(softWrap != null)) dart.assertFailed(null, L52, 51, 15, "softWrap != null");
    if (!(overflow != null)) dart.assertFailed(null, L52, 52, 15, "overflow != null");
    if (!(maxLines == null || dart.notNull(maxLines) > 0)) dart.assertFailed(null, L52, 53, 15, "maxLines == null || maxLines > 0");
    if (!(child != null)) dart.assertFailed(null, L52, 54, 15, "child != null");
    if (!(textWidthBasis != null)) dart.assertFailed(null, L52, 55, 15, "textWidthBasis != null");
    text.DefaultTextStyle.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text.DefaultTextStyle.prototype;
  (text.DefaultTextStyle.fallback = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[style$] = C587 || CT.C587;
    this[textAlign$0] = null;
    this[softWrap$0] = true;
    this[maxLines$0] = null;
    this[overflow$0] = paragraph.TextOverflow.clip;
    this[textWidthBasis$] = text_painter.TextWidthBasis.parent;
    this[textHeightBehavior$] = null;
    text.DefaultTextStyle.__proto__.new.call(this, {key: key, child: C588 || CT.C588, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text.DefaultTextStyle.prototype;
  dart.addTypeTests(text.DefaultTextStyle);
  dart.addTypeCaches(text.DefaultTextStyle);
  const style$ = DefaultTextStyle_style;
  const textAlign$0 = DefaultTextStyle_textAlign;
  const softWrap$0 = DefaultTextStyle_softWrap;
  const overflow$0 = DefaultTextStyle_overflow;
  const maxLines$0 = DefaultTextStyle_maxLines;
  const textWidthBasis$ = DefaultTextStyle_textWidthBasis;
  const textHeightBehavior$ = DefaultTextStyle_textHeightBehavior;
  dart.setMethodSignature(text.DefaultTextStyle, () => ({
    __proto__: dart.getMethods(text.DefaultTextStyle.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget])
  }));
  dart.setLibraryUri(text.DefaultTextStyle, L53);
  dart.setFieldSignature(text.DefaultTextStyle, () => ({
    __proto__: dart.getFields(text.DefaultTextStyle.__proto__),
    style: dart.finalFieldType(text_style.TextStyle),
    textAlign: dart.finalFieldType(dart.nullable(ui.TextAlign)),
    softWrap: dart.finalFieldType(core.bool),
    overflow: dart.finalFieldType(paragraph.TextOverflow),
    maxLines: dart.finalFieldType(dart.nullable(core.int)),
    textWidthBasis: dart.finalFieldType(text_painter.TextWidthBasis),
    textHeightBehavior: dart.finalFieldType(dart.nullable(ui.TextHeightBehavior))
  }));
  text._NullWidget = class _NullWidget extends framework.StatelessWidget {
    build(context) {
      if (context == null) dart.nullFailed(L52, 213, 29, "context");
      dart.throw(assertions.FlutterError.new("A DefaultTextStyle constructed with DefaultTextStyle.fallback cannot be incorporated into the widget tree, " + "it is meant only to provide a fallback value returned by DefaultTextStyle.of() " + "when no enclosing default text style is present in a BuildContext."));
    }
  };
  (text._NullWidget.new = function(opts) {
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    text._NullWidget.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text._NullWidget.prototype;
  dart.addTypeTests(text._NullWidget);
  dart.addTypeCaches(text._NullWidget);
  dart.setMethodSignature(text._NullWidget, () => ({
    __proto__: dart.getMethods(text._NullWidget.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(text._NullWidget, L53);
  var C617;
  var C618;
  var C616;
  var C615;
  var textHeightBehavior$0 = dart.privateName(text, "DefaultTextHeightBehavior.textHeightBehavior");
  text.DefaultTextHeightBehavior = class DefaultTextHeightBehavior extends inherited_theme.InheritedTheme {
    get textHeightBehavior() {
      return this[textHeightBehavior$0];
    }
    set textHeightBehavior(value) {
      super.textHeightBehavior = value;
    }
    static of(context) {
      let t53;
      if (context == null) dart.nullFailed(L52, 257, 46, "context");
      t53 = context.dependOnInheritedWidgetOfExactType(text.DefaultTextHeightBehavior);
      return t53 == null ? null : t53.textHeightBehavior;
    }
    updateShouldNotify(oldWidget) {
      text.DefaultTextHeightBehavior.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L52, 262, 53, "oldWidget");
      return !dart.equals(this.textHeightBehavior, oldWidget.textHeightBehavior);
    }
    wrap(context, child) {
      if (context == null) dart.nullFailed(L52, 267, 28, "context");
      if (child == null) dart.nullFailed(L52, 267, 44, "child");
      return new text.DefaultTextHeightBehavior.new({textHeightBehavior: this.textHeightBehavior, child: child, $creationLocationd_0dea112b090073317d4: C615 || CT.C615});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L52, 275, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfTextHeightBehavior()).new("textHeightBehavior", this.textHeightBehavior, {defaultValue: null}));
    }
  };
  (text.DefaultTextHeightBehavior.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textHeightBehavior = opts && 'textHeightBehavior' in opts ? opts.textHeightBehavior : null;
    if (textHeightBehavior == null) dart.nullFailed(L52, 239, 19, "textHeightBehavior");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L52, 240, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[textHeightBehavior$0] = textHeightBehavior;
    if (!(textHeightBehavior != null)) dart.assertFailed(null, L52, 241, 16, "textHeightBehavior != null");
    if (!(child != null)) dart.assertFailed(null, L52, 242, 16, "child != null");
    text.DefaultTextHeightBehavior.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text.DefaultTextHeightBehavior.prototype;
  dart.addTypeTests(text.DefaultTextHeightBehavior);
  dart.addTypeCaches(text.DefaultTextHeightBehavior);
  dart.setMethodSignature(text.DefaultTextHeightBehavior, () => ({
    __proto__: dart.getMethods(text.DefaultTextHeightBehavior.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget])
  }));
  dart.setLibraryUri(text.DefaultTextHeightBehavior, L53);
  dart.setFieldSignature(text.DefaultTextHeightBehavior, () => ({
    __proto__: dart.getFields(text.DefaultTextHeightBehavior.__proto__),
    textHeightBehavior: dart.finalFieldType(ui.TextHeightBehavior)
  }));
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var C620;
  var C619;
  var C623;
  var C624;
  var C625;
  var C626;
  var C627;
  var C628;
  var C629;
  var C630;
  var C631;
  var C632;
  var C633;
  var C622;
  var C621;
  var C636;
  var C635;
  var C634;
  var C639;
  var C640;
  var C641;
  var C638;
  var C637;
  var data$ = dart.privateName(text, "Text.data");
  var textSpan$ = dart.privateName(text, "Text.textSpan");
  var style$0 = dart.privateName(text, "Text.style");
  var strutStyle$ = dart.privateName(text, "Text.strutStyle");
  var textAlign$1 = dart.privateName(text, "Text.textAlign");
  var textDirection$2 = dart.privateName(text, "Text.textDirection");
  var locale$ = dart.privateName(text, "Text.locale");
  var softWrap$1 = dart.privateName(text, "Text.softWrap");
  var overflow$1 = dart.privateName(text, "Text.overflow");
  var textScaleFactor$ = dart.privateName(text, "Text.textScaleFactor");
  var maxLines$1 = dart.privateName(text, "Text.maxLines");
  var semanticsLabel$1 = dart.privateName(text, "Text.semanticsLabel");
  var textWidthBasis$0 = dart.privateName(text, "Text.textWidthBasis");
  var textHeightBehavior$1 = dart.privateName(text, "Text.textHeightBehavior");
  text.Text = class Text extends framework.StatelessWidget {
    get data() {
      return this[data$];
    }
    set data(value) {
      super.data = value;
    }
    get textSpan() {
      return this[textSpan$];
    }
    set textSpan(value) {
      super.textSpan = value;
    }
    get style() {
      return this[style$0];
    }
    set style(value) {
      super.style = value;
    }
    get strutStyle() {
      return this[strutStyle$];
    }
    set strutStyle(value) {
      super.strutStyle = value;
    }
    get textAlign() {
      return this[textAlign$1];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get textDirection() {
      return this[textDirection$2];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get locale() {
      return this[locale$];
    }
    set locale(value) {
      super.locale = value;
    }
    get softWrap() {
      return this[softWrap$1];
    }
    set softWrap(value) {
      super.softWrap = value;
    }
    get overflow() {
      return this[overflow$1];
    }
    set overflow(value) {
      super.overflow = value;
    }
    get textScaleFactor() {
      return this[textScaleFactor$];
    }
    set textScaleFactor(value) {
      super.textScaleFactor = value;
    }
    get maxLines() {
      return this[maxLines$1];
    }
    set maxLines(value) {
      super.maxLines = value;
    }
    get semanticsLabel() {
      return this[semanticsLabel$1];
    }
    set semanticsLabel(value) {
      super.semanticsLabel = value;
    }
    get textWidthBasis() {
      return this[textWidthBasis$0];
    }
    set textWidthBasis(value) {
      super.textWidthBasis = value;
    }
    get textHeightBehavior() {
      return this[textHeightBehavior$1];
    }
    set textHeightBehavior(value) {
      super.textHeightBehavior = value;
    }
    build(context) {
      let t53, t53$, t53$0, t53$1, t53$2, t53$3, t53$4, t53$5, t53$6;
      if (context == null) dart.nullFailed(L52, 518, 29, "context");
      let defaultTextStyle = text.DefaultTextStyle.of(context);
      let effectiveTextStyle = this.style;
      if (this.style == null || dart.test(dart.nullCheck(this.style).inherit)) effectiveTextStyle = defaultTextStyle.style.merge(this.style);
      if (dart.test(media_query.MediaQuery.boldTextOverride(context))) effectiveTextStyle = dart.nullCheck(effectiveTextStyle).merge(C619 || CT.C619);
      let result = new basic.RichText.new({textAlign: (t53$ = (t53 = this.textAlign, t53 == null ? defaultTextStyle.textAlign : t53), t53$ == null ? ui.TextAlign.start : t53$), textDirection: this.textDirection, locale: this.locale, softWrap: (t53$0 = this.softWrap, t53$0 == null ? defaultTextStyle.softWrap : t53$0), overflow: (t53$1 = this.overflow, t53$1 == null ? defaultTextStyle.overflow : t53$1), textScaleFactor: (t53$2 = this.textScaleFactor, t53$2 == null ? media_query.MediaQuery.textScaleFactorOf(context) : t53$2), maxLines: (t53$3 = this.maxLines, t53$3 == null ? defaultTextStyle.maxLines : t53$3), strutStyle: this.strutStyle, textWidthBasis: (t53$4 = this.textWidthBasis, t53$4 == null ? defaultTextStyle.textWidthBasis : t53$4), textHeightBehavior: (t53$6 = (t53$5 = this.textHeightBehavior, t53$5 == null ? defaultTextStyle.textHeightBehavior : t53$5), t53$6 == null ? text.DefaultTextHeightBehavior.of(context) : t53$6), text: new text_span.TextSpan.new({style: effectiveTextStyle, text: this.data, children: this.textSpan != null ? JSArrayOfInlineSpan().of([dart.nullCheck(this.textSpan)]) : null}), $creationLocationd_0dea112b090073317d4: C621 || CT.C621});
      if (this.semanticsLabel != null) {
        result = new basic.Semantics.new({textDirection: this.textDirection, label: this.semanticsLabel, child: new basic.ExcludeSemantics.new({child: result, $creationLocationd_0dea112b090073317d4: C634 || CT.C634}), $creationLocationd_0dea112b090073317d4: C637 || CT.C637});
      }
      return result;
    }
    debugFillProperties(properties) {
      let t53;
      if (properties == null) dart.nullFailed(L52, 555, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.StringProperty.new("data", this.data, {showName: false}));
      if (this.textSpan != null) {
        properties.add(dart.nullCheck(this.textSpan).toDiagnosticsNode({name: "textSpan", style: diagnostics$.DiagnosticsTreeStyle.transition}));
      }
      t53 = this.style;
      t53 == null ? null : t53.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfTextAlign()).new("textAlign", this.textAlign, {defaultValue: null}));
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfLocale()).new("locale", this.locale, {defaultValue: null}));
      properties.add(new diagnostics$.FlagProperty.new("softWrap", {value: this.softWrap, ifTrue: "wrapping at box width", ifFalse: "no wrapping except at line break characters", showName: true}));
      properties.add(new (EnumPropertyOfTextOverflow()).new("overflow", this.overflow, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("textScaleFactor", this.textScaleFactor, {defaultValue: null}));
      properties.add(new diagnostics$.IntProperty.new("maxLines", this.maxLines, {defaultValue: null}));
      properties.add(new (EnumPropertyOfTextWidthBasis()).new("textWidthBasis", this.textWidthBasis, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfTextHeightBehavior()).new("textHeightBehavior", this.textHeightBehavior, {defaultValue: null}));
      if (this.semanticsLabel != null) {
        properties.add(new diagnostics$.StringProperty.new("semanticsLabel", this.semanticsLabel));
      }
    }
  };
  (text.Text.new = function(data, opts) {
    if (data == null) dart.nullFailed(L52, 364, 17, "data");
    let key = opts && 'key' in opts ? opts.key : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let strutStyle = opts && 'strutStyle' in opts ? opts.strutStyle : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let softWrap = opts && 'softWrap' in opts ? opts.softWrap : null;
    let overflow = opts && 'overflow' in opts ? opts.overflow : null;
    let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
    let maxLines = opts && 'maxLines' in opts ? opts.maxLines : null;
    let semanticsLabel = opts && 'semanticsLabel' in opts ? opts.semanticsLabel : null;
    let textWidthBasis = opts && 'textWidthBasis' in opts ? opts.textWidthBasis : null;
    let textHeightBehavior = opts && 'textHeightBehavior' in opts ? opts.textHeightBehavior : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$] = data;
    this[style$0] = style;
    this[strutStyle$] = strutStyle;
    this[textAlign$1] = textAlign;
    this[textDirection$2] = textDirection;
    this[locale$] = locale;
    this[softWrap$1] = softWrap;
    this[overflow$1] = overflow;
    this[textScaleFactor$] = textScaleFactor;
    this[maxLines$1] = maxLines;
    this[semanticsLabel$1] = semanticsLabel;
    this[textWidthBasis$0] = textWidthBasis;
    this[textHeightBehavior$1] = textHeightBehavior;
    if (!(data != null)) dart.assertFailed("A non-null String must be provided to a Text widget.", L52, 379, 10, "data != null");
    this[textSpan$] = null;
    text.Text.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text.Text.prototype;
  (text.Text.rich = function(textSpan, opts) {
    if (textSpan == null) dart.nullFailed(L52, 396, 21, "textSpan");
    let key = opts && 'key' in opts ? opts.key : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let strutStyle = opts && 'strutStyle' in opts ? opts.strutStyle : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let softWrap = opts && 'softWrap' in opts ? opts.softWrap : null;
    let overflow = opts && 'overflow' in opts ? opts.overflow : null;
    let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
    let maxLines = opts && 'maxLines' in opts ? opts.maxLines : null;
    let semanticsLabel = opts && 'semanticsLabel' in opts ? opts.semanticsLabel : null;
    let textWidthBasis = opts && 'textWidthBasis' in opts ? opts.textWidthBasis : null;
    let textHeightBehavior = opts && 'textHeightBehavior' in opts ? opts.textHeightBehavior : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[textSpan$] = textSpan;
    this[style$0] = style;
    this[strutStyle$] = strutStyle;
    this[textAlign$1] = textAlign;
    this[textDirection$2] = textDirection;
    this[locale$] = locale;
    this[softWrap$1] = softWrap;
    this[overflow$1] = overflow;
    this[textScaleFactor$] = textScaleFactor;
    this[maxLines$1] = maxLines;
    this[semanticsLabel$1] = semanticsLabel;
    this[textWidthBasis$0] = textWidthBasis;
    this[textHeightBehavior$1] = textHeightBehavior;
    if (!(textSpan != null)) dart.assertFailed("A non-null TextSpan must be provided to a Text.rich widget.", L52, 411, 10, "textSpan != null");
    this[data$] = null;
    text.Text.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text.Text.prototype;
  dart.addTypeTests(text.Text);
  dart.addTypeCaches(text.Text);
  dart.setMethodSignature(text.Text, () => ({
    __proto__: dart.getMethods(text.Text.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(text.Text, L53);
  dart.setFieldSignature(text.Text, () => ({
    __proto__: dart.getFields(text.Text.__proto__),
    data: dart.finalFieldType(dart.nullable(core.String)),
    textSpan: dart.finalFieldType(dart.nullable(inline_span.InlineSpan)),
    style: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    strutStyle: dart.finalFieldType(dart.nullable(strut_style.StrutStyle)),
    textAlign: dart.finalFieldType(dart.nullable(ui.TextAlign)),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    locale: dart.finalFieldType(dart.nullable(ui.Locale)),
    softWrap: dart.finalFieldType(dart.nullable(core.bool)),
    overflow: dart.finalFieldType(dart.nullable(paragraph.TextOverflow)),
    textScaleFactor: dart.finalFieldType(dart.nullable(core.double)),
    maxLines: dart.finalFieldType(dart.nullable(core.int)),
    semanticsLabel: dart.finalFieldType(dart.nullable(core.String)),
    textWidthBasis: dart.finalFieldType(dart.nullable(text_painter.TextWidthBasis)),
    textHeightBehavior: dart.finalFieldType(dart.nullable(ui.TextHeightBehavior))
  }));
  var C642;
  var _name$12 = dart.privateName(viewport$, "_name");
  var C643;
  var C644;
  var C645;
  var C646;
  var axisDirection$ = dart.privateName(viewport, "Viewport.axisDirection");
  var crossAxisDirection$ = dart.privateName(viewport, "Viewport.crossAxisDirection");
  var anchor$ = dart.privateName(viewport, "Viewport.anchor");
  var offset$ = dart.privateName(viewport, "Viewport.offset");
  var center$ = dart.privateName(viewport, "Viewport.center");
  var cacheExtent$ = dart.privateName(viewport, "Viewport.cacheExtent");
  var cacheExtentStyle$ = dart.privateName(viewport, "Viewport.cacheExtentStyle");
  var clipBehavior$0 = dart.privateName(viewport, "Viewport.clipBehavior");
  viewport.Viewport = class Viewport extends framework.MultiChildRenderObjectWidget {
    get axisDirection() {
      return this[axisDirection$];
    }
    set axisDirection(value) {
      super.axisDirection = value;
    }
    get crossAxisDirection() {
      return this[crossAxisDirection$];
    }
    set crossAxisDirection(value) {
      super.crossAxisDirection = value;
    }
    get anchor() {
      return this[anchor$];
    }
    set anchor(value) {
      super.anchor = value;
    }
    get offset() {
      return this[offset$];
    }
    set offset(value) {
      super.offset = value;
    }
    get center() {
      return this[center$];
    }
    set center(value) {
      super.center = value;
    }
    get cacheExtent() {
      return this[cacheExtent$];
    }
    set cacheExtent(value) {
      super.cacheExtent = value;
    }
    get cacheExtentStyle() {
      return this[cacheExtentStyle$];
    }
    set cacheExtentStyle(value) {
      super.cacheExtentStyle = value;
    }
    get clipBehavior() {
      return this[clipBehavior$0];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    static getDefaultCrossAxisDirection(context, axisDirection) {
      if (context == null) dart.nullFailed(L54, 141, 66, "context");
      if (axisDirection == null) dart.nullFailed(L54, 141, 89, "axisDirection");
      if (!(axisDirection != null)) dart.assertFailed(null, L54, 142, 12, "axisDirection != null");
      switch (axisDirection) {
        case C644 || CT.C644:
        {
          if (!dart.test(debug$0.debugCheckHasDirectionality(context, {why: "to determine the cross-axis direction when the viewport has an 'up' axisDirection", alternative: "Alternatively, consider specifying the 'crossAxisDirection' argument on the Viewport."}))) dart.assertFailed(null, L54, 145, 16, "debugCheckHasDirectionality(\r\n          context,\r\n          why: 'to determine the cross-axis direction when the viewport has an \\'up\\' axisDirection',\r\n          alternative: 'Alternatively, consider specifying the \\'crossAxisDirection\\' argument on the Viewport.',\r\n        )");
          return basic_types.textDirectionToAxisDirection(basic.Directionality.of(context));
        }
        case C645 || CT.C645:
        {
          return basic_types.AxisDirection.down;
        }
        case C642 || CT.C642:
        {
          if (!dart.test(debug$0.debugCheckHasDirectionality(context, {why: "to determine the cross-axis direction when the viewport has a 'down' axisDirection", alternative: "Alternatively, consider specifying the 'crossAxisDirection' argument on the Viewport."}))) dart.assertFailed(null, L54, 154, 16, "debugCheckHasDirectionality(\r\n          context,\r\n          why: 'to determine the cross-axis direction when the viewport has a \\'down\\' axisDirection',\r\n          alternative: 'Alternatively, consider specifying the \\'crossAxisDirection\\' argument on the Viewport.',\r\n        )");
          return basic_types.textDirectionToAxisDirection(basic.Directionality.of(context));
        }
        case C646 || CT.C646:
        {
          return basic_types.AxisDirection.down;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    createRenderObject(context) {
      let t53;
      if (context == null) dart.nullFailed(L54, 166, 50, "context");
      return new viewport$.RenderViewport.new({axisDirection: this.axisDirection, crossAxisDirection: (t53 = this.crossAxisDirection, t53 == null ? viewport.Viewport.getDefaultCrossAxisDirection(context, this.axisDirection) : t53), anchor: this.anchor, offset: this.offset, cacheExtent: this.cacheExtent, cacheExtentStyle: this.cacheExtentStyle, clipBehavior: this.clipBehavior});
    }
    updateRenderObject(context, renderObject) {
      let t54, t53;
      if (context == null) dart.nullFailed(L54, 179, 40, "context");
      viewport$.RenderViewport.as(renderObject);
      if (renderObject == null) dart.nullFailed(L54, 179, 64, "renderObject");
      t53 = renderObject;
      (() => {
        t53.axisDirection = this.axisDirection;
        t53.crossAxisDirection = (t54 = this.crossAxisDirection, t54 == null ? viewport.Viewport.getDefaultCrossAxisDirection(context, this.axisDirection) : t54);
        t53.anchor = this.anchor;
        t53.offset = this.offset;
        t53.cacheExtent = this.cacheExtent;
        t53.cacheExtentStyle = this.cacheExtentStyle;
        t53.clipBehavior = this.clipBehavior;
        return t53;
      })();
    }
    createElement() {
      return new viewport._ViewportElement.new(this);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L54, 194, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfAxisDirection()).new("axisDirection", this.axisDirection));
      properties.add(new (EnumPropertyOfAxisDirection()).new("crossAxisDirection", this.crossAxisDirection, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("anchor", this.anchor));
      properties.add(new (DiagnosticsPropertyOfViewportOffset()).new("offset", this.offset));
      if (this.center != null) {
        properties.add(new (DiagnosticsPropertyOfKey()).new("center", this.center));
      } else if (dart.test(this.children[$isNotEmpty]) && this.children[$first].key != null) {
        properties.add(new (DiagnosticsPropertyOfKey()).new("center", this.children[$first].key, {tooltip: "implicit"}));
      }
      properties.add(new (DiagnosticsPropertyOfdouble()).new("cacheExtent", this.cacheExtent));
      properties.add(new (DiagnosticsPropertyOfCacheExtentStyle()).new("cacheExtentStyle", this.cacheExtentStyle));
    }
  };
  (viewport.Viewport.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : C642 || CT.C642;
    if (axisDirection == null) dart.nullFailed(L54, 58, 10, "axisDirection");
    let crossAxisDirection = opts && 'crossAxisDirection' in opts ? opts.crossAxisDirection : null;
    let anchor = opts && 'anchor' in opts ? opts.anchor : 0;
    if (anchor == null) dart.nullFailed(L54, 60, 10, "anchor");
    let offset = opts && 'offset' in opts ? opts.offset : null;
    if (offset == null) dart.nullFailed(L54, 61, 19, "offset");
    let center = opts && 'center' in opts ? opts.center : null;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let cacheExtentStyle = opts && 'cacheExtentStyle' in opts ? opts.cacheExtentStyle : C643 || CT.C643;
    if (cacheExtentStyle == null) dart.nullFailed(L54, 64, 10, "cacheExtentStyle");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C470 || CT.C470;
    if (clipBehavior == null) dart.nullFailed(L54, 65, 10, "clipBehavior");
    let slivers = opts && 'slivers' in opts ? opts.slivers : C365 || CT.C365;
    if (slivers == null) dart.nullFailed(L54, 66, 18, "slivers");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[axisDirection$] = axisDirection;
    this[crossAxisDirection$] = crossAxisDirection;
    this[anchor$] = anchor;
    this[offset$] = offset;
    this[center$] = center;
    this[cacheExtent$] = cacheExtent;
    this[cacheExtentStyle$] = cacheExtentStyle;
    this[clipBehavior$0] = clipBehavior;
    if (!(offset != null)) dart.assertFailed(null, L54, 67, 15, "offset != null");
    if (!(slivers != null)) dart.assertFailed(null, L54, 68, 15, "slivers != null");
    if (!(center == null || slivers[$where](dart.fn(child => {
      if (child == null) dart.nullFailed(L54, 69, 55, "child");
      return dart.equals(child.key, center);
    }, WidgetTobool()))[$length] === 1)) dart.assertFailed(null, L54, 69, 15, "center == null || slivers.where((Widget child) => child.key == center).length == 1");
    if (!(cacheExtentStyle != null)) dart.assertFailed(null, L54, 70, 15, "cacheExtentStyle != null");
    if (!(!dart.equals(cacheExtentStyle, viewport$.CacheExtentStyle.viewport) || cacheExtent != null)) dart.assertFailed(null, L54, 71, 15, "cacheExtentStyle != CacheExtentStyle.viewport || cacheExtent != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L54, 72, 15, "clipBehavior != null");
    viewport.Viewport.__proto__.new.call(this, {key: key, children: slivers, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = viewport.Viewport.prototype;
  dart.addTypeTests(viewport.Viewport);
  dart.addTypeCaches(viewport.Viewport);
  dart.setMethodSignature(viewport.Viewport, () => ({
    __proto__: dart.getMethods(viewport.Viewport.__proto__),
    createRenderObject: dart.fnType(viewport$.RenderViewport, [framework.BuildContext]),
    createElement: dart.fnType(viewport._ViewportElement, [])
  }));
  dart.setLibraryUri(viewport.Viewport, L55);
  dart.setFieldSignature(viewport.Viewport, () => ({
    __proto__: dart.getFields(viewport.Viewport.__proto__),
    axisDirection: dart.finalFieldType(basic_types.AxisDirection),
    crossAxisDirection: dart.finalFieldType(dart.nullable(basic_types.AxisDirection)),
    anchor: dart.finalFieldType(core.double),
    offset: dart.finalFieldType(viewport_offset.ViewportOffset),
    center: dart.finalFieldType(dart.nullable(key.Key)),
    cacheExtent: dart.finalFieldType(dart.nullable(core.double)),
    cacheExtentStyle: dart.finalFieldType(viewport$.CacheExtentStyle),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var _updateCenter = dart.privateName(viewport, "_updateCenter");
  viewport._ViewportElement = class _ViewportElement extends framework.MultiChildRenderObjectElement {
    get widget() {
      return viewport.Viewport.as(super.widget);
    }
    get renderObject() {
      return viewport$.RenderViewport.as(super.renderObject);
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      this[_updateCenter]();
    }
    update(newWidget) {
      framework.MultiChildRenderObjectWidget.as(newWidget);
      if (newWidget == null) dart.nullFailed(L54, 227, 44, "newWidget");
      super.update(newWidget);
      this[_updateCenter]();
    }
    [_updateCenter]() {
      if (this.widget.center != null) {
        this.renderObject.center = RenderSliverN().as(this.children[$singleWhere](dart.fn(element => {
          if (element == null) dart.nullFailed(L54, 236, 18, "element");
          return dart.equals(element.widget.key, this.widget.center);
        }, ElementTobool())).renderObject);
      } else if (dart.test(this.children[$isNotEmpty])) {
        this.renderObject.center = RenderSliverN().as(this.children[$first].renderObject);
      } else {
        this.renderObject.center = null;
      }
    }
    debugVisitOnstageChildren(visitor) {
      if (visitor == null) dart.nullFailed(L54, 246, 49, "visitor");
      this.children[$where](dart.fn(e => {
        if (e == null) dart.nullFailed(L54, 247, 29, "e");
        let renderSliver = sliver.RenderSliver.as(dart.nullCheck(e.renderObject));
        return dart.nullCheck(renderSliver.geometry).visible;
      }, ElementTobool()))[$forEach](visitor);
    }
  };
  (viewport._ViewportElement.new = function(widget) {
    if (widget == null) dart.nullFailed(L54, 212, 29, "widget");
    viewport._ViewportElement.__proto__.new.call(this, widget);
    ;
  }).prototype = viewport._ViewportElement.prototype;
  dart.addTypeTests(viewport._ViewportElement);
  dart.addTypeCaches(viewport._ViewportElement);
  dart.setMethodSignature(viewport._ViewportElement, () => ({
    __proto__: dart.getMethods(viewport._ViewportElement.__proto__),
    [_updateCenter]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(viewport._ViewportElement, () => ({
    __proto__: dart.getGetters(viewport._ViewportElement.__proto__),
    widget: viewport.Viewport,
    renderObject: viewport$.RenderViewport
  }));
  dart.setLibraryUri(viewport._ViewportElement, L55);
  var axisDirection$0 = dart.privateName(viewport, "ShrinkWrappingViewport.axisDirection");
  var crossAxisDirection$0 = dart.privateName(viewport, "ShrinkWrappingViewport.crossAxisDirection");
  var offset$0 = dart.privateName(viewport, "ShrinkWrappingViewport.offset");
  var clipBehavior$1 = dart.privateName(viewport, "ShrinkWrappingViewport.clipBehavior");
  viewport.ShrinkWrappingViewport = class ShrinkWrappingViewport extends framework.MultiChildRenderObjectWidget {
    get axisDirection() {
      return this[axisDirection$0];
    }
    set axisDirection(value) {
      super.axisDirection = value;
    }
    get crossAxisDirection() {
      return this[crossAxisDirection$0];
    }
    set crossAxisDirection(value) {
      super.crossAxisDirection = value;
    }
    get offset() {
      return this[offset$0];
    }
    set offset(value) {
      super.offset = value;
    }
    get clipBehavior() {
      return this[clipBehavior$1];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    createRenderObject(context) {
      let t53;
      if (context == null) dart.nullFailed(L54, 331, 64, "context");
      return new viewport$.RenderShrinkWrappingViewport.new({axisDirection: this.axisDirection, crossAxisDirection: (t53 = this.crossAxisDirection, t53 == null ? viewport.Viewport.getDefaultCrossAxisDirection(context, this.axisDirection) : t53), offset: this.offset, clipBehavior: this.clipBehavior});
    }
    updateRenderObject(context, renderObject) {
      let t54, t53;
      if (context == null) dart.nullFailed(L54, 341, 40, "context");
      viewport$.RenderShrinkWrappingViewport.as(renderObject);
      if (renderObject == null) dart.nullFailed(L54, 341, 78, "renderObject");
      t53 = renderObject;
      (() => {
        t53.axisDirection = this.axisDirection;
        t53.crossAxisDirection = (t54 = this.crossAxisDirection, t54 == null ? viewport.Viewport.getDefaultCrossAxisDirection(context, this.axisDirection) : t54);
        t53.offset = this.offset;
        t53.clipBehavior = this.clipBehavior;
        return t53;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L54, 350, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfAxisDirection()).new("axisDirection", this.axisDirection));
      properties.add(new (EnumPropertyOfAxisDirection()).new("crossAxisDirection", this.crossAxisDirection, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfViewportOffset()).new("offset", this.offset));
    }
  };
  (viewport.ShrinkWrappingViewport.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : C642 || CT.C642;
    if (axisDirection == null) dart.nullFailed(L54, 289, 10, "axisDirection");
    let crossAxisDirection = opts && 'crossAxisDirection' in opts ? opts.crossAxisDirection : null;
    let offset = opts && 'offset' in opts ? opts.offset : null;
    if (offset == null) dart.nullFailed(L54, 291, 19, "offset");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C470 || CT.C470;
    if (clipBehavior == null) dart.nullFailed(L54, 292, 10, "clipBehavior");
    let slivers = opts && 'slivers' in opts ? opts.slivers : C365 || CT.C365;
    if (slivers == null) dart.nullFailed(L54, 293, 18, "slivers");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[axisDirection$0] = axisDirection;
    this[crossAxisDirection$0] = crossAxisDirection;
    this[offset$0] = offset;
    this[clipBehavior$1] = clipBehavior;
    if (!(offset != null)) dart.assertFailed(null, L54, 294, 15, "offset != null");
    viewport.ShrinkWrappingViewport.__proto__.new.call(this, {key: key, children: slivers, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = viewport.ShrinkWrappingViewport.prototype;
  dart.addTypeTests(viewport.ShrinkWrappingViewport);
  dart.addTypeCaches(viewport.ShrinkWrappingViewport);
  dart.setMethodSignature(viewport.ShrinkWrappingViewport, () => ({
    __proto__: dart.getMethods(viewport.ShrinkWrappingViewport.__proto__),
    createRenderObject: dart.fnType(viewport$.RenderShrinkWrappingViewport, [framework.BuildContext])
  }));
  dart.setLibraryUri(viewport.ShrinkWrappingViewport, L55);
  dart.setFieldSignature(viewport.ShrinkWrappingViewport, () => ({
    __proto__: dart.getFields(viewport.ShrinkWrappingViewport.__proto__),
    axisDirection: dart.finalFieldType(basic_types.AxisDirection),
    crossAxisDirection: dart.finalFieldType(dart.nullable(basic_types.AxisDirection)),
    offset: dart.finalFieldType(viewport_offset.ViewportOffset),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var C649;
  var C650;
  var C651;
  var C648;
  var C647;
  var ScrollPhysics_parent = dart.privateName(scroll_physics, "ScrollPhysics.parent");
  var C653;
  var C652;
  var C654;
  scroll_configuration.ScrollBehavior = class ScrollBehavior extends core.Object {
    getPlatform(context) {
      if (context == null) dart.nullFailed(L56, 27, 43, "context");
      return platform.defaultTargetPlatform;
    }
    buildViewportChrome(context, child, axisDirection) {
      if (context == null) dart.nullFailed(L56, 34, 43, "context");
      if (child == null) dart.nullFailed(L56, 34, 59, "child");
      if (axisDirection == null) dart.nullFailed(L56, 34, 80, "axisDirection");
      switch (this.getPlatform(context)) {
        case C103 || CT.C103:
        case C101 || CT.C101:
        case C104 || CT.C104:
        case C102 || CT.C102:
        {
          return child;
        }
        case C99 || CT.C99:
        case C100 || CT.C100:
        {
          return new overscroll_indicator.GlowingOverscrollIndicator.new({child: child, axisDirection: axisDirection, color: scroll_configuration._kDefaultGlowColor, $creationLocationd_0dea112b090073317d4: C647 || CT.C647});
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    velocityTrackerBuilder(context) {
      if (context == null) dart.nullFailed(L56, 69, 69, "context");
      switch (this.getPlatform(context)) {
        case C103 || CT.C103:
        case C104 || CT.C104:
        {
          return dart.fn(event => {
            if (event == null) dart.nullFailed(L56, 73, 30, "event");
            return new velocity_tracker.IOSScrollViewFlingVelocityTracker.new(event.kind);
          }, PointerEventToIOSScrollViewFlingVelocityTracker());
        }
        case C99 || CT.C99:
        case C100 || CT.C100:
        case C101 || CT.C101:
        case C102 || CT.C102:
        {
          return dart.fn(event => {
            if (event == null) dart.nullFailed(L56, 78, 30, "event");
            return new velocity_tracker.VelocityTracker.withKind(event.kind);
          }, PointerEventToVelocityTracker());
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    getScrollPhysics(context) {
      if (context == null) dart.nullFailed(L56, 90, 47, "context");
      switch (this.getPlatform(context)) {
        case C103 || CT.C103:
        case C104 || CT.C104:
        {
          return scroll_configuration.ScrollBehavior._bouncingPhysics;
        }
        case C99 || CT.C99:
        case C100 || CT.C100:
        case C101 || CT.C101:
        case C102 || CT.C102:
        {
          return scroll_configuration.ScrollBehavior._clampingPhysics;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    shouldNotify(oldDelegate) {
      scroll_configuration.ScrollBehavior.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(L56, 113, 46, "oldDelegate");
      return false;
    }
    toString() {
      return object.objectRuntimeType(this, "ScrollBehavior");
    }
  };
  (scroll_configuration.ScrollBehavior.new = function() {
    ;
  }).prototype = scroll_configuration.ScrollBehavior.prototype;
  dart.addTypeTests(scroll_configuration.ScrollBehavior);
  dart.addTypeCaches(scroll_configuration.ScrollBehavior);
  dart.setMethodSignature(scroll_configuration.ScrollBehavior, () => ({
    __proto__: dart.getMethods(scroll_configuration.ScrollBehavior.__proto__),
    getPlatform: dart.fnType(platform.TargetPlatform, [framework.BuildContext]),
    buildViewportChrome: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget, basic_types.AxisDirection]),
    velocityTrackerBuilder: dart.fnType(dart.fnType(velocity_tracker.VelocityTracker, [events.PointerEvent]), [framework.BuildContext]),
    getScrollPhysics: dart.fnType(scroll_physics.ScrollPhysics, [framework.BuildContext]),
    shouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(scroll_configuration.ScrollBehavior, L57);
  dart.defineExtensionMethods(scroll_configuration.ScrollBehavior, ['toString']);
  dart.defineLazy(scroll_configuration.ScrollBehavior, {
    /*scroll_configuration.ScrollBehavior._bouncingPhysics*/get _bouncingPhysics() {
      return C652 || CT.C652;
    },
    /*scroll_configuration.ScrollBehavior._clampingPhysics*/get _clampingPhysics() {
      return C654 || CT.C654;
    }
  }, false);
  var C655;
  var behavior$0 = dart.privateName(scroll_configuration, "ScrollConfiguration.behavior");
  scroll_configuration.ScrollConfiguration = class ScrollConfiguration extends framework.InheritedWidget {
    get behavior() {
      return this[behavior$0];
    }
    set behavior(value) {
      super.behavior = value;
    }
    static of(context) {
      let t53, t53$;
      if (context == null) dart.nullFailed(L56, 140, 41, "context");
      let configuration = context.dependOnInheritedWidgetOfExactType(scroll_configuration.ScrollConfiguration);
      t53$ = (t53 = configuration, t53 == null ? null : t53.behavior);
      return t53$ == null ? C655 || CT.C655 : t53$;
    }
    updateShouldNotify(oldWidget) {
      scroll_configuration.ScrollConfiguration.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L56, 146, 47, "oldWidget");
      if (!(this.behavior != null)) dart.assertFailed(null, L56, 147, 12, "behavior != null");
      return !dart.equals(dart.runtimeType(this.behavior), dart.runtimeType(oldWidget.behavior)) || !dart.equals(this.behavior, oldWidget.behavior) && dart.test(this.behavior.shouldNotify(oldWidget.behavior));
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L56, 153, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfScrollBehavior()).new("behavior", this.behavior));
    }
  };
  (scroll_configuration.ScrollConfiguration.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : null;
    if (behavior == null) dart.nullFailed(L56, 129, 19, "behavior");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L56, 130, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[behavior$0] = behavior;
    scroll_configuration.ScrollConfiguration.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_configuration.ScrollConfiguration.prototype;
  dart.addTypeTests(scroll_configuration.ScrollConfiguration);
  dart.addTypeCaches(scroll_configuration.ScrollConfiguration);
  dart.setMethodSignature(scroll_configuration.ScrollConfiguration, () => ({
    __proto__: dart.getMethods(scroll_configuration.ScrollConfiguration.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(scroll_configuration.ScrollConfiguration, L57);
  dart.setFieldSignature(scroll_configuration.ScrollConfiguration, () => ({
    __proto__: dart.getFields(scroll_configuration.ScrollConfiguration.__proto__),
    behavior: dart.finalFieldType(scroll_configuration.ScrollBehavior)
  }));
  dart.defineLazy(scroll_configuration, {
    /*scroll_configuration._kDefaultGlowColor*/get _kDefaultGlowColor() {
      return C40 || CT.C40;
    }
  }, false);
  var _value$0 = dart.privateName(restoration_properties, "_value");
  const _is_RestorableValue_default = Symbol('_is_RestorableValue_default');
  restoration_properties.RestorableValue$ = dart.generic(T => {
    class RestorableValue extends restoration$.RestorableProperty$(T) {
      get value() {
        if (!dart.test(this.isRegistered)) dart.assertFailed(null, L58, 113, 12, "isRegistered");
        return T.as(this[_value$0]);
      }
      set value(newValue) {
        T.as(newValue);
        if (!dart.test(this.isRegistered)) dart.assertFailed(null, L58, 118, 12, "isRegistered");
        if (!dart.equals(newValue, this[_value$0])) {
          let oldValue = this[_value$0];
          this[_value$0] = newValue;
          this.didUpdateValue(oldValue);
        }
      }
      initWithValue(value) {
        T.as(value);
        this[_value$0] = value;
      }
    }
    (RestorableValue.new = function() {
      this[_value$0] = null;
      RestorableValue.__proto__.new.call(this);
      ;
    }).prototype = RestorableValue.prototype;
    dart.addTypeTests(RestorableValue);
    RestorableValue.prototype[_is_RestorableValue_default] = true;
    dart.addTypeCaches(RestorableValue);
    dart.setMethodSignature(RestorableValue, () => ({
      __proto__: dart.getMethods(RestorableValue.__proto__),
      initWithValue: dart.fnType(dart.void, [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(RestorableValue, () => ({
      __proto__: dart.getGetters(RestorableValue.__proto__),
      value: T
    }));
    dart.setSetterSignature(RestorableValue, () => ({
      __proto__: dart.getSetters(RestorableValue.__proto__),
      value: dart.nullable(core.Object)
    }));
    dart.setLibraryUri(RestorableValue, L59);
    dart.setFieldSignature(RestorableValue, () => ({
      __proto__: dart.getFields(RestorableValue.__proto__),
      [_value$0]: dart.fieldType(dart.nullable(T))
    }));
    return RestorableValue;
  });
  restoration_properties.RestorableValue = restoration_properties.RestorableValue$();
  dart.addTypeTests(restoration_properties.RestorableValue, _is_RestorableValue_default);
  var _defaultValue$ = dart.privateName(restoration_properties, "_defaultValue");
  const _is__RestorablePrimitiveValue_default = Symbol('_is__RestorablePrimitiveValue_default');
  restoration_properties._RestorablePrimitiveValue$ = dart.generic(T => {
    var TN = () => (TN = dart.constFn(dart.nullable(T)))();
    class _RestorablePrimitiveValue extends restoration_properties.RestorableValue$(T) {
      createDefaultValue() {
        return this[_defaultValue$];
      }
      set value(value) {
        T.as(value);
        if (value == null) dart.nullFailed(L58, 164, 15, "value");
        if (!(value != null)) dart.assertFailed(null, L58, 165, 12, "value != null");
        super.value = value;
      }
      get value() {
        return super.value;
      }
      didUpdateValue(oldValue) {
        TN().as(oldValue);
        if (!dart.test(restoration.debugIsSerializableForRestoration(this.value))) dart.assertFailed(null, L58, 171, 12, "debugIsSerializableForRestoration(value)");
        this.notifyListeners();
      }
      fromPrimitives(serialized) {
        if (!(serialized != null)) dart.assertFailed(null, L58, 177, 12, "serialized != null");
        return T.as(dart.nullCheck(serialized));
      }
      toPrimitives() {
        if (!(this.value != null)) dart.assertFailed(null, L58, 183, 12, "value != null");
        return this.value;
      }
    }
    (_RestorablePrimitiveValue.new = function(_defaultValue) {
      if (_defaultValue == null) dart.nullFailed(L58, 153, 34, "_defaultValue");
      this[_defaultValue$] = _defaultValue;
      if (!(_defaultValue != null)) dart.assertFailed(null, L58, 154, 14, "_defaultValue != null");
      if (!dart.test(restoration.debugIsSerializableForRestoration(_defaultValue))) dart.assertFailed(null, L58, 155, 14, "debugIsSerializableForRestoration(_defaultValue)");
      _RestorablePrimitiveValue.__proto__.new.call(this);
      ;
    }).prototype = _RestorablePrimitiveValue.prototype;
    dart.addTypeTests(_RestorablePrimitiveValue);
    _RestorablePrimitiveValue.prototype[_is__RestorablePrimitiveValue_default] = true;
    dart.addTypeCaches(_RestorablePrimitiveValue);
    dart.setMethodSignature(_RestorablePrimitiveValue, () => ({
      __proto__: dart.getMethods(_RestorablePrimitiveValue.__proto__),
      createDefaultValue: dart.fnType(T, []),
      didUpdateValue: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      fromPrimitives: dart.fnType(T, [dart.nullable(core.Object)]),
      toPrimitives: dart.fnType(core.Object, [])
    }));
    dart.setLibraryUri(_RestorablePrimitiveValue, L59);
    dart.setFieldSignature(_RestorablePrimitiveValue, () => ({
      __proto__: dart.getFields(_RestorablePrimitiveValue.__proto__),
      [_defaultValue$]: dart.finalFieldType(T)
    }));
    return _RestorablePrimitiveValue;
  });
  restoration_properties._RestorablePrimitiveValue = restoration_properties._RestorablePrimitiveValue$();
  dart.addTypeTests(restoration_properties._RestorablePrimitiveValue, _is__RestorablePrimitiveValue_default);
  const _is_RestorableNum_default = Symbol('_is_RestorableNum_default');
  restoration_properties.RestorableNum$ = dart.generic(T => {
    class RestorableNum extends restoration_properties._RestorablePrimitiveValue$(T) {}
    (RestorableNum.new = function(defaultValue) {
      if (defaultValue == null) dart.nullFailed(L58, 209, 19, "defaultValue");
      if (!(defaultValue != null)) dart.assertFailed(null, L58, 209, 42, "defaultValue != null");
      RestorableNum.__proto__.new.call(this, defaultValue);
      ;
    }).prototype = RestorableNum.prototype;
    dart.addTypeTests(RestorableNum);
    RestorableNum.prototype[_is_RestorableNum_default] = true;
    dart.addTypeCaches(RestorableNum);
    dart.setLibraryUri(RestorableNum, L59);
    return RestorableNum;
  });
  restoration_properties.RestorableNum = restoration_properties.RestorableNum$();
  dart.addTypeTests(restoration_properties.RestorableNum, _is_RestorableNum_default);
  restoration_properties.RestorableDouble = class RestorableDouble extends restoration_properties.RestorableNum$(core.double) {};
  (restoration_properties.RestorableDouble.new = function(defaultValue) {
    if (defaultValue == null) dart.nullFailed(L58, 219, 27, "defaultValue");
    if (!(defaultValue != null)) dart.assertFailed(null, L58, 219, 50, "defaultValue != null");
    restoration_properties.RestorableDouble.__proto__.new.call(this, defaultValue);
    ;
  }).prototype = restoration_properties.RestorableDouble.prototype;
  dart.addTypeTests(restoration_properties.RestorableDouble);
  dart.addTypeCaches(restoration_properties.RestorableDouble);
  dart.setLibraryUri(restoration_properties.RestorableDouble, L59);
  restoration_properties.RestorableInt = class RestorableInt extends restoration_properties.RestorableNum$(core.int) {};
  (restoration_properties.RestorableInt.new = function(defaultValue) {
    if (defaultValue == null) dart.nullFailed(L58, 229, 21, "defaultValue");
    if (!(defaultValue != null)) dart.assertFailed(null, L58, 229, 44, "defaultValue != null");
    restoration_properties.RestorableInt.__proto__.new.call(this, defaultValue);
    ;
  }).prototype = restoration_properties.RestorableInt.prototype;
  dart.addTypeTests(restoration_properties.RestorableInt);
  dart.addTypeCaches(restoration_properties.RestorableInt);
  dart.setLibraryUri(restoration_properties.RestorableInt, L59);
  restoration_properties.RestorableString = class RestorableString extends restoration_properties._RestorablePrimitiveValue$(core.String) {};
  (restoration_properties.RestorableString.new = function(defaultValue) {
    if (defaultValue == null) dart.nullFailed(L58, 239, 27, "defaultValue");
    if (!(defaultValue != null)) dart.assertFailed(null, L58, 239, 50, "defaultValue != null");
    restoration_properties.RestorableString.__proto__.new.call(this, defaultValue);
    ;
  }).prototype = restoration_properties.RestorableString.prototype;
  dart.addTypeTests(restoration_properties.RestorableString);
  dart.addTypeCaches(restoration_properties.RestorableString);
  dart.setLibraryUri(restoration_properties.RestorableString, L59);
  restoration_properties.RestorableBool = class RestorableBool extends restoration_properties._RestorablePrimitiveValue$(core.bool) {};
  (restoration_properties.RestorableBool.new = function(defaultValue) {
    if (defaultValue == null) dart.nullFailed(L58, 249, 23, "defaultValue");
    if (!(defaultValue != null)) dart.assertFailed(null, L58, 249, 46, "defaultValue != null");
    restoration_properties.RestorableBool.__proto__.new.call(this, defaultValue);
    ;
  }).prototype = restoration_properties.RestorableBool.prototype;
  dart.addTypeTests(restoration_properties.RestorableBool);
  dart.addTypeCaches(restoration_properties.RestorableBool);
  dart.setLibraryUri(restoration_properties.RestorableBool, L59);
  const _is_RestorableListenable_default = Symbol('_is_RestorableListenable_default');
  restoration_properties.RestorableListenable$ = dart.generic(T => {
    class RestorableListenable extends restoration$.RestorableProperty$(T) {
      get value() {
        if (!dart.test(this.isRegistered)) dart.assertFailed(null, L58, 275, 12, "isRegistered");
        return dart.nullCheck(this[_value$0]);
      }
      initWithValue(value) {
        let t53;
        T.as(value);
        if (value == null) dart.nullFailed(L58, 281, 24, "value");
        if (!(value != null)) dart.assertFailed(null, L58, 282, 12, "value != null");
        t53 = this[_value$0];
        t53 == null ? null : t53.removeListener(dart.bind(this, 'notifyListeners'));
        this[_value$0] = value;
        dart.nullCheck(this[_value$0]).addListener(dart.bind(this, 'notifyListeners'));
      }
      dispose() {
        let t53;
        super.dispose();
        t53 = this[_value$0];
        t53 == null ? null : t53.removeListener(dart.bind(this, 'notifyListeners'));
      }
    }
    (RestorableListenable.new = function() {
      this[_value$0] = null;
      RestorableListenable.__proto__.new.call(this);
      ;
    }).prototype = RestorableListenable.prototype;
    dart.addTypeTests(RestorableListenable);
    RestorableListenable.prototype[_is_RestorableListenable_default] = true;
    dart.addTypeCaches(RestorableListenable);
    dart.setMethodSignature(RestorableListenable, () => ({
      __proto__: dart.getMethods(RestorableListenable.__proto__),
      initWithValue: dart.fnType(dart.void, [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(RestorableListenable, () => ({
      __proto__: dart.getGetters(RestorableListenable.__proto__),
      value: T
    }));
    dart.setLibraryUri(RestorableListenable, L59);
    dart.setFieldSignature(RestorableListenable, () => ({
      __proto__: dart.getFields(RestorableListenable.__proto__),
      [_value$0]: dart.fieldType(dart.nullable(T))
    }));
    return RestorableListenable;
  });
  restoration_properties.RestorableListenable = restoration_properties.RestorableListenable$();
  dart.addTypeTests(restoration_properties.RestorableListenable, _is_RestorableListenable_default);
  var _diposeOldValue = dart.privateName(restoration_properties, "_diposeOldValue");
  const _is_RestorableChangeNotifier_default = Symbol('_is_RestorableChangeNotifier_default');
  restoration_properties.RestorableChangeNotifier$ = dart.generic(T => {
    class RestorableChangeNotifier extends restoration_properties.RestorableListenable$(T) {
      initWithValue(value) {
        T.as(value);
        if (value == null) dart.nullFailed(L58, 312, 24, "value");
        this[_diposeOldValue]();
        super.initWithValue(value);
      }
      dispose() {
        this[_diposeOldValue]();
        super.dispose();
      }
      [_diposeOldValue]() {
        if (this[_value$0] != null) {
          async.scheduleMicrotask(dart.bind(dart.nullCheck(this[_value$0]), 'dispose'));
        }
      }
    }
    (RestorableChangeNotifier.new = function() {
      RestorableChangeNotifier.__proto__.new.call(this);
      ;
    }).prototype = RestorableChangeNotifier.prototype;
    dart.addTypeTests(RestorableChangeNotifier);
    RestorableChangeNotifier.prototype[_is_RestorableChangeNotifier_default] = true;
    dart.addTypeCaches(RestorableChangeNotifier);
    dart.setMethodSignature(RestorableChangeNotifier, () => ({
      __proto__: dart.getMethods(RestorableChangeNotifier.__proto__),
      [_diposeOldValue]: dart.fnType(dart.void, [])
    }));
    dart.setLibraryUri(RestorableChangeNotifier, L59);
    return RestorableChangeNotifier;
  });
  restoration_properties.RestorableChangeNotifier = restoration_properties.RestorableChangeNotifier$();
  dart.addTypeTests(restoration_properties.RestorableChangeNotifier, _is_RestorableChangeNotifier_default);
  var _initialValue = dart.privateName(restoration_properties, "_initialValue");
  var TextRange_end = dart.privateName(ui, "TextRange.end");
  var TextRange_start = dart.privateName(ui, "TextRange.start");
  var TextSelection_isDirectional = dart.privateName(text_editing, "TextSelection.isDirectional");
  var C657;
  var TextSelection_affinity = dart.privateName(text_editing, "TextSelection.affinity");
  var TextSelection_extentOffset = dart.privateName(text_editing, "TextSelection.extentOffset");
  var TextSelection_baseOffset = dart.privateName(text_editing, "TextSelection.baseOffset");
  var C656;
  var TextDecoration__mask = dart.privateName(ui, "TextDecoration._mask");
  var C659;
  var C658;
  var _isSelectionWithinComposingRange = dart.privateName(editable_text, "_isSelectionWithinComposingRange");
  var C661;
  var TextEditingValue_composing = dart.privateName(text_input, "TextEditingValue.composing");
  var C662;
  var TextEditingValue_selection = dart.privateName(text_input, "TextEditingValue.selection");
  var TextEditingValue_text = dart.privateName(text_input, "TextEditingValue.text");
  var C660;
  editable_text.TextEditingController = class TextEditingController extends change_notifier.ValueNotifier$(text_input.TextEditingValue) {
    get text() {
      return this.value.text;
    }
    set text(newText) {
      this.value = this.value.copyWith({text: newText, selection: C656 || CT.C656, composing: ui.TextRange.empty});
    }
    set value(newValue) {
      text_input.TextEditingValue.as(newValue);
      if (newValue == null) dart.nullFailed(L60, 166, 30, "newValue");
      if (!(!dart.test(newValue.composing.isValid) || dart.test(newValue.isComposingRangeValid))) dart.assertFailed("New TextEditingValue " + dart.str(newValue) + " has an invalid non-empty composing range " + dart.str(newValue.composing) + ". It is recommended to use a valid composing range, " + "even for readonly text fields", L60, 168, 7, "!newValue.composing.isValid || newValue.isComposingRangeValid");
      super.value = newValue;
    }
    get value() {
      return super.value;
    }
    buildTextSpan(opts) {
      let style = opts && 'style' in opts ? opts.style : null;
      let withComposing = opts && 'withComposing' in opts ? opts.withComposing : null;
      if (withComposing == null) dart.nullFailed(L60, 180, 60, "withComposing");
      if (!(!dart.test(this.value.composing.isValid) || !dart.test(withComposing) || dart.test(this.value.isComposingRangeValid))) dart.assertFailed(null, L60, 181, 12, "!value.composing.isValid || !withComposing || value.isComposingRangeValid");
      if (!dart.test(this.value.isComposingRangeValid) || !dart.test(withComposing)) {
        return new text_span.TextSpan.new({style: style, text: this.text});
      }
      let composingStyle = dart.nullCheck(style).merge(C658 || CT.C658);
      return new text_span.TextSpan.new({style: style, children: JSArrayOfTextSpan().of([new text_span.TextSpan.new({text: this.value.composing.textBefore(this.value.text)}), new text_span.TextSpan.new({style: composingStyle, text: this.value.composing.textInside(this.value.text)}), new text_span.TextSpan.new({text: this.value.composing.textAfter(this.value.text)})])});
    }
    get selection() {
      return this.value.selection;
    }
    set selection(newSelection) {
      if (newSelection == null) dart.nullFailed(L60, 220, 31, "newSelection");
      if (!dart.test(this.isSelectionWithinTextBounds(newSelection))) dart.throw(assertions.FlutterError.new("invalid text selection: " + dart.str(newSelection)));
      let newComposing = dart.test(newSelection.isCollapsed) && dart.test(this[_isSelectionWithinComposingRange](newSelection)) ? this.value.composing : ui.TextRange.empty;
      this.value = this.value.copyWith({selection: newSelection, composing: newComposing});
    }
    clear() {
      this.value = C660 || CT.C660;
    }
    clearComposing() {
      this.value = this.value.copyWith({composing: ui.TextRange.empty});
    }
    isSelectionWithinTextBounds(selection) {
      if (selection == null) dart.nullFailed(L60, 258, 50, "selection");
      return dart.notNull(selection.start) <= this.text.length && dart.notNull(selection.end) <= this.text.length;
    }
    [_isSelectionWithinComposingRange](selection) {
      if (selection == null) dart.nullFailed(L60, 263, 55, "selection");
      return dart.notNull(selection.start) >= dart.notNull(this.value.composing.start) && dart.notNull(selection.end) <= dart.notNull(this.value.composing.end);
    }
  };
  (editable_text.TextEditingController.new = function(opts) {
    let text = opts && 'text' in opts ? opts.text : null;
    editable_text.TextEditingController.__proto__.new.call(this, text == null ? text_input.TextEditingValue.empty : new text_input.TextEditingValue.new({text: text}));
    ;
  }).prototype = editable_text.TextEditingController.prototype;
  (editable_text.TextEditingController.fromValue = function(value) {
    let t53;
    if (!(value == null || !dart.test(value.composing.isValid) || dart.test(value.isComposingRangeValid))) dart.assertFailed("New TextEditingValue " + dart.str(value) + " has an invalid non-empty composing range " + dart.str(value.composing) + ". It is recommended to use a valid composing range, " + "even for readonly text fields", L60, 139, 9, "value == null || !value.composing.isValid || value.isComposingRangeValid");
    editable_text.TextEditingController.__proto__.new.call(this, (t53 = value, t53 == null ? text_input.TextEditingValue.empty : t53));
    ;
  }).prototype = editable_text.TextEditingController.prototype;
  dart.addTypeTests(editable_text.TextEditingController);
  dart.addTypeCaches(editable_text.TextEditingController);
  dart.setMethodSignature(editable_text.TextEditingController, () => ({
    __proto__: dart.getMethods(editable_text.TextEditingController.__proto__),
    buildTextSpan: dart.fnType(text_span.TextSpan, [], {style: dart.nullable(text_style.TextStyle)}, {withComposing: core.bool}),
    clear: dart.fnType(dart.void, []),
    clearComposing: dart.fnType(dart.void, []),
    isSelectionWithinTextBounds: dart.fnType(core.bool, [text_editing.TextSelection]),
    [_isSelectionWithinComposingRange]: dart.fnType(core.bool, [text_editing.TextSelection])
  }));
  dart.setGetterSignature(editable_text.TextEditingController, () => ({
    __proto__: dart.getGetters(editable_text.TextEditingController.__proto__),
    text: core.String,
    selection: text_editing.TextSelection
  }));
  dart.setSetterSignature(editable_text.TextEditingController, () => ({
    __proto__: dart.getSetters(editable_text.TextEditingController.__proto__),
    text: dart.nullable(core.String),
    selection: text_editing.TextSelection
  }));
  dart.setLibraryUri(editable_text.TextEditingController, L61);
  restoration_properties.RestorableTextEditingController = class RestorableTextEditingController extends restoration_properties.RestorableChangeNotifier$(editable_text.TextEditingController) {
    static new(opts) {
      let text = opts && 'text' in opts ? opts.text : null;
      return new restoration_properties.RestorableTextEditingController.fromValue(text == null ? text_input.TextEditingValue.empty : new text_input.TextEditingValue.new({text: text}));
    }
    createDefaultValue() {
      return new editable_text.TextEditingController.fromValue(this[_initialValue]);
    }
    fromPrimitives(data) {
      return new editable_text.TextEditingController.new({text: core.String.as(dart.nullCheck(data))});
    }
    toPrimitives() {
      return this.value.text;
    }
  };
  (restoration_properties.RestorableTextEditingController.fromValue = function(value) {
    if (value == null) dart.nullFailed(L58, 353, 62, "value");
    this[_initialValue] = value;
    restoration_properties.RestorableTextEditingController.__proto__.new.call(this);
    ;
  }).prototype = restoration_properties.RestorableTextEditingController.prototype;
  dart.addTypeTests(restoration_properties.RestorableTextEditingController);
  dart.addTypeCaches(restoration_properties.RestorableTextEditingController);
  dart.setMethodSignature(restoration_properties.RestorableTextEditingController, () => ({
    __proto__: dart.getMethods(restoration_properties.RestorableTextEditingController.__proto__),
    createDefaultValue: dart.fnType(editable_text.TextEditingController, []),
    fromPrimitives: dart.fnType(editable_text.TextEditingController, [dart.nullable(core.Object)]),
    toPrimitives: dart.fnType(core.Object, [])
  }));
  dart.setLibraryUri(restoration_properties.RestorableTextEditingController, L59);
  dart.setFieldSignature(restoration_properties.RestorableTextEditingController, () => ({
    __proto__: dart.getFields(restoration_properties.RestorableTextEditingController.__proto__),
    [_initialValue]: dart.finalFieldType(text_input.TextEditingValue)
  }));
  var child$22 = dart.privateName(restoration$, "RestorationScope.child");
  var restorationId$0 = dart.privateName(restoration$, "RestorationScope.restorationId");
  restoration$.RestorationScope = class RestorationScope extends framework.StatefulWidget {
    get child() {
      return this[child$22];
    }
    set child(value) {
      super.child = value;
    }
    get restorationId() {
      return this[restorationId$0];
    }
    set restorationId(value) {
      super.restorationId = value;
    }
    static of(context) {
      let t53;
      if (context == null) dart.nullFailed(L38, 77, 45, "context");
      t53 = context.dependOnInheritedWidgetOfExactType(restoration$.UnmanagedRestorationScope);
      return t53 == null ? null : t53.bucket;
    }
    createState() {
      return new restoration$._RestorationScopeState.new();
    }
  };
  (restoration$.RestorationScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L38, 62, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[restorationId$0] = restorationId;
    this[child$22] = child;
    if (!(child != null)) dart.assertFailed(null, L38, 63, 15, "child != null");
    restoration$.RestorationScope.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = restoration$.RestorationScope.prototype;
  dart.addTypeTests(restoration$.RestorationScope);
  dart.addTypeCaches(restoration$.RestorationScope);
  dart.setMethodSignature(restoration$.RestorationScope, () => ({
    __proto__: dart.getMethods(restoration$.RestorationScope.__proto__),
    createState: dart.fnType(framework.State$(restoration$.RestorationScope), [])
  }));
  dart.setLibraryUri(restoration$.RestorationScope, L39);
  dart.setFieldSignature(restoration$.RestorationScope, () => ({
    __proto__: dart.getFields(restoration$.RestorationScope.__proto__),
    child: dart.finalFieldType(framework.Widget),
    restorationId: dart.finalFieldType(dart.nullable(core.String))
  }));
  var C665;
  var C666;
  var C664;
  var C663;
  const State_RestorationMixin$36$ = class State_RestorationMixin extends framework.State$(restoration$.RestorationScope) {};
  (State_RestorationMixin$36$.new = function() {
    restoration$.RestorationMixin$(restoration$.RestorationScope)[dart.mixinNew].call(this);
    State_RestorationMixin$36$.__proto__.new.call(this);
  }).prototype = State_RestorationMixin$36$.prototype;
  dart.applyMixin(State_RestorationMixin$36$, restoration$.RestorationMixin$(restoration$.RestorationScope));
  restoration$._RestorationScopeState = class _RestorationScopeState extends State_RestorationMixin$36$ {
    get restorationId() {
      return this.widget.restorationId;
    }
    restoreState(oldBucket, initialRestore) {
      if (initialRestore == null) dart.nullFailed(L38, 105, 56, "initialRestore");
    }
    build(context) {
      if (context == null) dart.nullFailed(L38, 111, 29, "context");
      return new restoration$.UnmanagedRestorationScope.new({bucket: this.bucket, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C663 || CT.C663});
    }
  };
  (restoration$._RestorationScopeState.new = function() {
    restoration$._RestorationScopeState.__proto__.new.call(this);
    ;
  }).prototype = restoration$._RestorationScopeState.prototype;
  dart.addTypeTests(restoration$._RestorationScopeState);
  dart.addTypeCaches(restoration$._RestorationScopeState);
  dart.setMethodSignature(restoration$._RestorationScopeState, () => ({
    __proto__: dart.getMethods(restoration$._RestorationScopeState.__proto__),
    restoreState: dart.fnType(dart.void, [dart.nullable(restoration.RestorationBucket), core.bool]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(restoration$._RestorationScopeState, () => ({
    __proto__: dart.getGetters(restoration$._RestorationScopeState.__proto__),
    restorationId: dart.nullable(core.String)
  }));
  dart.setLibraryUri(restoration$._RestorationScopeState, L39);
  var bucket$ = dart.privateName(restoration$, "UnmanagedRestorationScope.bucket");
  restoration$.UnmanagedRestorationScope = class UnmanagedRestorationScope extends framework.InheritedWidget {
    get bucket() {
      return this[bucket$];
    }
    set bucket(value) {
      super.bucket = value;
    }
    updateShouldNotify(oldWidget) {
      restoration$.UnmanagedRestorationScope.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L38, 162, 53, "oldWidget");
      return !dart.equals(oldWidget.bucket, this.bucket);
    }
  };
  (restoration$.UnmanagedRestorationScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let bucket = opts && 'bucket' in opts ? opts.bucket : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L38, 152, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[bucket$] = bucket;
    if (!(child != null)) dart.assertFailed(null, L38, 153, 15, "child != null");
    restoration$.UnmanagedRestorationScope.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = restoration$.UnmanagedRestorationScope.prototype;
  dart.addTypeTests(restoration$.UnmanagedRestorationScope);
  dart.addTypeCaches(restoration$.UnmanagedRestorationScope);
  dart.setMethodSignature(restoration$.UnmanagedRestorationScope, () => ({
    __proto__: dart.getMethods(restoration$.UnmanagedRestorationScope.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(restoration$.UnmanagedRestorationScope, L39);
  dart.setFieldSignature(restoration$.UnmanagedRestorationScope, () => ({
    __proto__: dart.getFields(restoration$.UnmanagedRestorationScope.__proto__),
    bucket: dart.finalFieldType(dart.nullable(restoration.RestorationBucket))
  }));
  var child$23 = dart.privateName(restoration$, "RootRestorationScope.child");
  var restorationId$1 = dart.privateName(restoration$, "RootRestorationScope.restorationId");
  restoration$.RootRestorationScope = class RootRestorationScope extends framework.StatefulWidget {
    get child() {
      return this[child$23];
    }
    set child(value) {
      super.child = value;
    }
    get restorationId() {
      return this[restorationId$1];
    }
    set restorationId(value) {
      super.restorationId = value;
    }
    createState() {
      return new restoration$._RootRestorationScopeState.new();
    }
  };
  (restoration$.RootRestorationScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L38, 227, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[restorationId$1] = restorationId;
    this[child$23] = child;
    if (!(child != null)) dart.assertFailed(null, L38, 228, 15, "child != null");
    restoration$.RootRestorationScope.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = restoration$.RootRestorationScope.prototype;
  dart.addTypeTests(restoration$.RootRestorationScope);
  dart.addTypeCaches(restoration$.RootRestorationScope);
  dart.setMethodSignature(restoration$.RootRestorationScope, () => ({
    __proto__: dart.getMethods(restoration$.RootRestorationScope.__proto__),
    createState: dart.fnType(framework.State$(restoration$.RootRestorationScope), [])
  }));
  dart.setLibraryUri(restoration$.RootRestorationScope, L39);
  dart.setFieldSignature(restoration$.RootRestorationScope, () => ({
    __proto__: dart.getFields(restoration$.RootRestorationScope.__proto__),
    child: dart.finalFieldType(framework.Widget),
    restorationId: dart.finalFieldType(dart.nullable(core.String))
  }));
  var _okToRenderBlankContainer = dart.privateName(restoration$, "_okToRenderBlankContainer");
  var _rootBucketValid = dart.privateName(restoration$, "_rootBucketValid");
  var _rootBucket = dart.privateName(restoration$, "_rootBucket");
  var _ancestorBucket = dart.privateName(restoration$, "_ancestorBucket");
  var _isLoadingRootBucket = dart.privateName(restoration$, "_isLoadingRootBucket");
  var _loadRootBucketIfNecessary = dart.privateName(restoration$, "_loadRootBucketIfNecessary");
  var _needsRootBucketInserted = dart.privateName(restoration$, "_needsRootBucketInserted");
  var _isWaitingForRootBucket = dart.privateName(restoration$, "_isWaitingForRootBucket");
  var _replaceRootBucket = dart.privateName(restoration$, "_replaceRootBucket");
  var C668;
  var C667;
  var C671;
  var C672;
  var C670;
  var C669;
  var C675;
  var C676;
  var C674;
  var C673;
  restoration$._RootRestorationScopeState = class _RootRestorationScopeState extends framework.State$(restoration$.RootRestorationScope) {
    didChangeDependencies() {
      super.didChangeDependencies();
      this[_ancestorBucket] = restoration$.RestorationScope.of(this.context);
      this[_loadRootBucketIfNecessary]();
      this[_okToRenderBlankContainer] == null ? this[_okToRenderBlankContainer] = this.widget.restorationId != null && dart.test(this[_needsRootBucketInserted]) : null;
    }
    didUpdateWidget(oldWidget) {
      restoration$.RootRestorationScope.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L38, 262, 45, "oldWidget");
      super.didUpdateWidget(oldWidget);
      this[_loadRootBucketIfNecessary]();
    }
    get [_needsRootBucketInserted]() {
      return this[_ancestorBucket] == null;
    }
    get [_isWaitingForRootBucket]() {
      return this.widget.restorationId != null && dart.test(this[_needsRootBucketInserted]) && !dart.test(this[_rootBucketValid]);
    }
    [_loadRootBucketIfNecessary]() {
      if (dart.test(this[_isWaitingForRootBucket]) && !dart.test(this[_isLoadingRootBucket])) {
        this[_isLoadingRootBucket] = true;
        dart.nullCheck(binding.RendererBinding.instance).deferFirstFrame();
        dart.nullCheck(binding$0.ServicesBinding.instance).restorationManager.rootBucket.then(core.Null, dart.fn(bucket => {
          this[_isLoadingRootBucket] = false;
          if (dart.test(this.mounted)) {
            dart.nullCheck(binding$0.ServicesBinding.instance).restorationManager.addListener(dart.bind(this, _replaceRootBucket));
            this.setState(dart.fn(() => {
              this[_rootBucket] = bucket;
              this[_rootBucketValid] = true;
              this[_okToRenderBlankContainer] = false;
            }, VoidTovoid()));
          }
          dart.nullCheck(binding.RendererBinding.instance).allowFirstFrame();
        }, RestorationBucketNToNull()));
      }
    }
    [_replaceRootBucket]() {
      this[_rootBucketValid] = false;
      this[_rootBucket] = null;
      dart.nullCheck(binding$0.ServicesBinding.instance).restorationManager.removeListener(dart.bind(this, _replaceRootBucket));
      this[_loadRootBucketIfNecessary]();
      if (!!dart.test(this[_isWaitingForRootBucket])) dart.assertFailed(null, L38, 299, 12, "!_isWaitingForRootBucket");
    }
    dispose() {
      if (dart.test(this[_rootBucketValid])) {
        dart.nullCheck(binding$0.ServicesBinding.instance).restorationManager.removeListener(dart.bind(this, _replaceRootBucket));
      }
      super.dispose();
    }
    build(context) {
      let t53;
      if (context == null) dart.nullFailed(L38, 311, 29, "context");
      if (dart.nullCheck(this[_okToRenderBlankContainer]) && dart.test(this[_isWaitingForRootBucket])) {
        return C667 || CT.C667;
      }
      return new restoration$.UnmanagedRestorationScope.new({bucket: (t53 = this[_ancestorBucket], t53 == null ? this[_rootBucket] : t53), child: new restoration$.RestorationScope.new({restorationId: this.widget.restorationId, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C669 || CT.C669}), $creationLocationd_0dea112b090073317d4: C673 || CT.C673});
    }
  };
  (restoration$._RootRestorationScopeState.new = function() {
    this[_okToRenderBlankContainer] = null;
    this[_rootBucketValid] = false;
    this[_rootBucket] = null;
    this[_ancestorBucket] = null;
    this[_isLoadingRootBucket] = false;
    restoration$._RootRestorationScopeState.__proto__.new.call(this);
    ;
  }).prototype = restoration$._RootRestorationScopeState.prototype;
  dart.addTypeTests(restoration$._RootRestorationScopeState);
  dart.addTypeCaches(restoration$._RootRestorationScopeState);
  dart.setMethodSignature(restoration$._RootRestorationScopeState, () => ({
    __proto__: dart.getMethods(restoration$._RootRestorationScopeState.__proto__),
    [_loadRootBucketIfNecessary]: dart.fnType(dart.void, []),
    [_replaceRootBucket]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(restoration$._RootRestorationScopeState, () => ({
    __proto__: dart.getGetters(restoration$._RootRestorationScopeState.__proto__),
    [_needsRootBucketInserted]: core.bool,
    [_isWaitingForRootBucket]: core.bool
  }));
  dart.setLibraryUri(restoration$._RootRestorationScopeState, L39);
  dart.setFieldSignature(restoration$._RootRestorationScopeState, () => ({
    __proto__: dart.getFields(restoration$._RootRestorationScopeState.__proto__),
    [_okToRenderBlankContainer]: dart.fieldType(dart.nullable(core.bool)),
    [_rootBucketValid]: dart.fieldType(core.bool),
    [_rootBucket]: dart.fieldType(dart.nullable(restoration.RestorationBucket)),
    [_ancestorBucket]: dart.fieldType(dart.nullable(restoration.RestorationBucket)),
    [_isLoadingRootBucket]: dart.fieldType(core.bool)
  }));
  var _heldPreviousVelocity = dart.privateName(scroll_position_with_single_context, "_heldPreviousVelocity");
  var _userScrollDirection = dart.privateName(scroll_position_with_single_context, "_userScrollDirection");
  var _currentDrag = dart.privateName(scroll_position_with_single_context, "_currentDrag");
  var _minScrollExtent = dart.privateName(scroll_position, "_minScrollExtent");
  var _maxScrollExtent = dart.privateName(scroll_position, "_maxScrollExtent");
  var _impliedVelocity = dart.privateName(scroll_position, "_impliedVelocity");
  var _pixels = dart.privateName(scroll_position, "_pixels");
  var _viewportDimension = dart.privateName(scroll_position, "_viewportDimension");
  var _haveDimensions = dart.privateName(scroll_position, "_haveDimensions");
  var _didChangeViewportDimensionOrReceiveCorrection = dart.privateName(scroll_position, "_didChangeViewportDimensionOrReceiveCorrection");
  var _pendingDimensions = dart.privateName(scroll_position, "_pendingDimensions");
  var _lastMetrics = dart.privateName(scroll_position, "_lastMetrics");
  var _semanticActions = dart.privateName(scroll_position, "_semanticActions");
  var _activity = dart.privateName(scroll_position, "_activity");
  var _updateSemanticActions = dart.privateName(scroll_position, "_updateSemanticActions");
  var C677;
  var Cubic_d = dart.privateName(curves, "Cubic.d");
  var Cubic_c = dart.privateName(curves, "Cubic.c");
  var Cubic_b = dart.privateName(curves, "Cubic.b");
  var Cubic_a = dart.privateName(curves, "Cubic.a");
  var C678;
  var _name$13 = dart.privateName(scroll_position, "_name");
  var C679;
  var C680;
  var C681;
  var physics$ = dart.privateName(scroll_position, "ScrollPosition.physics");
  var context$0 = dart.privateName(scroll_position, "ScrollPosition.context");
  var keepScrollOffset$ = dart.privateName(scroll_position, "ScrollPosition.keepScrollOffset");
  var debugLabel$0 = dart.privateName(scroll_position, "ScrollPosition.debugLabel");
  var isScrollingNotifier = dart.privateName(scroll_position, "ScrollPosition.isScrollingNotifier");
  const ViewportOffset_ScrollMetrics$36 = class ViewportOffset_ScrollMetrics extends viewport_offset.ViewportOffset {};
  (ViewportOffset_ScrollMetrics$36.new = function() {
    ViewportOffset_ScrollMetrics$36.__proto__.new.call(this);
  }).prototype = ViewportOffset_ScrollMetrics$36.prototype;
  dart.applyMixin(ViewportOffset_ScrollMetrics$36, scroll_metrics.ScrollMetrics);
  scroll_position.ScrollPosition = class ScrollPosition extends ViewportOffset_ScrollMetrics$36 {
    get physics() {
      return this[physics$];
    }
    set physics(value) {
      super.physics = value;
    }
    get context() {
      return this[context$0];
    }
    set context(value) {
      super.context = value;
    }
    get keepScrollOffset() {
      return this[keepScrollOffset$];
    }
    set keepScrollOffset(value) {
      super.keepScrollOffset = value;
    }
    get debugLabel() {
      return this[debugLabel$0];
    }
    set debugLabel(value) {
      super.debugLabel = value;
    }
    get isScrollingNotifier() {
      return this[isScrollingNotifier];
    }
    set isScrollingNotifier(value) {
      super.isScrollingNotifier = value;
    }
    get minScrollExtent() {
      return dart.nullCheck(this[_minScrollExtent]);
    }
    get maxScrollExtent() {
      return dart.nullCheck(this[_maxScrollExtent]);
    }
    get hasContentDimensions() {
      return this[_minScrollExtent] != null && this[_maxScrollExtent] != null;
    }
    get pixels() {
      return dart.nullCheck(this[_pixels]);
    }
    get hasPixels() {
      return this[_pixels] != null;
    }
    get viewportDimension() {
      return dart.nullCheck(this[_viewportDimension]);
    }
    get hasViewportDimension() {
      return this[_viewportDimension] != null;
    }
    get haveDimensions() {
      return this[_haveDimensions];
    }
    absorb(other) {
      if (other == null) dart.nullFailed(L63, 215, 30, "other");
      if (!(other != null)) dart.assertFailed(null, L63, 216, 12, "other != null");
      if (!dart.equals(other.context, this.context)) dart.assertFailed(null, L63, 217, 12, "other.context == context");
      if (!(this[_pixels] == null)) dart.assertFailed(null, L63, 218, 12, "_pixels == null");
      if (dart.test(other.hasContentDimensions)) {
        this[_minScrollExtent] = other.minScrollExtent;
        this[_maxScrollExtent] = other.maxScrollExtent;
      }
      if (dart.test(other.hasPixels)) {
        this[_pixels] = other.pixels;
      }
      if (dart.test(other.hasViewportDimension)) {
        this[_viewportDimension] = other.viewportDimension;
      }
      if (!(this.activity == null)) dart.assertFailed(null, L63, 230, 12, "activity == null");
      if (!(other.activity != null)) dart.assertFailed(null, L63, 231, 12, "other.activity != null");
      this[_activity] = other.activity;
      other[_activity] = null;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) dart.nullCheck(this.activity).resetActivity();
      this.context.setIgnorePointer(dart.nullCheck(this.activity).shouldIgnorePointer);
      this.isScrollingNotifier.value = dart.nullCheck(this.activity).isScrolling;
    }
    setPixels(newPixels) {
      if (newPixels == null) dart.nullFailed(L63, 256, 27, "newPixels");
      if (!dart.test(this.hasPixels)) dart.assertFailed(null, L63, 257, 12, "hasPixels");
      if (!!dart.equals(dart.nullCheck(binding$.SchedulerBinding.instance).schedulerPhase, binding$.SchedulerPhase.persistentCallbacks)) dart.assertFailed("A scrollable's position should not change during the build, layout, and paint phases, otherwise the rendering will be confused.", L63, 258, 12, "SchedulerBinding.instance!.schedulerPhase != SchedulerPhase.persistentCallbacks");
      if (newPixels != this.pixels) {
        let overscroll = this.applyBoundaryConditions(newPixels);
        if (!dart.test(dart.fn(() => {
          let delta = dart.notNull(newPixels) - dart.notNull(this.pixels);
          if (overscroll[$abs]() > delta[$abs]()) {
            dart.throw(assertions.FlutterError.new(dart.str(this[$runtimeType]) + ".applyBoundaryConditions returned invalid overscroll value.\n" + "setPixels() was called to change the scroll offset from " + dart.str(this.pixels) + " to " + dart.str(newPixels) + ".\n" + "That is a delta of " + dart.str(delta) + " units.\n" + dart.str(this[$runtimeType]) + ".applyBoundaryConditions reported an overscroll of " + dart.str(overscroll) + " units."));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L63, 261, 14, "() {\r\n        final double delta = newPixels - pixels;\r\n        if (overscroll.abs() > delta.abs()) {\r\n          throw FlutterError(\r\n            '$runtimeType.applyBoundaryConditions returned invalid overscroll value.\\n'\r\n            'setPixels() was called to change the scroll offset from $pixels to $newPixels.\\n'\r\n            'That is a delta of $delta units.\\n'\r\n            '$runtimeType.applyBoundaryConditions reported an overscroll of $overscroll units.'\r\n          );\r\n        }\r\n        return true;\r\n      }()");
        let oldPixels = this.pixels;
        this[_pixels] = dart.notNull(newPixels) - dart.notNull(overscroll);
        if (this[_pixels] != oldPixels) {
          this.notifyListeners();
          this.didUpdateScrollPositionBy(dart.notNull(this.pixels) - dart.notNull(oldPixels));
        }
        if (overscroll !== 0.0) {
          this.didOverscrollBy(overscroll);
          return overscroll;
        }
      }
      return 0.0;
    }
    correctPixels(value) {
      if (value == null) dart.nullFailed(L63, 321, 29, "value");
      this[_pixels] = value;
    }
    correctBy(correction) {
      if (correction == null) dart.nullFailed(L63, 341, 25, "correction");
      if (!dart.test(this.hasPixels)) dart.assertFailed("An initial pixels value must exist by calling correctPixels on the ScrollPosition", L63, 343, 7, "hasPixels");
      this[_pixels] = dart.nullCheck(this[_pixels]) + dart.notNull(correction);
      this[_didChangeViewportDimensionOrReceiveCorrection] = true;
    }
    forcePixels(value) {
      if (value == null) dart.nullFailed(L63, 373, 27, "value");
      if (!dart.test(this.hasPixels)) dart.assertFailed(null, L63, 374, 12, "hasPixels");
      if (!(value != null)) dart.assertFailed(null, L63, 375, 12, "value != null");
      this[_impliedVelocity] = dart.notNull(value) - dart.notNull(this.pixels);
      this[_pixels] = value;
      this.notifyListeners();
      dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.fn(timeStamp => {
        if (timeStamp == null) dart.nullFailed(L63, 379, 63, "timeStamp");
        this[_impliedVelocity] = 0.0;
      }, DurationTovoid()));
    }
    saveScrollOffset() {
      let t53;
      t53 = page_storage.PageStorage.of(this.context.storageContext);
      t53 == null ? null : t53.writeState(this.context.storageContext, this.pixels);
    }
    restoreScrollOffset() {
      let t53;
      if (!dart.test(this.hasPixels)) {
        let value = doubleN().as((t53 = page_storage.PageStorage.of(this.context.storageContext), t53 == null ? null : t53.readState(this.context.storageContext)));
        if (value != null) this.correctPixels(value);
      }
    }
    restoreOffset(offset, opts) {
      if (offset == null) dart.nullFailed(L63, 440, 29, "offset");
      let initialRestore = opts && 'initialRestore' in opts ? opts.initialRestore : false;
      if (initialRestore == null) dart.nullFailed(L63, 440, 43, "initialRestore");
      if (!(initialRestore != null)) dart.assertFailed(null, L63, 441, 12, "initialRestore != null");
      if (!(offset != null)) dart.assertFailed(null, L63, 442, 12, "offset != null");
      if (dart.test(initialRestore)) {
        this.correctPixels(offset);
      } else {
        this.jumpTo(offset);
      }
    }
    saveOffset() {
      if (!dart.test(this.hasPixels)) dart.assertFailed(null, L63, 459, 12, "hasPixels");
      this.context.saveOffset(this.pixels);
    }
    applyBoundaryConditions(value) {
      if (value == null) dart.nullFailed(L63, 473, 41, "value");
      let result = this.physics.applyBoundaryConditions(this, value);
      if (!dart.test(dart.fn(() => {
        let delta = dart.notNull(value) - dart.notNull(this.pixels);
        if (result[$abs]() > delta[$abs]()) {
          dart.throw(assertions.FlutterError.new(dart.str(dart.runtimeType(this.physics)) + ".applyBoundaryConditions returned invalid overscroll value.\n" + "The method was called to consider a change from " + dart.str(this.pixels) + " to " + dart.str(value) + ", which is a " + "delta of " + delta[$toStringAsFixed](1) + " units. However, it returned an overscroll of " + result[$toStringAsFixed](1) + " units, which has a greater magnitude than the delta. " + "The applyBoundaryConditions method is only supposed to reduce the possible range " + "of movement, not increase it.\n" + "The scroll extents are " + dart.str(this.minScrollExtent) + " .. " + dart.str(this.maxScrollExtent) + ", and the " + "viewport dimension is " + dart.str(this.viewportDimension) + "."));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L63, 475, 12, "() {\r\n      final double delta = value - pixels;\r\n      if (result.abs() > delta.abs()) {\r\n        throw FlutterError(\r\n          '${physics.runtimeType}.applyBoundaryConditions returned invalid overscroll value.\\n'\r\n          'The method was called to consider a change from $pixels to $value, which is a '\r\n          'delta of ${delta.toStringAsFixed(1)} units. However, it returned an overscroll of '\r\n          '${result.toStringAsFixed(1)} units, which has a greater magnitude than the delta. '\r\n          'The applyBoundaryConditions method is only supposed to reduce the possible range '\r\n          'of movement, not increase it.\\n'\r\n          'The scroll extents are $minScrollExtent .. $maxScrollExtent, and the '\r\n          'viewport dimension is $viewportDimension.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      return result;
    }
    applyViewportDimension(viewportDimension) {
      if (viewportDimension == null) dart.nullFailed(L63, 497, 38, "viewportDimension");
      if (this[_viewportDimension] != viewportDimension) {
        this[_viewportDimension] = viewportDimension;
        this[_didChangeViewportDimensionOrReceiveCorrection] = true;
      }
      return true;
    }
    applyContentDimensions(minScrollExtent, maxScrollExtent) {
      if (minScrollExtent == null) dart.nullFailed(L63, 512, 38, "minScrollExtent");
      if (maxScrollExtent == null) dart.nullFailed(L63, 512, 62, "maxScrollExtent");
      if (!(minScrollExtent != null)) dart.assertFailed(null, L63, 513, 12, "minScrollExtent != null");
      if (!(maxScrollExtent != null)) dart.assertFailed(null, L63, 514, 12, "maxScrollExtent != null");
      if (!dart.equals(this.haveDimensions, this[_lastMetrics] != null)) dart.assertFailed(null, L63, 515, 12, "haveDimensions == (_lastMetrics != null)");
      if (!dart.test(utils.nearEqual(this[_minScrollExtent], minScrollExtent, tolerance.Tolerance.defaultTolerance.distance)) || !dart.test(utils.nearEqual(this[_maxScrollExtent], maxScrollExtent, tolerance.Tolerance.defaultTolerance.distance)) || dart.test(this[_didChangeViewportDimensionOrReceiveCorrection])) {
        if (!(minScrollExtent != null)) dart.assertFailed(null, L63, 519, 14, "minScrollExtent != null");
        if (!(maxScrollExtent != null)) dart.assertFailed(null, L63, 520, 14, "maxScrollExtent != null");
        if (!(dart.notNull(minScrollExtent) <= dart.notNull(maxScrollExtent))) dart.assertFailed(null, L63, 521, 14, "minScrollExtent <= maxScrollExtent");
        this[_minScrollExtent] = minScrollExtent;
        this[_maxScrollExtent] = maxScrollExtent;
        let currentMetrics = dart.test(this.haveDimensions) ? this.copyWith() : null;
        this[_didChangeViewportDimensionOrReceiveCorrection] = false;
        this[_pendingDimensions] = true;
        if (dart.test(this.haveDimensions) && !dart.test(this.correctForNewDimensions(dart.nullCheck(this[_lastMetrics]), dart.nullCheck(currentMetrics)))) {
          return false;
        }
        this[_haveDimensions] = true;
      }
      if (!dart.test(this.haveDimensions)) dart.assertFailed(null, L63, 532, 12, "haveDimensions");
      if (dart.test(this[_pendingDimensions])) {
        this.applyNewDimensions();
        this[_pendingDimensions] = false;
      }
      if (!!dart.test(this[_didChangeViewportDimensionOrReceiveCorrection])) dart.assertFailed("Use correctForNewDimensions() (and return true) to change the scroll offset during applyContentDimensions().", L63, 537, 12, "!_didChangeViewportDimensionOrReceiveCorrection");
      this[_lastMetrics] = this.copyWith();
      return true;
    }
    correctForNewDimensions(oldPosition, newPosition) {
      if (oldPosition == null) dart.nullFailed(L63, 556, 46, "oldPosition");
      if (newPosition == null) dart.nullFailed(L63, 556, 73, "newPosition");
      let newPixels = this.physics.adjustPositionForNewDimensions({oldPosition: oldPosition, newPosition: newPosition, isScrolling: dart.nullCheck(this.activity).isScrolling, velocity: dart.nullCheck(this.activity).velocity});
      if (newPixels != this.pixels) {
        this.correctPixels(newPixels);
        return false;
      }
      return true;
    }
    applyNewDimensions() {
      if (!dart.test(this.hasPixels)) dart.assertFailed(null, L63, 592, 12, "hasPixels");
      if (!dart.test(this[_pendingDimensions])) dart.assertFailed(null, L63, 593, 12, "_pendingDimensions");
      dart.nullCheck(this.activity).applyNewDimensions();
      this[_updateSemanticActions]();
    }
    [_updateSemanticActions]() {
      let forward = null;
      let backward = null;
      switch (this.axisDirection) {
        case C644 || CT.C644:
        {
          forward = ui.SemanticsAction.scrollDown;
          backward = ui.SemanticsAction.scrollUp;
          break;
        }
        case C645 || CT.C645:
        {
          forward = ui.SemanticsAction.scrollLeft;
          backward = ui.SemanticsAction.scrollRight;
          break;
        }
        case C642 || CT.C642:
        {
          forward = ui.SemanticsAction.scrollUp;
          backward = ui.SemanticsAction.scrollDown;
          break;
        }
        case C646 || CT.C646:
        {
          forward = ui.SemanticsAction.scrollRight;
          backward = ui.SemanticsAction.scrollLeft;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let actions = LinkedHashSetOfSemanticsAction().new();
      if (dart.notNull(this.pixels) > dart.notNull(this.minScrollExtent)) actions.add(backward);
      if (dart.notNull(this.pixels) < dart.notNull(this.maxScrollExtent)) actions.add(forward);
      if (dart.test(collections.setEquals(ui.SemanticsAction, actions, this[_semanticActions]))) return;
      this[_semanticActions] = actions;
      this.context.setSemanticsActions(dart.nullCheck(this[_semanticActions]));
    }
    ensureVisible(object, opts) {
      if (object == null) dart.nullFailed(L63, 661, 18, "object");
      let alignment = opts && 'alignment' in opts ? opts.alignment : 0;
      if (alignment == null) dart.nullFailed(L63, 662, 12, "alignment");
      let duration = opts && 'duration' in opts ? opts.duration : C677 || CT.C677;
      if (duration == null) dart.nullFailed(L63, 663, 14, "duration");
      let curve = opts && 'curve' in opts ? opts.curve : C678 || CT.C678;
      if (curve == null) dart.nullFailed(L63, 664, 11, "curve");
      let alignmentPolicy = opts && 'alignmentPolicy' in opts ? opts.alignmentPolicy : C679 || CT.C679;
      if (alignmentPolicy == null) dart.nullFailed(L63, 665, 35, "alignmentPolicy");
      let targetRenderObject = opts && 'targetRenderObject' in opts ? opts.targetRenderObject : null;
      if (!(alignmentPolicy != null)) dart.assertFailed(null, L63, 668, 12, "alignmentPolicy != null");
      if (!dart.test(object.attached)) dart.assertFailed(null, L63, 669, 12, "object.attached");
      let viewport = dart.nullCheck(viewport$.RenderAbstractViewport.of(object));
      if (!(viewport !== null)) dart.assertFailed(null, L63, 671, 12, "viewport != null");
      let targetRect = null;
      if (targetRenderObject != null && !dart.equals(targetRenderObject, object)) {
        targetRect = matrix_utils.MatrixUtils.transformRect(targetRenderObject.getTransformTo(object), object.paintBounds.intersect(targetRenderObject.paintBounds));
      }
      let target = null;
      switch (alignmentPolicy) {
        case C679 || CT.C679:
        {
          target = viewport.getOffsetToReveal(object, alignment, {rect: targetRect}).offset[$clamp](this.minScrollExtent, this.maxScrollExtent);
          break;
        }
        case C680 || CT.C680:
        {
          target = viewport.getOffsetToReveal(object, 1.0, {rect: targetRect}).offset[$clamp](this.minScrollExtent, this.maxScrollExtent);
          if (dart.notNull(target) < dart.notNull(this.pixels)) {
            target = this.pixels;
          }
          break;
        }
        case C681 || CT.C681:
        {
          target = viewport.getOffsetToReveal(object, 0.0, {rect: targetRect}).offset[$clamp](this.minScrollExtent, this.maxScrollExtent);
          if (dart.notNull(target) > dart.notNull(this.pixels)) {
            target = this.pixels;
          }
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      if (target == this.pixels) return FutureOfvoid().value();
      if (dart.equals(duration, core.Duration.zero)) {
        this.jumpTo(target);
        return FutureOfvoid().value();
      }
      return this.animateTo(target, {duration: duration, curve: curve});
    }
    moveTo(to, opts) {
      if (to == null) dart.nullFailed(L63, 789, 12, "to");
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      let clamp = opts && 'clamp' in opts ? opts.clamp : true;
      if (!(to != null)) dart.assertFailed(null, L63, 794, 12, "to != null");
      if (!(clamp != null)) dart.assertFailed(null, L63, 795, 12, "clamp != null");
      if (dart.nullCheck(clamp)) to = to[$clamp](this.minScrollExtent, this.maxScrollExtent);
      return super.moveTo(to, {duration: duration, curve: curve});
    }
    get allowImplicitScrolling() {
      return this.physics.allowImplicitScrolling;
    }
    get activity() {
      return this[_activity];
    }
    beginActivity(newActivity) {
      if (newActivity == null) return;
      let wasScrolling = null;
      let oldIgnorePointer = null;
      if (this[_activity] != null) {
        oldIgnorePointer = dart.nullCheck(this[_activity]).shouldIgnorePointer;
        wasScrolling = dart.nullCheck(this[_activity]).isScrolling;
        if (dart.test(wasScrolling) && !dart.test(newActivity.isScrolling)) this.didEndScroll();
        dart.nullCheck(this[_activity]).dispose();
      } else {
        oldIgnorePointer = false;
        wasScrolling = false;
      }
      this[_activity] = newActivity;
      if (!dart.equals(oldIgnorePointer, dart.nullCheck(this.activity).shouldIgnorePointer)) this.context.setIgnorePointer(dart.nullCheck(this.activity).shouldIgnorePointer);
      this.isScrollingNotifier.value = dart.nullCheck(this.activity).isScrolling;
      if (!dart.test(wasScrolling) && dart.test(dart.nullCheck(this[_activity]).isScrolling)) this.didStartScroll();
    }
    didStartScroll() {
      dart.nullCheck(this.activity).dispatchScrollStartNotification(this.copyWith(), this.context.notificationContext);
    }
    didUpdateScrollPositionBy(delta) {
      if (delta == null) dart.nullFailed(L63, 870, 41, "delta");
      dart.nullCheck(this.activity).dispatchScrollUpdateNotification(this.copyWith(), dart.nullCheck(this.context.notificationContext), delta);
    }
    didEndScroll() {
      dart.nullCheck(this.activity).dispatchScrollEndNotification(this.copyWith(), dart.nullCheck(this.context.notificationContext));
      this.saveOffset();
      if (dart.test(this.keepScrollOffset)) this.saveScrollOffset();
    }
    didOverscrollBy(value) {
      if (value == null) dart.nullFailed(L63, 887, 31, "value");
      if (!dart.test(dart.nullCheck(this.activity).isScrolling)) dart.assertFailed(null, L63, 888, 12, "activity!.isScrolling");
      dart.nullCheck(this.activity).dispatchOverscrollNotification(this.copyWith(), dart.nullCheck(this.context.notificationContext), value);
    }
    didUpdateScrollDirection(direction) {
      if (direction == null) dart.nullFailed(L63, 895, 49, "direction");
      new scroll_notification.UserScrollNotification.new({metrics: this.copyWith(), context: dart.nullCheck(this.context.notificationContext), direction: direction}).dispatch(this.context.notificationContext);
    }
    recommendDeferredLoading(context) {
      if (context == null) dart.nullFailed(L63, 909, 46, "context");
      if (!(context != null)) dart.assertFailed(null, L63, 910, 12, "context != null");
      if (!(this.activity != null)) dart.assertFailed(null, L63, 911, 12, "activity != null");
      if (!(dart.nullCheck(this.activity).velocity != null)) dart.assertFailed(null, L63, 912, 12, "activity!.velocity != null");
      if (!(this[_impliedVelocity] != null)) dart.assertFailed(null, L63, 913, 12, "_impliedVelocity != null");
      return this.physics.recommendDeferredLoading(dart.notNull(dart.nullCheck(this.activity).velocity) + dart.notNull(this[_impliedVelocity]), this.copyWith(), context);
    }
    dispose() {
      let t53;
      t53 = this.activity;
      t53 == null ? null : t53.dispose();
      this[_activity] = null;
      super.dispose();
    }
    notifyListeners() {
      this[_updateSemanticActions]();
      super.notifyListeners();
    }
    debugFillDescription(description) {
      let t53, t53$, t53$0;
      if (description == null) dart.nullFailed(L63, 935, 42, "description");
      if (this.debugLabel != null) description[$add](dart.nullCheck(this.debugLabel));
      super.debugFillDescription(description);
      description[$add]("range: " + dart.str((t53 = this[_minScrollExtent], t53 == null ? null : t53[$toStringAsFixed](1))) + ".." + dart.str((t53$ = this[_maxScrollExtent], t53$ == null ? null : t53$[$toStringAsFixed](1))));
      description[$add]("viewport: " + dart.str((t53$0 = this[_viewportDimension], t53$0 == null ? null : t53$0[$toStringAsFixed](1))));
    }
  };
  (scroll_position.ScrollPosition.new = function(opts) {
    let physics = opts && 'physics' in opts ? opts.physics : null;
    if (physics == null) dart.nullFailed(L63, 94, 19, "physics");
    let context = opts && 'context' in opts ? opts.context : null;
    if (context == null) dart.nullFailed(L63, 95, 19, "context");
    let keepScrollOffset = opts && 'keepScrollOffset' in opts ? opts.keepScrollOffset : true;
    if (keepScrollOffset == null) dart.nullFailed(L63, 96, 10, "keepScrollOffset");
    let oldPosition = opts && 'oldPosition' in opts ? opts.oldPosition : null;
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    this[_minScrollExtent] = null;
    this[_maxScrollExtent] = null;
    this[_impliedVelocity] = 0.0;
    this[_pixels] = null;
    this[_viewportDimension] = null;
    this[_haveDimensions] = false;
    this[_didChangeViewportDimensionOrReceiveCorrection] = true;
    this[_pendingDimensions] = false;
    this[_lastMetrics] = null;
    this[_semanticActions] = null;
    this[isScrollingNotifier] = new (ValueNotifierOfbool()).new(false);
    this[_activity] = null;
    this[physics$] = physics;
    this[context$0] = context;
    this[keepScrollOffset$] = keepScrollOffset;
    this[debugLabel$0] = debugLabel;
    if (!(physics != null)) dart.assertFailed(null, L63, 99, 15, "physics != null");
    if (!(context != null)) dart.assertFailed(null, L63, 100, 15, "context != null");
    if (!(context.vsync != null)) dart.assertFailed(null, L63, 101, 15, "context.vsync != null");
    if (!(keepScrollOffset != null)) dart.assertFailed(null, L63, 102, 15, "keepScrollOffset != null");
    scroll_position.ScrollPosition.__proto__.new.call(this);
    if (oldPosition != null) this.absorb(oldPosition);
    if (dart.test(this.keepScrollOffset)) this.restoreScrollOffset();
  }).prototype = scroll_position.ScrollPosition.prototype;
  dart.addTypeTests(scroll_position.ScrollPosition);
  dart.addTypeCaches(scroll_position.ScrollPosition);
  dart.setMethodSignature(scroll_position.ScrollPosition, () => ({
    __proto__: dart.getMethods(scroll_position.ScrollPosition.__proto__),
    absorb: dart.fnType(dart.void, [scroll_position.ScrollPosition]),
    setPixels: dart.fnType(core.double, [core.double]),
    correctPixels: dart.fnType(dart.void, [core.double]),
    correctBy: dart.fnType(dart.void, [core.double]),
    forcePixels: dart.fnType(dart.void, [core.double]),
    saveScrollOffset: dart.fnType(dart.void, []),
    restoreScrollOffset: dart.fnType(dart.void, []),
    restoreOffset: dart.fnType(dart.void, [core.double], {initialRestore: core.bool}, {}),
    saveOffset: dart.fnType(dart.void, []),
    applyBoundaryConditions: dart.fnType(core.double, [core.double]),
    applyViewportDimension: dart.fnType(core.bool, [core.double]),
    applyContentDimensions: dart.fnType(core.bool, [core.double, core.double]),
    correctForNewDimensions: dart.fnType(core.bool, [scroll_metrics.ScrollMetrics, scroll_metrics.ScrollMetrics]),
    applyNewDimensions: dart.fnType(dart.void, []),
    [_updateSemanticActions]: dart.fnType(dart.void, []),
    ensureVisible: dart.fnType(async.Future$(dart.void), [object$.RenderObject], {alignment: core.double, alignmentPolicy: scroll_position.ScrollPositionAlignmentPolicy, curve: curves.Curve, duration: core.Duration, targetRenderObject: dart.nullable(object$.RenderObject)}, {}),
    beginActivity: dart.fnType(dart.void, [dart.nullable(scroll_activity.ScrollActivity)]),
    didStartScroll: dart.fnType(dart.void, []),
    didUpdateScrollPositionBy: dart.fnType(dart.void, [core.double]),
    didEndScroll: dart.fnType(dart.void, []),
    didOverscrollBy: dart.fnType(dart.void, [core.double]),
    didUpdateScrollDirection: dart.fnType(dart.void, [viewport_offset.ScrollDirection]),
    recommendDeferredLoading: dart.fnType(core.bool, [framework.BuildContext])
  }));
  dart.setGetterSignature(scroll_position.ScrollPosition, () => ({
    __proto__: dart.getGetters(scroll_position.ScrollPosition.__proto__),
    minScrollExtent: core.double,
    maxScrollExtent: core.double,
    hasContentDimensions: core.bool,
    pixels: core.double,
    hasPixels: core.bool,
    viewportDimension: core.double,
    hasViewportDimension: core.bool,
    haveDimensions: core.bool,
    allowImplicitScrolling: core.bool,
    activity: dart.nullable(scroll_activity.ScrollActivity)
  }));
  dart.setLibraryUri(scroll_position.ScrollPosition, L64);
  dart.setFieldSignature(scroll_position.ScrollPosition, () => ({
    __proto__: dart.getFields(scroll_position.ScrollPosition.__proto__),
    physics: dart.finalFieldType(scroll_physics.ScrollPhysics),
    context: dart.finalFieldType(scroll_context.ScrollContext),
    keepScrollOffset: dart.finalFieldType(core.bool),
    debugLabel: dart.finalFieldType(dart.nullable(core.String)),
    [_minScrollExtent]: dart.fieldType(dart.nullable(core.double)),
    [_maxScrollExtent]: dart.fieldType(dart.nullable(core.double)),
    [_impliedVelocity]: dart.fieldType(core.double),
    [_pixels]: dart.fieldType(dart.nullable(core.double)),
    [_viewportDimension]: dart.fieldType(dart.nullable(core.double)),
    [_haveDimensions]: dart.fieldType(core.bool),
    [_didChangeViewportDimensionOrReceiveCorrection]: dart.fieldType(core.bool),
    [_pendingDimensions]: dart.fieldType(core.bool),
    [_lastMetrics]: dart.fieldType(dart.nullable(scroll_metrics.ScrollMetrics)),
    [_semanticActions]: dart.fieldType(dart.nullable(core.Set$(ui.SemanticsAction))),
    isScrollingNotifier: dart.finalFieldType(change_notifier.ValueNotifier$(core.bool)),
    [_activity]: dart.fieldType(dart.nullable(scroll_activity.ScrollActivity))
  }));
  scroll_position_with_single_context.ScrollPositionWithSingleContext = class ScrollPositionWithSingleContext extends scroll_position.ScrollPosition {
    get axisDirection() {
      return this.context.axisDirection;
    }
    setPixels(newPixels) {
      if (newPixels == null) dart.nullFailed(L62, 81, 27, "newPixels");
      if (!dart.test(dart.nullCheck(this.activity).isScrolling)) dart.assertFailed(null, L62, 82, 12, "activity!.isScrolling");
      return super.setPixels(newPixels);
    }
    absorb(other) {
      if (other == null) dart.nullFailed(L62, 87, 30, "other");
      super.absorb(other);
      if (!scroll_position_with_single_context.ScrollPositionWithSingleContext.is(other)) {
        this.goIdle();
        return;
      }
      dart.nullCheck(this.activity).updateDelegate(this);
      this[_userScrollDirection] = other[_userScrollDirection];
      if (!(this[_currentDrag] == null)) dart.assertFailed(null, L62, 95, 12, "_currentDrag == null");
      if (other[_currentDrag] != null) {
        this[_currentDrag] = other[_currentDrag];
        dart.nullCheck(this[_currentDrag]).updateDelegate(this);
        other[_currentDrag] = null;
      }
    }
    applyNewDimensions() {
      super.applyNewDimensions();
      this.context.setCanDrag(this.physics.shouldAcceptUserOffset(this));
    }
    beginActivity(newActivity) {
      let t53;
      this[_heldPreviousVelocity] = 0.0;
      if (newActivity == null) return;
      if (!dart.equals(newActivity.delegate, this)) dart.assertFailed(null, L62, 114, 12, "newActivity.delegate == this");
      super.beginActivity(newActivity);
      t53 = this[_currentDrag];
      t53 == null ? null : t53.dispose();
      this[_currentDrag] = null;
      if (!dart.test(dart.nullCheck(this.activity).isScrolling)) this.updateUserScrollDirection(viewport_offset.ScrollDirection.idle);
    }
    applyUserOffset(delta) {
      if (delta == null) dart.nullFailed(L62, 123, 31, "delta");
      this.updateUserScrollDirection(dart.notNull(delta) > 0.0 ? viewport_offset.ScrollDirection.forward : viewport_offset.ScrollDirection.reverse);
      this.setPixels(dart.notNull(this.pixels) - dart.notNull(this.physics.applyPhysicsToUserOffset(this, delta)));
    }
    goIdle() {
      this.beginActivity(new scroll_activity.IdleScrollActivity.new(this));
    }
    goBallistic(velocity) {
      if (velocity == null) dart.nullFailed(L62, 143, 27, "velocity");
      if (!dart.test(this.hasPixels)) dart.assertFailed(null, L62, 144, 12, "hasPixels");
      let simulation = this.physics.createBallisticSimulation(this, velocity);
      if (simulation != null) {
        this.beginActivity(new scroll_activity.BallisticScrollActivity.new(this, simulation, this.context.vsync));
      } else {
        this.goIdle();
      }
    }
    get userScrollDirection() {
      return this[_userScrollDirection];
    }
    updateUserScrollDirection(value) {
      if (value == null) dart.nullFailed(L62, 162, 50, "value");
      if (!(value != null)) dart.assertFailed(null, L62, 163, 12, "value != null");
      if (dart.equals(this.userScrollDirection, value)) return;
      this[_userScrollDirection] = value;
      this.didUpdateScrollDirection(value);
    }
    animateTo(to, opts) {
      if (to == null) dart.nullFailed(L62, 172, 12, "to");
      let duration = opts && 'duration' in opts ? opts.duration : null;
      if (duration == null) dart.nullFailed(L62, 173, 23, "duration");
      let curve = opts && 'curve' in opts ? opts.curve : null;
      if (curve == null) dart.nullFailed(L62, 174, 20, "curve");
      if (dart.test(utils.nearEqual(to, this.pixels, this.physics.tolerance.distance))) {
        this.jumpTo(to);
        return FutureOfvoid().value();
      }
      let activity = new scroll_activity.DrivenScrollActivity.new(this, {from: this.pixels, to: to, duration: duration, curve: curve, vsync: this.context.vsync});
      this.beginActivity(activity);
      return activity.done;
    }
    jumpTo(value) {
      if (value == null) dart.nullFailed(L62, 195, 22, "value");
      this.goIdle();
      if (this.pixels != value) {
        let oldPixels = this.pixels;
        this.forcePixels(value);
        this.didStartScroll();
        this.didUpdateScrollPositionBy(dart.notNull(this.pixels) - dart.notNull(oldPixels));
        this.didEndScroll();
      }
      this.goBallistic(0.0);
    }
    pointerScroll(delta) {
      if (delta == null) dart.nullFailed(L62, 208, 29, "delta");
      if (!(delta !== 0.0)) dart.assertFailed(null, L62, 209, 12, "delta != 0.0");
      let targetPixels = math.min(core.double, math.max(core.double, dart.notNull(this.pixels) + dart.notNull(delta), this.minScrollExtent), this.maxScrollExtent);
      if (targetPixels !== this.pixels) {
        this.goIdle();
        this.updateUserScrollDirection(-dart.notNull(delta) > 0.0 ? viewport_offset.ScrollDirection.forward : viewport_offset.ScrollDirection.reverse);
        let oldPixels = this.pixels;
        this.forcePixels(targetPixels);
        this.didStartScroll();
        this.didUpdateScrollPositionBy(dart.notNull(this.pixels) - dart.notNull(oldPixels));
        this.didEndScroll();
        this.goBallistic(0.0);
      }
    }
    jumpToWithoutSettling(value) {
      if (value == null) dart.nullFailed(L62, 230, 37, "value");
      this.goIdle();
      if (this.pixels != value) {
        let oldPixels = this.pixels;
        this.forcePixels(value);
        this.didStartScroll();
        this.didUpdateScrollPositionBy(dart.notNull(this.pixels) - dart.notNull(oldPixels));
        this.didEndScroll();
      }
    }
    hold(holdCancelCallback) {
      if (holdCancelCallback == null) dart.nullFailed(L62, 242, 42, "holdCancelCallback");
      let previousVelocity = dart.nullCheck(this.activity).velocity;
      let holdActivity = new scroll_activity.HoldScrollActivity.new({delegate: this, onHoldCanceled: holdCancelCallback});
      this.beginActivity(holdActivity);
      this[_heldPreviousVelocity] = previousVelocity;
      return holdActivity;
    }
    drag(details, dragCancelCallback) {
      if (details == null) dart.nullFailed(L62, 256, 30, "details");
      if (dragCancelCallback == null) dart.nullFailed(L62, 256, 52, "dragCancelCallback");
      let drag = new scroll_activity.ScrollDragController.new({delegate: this, details: details, onDragCanceled: dragCancelCallback, carriedVelocity: this.physics.carriedMomentum(this[_heldPreviousVelocity]), motionStartDistanceThreshold: this.physics.dragStartDistanceMotionThreshold});
      this.beginActivity(new scroll_activity.DragScrollActivity.new(this, drag));
      if (!(this[_currentDrag] == null)) dart.assertFailed(null, L62, 265, 12, "_currentDrag == null");
      this[_currentDrag] = drag;
      return drag;
    }
    dispose() {
      let t53;
      t53 = this[_currentDrag];
      t53 == null ? null : t53.dispose();
      this[_currentDrag] = null;
      super.dispose();
    }
    debugFillDescription(description) {
      if (description == null) dart.nullFailed(L62, 278, 42, "description");
      super.debugFillDescription(description);
      description[$add](dart.str(dart.runtimeType(this.context)));
      description[$add](dart.str(this.physics));
      description[$add](dart.str(this.activity));
      description[$add](dart.str(this.userScrollDirection));
    }
  };
  (scroll_position_with_single_context.ScrollPositionWithSingleContext.new = function(opts) {
    let physics = opts && 'physics' in opts ? opts.physics : null;
    if (physics == null) dart.nullFailed(L62, 51, 28, "physics");
    let context = opts && 'context' in opts ? opts.context : null;
    if (context == null) dart.nullFailed(L62, 52, 28, "context");
    let initialPixels = opts && 'initialPixels' in opts ? opts.initialPixels : 0;
    let keepScrollOffset = opts && 'keepScrollOffset' in opts ? opts.keepScrollOffset : true;
    if (keepScrollOffset == null) dart.nullFailed(L62, 54, 10, "keepScrollOffset");
    let oldPosition = opts && 'oldPosition' in opts ? opts.oldPosition : null;
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    this[_heldPreviousVelocity] = 0.0;
    this[_userScrollDirection] = viewport_offset.ScrollDirection.idle;
    this[_currentDrag] = null;
    scroll_position_with_single_context.ScrollPositionWithSingleContext.__proto__.new.call(this, {physics: physics, context: context, keepScrollOffset: keepScrollOffset, oldPosition: oldPosition, debugLabel: debugLabel});
    if (!dart.test(this.hasPixels) && initialPixels != null) this.correctPixels(initialPixels);
    if (this.activity == null) this.goIdle();
    if (!(this.activity != null)) dart.assertFailed(null, L62, 70, 12, "activity != null");
  }).prototype = scroll_position_with_single_context.ScrollPositionWithSingleContext.prototype;
  dart.addTypeTests(scroll_position_with_single_context.ScrollPositionWithSingleContext);
  dart.addTypeCaches(scroll_position_with_single_context.ScrollPositionWithSingleContext);
  scroll_position_with_single_context.ScrollPositionWithSingleContext[dart.implements] = () => [scroll_activity.ScrollActivityDelegate];
  dart.setMethodSignature(scroll_position_with_single_context.ScrollPositionWithSingleContext, () => ({
    __proto__: dart.getMethods(scroll_position_with_single_context.ScrollPositionWithSingleContext.__proto__),
    applyUserOffset: dart.fnType(dart.void, [core.double]),
    goIdle: dart.fnType(dart.void, []),
    goBallistic: dart.fnType(dart.void, [core.double]),
    updateUserScrollDirection: dart.fnType(dart.void, [viewport_offset.ScrollDirection]),
    animateTo: dart.fnType(async.Future$(dart.void), [core.double], {}, {curve: curves.Curve, duration: core.Duration}),
    jumpTo: dart.fnType(dart.void, [core.double]),
    pointerScroll: dart.fnType(dart.void, [core.double]),
    jumpToWithoutSettling: dart.fnType(dart.void, [core.double]),
    hold: dart.fnType(scroll_activity.ScrollHoldController, [dart.fnType(dart.void, [])]),
    drag: dart.fnType(drag.Drag, [drag_details.DragStartDetails, dart.fnType(dart.void, [])])
  }));
  dart.setGetterSignature(scroll_position_with_single_context.ScrollPositionWithSingleContext, () => ({
    __proto__: dart.getGetters(scroll_position_with_single_context.ScrollPositionWithSingleContext.__proto__),
    axisDirection: basic_types.AxisDirection,
    userScrollDirection: viewport_offset.ScrollDirection
  }));
  dart.setLibraryUri(scroll_position_with_single_context.ScrollPositionWithSingleContext, L65);
  dart.setFieldSignature(scroll_position_with_single_context.ScrollPositionWithSingleContext, () => ({
    __proto__: dart.getFields(scroll_position_with_single_context.ScrollPositionWithSingleContext.__proto__),
    [_heldPreviousVelocity]: dart.fieldType(core.double),
    [_userScrollDirection]: dart.fieldType(viewport_offset.ScrollDirection),
    [_currentDrag]: dart.fieldType(dart.nullable(scroll_activity.ScrollDragController))
  }));
  scroll_activity.ScrollActivityDelegate = class ScrollActivityDelegate extends core.Object {};
  (scroll_activity.ScrollActivityDelegate.new = function() {
    ;
  }).prototype = scroll_activity.ScrollActivityDelegate.prototype;
  dart.addTypeTests(scroll_activity.ScrollActivityDelegate);
  dart.addTypeCaches(scroll_activity.ScrollActivityDelegate);
  dart.setLibraryUri(scroll_activity.ScrollActivityDelegate, L66);
  var _delegate$ = dart.privateName(scroll_activity, "_delegate");
  scroll_activity.ScrollActivity = class ScrollActivity extends core.Object {
    get delegate() {
      return this[_delegate$];
    }
    updateDelegate(value) {
      if (value == null) dart.nullFailed(L67, 74, 46, "value");
      if (!!dart.equals(this[_delegate$], value)) dart.assertFailed(null, L67, 75, 12, "_delegate != value");
      this[_delegate$] = value;
    }
    resetActivity() {
    }
    dispatchScrollStartNotification(metrics, context) {
      if (metrics == null) dart.nullFailed(L67, 90, 54, "metrics");
      new scroll_notification.ScrollStartNotification.new({metrics: metrics, context: context}).dispatch(context);
    }
    dispatchScrollUpdateNotification(metrics, context, scrollDelta) {
      if (metrics == null) dart.nullFailed(L67, 95, 55, "metrics");
      if (context == null) dart.nullFailed(L67, 95, 77, "context");
      if (scrollDelta == null) dart.nullFailed(L67, 95, 93, "scrollDelta");
      new scroll_notification.ScrollUpdateNotification.new({metrics: metrics, context: context, scrollDelta: scrollDelta}).dispatch(context);
    }
    dispatchOverscrollNotification(metrics, context, overscroll) {
      if (metrics == null) dart.nullFailed(L67, 100, 53, "metrics");
      if (context == null) dart.nullFailed(L67, 100, 75, "context");
      if (overscroll == null) dart.nullFailed(L67, 100, 91, "overscroll");
      new scroll_notification.OverscrollNotification.new({metrics: metrics, context: context, overscroll: overscroll}).dispatch(context);
    }
    dispatchScrollEndNotification(metrics, context) {
      if (metrics == null) dart.nullFailed(L67, 105, 52, "metrics");
      if (context == null) dart.nullFailed(L67, 105, 74, "context");
      new scroll_notification.ScrollEndNotification.new({metrics: metrics, context: context}).dispatch(context);
    }
    applyNewDimensions() {
    }
    dispose() {
    }
    toString() {
      return diagnostics$.describeIdentity(this);
    }
  };
  (scroll_activity.ScrollActivity.new = function(_delegate) {
    if (_delegate == null) dart.nullFailed(L67, 64, 23, "_delegate");
    this[_delegate$] = _delegate;
    ;
  }).prototype = scroll_activity.ScrollActivity.prototype;
  dart.addTypeTests(scroll_activity.ScrollActivity);
  dart.addTypeCaches(scroll_activity.ScrollActivity);
  dart.setMethodSignature(scroll_activity.ScrollActivity, () => ({
    __proto__: dart.getMethods(scroll_activity.ScrollActivity.__proto__),
    updateDelegate: dart.fnType(dart.void, [scroll_activity.ScrollActivityDelegate]),
    resetActivity: dart.fnType(dart.void, []),
    dispatchScrollStartNotification: dart.fnType(dart.void, [scroll_metrics.ScrollMetrics, dart.nullable(framework.BuildContext)]),
    dispatchScrollUpdateNotification: dart.fnType(dart.void, [scroll_metrics.ScrollMetrics, framework.BuildContext, core.double]),
    dispatchOverscrollNotification: dart.fnType(dart.void, [scroll_metrics.ScrollMetrics, framework.BuildContext, core.double]),
    dispatchScrollEndNotification: dart.fnType(dart.void, [scroll_metrics.ScrollMetrics, framework.BuildContext]),
    applyNewDimensions: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(scroll_activity.ScrollActivity, () => ({
    __proto__: dart.getGetters(scroll_activity.ScrollActivity.__proto__),
    delegate: scroll_activity.ScrollActivityDelegate
  }));
  dart.setLibraryUri(scroll_activity.ScrollActivity, L66);
  dart.setFieldSignature(scroll_activity.ScrollActivity, () => ({
    __proto__: dart.getFields(scroll_activity.ScrollActivity.__proto__),
    [_delegate$]: dart.fieldType(scroll_activity.ScrollActivityDelegate)
  }));
  dart.defineExtensionMethods(scroll_activity.ScrollActivity, ['toString']);
  scroll_activity.IdleScrollActivity = class IdleScrollActivity extends scroll_activity.ScrollActivity {
    applyNewDimensions() {
      this.delegate.goBallistic(0.0);
    }
    get shouldIgnorePointer() {
      return false;
    }
    get isScrolling() {
      return false;
    }
    get velocity() {
      return 0.0;
    }
  };
  (scroll_activity.IdleScrollActivity.new = function(delegate) {
    if (delegate == null) dart.nullFailed(L67, 155, 45, "delegate");
    scroll_activity.IdleScrollActivity.__proto__.new.call(this, delegate);
    ;
  }).prototype = scroll_activity.IdleScrollActivity.prototype;
  dart.addTypeTests(scroll_activity.IdleScrollActivity);
  dart.addTypeCaches(scroll_activity.IdleScrollActivity);
  dart.setGetterSignature(scroll_activity.IdleScrollActivity, () => ({
    __proto__: dart.getGetters(scroll_activity.IdleScrollActivity.__proto__),
    shouldIgnorePointer: core.bool,
    isScrolling: core.bool,
    velocity: core.double
  }));
  dart.setLibraryUri(scroll_activity.IdleScrollActivity, L66);
  scroll_activity.ScrollHoldController = class ScrollHoldController extends core.Object {};
  (scroll_activity.ScrollHoldController.new = function() {
    ;
  }).prototype = scroll_activity.ScrollHoldController.prototype;
  dart.addTypeTests(scroll_activity.ScrollHoldController);
  dart.addTypeCaches(scroll_activity.ScrollHoldController);
  dart.setLibraryUri(scroll_activity.ScrollHoldController, L66);
  var onHoldCanceled$ = dart.privateName(scroll_activity, "HoldScrollActivity.onHoldCanceled");
  scroll_activity.HoldScrollActivity = class HoldScrollActivity extends scroll_activity.ScrollActivity {
    get onHoldCanceled() {
      return this[onHoldCanceled$];
    }
    set onHoldCanceled(value) {
      super.onHoldCanceled = value;
    }
    get shouldIgnorePointer() {
      return false;
    }
    get isScrolling() {
      return false;
    }
    get velocity() {
      return 0.0;
    }
    cancel() {
      this.delegate.goBallistic(0.0);
    }
    dispose() {
      if (this.onHoldCanceled != null) dart.nullCheck(this.onHoldCanceled)();
      super.dispose();
    }
  };
  (scroll_activity.HoldScrollActivity.new = function(opts) {
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    if (delegate == null) dart.nullFailed(L67, 196, 37, "delegate");
    let onHoldCanceled = opts && 'onHoldCanceled' in opts ? opts.onHoldCanceled : null;
    this[onHoldCanceled$] = onHoldCanceled;
    scroll_activity.HoldScrollActivity.__proto__.new.call(this, delegate);
    ;
  }).prototype = scroll_activity.HoldScrollActivity.prototype;
  dart.addTypeTests(scroll_activity.HoldScrollActivity);
  dart.addTypeCaches(scroll_activity.HoldScrollActivity);
  scroll_activity.HoldScrollActivity[dart.implements] = () => [scroll_activity.ScrollHoldController];
  dart.setMethodSignature(scroll_activity.HoldScrollActivity, () => ({
    __proto__: dart.getMethods(scroll_activity.HoldScrollActivity.__proto__),
    cancel: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(scroll_activity.HoldScrollActivity, () => ({
    __proto__: dart.getGetters(scroll_activity.HoldScrollActivity.__proto__),
    shouldIgnorePointer: core.bool,
    isScrolling: core.bool,
    velocity: core.double
  }));
  dart.setLibraryUri(scroll_activity.HoldScrollActivity, L66);
  dart.setFieldSignature(scroll_activity.HoldScrollActivity, () => ({
    __proto__: dart.getFields(scroll_activity.HoldScrollActivity.__proto__),
    onHoldCanceled: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  var _lastDetails = dart.privateName(scroll_activity, "_lastDetails");
  var _retainMomentum = dart.privateName(scroll_activity, "_retainMomentum");
  var _lastNonStationaryTimestamp = dart.privateName(scroll_activity, "_lastNonStationaryTimestamp");
  var _offsetSinceLastStop = dart.privateName(scroll_activity, "_offsetSinceLastStop");
  var _reversed = dart.privateName(scroll_activity, "_reversed");
  var _maybeLoseMomentum = dart.privateName(scroll_activity, "_maybeLoseMomentum");
  var _adjustForScrollStartThreshold = dart.privateName(scroll_activity, "_adjustForScrollStartThreshold");
  var onDragCanceled$ = dart.privateName(scroll_activity, "ScrollDragController.onDragCanceled");
  var carriedVelocity$ = dart.privateName(scroll_activity, "ScrollDragController.carriedVelocity");
  var motionStartDistanceThreshold$ = dart.privateName(scroll_activity, "ScrollDragController.motionStartDistanceThreshold");
  var C682;
  scroll_activity.ScrollDragController = class ScrollDragController extends core.Object {
    get onDragCanceled() {
      return this[onDragCanceled$];
    }
    set onDragCanceled(value) {
      super.onDragCanceled = value;
    }
    get carriedVelocity() {
      return this[carriedVelocity$];
    }
    set carriedVelocity(value) {
      super.carriedVelocity = value;
    }
    get motionStartDistanceThreshold() {
      return this[motionStartDistanceThreshold$];
    }
    set motionStartDistanceThreshold(value) {
      super.motionStartDistanceThreshold = value;
    }
    get delegate() {
      return this[_delegate$];
    }
    get [_reversed]() {
      return basic_types.axisDirectionIsReversed(this.delegate.axisDirection);
    }
    updateDelegate(value) {
      if (value == null) dart.nullFailed(L67, 296, 46, "value");
      if (!!dart.equals(this[_delegate$], value)) dart.assertFailed(null, L67, 297, 12, "_delegate != value");
      this[_delegate$] = value;
    }
    [_maybeLoseMomentum](offset, timestamp) {
      if (offset == null) dart.nullFailed(L67, 303, 34, "offset");
      if (dart.test(this[_retainMomentum]) && offset === 0.0 && (timestamp == null || dart.test(timestamp['-'](dart.nullCheck(this[_lastNonStationaryTimestamp]))['>'](scroll_activity.ScrollDragController.momentumRetainStationaryDurationThreshold)))) {
        this[_retainMomentum] = false;
      }
    }
    [_adjustForScrollStartThreshold](offset, timestamp) {
      if (offset == null) dart.nullFailed(L67, 319, 48, "offset");
      if (timestamp == null) {
        return offset;
      }
      if (offset === 0.0) {
        if (this.motionStartDistanceThreshold != null && this[_offsetSinceLastStop] == null && dart.test(timestamp['-'](dart.nullCheck(this[_lastNonStationaryTimestamp]))['>'](scroll_activity.ScrollDragController.motionStoppedDurationThreshold))) {
          this[_offsetSinceLastStop] = 0.0;
        }
        return 0.0;
      } else {
        if (this[_offsetSinceLastStop] == null) {
          return offset;
        } else {
          this[_offsetSinceLastStop] = dart.nullCheck(this[_offsetSinceLastStop]) + dart.notNull(offset);
          if (dart.nullCheck(this[_offsetSinceLastStop])[$abs]() > dart.nullCheck(this.motionStartDistanceThreshold)) {
            this[_offsetSinceLastStop] = null;
            if (offset[$abs]() > 24) {
              return offset;
            } else {
              return math.min(core.double, dart.nullCheck(this.motionStartDistanceThreshold) / 3.0, offset[$abs]()) * offset[$sign];
            }
          } else {
            return 0.0;
          }
        }
      }
    }
    update(details) {
      if (details == null) dart.nullFailed(L67, 365, 33, "details");
      if (!(details.primaryDelta != null)) dart.assertFailed(null, L67, 366, 12, "details.primaryDelta != null");
      this[_lastDetails] = details;
      let offset = dart.nullCheck(details.primaryDelta);
      if (offset !== 0.0) {
        this[_lastNonStationaryTimestamp] = details.sourceTimeStamp;
      }
      this[_maybeLoseMomentum](offset, details.sourceTimeStamp);
      offset = this[_adjustForScrollStartThreshold](offset, details.sourceTimeStamp);
      if (offset === 0.0) {
        return;
      }
      if (dart.test(this[_reversed])) offset = -dart.notNull(offset);
      this.delegate.applyUserOffset(offset);
    }
    end(details) {
      if (details == null) dart.nullFailed(L67, 386, 27, "details");
      if (!(details.primaryVelocity != null)) dart.assertFailed(null, L67, 387, 12, "details.primaryVelocity != null");
      let velocity = -dart.nullCheck(details.primaryVelocity);
      if (dart.test(this[_reversed])) velocity = -velocity;
      this[_lastDetails] = details;
      if (dart.test(this[_retainMomentum]) && velocity[$sign] === dart.nullCheck(this.carriedVelocity)[$sign]) velocity = velocity + dart.nullCheck(this.carriedVelocity);
      this.delegate.goBallistic(velocity);
    }
    cancel() {
      this.delegate.goBallistic(0.0);
    }
    dispose() {
      this[_lastDetails] = null;
      if (this.onDragCanceled != null) dart.nullCheck(this.onDragCanceled)();
    }
    get lastDetails() {
      return this[_lastDetails];
    }
    toString() {
      return diagnostics$.describeIdentity(this);
    }
  };
  (scroll_activity.ScrollDragController.new = function(opts) {
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    if (delegate == null) dart.nullFailed(L67, 237, 37, "delegate");
    let details = opts && 'details' in opts ? opts.details : null;
    if (details == null) dart.nullFailed(L67, 238, 31, "details");
    let onDragCanceled = opts && 'onDragCanceled' in opts ? opts.onDragCanceled : null;
    let carriedVelocity = opts && 'carriedVelocity' in opts ? opts.carriedVelocity : null;
    let motionStartDistanceThreshold = opts && 'motionStartDistanceThreshold' in opts ? opts.motionStartDistanceThreshold : null;
    this[onDragCanceled$] = onDragCanceled;
    this[carriedVelocity$] = carriedVelocity;
    this[motionStartDistanceThreshold$] = motionStartDistanceThreshold;
    if (!(delegate != null)) dart.assertFailed(null, L67, 242, 15, "delegate != null");
    if (!(details != null)) dart.assertFailed(null, L67, 243, 15, "details != null");
    if (!(motionStartDistanceThreshold == null || dart.notNull(motionStartDistanceThreshold) > 0.0)) dart.assertFailed("motionStartDistanceThreshold must be a positive number or null", L67, 245, 10, "motionStartDistanceThreshold == null || motionStartDistanceThreshold > 0.0");
    this[_delegate$] = delegate;
    this[_lastDetails] = details;
    this[_retainMomentum] = carriedVelocity != null && carriedVelocity !== 0.0;
    this[_lastNonStationaryTimestamp] = details.sourceTimeStamp;
    this[_offsetSinceLastStop] = motionStartDistanceThreshold == null ? null : 0.0;
    ;
  }).prototype = scroll_activity.ScrollDragController.prototype;
  dart.addTypeTests(scroll_activity.ScrollDragController);
  dart.addTypeCaches(scroll_activity.ScrollDragController);
  scroll_activity.ScrollDragController[dart.implements] = () => [drag.Drag];
  dart.setMethodSignature(scroll_activity.ScrollDragController, () => ({
    __proto__: dart.getMethods(scroll_activity.ScrollDragController.__proto__),
    updateDelegate: dart.fnType(dart.void, [scroll_activity.ScrollActivityDelegate]),
    [_maybeLoseMomentum]: dart.fnType(dart.void, [core.double, dart.nullable(core.Duration)]),
    [_adjustForScrollStartThreshold]: dart.fnType(core.double, [core.double, dart.nullable(core.Duration)]),
    update: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    end: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    cancel: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(scroll_activity.ScrollDragController, () => ({
    __proto__: dart.getGetters(scroll_activity.ScrollDragController.__proto__),
    delegate: scroll_activity.ScrollActivityDelegate,
    [_reversed]: core.bool,
    lastDetails: dart.dynamic
  }));
  dart.setLibraryUri(scroll_activity.ScrollDragController, L66);
  dart.setFieldSignature(scroll_activity.ScrollDragController, () => ({
    __proto__: dart.getFields(scroll_activity.ScrollDragController.__proto__),
    [_delegate$]: dart.fieldType(scroll_activity.ScrollActivityDelegate),
    onDragCanceled: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    carriedVelocity: dart.finalFieldType(dart.nullable(core.double)),
    motionStartDistanceThreshold: dart.finalFieldType(dart.nullable(core.double)),
    [_lastNonStationaryTimestamp]: dart.fieldType(dart.nullable(core.Duration)),
    [_retainMomentum]: dart.fieldType(core.bool),
    [_offsetSinceLastStop]: dart.fieldType(dart.nullable(core.double)),
    [_lastDetails]: dart.fieldType(dart.dynamic)
  }));
  dart.defineExtensionMethods(scroll_activity.ScrollDragController, ['toString']);
  dart.defineLazy(scroll_activity.ScrollDragController, {
    /*scroll_activity.ScrollDragController.momentumRetainStationaryDurationThreshold*/get momentumRetainStationaryDurationThreshold() {
      return C682 || CT.C682;
    },
    /*scroll_activity.ScrollDragController.motionStoppedDurationThreshold*/get motionStoppedDurationThreshold() {
      return C580 || CT.C580;
    },
    /*scroll_activity.ScrollDragController._bigThresholdBreakDistance*/get _bigThresholdBreakDistance() {
      return 24;
    }
  }, false);
  var _controller$0 = dart.privateName(scroll_activity, "_controller");
  scroll_activity.DragScrollActivity = class DragScrollActivity extends scroll_activity.ScrollActivity {
    dispatchScrollStartNotification(metrics, context) {
      if (metrics == null) dart.nullFailed(L67, 443, 54, "metrics");
      let lastDetails = dart.nullCheck(this[_controller$0]).lastDetails;
      if (!drag_details.DragStartDetails.is(lastDetails)) dart.assertFailed(null, L67, 445, 12, "lastDetails is DragStartDetails");
      new scroll_notification.ScrollStartNotification.new({metrics: metrics, context: context, dragDetails: drag_details.DragStartDetails.as(lastDetails)}).dispatch(context);
    }
    dispatchScrollUpdateNotification(metrics, context, scrollDelta) {
      if (metrics == null) dart.nullFailed(L67, 450, 55, "metrics");
      if (context == null) dart.nullFailed(L67, 450, 77, "context");
      if (scrollDelta == null) dart.nullFailed(L67, 450, 93, "scrollDelta");
      let lastDetails = dart.nullCheck(this[_controller$0]).lastDetails;
      if (!drag_details.DragUpdateDetails.is(lastDetails)) dart.assertFailed(null, L67, 452, 12, "lastDetails is DragUpdateDetails");
      new scroll_notification.ScrollUpdateNotification.new({metrics: metrics, context: context, scrollDelta: scrollDelta, dragDetails: drag_details.DragUpdateDetails.as(lastDetails)}).dispatch(context);
    }
    dispatchOverscrollNotification(metrics, context, overscroll) {
      if (metrics == null) dart.nullFailed(L67, 457, 53, "metrics");
      if (context == null) dart.nullFailed(L67, 457, 75, "context");
      if (overscroll == null) dart.nullFailed(L67, 457, 91, "overscroll");
      let lastDetails = dart.nullCheck(this[_controller$0]).lastDetails;
      if (!drag_details.DragUpdateDetails.is(lastDetails)) dart.assertFailed(null, L67, 459, 12, "lastDetails is DragUpdateDetails");
      new scroll_notification.OverscrollNotification.new({metrics: metrics, context: context, overscroll: overscroll, dragDetails: drag_details.DragUpdateDetails.as(lastDetails)}).dispatch(context);
    }
    dispatchScrollEndNotification(metrics, context) {
      if (metrics == null) dart.nullFailed(L67, 464, 52, "metrics");
      if (context == null) dart.nullFailed(L67, 464, 74, "context");
      let lastDetails = dart.nullCheck(this[_controller$0]).lastDetails;
      new scroll_notification.ScrollEndNotification.new({metrics: metrics, context: context, dragDetails: drag_details.DragEndDetails.is(lastDetails) ? lastDetails : null}).dispatch(context);
    }
    get shouldIgnorePointer() {
      return true;
    }
    get isScrolling() {
      return true;
    }
    get velocity() {
      return 0.0;
    }
    dispose() {
      this[_controller$0] = null;
      super.dispose();
    }
    toString() {
      return dart.str(diagnostics$.describeIdentity(this)) + "(" + dart.str(this[_controller$0]) + ")";
    }
  };
  (scroll_activity.DragScrollActivity.new = function(delegate, controller) {
    if (delegate == null) dart.nullFailed(L67, 435, 28, "delegate");
    if (controller == null) dart.nullFailed(L67, 436, 26, "controller");
    this[_controller$0] = controller;
    scroll_activity.DragScrollActivity.__proto__.new.call(this, delegate);
    ;
  }).prototype = scroll_activity.DragScrollActivity.prototype;
  dart.addTypeTests(scroll_activity.DragScrollActivity);
  dart.addTypeCaches(scroll_activity.DragScrollActivity);
  dart.setGetterSignature(scroll_activity.DragScrollActivity, () => ({
    __proto__: dart.getGetters(scroll_activity.DragScrollActivity.__proto__),
    shouldIgnorePointer: core.bool,
    isScrolling: core.bool,
    velocity: core.double
  }));
  dart.setLibraryUri(scroll_activity.DragScrollActivity, L66);
  dart.setFieldSignature(scroll_activity.DragScrollActivity, () => ({
    __proto__: dart.getFields(scroll_activity.DragScrollActivity.__proto__),
    [_controller$0]: dart.fieldType(dart.nullable(scroll_activity.ScrollDragController))
  }));
  dart.defineExtensionMethods(scroll_activity.DragScrollActivity, ['toString']);
  var __BallisticScrollActivity__controller = dart.privateName(scroll_activity, "_#BallisticScrollActivity#_controller");
  var __BallisticScrollActivity__controller_isSet = dart.privateName(scroll_activity, "_#BallisticScrollActivity#_controller#isSet");
  var _tick = dart.privateName(scroll_activity, "_tick");
  var _end = dart.privateName(scroll_activity, "_end");
  scroll_activity.BallisticScrollActivity = class BallisticScrollActivity extends scroll_activity.ScrollActivity {
    get [_controller$0]() {
      let t53;
      return dart.test(this[__BallisticScrollActivity__controller_isSet]) ? (t53 = this[__BallisticScrollActivity__controller], t53) : dart.throw(new _internal.LateError.fieldNI("_controller"));
    }
    set [_controller$0](t53) {
      if (t53 == null) dart.nullFailed(L67, 528, 28, "null");
      this[__BallisticScrollActivity__controller_isSet] = true;
      this[__BallisticScrollActivity__controller] = t53;
    }
    resetActivity() {
      this.delegate.goBallistic(this.velocity);
    }
    applyNewDimensions() {
      this.delegate.goBallistic(this.velocity);
    }
    [_tick]() {
      if (!dart.test(this.applyMoveTo(this[_controller$0].value))) this.delegate.goIdle();
    }
    applyMoveTo(value) {
      if (value == null) dart.nullFailed(L67, 553, 27, "value");
      return this.delegate.setPixels(value) === 0.0;
    }
    [_end]() {
      this.delegate.goBallistic(0.0);
    }
    dispatchOverscrollNotification(metrics, context, overscroll) {
      if (metrics == null) dart.nullFailed(L67, 562, 53, "metrics");
      if (context == null) dart.nullFailed(L67, 562, 75, "context");
      if (overscroll == null) dart.nullFailed(L67, 562, 91, "overscroll");
      new scroll_notification.OverscrollNotification.new({metrics: metrics, context: context, overscroll: overscroll, velocity: this.velocity}).dispatch(context);
    }
    get shouldIgnorePointer() {
      return true;
    }
    get isScrolling() {
      return true;
    }
    get velocity() {
      return this[_controller$0].velocity;
    }
    dispose() {
      this[_controller$0].dispose();
      super.dispose();
    }
    toString() {
      return dart.str(diagnostics$.describeIdentity(this)) + "(" + dart.str(this[_controller$0]) + ")";
    }
  };
  (scroll_activity.BallisticScrollActivity.new = function(delegate, simulation, vsync) {
    let t53;
    if (delegate == null) dart.nullFailed(L67, 515, 28, "delegate");
    if (simulation == null) dart.nullFailed(L67, 516, 16, "simulation");
    if (vsync == null) dart.nullFailed(L67, 517, 20, "vsync");
    this[__BallisticScrollActivity__controller] = null;
    this[__BallisticScrollActivity__controller_isSet] = false;
    scroll_activity.BallisticScrollActivity.__proto__.new.call(this, delegate);
    this[_controller$0] = (t53 = new animation_controller.AnimationController.unbounded({debugLabel: true ? object.objectRuntimeType(this, "BallisticScrollActivity") : null, vsync: vsync}), (() => {
      t53.addListener(dart.bind(this, _tick));
      t53.animateWith(simulation).whenComplete(dart.bind(this, _end));
      return t53;
    })());
  }).prototype = scroll_activity.BallisticScrollActivity.prototype;
  dart.addTypeTests(scroll_activity.BallisticScrollActivity);
  dart.addTypeCaches(scroll_activity.BallisticScrollActivity);
  dart.setMethodSignature(scroll_activity.BallisticScrollActivity, () => ({
    __proto__: dart.getMethods(scroll_activity.BallisticScrollActivity.__proto__),
    [_tick]: dart.fnType(dart.void, []),
    applyMoveTo: dart.fnType(core.bool, [core.double]),
    [_end]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(scroll_activity.BallisticScrollActivity, () => ({
    __proto__: dart.getGetters(scroll_activity.BallisticScrollActivity.__proto__),
    [_controller$0]: animation_controller.AnimationController,
    shouldIgnorePointer: core.bool,
    isScrolling: core.bool,
    velocity: core.double
  }));
  dart.setSetterSignature(scroll_activity.BallisticScrollActivity, () => ({
    __proto__: dart.getSetters(scroll_activity.BallisticScrollActivity.__proto__),
    [_controller$0]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(scroll_activity.BallisticScrollActivity, L66);
  dart.setFieldSignature(scroll_activity.BallisticScrollActivity, () => ({
    __proto__: dart.getFields(scroll_activity.BallisticScrollActivity.__proto__),
    [__BallisticScrollActivity__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [__BallisticScrollActivity__controller_isSet]: dart.fieldType(core.bool)
  }));
  dart.defineExtensionMethods(scroll_activity.BallisticScrollActivity, ['toString']);
  var __DrivenScrollActivity__completer = dart.privateName(scroll_activity, "_#DrivenScrollActivity#_completer");
  var __DrivenScrollActivity__completer_isSet = dart.privateName(scroll_activity, "_#DrivenScrollActivity#_completer#isSet");
  var __DrivenScrollActivity__controller = dart.privateName(scroll_activity, "_#DrivenScrollActivity#_controller");
  var __DrivenScrollActivity__controller_isSet = dart.privateName(scroll_activity, "_#DrivenScrollActivity#_controller#isSet");
  var _completer = dart.privateName(scroll_activity, "_completer");
  scroll_activity.DrivenScrollActivity = class DrivenScrollActivity extends scroll_activity.ScrollActivity {
    get [_completer]() {
      let t54;
      return dart.test(this[__DrivenScrollActivity__completer_isSet]) ? (t54 = this[__DrivenScrollActivity__completer], t54) : dart.throw(new _internal.LateError.fieldNI("_completer"));
    }
    set [_completer](t54) {
      if (t54 == null) dart.nullFailed(L67, 625, 30, "null");
      if (dart.test(this[__DrivenScrollActivity__completer_isSet]))
        dart.throw(new _internal.LateError.fieldAI("_completer"));
      else {
        this[__DrivenScrollActivity__completer_isSet] = true;
        this[__DrivenScrollActivity__completer] = t54;
      }
    }
    get [_controller$0]() {
      let t55;
      return dart.test(this[__DrivenScrollActivity__controller_isSet]) ? (t55 = this[__DrivenScrollActivity__controller], t55) : dart.throw(new _internal.LateError.fieldNI("_controller"));
    }
    set [_controller$0](t55) {
      if (t55 == null) dart.nullFailed(L67, 626, 34, "null");
      if (dart.test(this[__DrivenScrollActivity__controller_isSet]))
        dart.throw(new _internal.LateError.fieldAI("_controller"));
      else {
        this[__DrivenScrollActivity__controller_isSet] = true;
        this[__DrivenScrollActivity__controller] = t55;
      }
    }
    get done() {
      return this[_completer].future;
    }
    [_tick]() {
      if (this.delegate.setPixels(this[_controller$0].value) !== 0.0) this.delegate.goIdle();
    }
    [_end]() {
      this.delegate.goBallistic(this.velocity);
    }
    dispatchOverscrollNotification(metrics, context, overscroll) {
      if (metrics == null) dart.nullFailed(L67, 645, 53, "metrics");
      if (context == null) dart.nullFailed(L67, 645, 75, "context");
      if (overscroll == null) dart.nullFailed(L67, 645, 91, "overscroll");
      new scroll_notification.OverscrollNotification.new({metrics: metrics, context: context, overscroll: overscroll, velocity: this.velocity}).dispatch(context);
    }
    get shouldIgnorePointer() {
      return true;
    }
    get isScrolling() {
      return true;
    }
    get velocity() {
      return this[_controller$0].velocity;
    }
    dispose() {
      this[_completer].complete();
      this[_controller$0].dispose();
      super.dispose();
    }
    toString() {
      return dart.str(diagnostics$.describeIdentity(this)) + "(" + dart.str(this[_controller$0]) + ")";
    }
  };
  (scroll_activity.DrivenScrollActivity.new = function(delegate, opts) {
    let t54;
    if (delegate == null) dart.nullFailed(L67, 602, 28, "delegate");
    let from = opts && 'from' in opts ? opts.from : null;
    if (from == null) dart.nullFailed(L67, 603, 21, "from");
    let to = opts && 'to' in opts ? opts.to : null;
    if (to == null) dart.nullFailed(L67, 604, 21, "to");
    let duration = opts && 'duration' in opts ? opts.duration : null;
    if (duration == null) dart.nullFailed(L67, 605, 23, "duration");
    let curve = opts && 'curve' in opts ? opts.curve : null;
    if (curve == null) dart.nullFailed(L67, 606, 20, "curve");
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    if (vsync == null) dart.nullFailed(L67, 607, 29, "vsync");
    this[__DrivenScrollActivity__completer] = null;
    this[__DrivenScrollActivity__completer_isSet] = false;
    this[__DrivenScrollActivity__controller] = null;
    this[__DrivenScrollActivity__controller_isSet] = false;
    if (!(from != null)) dart.assertFailed(null, L67, 608, 15, "from != null");
    if (!(to != null)) dart.assertFailed(null, L67, 609, 15, "to != null");
    if (!(duration != null)) dart.assertFailed(null, L67, 610, 15, "duration != null");
    if (!dart.test(duration['>'](core.Duration.zero))) dart.assertFailed(null, L67, 611, 15, "duration > Duration.zero");
    if (!(curve != null)) dart.assertFailed(null, L67, 612, 15, "curve != null");
    scroll_activity.DrivenScrollActivity.__proto__.new.call(this, delegate);
    this[_completer] = CompleterOfvoid().new();
    this[_controller$0] = (t54 = new animation_controller.AnimationController.unbounded({value: from, debugLabel: object.objectRuntimeType(this, "DrivenScrollActivity"), vsync: vsync}), (() => {
      t54.addListener(dart.bind(this, _tick));
      t54.animateTo(to, {duration: duration, curve: curve}).whenComplete(dart.bind(this, _end));
      return t54;
    })());
  }).prototype = scroll_activity.DrivenScrollActivity.prototype;
  dart.addTypeTests(scroll_activity.DrivenScrollActivity);
  dart.addTypeCaches(scroll_activity.DrivenScrollActivity);
  dart.setMethodSignature(scroll_activity.DrivenScrollActivity, () => ({
    __proto__: dart.getMethods(scroll_activity.DrivenScrollActivity.__proto__),
    [_tick]: dart.fnType(dart.void, []),
    [_end]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(scroll_activity.DrivenScrollActivity, () => ({
    __proto__: dart.getGetters(scroll_activity.DrivenScrollActivity.__proto__),
    [_completer]: async.Completer$(dart.void),
    [_controller$0]: animation_controller.AnimationController,
    done: async.Future$(dart.void),
    shouldIgnorePointer: core.bool,
    isScrolling: core.bool,
    velocity: core.double
  }));
  dart.setSetterSignature(scroll_activity.DrivenScrollActivity, () => ({
    __proto__: dart.getSetters(scroll_activity.DrivenScrollActivity.__proto__),
    [_completer]: async.Completer$(dart.void),
    [_controller$0]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(scroll_activity.DrivenScrollActivity, L66);
  dart.setFieldSignature(scroll_activity.DrivenScrollActivity, () => ({
    __proto__: dart.getFields(scroll_activity.DrivenScrollActivity.__proto__),
    [__DrivenScrollActivity__completer]: dart.fieldType(dart.nullable(async.Completer$(dart.void))),
    [__DrivenScrollActivity__completer_isSet]: dart.fieldType(core.bool),
    [__DrivenScrollActivity__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [__DrivenScrollActivity__controller_isSet]: dart.fieldType(core.bool)
  }));
  dart.defineExtensionMethods(scroll_activity.DrivenScrollActivity, ['toString']);
  const _is_PageStorageKey_default = Symbol('_is_PageStorageKey_default');
  page_storage.PageStorageKey$ = dart.generic(T => {
    class PageStorageKey extends key.ValueKey$(T) {}
    (PageStorageKey.new = function(value) {
      PageStorageKey.__proto__.new.call(this, value);
      ;
    }).prototype = PageStorageKey.prototype;
    dart.addTypeTests(PageStorageKey);
    PageStorageKey.prototype[_is_PageStorageKey_default] = true;
    dart.addTypeCaches(PageStorageKey);
    dart.setLibraryUri(PageStorageKey, L68);
    return PageStorageKey;
  });
  page_storage.PageStorageKey = page_storage.PageStorageKey$();
  dart.addTypeTests(page_storage.PageStorageKey, _is_PageStorageKey_default);
  var keys$ = dart.privateName(page_storage, "_StorageEntryIdentifier.keys");
  page_storage._StorageEntryIdentifier = class _StorageEntryIdentifier extends core.Object {
    get keys() {
      return this[keys$];
    }
    set keys(value) {
      super.keys = value;
    }
    get isNotEmpty() {
      return this.keys[$isNotEmpty];
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      return page_storage._StorageEntryIdentifier.is(other) && dart.test(collections.listEquals(page_storage.PageStorageKey, other.keys, this.keys));
    }
    get hashCode() {
      return ui.hashList(this.keys);
    }
    toString() {
      return "StorageEntryIdentifier(" + dart.str(this.keys[$join](":")) + ")";
    }
  };
  (page_storage._StorageEntryIdentifier.new = function(keys) {
    if (keys == null) dart.nullFailed(L69, 27, 38, "keys");
    this[keys$] = keys;
    if (!(keys != null)) dart.assertFailed(null, L69, 28, 14, "keys != null");
    ;
  }).prototype = page_storage._StorageEntryIdentifier.prototype;
  dart.addTypeTests(page_storage._StorageEntryIdentifier);
  dart.addTypeCaches(page_storage._StorageEntryIdentifier);
  dart.setGetterSignature(page_storage._StorageEntryIdentifier, () => ({
    __proto__: dart.getGetters(page_storage._StorageEntryIdentifier.__proto__),
    isNotEmpty: core.bool
  }));
  dart.setLibraryUri(page_storage._StorageEntryIdentifier, L68);
  dart.setFieldSignature(page_storage._StorageEntryIdentifier, () => ({
    __proto__: dart.getFields(page_storage._StorageEntryIdentifier.__proto__),
    keys: dart.finalFieldType(core.List$(page_storage.PageStorageKey))
  }));
  dart.defineExtensionMethods(page_storage._StorageEntryIdentifier, ['_equals', 'toString']);
  dart.defineExtensionAccessors(page_storage._StorageEntryIdentifier, ['hashCode']);
  var _storage = dart.privateName(page_storage, "_storage");
  var _allKeys = dart.privateName(page_storage, "_allKeys");
  var _computeIdentifier = dart.privateName(page_storage, "_computeIdentifier");
  page_storage.PageStorageBucket = class PageStorageBucket extends core.Object {
    static _maybeAddKey(context, keys) {
      if (context == null) dart.nullFailed(L69, 56, 41, "context");
      if (keys == null) dart.nullFailed(L69, 56, 80, "keys");
      let widget = context.widget;
      let key = widget.key;
      if (page_storage.PageStorageKey.is(key)) keys[$add](key);
      return !page_storage.PageStorage.is(widget);
    }
    [_allKeys](context) {
      if (context == null) dart.nullFailed(L69, 64, 55, "context");
      let keys = JSArrayOfPageStorageKey().of([]);
      if (dart.test(page_storage.PageStorageBucket._maybeAddKey(context, keys))) {
        context.visitAncestorElements(dart.fn(element => {
          if (element == null) dart.nullFailed(L69, 67, 46, "element");
          return page_storage.PageStorageBucket._maybeAddKey(element, keys);
        }, ElementTobool()));
      }
      return keys;
    }
    [_computeIdentifier](context) {
      if (context == null) dart.nullFailed(L69, 74, 59, "context");
      return new page_storage._StorageEntryIdentifier.new(this[_allKeys](context));
    }
    writeState(context, data, opts) {
      if (context == null) dart.nullFailed(L69, 88, 32, "context");
      let identifier = opts && 'identifier' in opts ? opts.identifier : null;
      this[_storage] == null ? this[_storage] = new (LinkedMapOfObject$dynamic()).new() : null;
      if (identifier != null) {
        dart.nullCheck(this[_storage])[$_set](identifier, data);
      } else {
        let contextIdentifier = this[_computeIdentifier](context);
        if (dart.test(contextIdentifier.isNotEmpty)) dart.nullCheck(this[_storage])[$_set](contextIdentifier, data);
      }
    }
    readState(context, opts) {
      if (context == null) dart.nullFailed(L69, 107, 34, "context");
      let identifier = opts && 'identifier' in opts ? opts.identifier : null;
      if (this[_storage] == null) return null;
      if (identifier != null) return dart.nullCheck(this[_storage])[$_get](identifier);
      let contextIdentifier = this[_computeIdentifier](context);
      return dart.test(contextIdentifier.isNotEmpty) ? dart.nullCheck(this[_storage])[$_get](contextIdentifier) : null;
    }
  };
  (page_storage.PageStorageBucket.new = function() {
    this[_storage] = null;
    ;
  }).prototype = page_storage.PageStorageBucket.prototype;
  dart.addTypeTests(page_storage.PageStorageBucket);
  dart.addTypeCaches(page_storage.PageStorageBucket);
  dart.setMethodSignature(page_storage.PageStorageBucket, () => ({
    __proto__: dart.getMethods(page_storage.PageStorageBucket.__proto__),
    [_allKeys]: dart.fnType(core.List$(page_storage.PageStorageKey), [framework.BuildContext]),
    [_computeIdentifier]: dart.fnType(page_storage._StorageEntryIdentifier, [framework.BuildContext]),
    writeState: dart.fnType(dart.void, [framework.BuildContext, dart.dynamic], {identifier: dart.nullable(core.Object)}, {}),
    readState: dart.fnType(dart.dynamic, [framework.BuildContext], {identifier: dart.nullable(core.Object)}, {})
  }));
  dart.setLibraryUri(page_storage.PageStorageBucket, L68);
  dart.setFieldSignature(page_storage.PageStorageBucket, () => ({
    __proto__: dart.getFields(page_storage.PageStorageBucket.__proto__),
    [_storage]: dart.fieldType(dart.nullable(core.Map$(core.Object, dart.dynamic)))
  }));
  var child$24 = dart.privateName(page_storage, "PageStorage.child");
  var bucket$0 = dart.privateName(page_storage, "PageStorage.bucket");
  page_storage.PageStorage = class PageStorage extends framework.StatelessWidget {
    get child() {
      return this[child$24];
    }
    set child(value) {
      super.child = value;
    }
    get bucket() {
      return this[bucket$0];
    }
    set bucket(value) {
      super.bucket = value;
    }
    static of(context) {
      let t56;
      if (context == null) dart.nullFailed(L69, 268, 45, "context");
      let widget = context.findAncestorWidgetOfExactType(page_storage.PageStorage);
      t56 = widget;
      return t56 == null ? null : t56.bucket;
    }
    build(context) {
      if (context == null) dart.nullFailed(L69, 274, 29, "context");
      return this.child;
    }
  };
  (page_storage.PageStorage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let bucket = opts && 'bucket' in opts ? opts.bucket : null;
    if (bucket == null) dart.nullFailed(L69, 246, 19, "bucket");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L69, 247, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[bucket$0] = bucket;
    this[child$24] = child;
    if (!(bucket != null)) dart.assertFailed(null, L69, 248, 15, "bucket != null");
    page_storage.PageStorage.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_storage.PageStorage.prototype;
  dart.addTypeTests(page_storage.PageStorage);
  dart.addTypeCaches(page_storage.PageStorage);
  dart.setMethodSignature(page_storage.PageStorage, () => ({
    __proto__: dart.getMethods(page_storage.PageStorage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(page_storage.PageStorage, L68);
  dart.setFieldSignature(page_storage.PageStorage, () => ({
    __proto__: dart.getFields(page_storage.PageStorage.__proto__),
    child: dart.finalFieldType(framework.Widget),
    bucket: dart.finalFieldType(page_storage.PageStorageBucket)
  }));
  var C683;
  scroll_position.ScrollPositionAlignmentPolicy = class ScrollPositionAlignmentPolicy extends core.Object {
    toString() {
      return this[_name$13];
    }
  };
  (scroll_position.ScrollPositionAlignmentPolicy.new = function(index, _name) {
    if (index == null) dart.nullFailed(L63, 25, 6, "index");
    if (_name == null) dart.nullFailed(L63, 25, 6, "_name");
    this.index = index;
    this[_name$13] = _name;
    ;
  }).prototype = scroll_position.ScrollPositionAlignmentPolicy.prototype;
  dart.addTypeTests(scroll_position.ScrollPositionAlignmentPolicy);
  dart.addTypeCaches(scroll_position.ScrollPositionAlignmentPolicy);
  dart.setLibraryUri(scroll_position.ScrollPositionAlignmentPolicy, L64);
  dart.setFieldSignature(scroll_position.ScrollPositionAlignmentPolicy, () => ({
    __proto__: dart.getFields(scroll_position.ScrollPositionAlignmentPolicy.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$13]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(scroll_position.ScrollPositionAlignmentPolicy, ['toString']);
  scroll_position.ScrollPositionAlignmentPolicy.explicit = C679 || CT.C679;
  scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtEnd = C680 || CT.C680;
  scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtStart = C681 || CT.C681;
  scroll_position.ScrollPositionAlignmentPolicy.values = C683 || CT.C683;
  var _depth$ = dart.privateName(scroll_notification, "_depth");
  var _dispatch = dart.privateName(notification_listener, "_dispatch");
  notification_listener.Notification = class Notification extends core.Object {
    visitAncestor(element) {
      if (element == null) dart.nullFailed(L71, 118, 30, "element");
      if (framework.StatelessElement.is(element)) {
        let widget = element.widget;
        if (NotificationListenerOfNotification().is(widget)) {
          if (dart.test(widget[_dispatch](this, element))) return false;
        }
      }
      return true;
    }
    dispatch(target) {
      let t56;
      t56 = target;
      t56 == null ? null : t56.visitAncestorElements(dart.bind(this, 'visitAncestor'));
    }
    toString() {
      let description = JSArrayOfString().of([]);
      this.debugFillDescription(description);
      return dart.str(object.objectRuntimeType(this, "Notification")) + "(" + dart.str(description[$join](", ")) + ")";
    }
    debugFillDescription(description) {
      if (description == null) dart.nullFailed(L71, 159, 42, "description");
    }
  };
  (notification_listener.Notification.new = function() {
    ;
  }).prototype = notification_listener.Notification.prototype;
  dart.addTypeTests(notification_listener.Notification);
  dart.addTypeCaches(notification_listener.Notification);
  dart.setMethodSignature(notification_listener.Notification, () => ({
    __proto__: dart.getMethods(notification_listener.Notification.__proto__),
    visitAncestor: dart.fnType(core.bool, [framework.Element]),
    dispatch: dart.fnType(dart.void, [dart.nullable(framework.BuildContext)]),
    debugFillDescription: dart.fnType(dart.void, [core.List$(core.String)])
  }));
  dart.setLibraryUri(notification_listener.Notification, L72);
  dart.defineExtensionMethods(notification_listener.Notification, ['toString']);
  scroll_notification.ViewportNotificationMixin = class ViewportNotificationMixin extends notification_listener.Notification {};
  scroll_notification.ViewportNotificationMixin[dart.mixinOn] = Notification => class ViewportNotificationMixin extends Notification {
    get depth() {
      return this[_depth$];
    }
    visitAncestor(element) {
      if (element == null) dart.nullFailed(L70, 28, 30, "element");
      if (framework.RenderObjectElement.is(element) && viewport$.RenderAbstractViewport.is(element.renderObject)) this[_depth$] = dart.notNull(this[_depth$]) + 1;
      return super.visitAncestor(element);
    }
    debugFillDescription(description) {
      if (description == null) dart.nullFailed(L70, 35, 42, "description");
      super.debugFillDescription(description);
      description[$add]("depth: " + dart.str(this.depth) + " (" + (this.depth === 0 ? "local" : "remote") + ")");
    }
  };
  (scroll_notification.ViewportNotificationMixin[dart.mixinNew] = function() {
    this[_depth$] = 0;
  }).prototype = scroll_notification.ViewportNotificationMixin.prototype;
  dart.addTypeTests(scroll_notification.ViewportNotificationMixin);
  dart.addTypeCaches(scroll_notification.ViewportNotificationMixin);
  scroll_notification.ViewportNotificationMixin[dart.implements] = () => [notification_listener.Notification];
  dart.setGetterSignature(scroll_notification.ViewportNotificationMixin, () => ({
    __proto__: dart.getGetters(scroll_notification.ViewportNotificationMixin.__proto__),
    depth: core.int
  }));
  dart.setLibraryUri(scroll_notification.ViewportNotificationMixin, L73);
  dart.setFieldSignature(scroll_notification.ViewportNotificationMixin, () => ({
    __proto__: dart.getFields(scroll_notification.ViewportNotificationMixin.__proto__),
    [_depth$]: dart.fieldType(core.int)
  }));
  notification_listener.LayoutChangedNotification = class LayoutChangedNotification extends notification_listener.Notification {};
  (notification_listener.LayoutChangedNotification.new = function() {
    notification_listener.LayoutChangedNotification.__proto__.new.call(this);
    ;
  }).prototype = notification_listener.LayoutChangedNotification.prototype;
  dart.addTypeTests(notification_listener.LayoutChangedNotification);
  dart.addTypeCaches(notification_listener.LayoutChangedNotification);
  dart.setLibraryUri(notification_listener.LayoutChangedNotification, L72);
  var metrics$ = dart.privateName(scroll_notification, "ScrollNotification.metrics");
  var context$1 = dart.privateName(scroll_notification, "ScrollNotification.context");
  const LayoutChangedNotification_ViewportNotificationMixin$36 = class LayoutChangedNotification_ViewportNotificationMixin extends notification_listener.LayoutChangedNotification {};
  (LayoutChangedNotification_ViewportNotificationMixin$36.new = function() {
    scroll_notification.ViewportNotificationMixin[dart.mixinNew].call(this);
    LayoutChangedNotification_ViewportNotificationMixin$36.__proto__.new.call(this);
  }).prototype = LayoutChangedNotification_ViewportNotificationMixin$36.prototype;
  dart.applyMixin(LayoutChangedNotification_ViewportNotificationMixin$36, scroll_notification.ViewportNotificationMixin);
  scroll_notification.ScrollNotification = class ScrollNotification extends LayoutChangedNotification_ViewportNotificationMixin$36 {
    get metrics() {
      return this[metrics$];
    }
    set metrics(value) {
      super.metrics = value;
    }
    get context() {
      return this[context$1];
    }
    set context(value) {
      super.context = value;
    }
    debugFillDescription(description) {
      if (description == null) dart.nullFailed(L70, 97, 42, "description");
      super.debugFillDescription(description);
      description[$add](dart.str(this.metrics));
    }
  };
  (scroll_notification.ScrollNotification.new = function(opts) {
    let metrics = opts && 'metrics' in opts ? opts.metrics : null;
    if (metrics == null) dart.nullFailed(L70, 82, 19, "metrics");
    let context = opts && 'context' in opts ? opts.context : null;
    this[metrics$] = metrics;
    this[context$1] = context;
    scroll_notification.ScrollNotification.__proto__.new.call(this);
    ;
  }).prototype = scroll_notification.ScrollNotification.prototype;
  dart.addTypeTests(scroll_notification.ScrollNotification);
  dart.addTypeCaches(scroll_notification.ScrollNotification);
  dart.setLibraryUri(scroll_notification.ScrollNotification, L73);
  dart.setFieldSignature(scroll_notification.ScrollNotification, () => ({
    __proto__: dart.getFields(scroll_notification.ScrollNotification.__proto__),
    metrics: dart.finalFieldType(scroll_metrics.ScrollMetrics),
    context: dart.finalFieldType(dart.nullable(framework.BuildContext))
  }));
  var dragDetails$ = dart.privateName(scroll_notification, "ScrollStartNotification.dragDetails");
  scroll_notification.ScrollStartNotification = class ScrollStartNotification extends scroll_notification.ScrollNotification {
    get dragDetails() {
      return this[dragDetails$];
    }
    set dragDetails(value) {
      super.dragDetails = value;
    }
    debugFillDescription(description) {
      if (description == null) dart.nullFailed(L70, 124, 42, "description");
      super.debugFillDescription(description);
      if (this.dragDetails != null) description[$add](dart.str(this.dragDetails));
    }
  };
  (scroll_notification.ScrollStartNotification.new = function(opts) {
    let metrics = opts && 'metrics' in opts ? opts.metrics : null;
    if (metrics == null) dart.nullFailed(L70, 112, 28, "metrics");
    let context = opts && 'context' in opts ? opts.context : null;
    let dragDetails = opts && 'dragDetails' in opts ? opts.dragDetails : null;
    this[dragDetails$] = dragDetails;
    scroll_notification.ScrollStartNotification.__proto__.new.call(this, {metrics: metrics, context: context});
    ;
  }).prototype = scroll_notification.ScrollStartNotification.prototype;
  dart.addTypeTests(scroll_notification.ScrollStartNotification);
  dart.addTypeCaches(scroll_notification.ScrollStartNotification);
  dart.setLibraryUri(scroll_notification.ScrollStartNotification, L73);
  dart.setFieldSignature(scroll_notification.ScrollStartNotification, () => ({
    __proto__: dart.getFields(scroll_notification.ScrollStartNotification.__proto__),
    dragDetails: dart.finalFieldType(dart.nullable(drag_details.DragStartDetails))
  }));
  var dragDetails$0 = dart.privateName(scroll_notification, "ScrollUpdateNotification.dragDetails");
  var scrollDelta$ = dart.privateName(scroll_notification, "ScrollUpdateNotification.scrollDelta");
  scroll_notification.ScrollUpdateNotification = class ScrollUpdateNotification extends scroll_notification.ScrollNotification {
    get dragDetails() {
      return this[dragDetails$0];
    }
    set dragDetails(value) {
      super.dragDetails = value;
    }
    get scrollDelta() {
      return this[scrollDelta$];
    }
    set scrollDelta(value) {
      super.scrollDelta = value;
    }
    debugFillDescription(description) {
      if (description == null) dart.nullFailed(L70, 159, 42, "description");
      super.debugFillDescription(description);
      description[$add]("scrollDelta: " + dart.str(this.scrollDelta));
      if (this.dragDetails != null) description[$add](dart.str(this.dragDetails));
    }
  };
  (scroll_notification.ScrollUpdateNotification.new = function(opts) {
    let metrics = opts && 'metrics' in opts ? opts.metrics : null;
    if (metrics == null) dart.nullFailed(L70, 143, 28, "metrics");
    let context = opts && 'context' in opts ? opts.context : null;
    if (context == null) dart.nullFailed(L70, 144, 27, "context");
    let dragDetails = opts && 'dragDetails' in opts ? opts.dragDetails : null;
    let scrollDelta = opts && 'scrollDelta' in opts ? opts.scrollDelta : null;
    this[dragDetails$0] = dragDetails;
    this[scrollDelta$] = scrollDelta;
    scroll_notification.ScrollUpdateNotification.__proto__.new.call(this, {metrics: metrics, context: context});
    ;
  }).prototype = scroll_notification.ScrollUpdateNotification.prototype;
  dart.addTypeTests(scroll_notification.ScrollUpdateNotification);
  dart.addTypeCaches(scroll_notification.ScrollUpdateNotification);
  dart.setLibraryUri(scroll_notification.ScrollUpdateNotification, L73);
  dart.setFieldSignature(scroll_notification.ScrollUpdateNotification, () => ({
    __proto__: dart.getFields(scroll_notification.ScrollUpdateNotification.__proto__),
    dragDetails: dart.finalFieldType(dart.nullable(drag_details.DragUpdateDetails)),
    scrollDelta: dart.finalFieldType(dart.nullable(core.double))
  }));
  var dragDetails$1 = dart.privateName(scroll_notification, "OverscrollNotification.dragDetails");
  var overscroll$ = dart.privateName(scroll_notification, "OverscrollNotification.overscroll");
  var velocity$ = dart.privateName(scroll_notification, "OverscrollNotification.velocity");
  scroll_notification.OverscrollNotification = class OverscrollNotification extends scroll_notification.ScrollNotification {
    get dragDetails() {
      return this[dragDetails$1];
    }
    set dragDetails(value) {
      super.dragDetails = value;
    }
    get overscroll() {
      return this[overscroll$];
    }
    set overscroll(value) {
      super.overscroll = value;
    }
    get velocity() {
      return this[velocity$];
    }
    set velocity(value) {
      super.velocity = value;
    }
    debugFillDescription(description) {
      if (description == null) dart.nullFailed(L70, 212, 42, "description");
      super.debugFillDescription(description);
      description[$add]("overscroll: " + this.overscroll[$toStringAsFixed](1));
      description[$add]("velocity: " + this.velocity[$toStringAsFixed](1));
      if (this.dragDetails != null) description[$add](dart.str(this.dragDetails));
    }
  };
  (scroll_notification.OverscrollNotification.new = function(opts) {
    let metrics = opts && 'metrics' in opts ? opts.metrics : null;
    if (metrics == null) dart.nullFailed(L70, 180, 28, "metrics");
    let context = opts && 'context' in opts ? opts.context : null;
    if (context == null) dart.nullFailed(L70, 181, 27, "context");
    let dragDetails = opts && 'dragDetails' in opts ? opts.dragDetails : null;
    let overscroll = opts && 'overscroll' in opts ? opts.overscroll : null;
    if (overscroll == null) dart.nullFailed(L70, 183, 19, "overscroll");
    let velocity = opts && 'velocity' in opts ? opts.velocity : 0;
    if (velocity == null) dart.nullFailed(L70, 184, 10, "velocity");
    this[dragDetails$1] = dragDetails;
    this[overscroll$] = overscroll;
    this[velocity$] = velocity;
    if (!(overscroll != null)) dart.assertFailed(null, L70, 185, 15, "overscroll != null");
    if (!overscroll[$isFinite]) dart.assertFailed(null, L70, 186, 15, "overscroll.isFinite");
    if (!(overscroll !== 0.0)) dart.assertFailed(null, L70, 187, 15, "overscroll != 0.0");
    if (!(velocity != null)) dart.assertFailed(null, L70, 188, 15, "velocity != null");
    scroll_notification.OverscrollNotification.__proto__.new.call(this, {metrics: metrics, context: context});
    ;
  }).prototype = scroll_notification.OverscrollNotification.prototype;
  dart.addTypeTests(scroll_notification.OverscrollNotification);
  dart.addTypeCaches(scroll_notification.OverscrollNotification);
  dart.setLibraryUri(scroll_notification.OverscrollNotification, L73);
  dart.setFieldSignature(scroll_notification.OverscrollNotification, () => ({
    __proto__: dart.getFields(scroll_notification.OverscrollNotification.__proto__),
    dragDetails: dart.finalFieldType(dart.nullable(drag_details.DragUpdateDetails)),
    overscroll: dart.finalFieldType(core.double),
    velocity: dart.finalFieldType(core.double)
  }));
  var dragDetails$2 = dart.privateName(scroll_notification, "ScrollEndNotification.dragDetails");
  scroll_notification.ScrollEndNotification = class ScrollEndNotification extends scroll_notification.ScrollNotification {
    get dragDetails() {
      return this[dragDetails$2];
    }
    set dragDetails(value) {
      super.dragDetails = value;
    }
    debugFillDescription(description) {
      if (description == null) dart.nullFailed(L70, 249, 42, "description");
      super.debugFillDescription(description);
      if (this.dragDetails != null) description[$add](dart.str(this.dragDetails));
    }
  };
  (scroll_notification.ScrollEndNotification.new = function(opts) {
    let metrics = opts && 'metrics' in opts ? opts.metrics : null;
    if (metrics == null) dart.nullFailed(L70, 230, 28, "metrics");
    let context = opts && 'context' in opts ? opts.context : null;
    if (context == null) dart.nullFailed(L70, 231, 27, "context");
    let dragDetails = opts && 'dragDetails' in opts ? opts.dragDetails : null;
    this[dragDetails$2] = dragDetails;
    scroll_notification.ScrollEndNotification.__proto__.new.call(this, {metrics: metrics, context: context});
    ;
  }).prototype = scroll_notification.ScrollEndNotification.prototype;
  dart.addTypeTests(scroll_notification.ScrollEndNotification);
  dart.addTypeCaches(scroll_notification.ScrollEndNotification);
  dart.setLibraryUri(scroll_notification.ScrollEndNotification, L73);
  dart.setFieldSignature(scroll_notification.ScrollEndNotification, () => ({
    __proto__: dart.getFields(scroll_notification.ScrollEndNotification.__proto__),
    dragDetails: dart.finalFieldType(dart.nullable(drag_details.DragEndDetails))
  }));
  var direction$ = dart.privateName(scroll_notification, "UserScrollNotification.direction");
  scroll_notification.UserScrollNotification = class UserScrollNotification extends scroll_notification.ScrollNotification {
    get direction() {
      return this[direction$];
    }
    set direction(value) {
      super.direction = value;
    }
    debugFillDescription(description) {
      if (description == null) dart.nullFailed(L70, 275, 42, "description");
      super.debugFillDescription(description);
      description[$add]("direction: " + dart.str(this.direction));
    }
  };
  (scroll_notification.UserScrollNotification.new = function(opts) {
    let metrics = opts && 'metrics' in opts ? opts.metrics : null;
    if (metrics == null) dart.nullFailed(L70, 266, 28, "metrics");
    let context = opts && 'context' in opts ? opts.context : null;
    if (context == null) dart.nullFailed(L70, 267, 27, "context");
    let direction = opts && 'direction' in opts ? opts.direction : null;
    if (direction == null) dart.nullFailed(L70, 268, 19, "direction");
    this[direction$] = direction;
    scroll_notification.UserScrollNotification.__proto__.new.call(this, {metrics: metrics, context: context});
    ;
  }).prototype = scroll_notification.UserScrollNotification.prototype;
  dart.addTypeTests(scroll_notification.UserScrollNotification);
  dart.addTypeCaches(scroll_notification.UserScrollNotification);
  dart.setLibraryUri(scroll_notification.UserScrollNotification, L73);
  dart.setFieldSignature(scroll_notification.UserScrollNotification, () => ({
    __proto__: dart.getFields(scroll_notification.UserScrollNotification.__proto__),
    direction: dart.finalFieldType(viewport_offset.ScrollDirection)
  }));
  scroll_notification.defaultScrollNotificationPredicate = function defaultScrollNotificationPredicate(notification) {
    if (notification == null) dart.nullFailed(L70, 288, 60, "notification");
    return notification.depth === 0;
  };
  var C684;
  var showLeading$ = dart.privateName(overscroll_indicator, "GlowingOverscrollIndicator.showLeading");
  var showTrailing$ = dart.privateName(overscroll_indicator, "GlowingOverscrollIndicator.showTrailing");
  var axisDirection$1 = dart.privateName(overscroll_indicator, "GlowingOverscrollIndicator.axisDirection");
  var color$1 = dart.privateName(overscroll_indicator, "GlowingOverscrollIndicator.color");
  var notificationPredicate$ = dart.privateName(overscroll_indicator, "GlowingOverscrollIndicator.notificationPredicate");
  var child$25 = dart.privateName(overscroll_indicator, "GlowingOverscrollIndicator.child");
  overscroll_indicator.GlowingOverscrollIndicator = class GlowingOverscrollIndicator extends framework.StatefulWidget {
    get showLeading() {
      return this[showLeading$];
    }
    set showLeading(value) {
      super.showLeading = value;
    }
    get showTrailing() {
      return this[showTrailing$];
    }
    set showTrailing(value) {
      super.showTrailing = value;
    }
    get axisDirection() {
      return this[axisDirection$1];
    }
    set axisDirection(value) {
      super.axisDirection = value;
    }
    get color() {
      return this[color$1];
    }
    set color(value) {
      super.color = value;
    }
    get notificationPredicate() {
      return this[notificationPredicate$];
    }
    set notificationPredicate(value) {
      super.notificationPredicate = value;
    }
    get child() {
      return this[child$25];
    }
    set child(value) {
      super.child = value;
    }
    get axis() {
      return basic_types.axisDirectionToAxis(this.axisDirection);
    }
    createState() {
      return new overscroll_indicator._GlowingOverscrollIndicatorState.new();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L74, 200, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfAxisDirection()).new("axisDirection", this.axisDirection));
      let showDescription = null;
      if (dart.test(this.showLeading) && dart.test(this.showTrailing)) {
        showDescription = "both sides";
      } else if (dart.test(this.showLeading)) {
        showDescription = "leading side only";
      } else if (dart.test(this.showTrailing)) {
        showDescription = "trailing side only";
      } else {
        showDescription = "neither side (!)";
      }
      properties.add(new diagnostics$.MessageProperty.new("show", showDescription));
      properties.add(new colors.ColorProperty.new("color", this.color, {showName: false}));
    }
  };
  (overscroll_indicator.GlowingOverscrollIndicator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let showLeading = opts && 'showLeading' in opts ? opts.showLeading : true;
    if (showLeading == null) dart.nullFailed(L74, 133, 10, "showLeading");
    let showTrailing = opts && 'showTrailing' in opts ? opts.showTrailing : true;
    if (showTrailing == null) dart.nullFailed(L74, 134, 10, "showTrailing");
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
    if (axisDirection == null) dart.nullFailed(L74, 135, 19, "axisDirection");
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(L74, 136, 19, "color");
    let notificationPredicate = opts && 'notificationPredicate' in opts ? opts.notificationPredicate : C684 || CT.C684;
    if (notificationPredicate == null) dart.nullFailed(L74, 137, 10, "notificationPredicate");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[showLeading$] = showLeading;
    this[showTrailing$] = showTrailing;
    this[axisDirection$1] = axisDirection;
    this[color$1] = color;
    this[notificationPredicate$] = notificationPredicate;
    this[child$25] = child;
    if (!(showLeading != null)) dart.assertFailed(null, L74, 139, 15, "showLeading != null");
    if (!(showTrailing != null)) dart.assertFailed(null, L74, 140, 15, "showTrailing != null");
    if (!(axisDirection != null)) dart.assertFailed(null, L74, 141, 15, "axisDirection != null");
    if (!(color != null)) dart.assertFailed(null, L74, 142, 15, "color != null");
    if (!(notificationPredicate != null)) dart.assertFailed(null, L74, 143, 15, "notificationPredicate != null");
    overscroll_indicator.GlowingOverscrollIndicator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = overscroll_indicator.GlowingOverscrollIndicator.prototype;
  dart.addTypeTests(overscroll_indicator.GlowingOverscrollIndicator);
  dart.addTypeCaches(overscroll_indicator.GlowingOverscrollIndicator);
  dart.setMethodSignature(overscroll_indicator.GlowingOverscrollIndicator, () => ({
    __proto__: dart.getMethods(overscroll_indicator.GlowingOverscrollIndicator.__proto__),
    createState: dart.fnType(overscroll_indicator._GlowingOverscrollIndicatorState, [])
  }));
  dart.setGetterSignature(overscroll_indicator.GlowingOverscrollIndicator, () => ({
    __proto__: dart.getGetters(overscroll_indicator.GlowingOverscrollIndicator.__proto__),
    axis: basic_types.Axis
  }));
  dart.setLibraryUri(overscroll_indicator.GlowingOverscrollIndicator, L75);
  dart.setFieldSignature(overscroll_indicator.GlowingOverscrollIndicator, () => ({
    __proto__: dart.getFields(overscroll_indicator.GlowingOverscrollIndicator.__proto__),
    showLeading: dart.finalFieldType(core.bool),
    showTrailing: dart.finalFieldType(core.bool),
    axisDirection: dart.finalFieldType(basic_types.AxisDirection),
    color: dart.finalFieldType(ui.Color),
    notificationPredicate: dart.finalFieldType(dart.fnType(core.bool, [scroll_notification.ScrollNotification])),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  var _leadingController = dart.privateName(overscroll_indicator, "_leadingController");
  var _trailingController = dart.privateName(overscroll_indicator, "_trailingController");
  var _leadingAndTrailingListener = dart.privateName(overscroll_indicator, "_leadingAndTrailingListener");
  var _lastNotificationType = dart.privateName(overscroll_indicator, "_lastNotificationType");
  var _accepted = dart.privateName(overscroll_indicator, "_accepted");
  var _paintOffsetScrollPixels = dart.privateName(overscroll_indicator, "_paintOffsetScrollPixels");
  var _paintOffset = dart.privateName(overscroll_indicator, "_paintOffset");
  var C685;
  var _handleScrollNotification = dart.privateName(overscroll_indicator, "_handleScrollNotification");
  var C688;
  var C687;
  var C686;
  var C691;
  var C692;
  var C690;
  var C689;
  var C695;
  var C694;
  var C693;
  var C698;
  var C699;
  var C697;
  var C696;
  const State_TickerProviderStateMixin$36$0 = class State_TickerProviderStateMixin extends framework.State$(overscroll_indicator.GlowingOverscrollIndicator) {};
  (State_TickerProviderStateMixin$36$0.new = function() {
    ticker_provider.TickerProviderStateMixin$(overscroll_indicator.GlowingOverscrollIndicator)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$0.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$0.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$0, ticker_provider.TickerProviderStateMixin$(overscroll_indicator.GlowingOverscrollIndicator));
  overscroll_indicator._GlowingOverscrollIndicatorState = class _GlowingOverscrollIndicatorState extends State_TickerProviderStateMixin$36$0 {
    initState() {
      super.initState();
      this[_leadingController] = new overscroll_indicator._GlowController.new({vsync: this, color: this.widget.color, axis: this.widget.axis});
      this[_trailingController] = new overscroll_indicator._GlowController.new({vsync: this, color: this.widget.color, axis: this.widget.axis});
      this[_leadingAndTrailingListener] = new change_notifier._MergingListenable.new(JSArrayOfListenable().of([dart.nullCheck(this[_leadingController]), dart.nullCheck(this[_trailingController])]));
    }
    didUpdateWidget(oldWidget) {
      overscroll_indicator.GlowingOverscrollIndicator.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L74, 232, 51, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(oldWidget.color, this.widget.color) || !dart.equals(oldWidget.axis, this.widget.axis)) {
        dart.nullCheck(this[_leadingController]).color = this.widget.color;
        dart.nullCheck(this[_leadingController]).axis = this.widget.axis;
        dart.nullCheck(this[_trailingController]).color = this.widget.color;
        dart.nullCheck(this[_trailingController]).axis = this.widget.axis;
      }
    }
    [_handleScrollNotification](notification) {
      let t57, t56;
      if (notification == null) dart.nullFailed(L74, 245, 53, "notification");
      if (!dart.test((t56 = this.widget, t57 = notification, t56.notificationPredicate(t57)))) return false;
      dart.nullCheck(this[_leadingController])[_paintOffsetScrollPixels] = -math.min(core.double, dart.notNull(notification.metrics.pixels) - dart.notNull(notification.metrics.minScrollExtent), dart.nullCheck(this[_leadingController])[_paintOffset]);
      dart.nullCheck(this[_trailingController])[_paintOffsetScrollPixels] = -math.min(core.double, dart.notNull(notification.metrics.maxScrollExtent) - dart.notNull(notification.metrics.pixels), dart.nullCheck(this[_trailingController])[_paintOffset]);
      if (scroll_notification.OverscrollNotification.is(notification)) {
        let controller = null;
        if (dart.notNull(notification.overscroll) < 0.0) {
          controller = this[_leadingController];
        } else if (dart.notNull(notification.overscroll) > 0.0) {
          controller = this[_trailingController];
        } else {
          if (!false) dart.assertFailed(null, L74, 271, 16, "false");
        }
        let isLeading = dart.equals(controller, this[_leadingController]);
        if (!dart.equals(this[_lastNotificationType], dart.wrapType(scroll_notification.OverscrollNotification))) {
          let confirmationNotification = new overscroll_indicator.OverscrollIndicatorNotification.new({leading: isLeading});
          confirmationNotification.dispatch(this.context);
          this[_accepted][$_set](isLeading, confirmationNotification[_accepted]);
          if (dart.nullCheck(this[_accepted][$_get](isLeading))) {
            dart.nullCheck(controller)[_paintOffset] = confirmationNotification.paintOffset;
          }
        }
        if (!(controller != null)) dart.assertFailed(null, L74, 282, 14, "controller != null");
        if (!dart.equals(notification.metrics.axis, this.widget.axis)) dart.assertFailed(null, L74, 283, 14, "notification.metrics.axis == widget.axis");
        if (dart.nullCheck(this[_accepted][$_get](isLeading))) {
          if (notification.velocity !== 0.0) {
            if (!(notification.dragDetails == null)) dart.assertFailed(null, L74, 286, 18, "notification.dragDetails == null");
            dart.nullCheck(controller).absorbImpact(notification.velocity[$abs]());
          } else {
            if (!(notification.overscroll !== 0.0)) dart.assertFailed(null, L74, 289, 18, "notification.overscroll != 0.0");
            if (notification.dragDetails != null) {
              if (!(dart.nullCheck(notification.dragDetails).globalPosition != null)) dart.assertFailed(null, L74, 291, 20, "notification.dragDetails!.globalPosition != null");
              let renderer = box$.RenderBox.as(dart.nullCheck(dart.nullCheck(notification.context).findRenderObject()));
              if (!(renderer !== null)) dart.assertFailed(null, L74, 293, 20, "renderer != null");
              if (!dart.test(renderer.hasSize)) dart.assertFailed(null, L74, 294, 20, "renderer.hasSize");
              let size = renderer.size;
              let position = renderer.globalToLocal(dart.nullCheck(notification.dragDetails).globalPosition);
              switch (notification.metrics.axis) {
                case C685 || CT.C685:
                {
                  dart.nullCheck(controller).pull(notification.overscroll[$abs](), size.width, position.dy[$clamp](0.0, size.height), size.height);
                  break;
                }
                case C424 || CT.C424:
                {
                  dart.nullCheck(controller).pull(notification.overscroll[$abs](), size.height, position.dx[$clamp](0.0, size.width), size.width);
                  break;
                }
                default:
                {
                  dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
                }
              }
            }
          }
        }
      } else if (scroll_notification.ScrollEndNotification.is(notification) || scroll_notification.ScrollUpdateNotification.is(notification)) {
        if (dart.dload(notification, 'dragDetails') != null) {
          dart.nullCheck(this[_leadingController]).scrollEnd();
          dart.nullCheck(this[_trailingController]).scrollEnd();
        }
      }
      this[_lastNotificationType] = dart.runtimeType(notification);
      return false;
    }
    dispose() {
      dart.nullCheck(this[_leadingController]).dispose();
      dart.nullCheck(this[_trailingController]).dispose();
      super.dispose();
    }
    build(context) {
      if (context == null) dart.nullFailed(L74, 326, 29, "context");
      return new (NotificationListenerOfScrollNotification()).new({onNotification: dart.bind(this, _handleScrollNotification), child: new basic.RepaintBoundary.new({child: new basic.CustomPaint.new({foregroundPainter: new overscroll_indicator._GlowingOverscrollIndicatorPainter.new({leadingController: dart.test(this.widget.showLeading) ? this[_leadingController] : null, trailingController: dart.test(this.widget.showTrailing) ? this[_trailingController] : null, axisDirection: this.widget.axisDirection, repaint: this[_leadingAndTrailingListener]}), child: new basic.RepaintBoundary.new({child: this.widget.child, $creationLocationd_0dea112b090073317d4: C686 || CT.C686}), $creationLocationd_0dea112b090073317d4: C689 || CT.C689}), $creationLocationd_0dea112b090073317d4: C693 || CT.C693}), $creationLocationd_0dea112b090073317d4: C696 || CT.C696});
    }
  };
  (overscroll_indicator._GlowingOverscrollIndicatorState.new = function() {
    this[_leadingController] = null;
    this[_trailingController] = null;
    this[_leadingAndTrailingListener] = null;
    this[_lastNotificationType] = null;
    this[_accepted] = new (IdentityMapOfbool$bool()).from([false, true, true, true]);
    overscroll_indicator._GlowingOverscrollIndicatorState.__proto__.new.call(this);
    ;
  }).prototype = overscroll_indicator._GlowingOverscrollIndicatorState.prototype;
  dart.addTypeTests(overscroll_indicator._GlowingOverscrollIndicatorState);
  dart.addTypeCaches(overscroll_indicator._GlowingOverscrollIndicatorState);
  dart.setMethodSignature(overscroll_indicator._GlowingOverscrollIndicatorState, () => ({
    __proto__: dart.getMethods(overscroll_indicator._GlowingOverscrollIndicatorState.__proto__),
    [_handleScrollNotification]: dart.fnType(core.bool, [scroll_notification.ScrollNotification]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(overscroll_indicator._GlowingOverscrollIndicatorState, L75);
  dart.setFieldSignature(overscroll_indicator._GlowingOverscrollIndicatorState, () => ({
    __proto__: dart.getFields(overscroll_indicator._GlowingOverscrollIndicatorState.__proto__),
    [_leadingController]: dart.fieldType(dart.nullable(overscroll_indicator._GlowController)),
    [_trailingController]: dart.fieldType(dart.nullable(overscroll_indicator._GlowController)),
    [_leadingAndTrailingListener]: dart.fieldType(dart.nullable(change_notifier.Listenable)),
    [_lastNotificationType]: dart.fieldType(dart.nullable(core.Type)),
    [_accepted]: dart.finalFieldType(core.Map$(core.bool, core.bool))
  }));
  var _name$14 = dart.privateName(overscroll_indicator, "_name");
  var C700;
  var C701;
  var C702;
  var C703;
  var C704;
  overscroll_indicator._GlowState = class _GlowState extends core.Object {
    toString() {
      return this[_name$14];
    }
  };
  (overscroll_indicator._GlowState.new = function(index, _name) {
    if (index == null) dart.nullFailed(L74, 350, 6, "index");
    if (_name == null) dart.nullFailed(L74, 350, 6, "_name");
    this.index = index;
    this[_name$14] = _name;
    ;
  }).prototype = overscroll_indicator._GlowState.prototype;
  dart.addTypeTests(overscroll_indicator._GlowState);
  dart.addTypeCaches(overscroll_indicator._GlowState);
  dart.setLibraryUri(overscroll_indicator._GlowState, L75);
  dart.setFieldSignature(overscroll_indicator._GlowState, () => ({
    __proto__: dart.getFields(overscroll_indicator._GlowState.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$14]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(overscroll_indicator._GlowState, ['toString']);
  overscroll_indicator._GlowState.idle = C700 || CT.C700;
  overscroll_indicator._GlowState.absorb = C701 || CT.C701;
  overscroll_indicator._GlowState.pull = C702 || CT.C702;
  overscroll_indicator._GlowState.recede = C703 || CT.C703;
  overscroll_indicator._GlowState.values = C704 || CT.C704;
  var _state = dart.privateName(overscroll_indicator, "_state");
  var ___GlowController__glowController = dart.privateName(overscroll_indicator, "_#_GlowController#_glowController");
  var ___GlowController__glowController_isSet = dart.privateName(overscroll_indicator, "_#_GlowController#_glowController#isSet");
  var _pullRecedeTimer = dart.privateName(overscroll_indicator, "_pullRecedeTimer");
  var _glowOpacityTween = dart.privateName(overscroll_indicator, "_glowOpacityTween");
  var ___GlowController__glowOpacity = dart.privateName(overscroll_indicator, "_#_GlowController#_glowOpacity");
  var ___GlowController__glowOpacity_isSet = dart.privateName(overscroll_indicator, "_#_GlowController#_glowOpacity#isSet");
  var _glowSizeTween = dart.privateName(overscroll_indicator, "_glowSizeTween");
  var ___GlowController__glowSize = dart.privateName(overscroll_indicator, "_#_GlowController#_glowSize");
  var ___GlowController__glowSize_isSet = dart.privateName(overscroll_indicator, "_#_GlowController#_glowSize#isSet");
  var ___GlowController__displacementTicker = dart.privateName(overscroll_indicator, "_#_GlowController#_displacementTicker");
  var ___GlowController__displacementTicker_isSet = dart.privateName(overscroll_indicator, "_#_GlowController#_displacementTicker#isSet");
  var _displacementTickerLastElapsed = dart.privateName(overscroll_indicator, "_displacementTickerLastElapsed");
  var _displacementTarget = dart.privateName(overscroll_indicator, "_displacementTarget");
  var _displacement = dart.privateName(overscroll_indicator, "_displacement");
  var _pullDistance = dart.privateName(overscroll_indicator, "_pullDistance");
  var _color = dart.privateName(overscroll_indicator, "_color");
  var _axis = dart.privateName(overscroll_indicator, "_axis");
  var _glowController = dart.privateName(overscroll_indicator, "_glowController");
  var _changePhase = dart.privateName(overscroll_indicator, "_changePhase");
  var _glowOpacity = dart.privateName(overscroll_indicator, "_glowOpacity");
  var _glowSize = dart.privateName(overscroll_indicator, "_glowSize");
  var _displacementTicker = dart.privateName(overscroll_indicator, "_displacementTicker");
  var _tickDisplacement = dart.privateName(overscroll_indicator, "_tickDisplacement");
  var _recede = dart.privateName(overscroll_indicator, "_recede");
  var C705;
  var C706;
  var C707;
  overscroll_indicator._GlowController = class _GlowController extends change_notifier.ChangeNotifier {
    get [_glowController]() {
      let t56;
      return dart.test(this[___GlowController__glowController_isSet]) ? (t56 = this[___GlowController__glowController], t56) : dart.throw(new _internal.LateError.fieldNI("_glowController"));
    }
    set [_glowController](t56) {
      if (t56 == null) dart.nullFailed(L74, 375, 34, "null");
      if (dart.test(this[___GlowController__glowController_isSet]))
        dart.throw(new _internal.LateError.fieldAI("_glowController"));
      else {
        this[___GlowController__glowController_isSet] = true;
        this[___GlowController__glowController] = t56;
      }
    }
    get [_glowOpacity]() {
      let t57;
      return dart.test(this[___GlowController__glowOpacity_isSet]) ? (t57 = this[___GlowController__glowOpacity], t57) : dart.throw(new _internal.LateError.fieldNI("_glowOpacity"));
    }
    set [_glowOpacity](t57) {
      if (t57 == null) dart.nullFailed(L74, 382, 32, "null");
      if (dart.test(this[___GlowController__glowOpacity_isSet]))
        dart.throw(new _internal.LateError.fieldAI("_glowOpacity"));
      else {
        this[___GlowController__glowOpacity_isSet] = true;
        this[___GlowController__glowOpacity] = t57;
      }
    }
    get [_glowSize]() {
      let t58;
      return dart.test(this[___GlowController__glowSize_isSet]) ? (t58 = this[___GlowController__glowSize], t58) : dart.throw(new _internal.LateError.fieldNI("_glowSize"));
    }
    set [_glowSize](t58) {
      if (t58 == null) dart.nullFailed(L74, 384, 32, "null");
      if (dart.test(this[___GlowController__glowSize_isSet]))
        dart.throw(new _internal.LateError.fieldAI("_glowSize"));
      else {
        this[___GlowController__glowSize_isSet] = true;
        this[___GlowController__glowSize] = t58;
      }
    }
    get [_displacementTicker]() {
      let t59;
      return dart.test(this[___GlowController__displacementTicker_isSet]) ? (t59 = this[___GlowController__displacementTicker], t59) : dart.throw(new _internal.LateError.fieldNI("_displacementTicker"));
    }
    set [_displacementTicker](t59) {
      if (t59 == null) dart.nullFailed(L74, 387, 21, "null");
      if (dart.test(this[___GlowController__displacementTicker_isSet]))
        dart.throw(new _internal.LateError.fieldAI("_displacementTicker"));
      else {
        this[___GlowController__displacementTicker_isSet] = true;
        this[___GlowController__displacementTicker] = t59;
      }
    }
    get color() {
      return this[_color];
    }
    set color(value) {
      if (value == null) dart.nullFailed(L74, 397, 19, "value");
      if (!(this.color != null)) dart.assertFailed(null, L74, 398, 12, "color != null");
      if (dart.equals(this.color, value)) return;
      this[_color] = value;
      this.notifyListeners();
    }
    get axis() {
      return this[_axis];
    }
    set axis(value) {
      if (value == null) dart.nullFailed(L74, 407, 17, "value");
      if (!(this.axis != null)) dart.assertFailed(null, L74, 408, 12, "axis != null");
      if (dart.equals(this.axis, value)) return;
      this[_axis] = value;
      this.notifyListeners();
    }
    dispose() {
      let t60;
      this[_glowController].dispose();
      this[_displacementTicker].dispose();
      t60 = this[_pullRecedeTimer];
      t60 == null ? null : t60.cancel();
      super.dispose();
    }
    absorbImpact(velocity) {
      let t60;
      if (velocity == null) dart.nullFailed(L74, 442, 28, "velocity");
      if (!(dart.notNull(velocity) >= 0.0)) dart.assertFailed(null, L74, 443, 12, "velocity >= 0.0");
      t60 = this[_pullRecedeTimer];
      t60 == null ? null : t60.cancel();
      this[_pullRecedeTimer] = null;
      velocity = velocity[$clamp](100, 10000);
      this[_glowOpacityTween].begin = dart.equals(this[_state], overscroll_indicator._GlowState.idle) ? 0.3 : this[_glowOpacity].value;
      this[_glowOpacityTween].end = (dart.notNull(velocity) * 0.00006)[$clamp](dart.nullCheck(this[_glowOpacityTween].begin), 0.5);
      this[_glowSizeTween].begin = this[_glowSize].value;
      this[_glowSizeTween].end = math.min(core.double, 0.025 + 7.5e-7 * dart.notNull(velocity) * dart.notNull(velocity), 1.0);
      this[_glowController].duration = new core.Duration.new({milliseconds: (0.15 + dart.notNull(velocity) * 0.02)[$round]()});
      this[_glowController].forward({from: 0.0});
      this[_displacement] = 0.5;
      this[_state] = overscroll_indicator._GlowState.absorb;
    }
    pull(overscroll, extent, crossAxisOffset, crossExtent) {
      let t60;
      if (overscroll == null) dart.nullFailed(L74, 468, 20, "overscroll");
      if (extent == null) dart.nullFailed(L74, 468, 39, "extent");
      if (crossAxisOffset == null) dart.nullFailed(L74, 468, 54, "crossAxisOffset");
      if (crossExtent == null) dart.nullFailed(L74, 468, 78, "crossExtent");
      t60 = this[_pullRecedeTimer];
      t60 == null ? null : t60.cancel();
      this[_pullDistance] = dart.notNull(this[_pullDistance]) + dart.notNull(overscroll) / 200.0;
      this[_glowOpacityTween].begin = this[_glowOpacity].value;
      this[_glowOpacityTween].end = math.min(core.double, dart.notNull(this[_glowOpacity].value) + dart.notNull(overscroll) / dart.notNull(extent) * 0.8, 0.5);
      let height = math.min(core.double, extent, dart.notNull(crossExtent) * 0.20096189432249995);
      this[_glowSizeTween].begin = this[_glowSize].value;
      this[_glowSizeTween].end = math.max(core.double, 1.0 - 1.0 / (0.7 * math.sqrt(dart.notNull(this[_pullDistance]) * height)), this[_glowSize].value);
      this[_displacementTarget] = dart.notNull(crossAxisOffset) / dart.notNull(crossExtent);
      if (this[_displacementTarget] != this[_displacement]) {
        if (!dart.test(this[_displacementTicker].isTicking)) {
          if (!(this[_displacementTickerLastElapsed] == null)) dart.assertFailed(null, L74, 479, 16, "_displacementTickerLastElapsed == null");
          this[_displacementTicker].start();
        }
      } else {
        this[_displacementTicker].stop();
        this[_displacementTickerLastElapsed] = null;
      }
      this[_glowController].duration = overscroll_indicator._GlowController._pullTime;
      if (!dart.equals(this[_state], overscroll_indicator._GlowState.pull)) {
        this[_glowController].forward({from: 0.0});
        this[_state] = overscroll_indicator._GlowState.pull;
      } else {
        if (!dart.test(this[_glowController].isAnimating)) {
          if (!(this[_glowController].value === 1.0)) dart.assertFailed(null, L74, 492, 16, "_glowController.value == 1.0");
          this.notifyListeners();
        }
      }
      this[_pullRecedeTimer] = async.Timer.new(overscroll_indicator._GlowController._pullHoldTime, dart.fn(() => this[_recede](overscroll_indicator._GlowController._pullDecayTime), VoidTovoid()));
    }
    scrollEnd() {
      if (dart.equals(this[_state], overscroll_indicator._GlowState.pull)) this[_recede](overscroll_indicator._GlowController._recedeTime);
    }
    [_changePhase](status) {
      if (status == null) dart.nullFailed(L74, 504, 37, "status");
      if (!dart.equals(status, animation.AnimationStatus.completed)) return;
      switch (this[_state]) {
        case C701 || CT.C701:
        {
          this[_recede](overscroll_indicator._GlowController._recedeTime);
          break;
        }
        case C703 || CT.C703:
        {
          this[_state] = overscroll_indicator._GlowState.idle;
          this[_pullDistance] = 0.0;
          break;
        }
        case C702 || CT.C702:
        case C700 || CT.C700:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [_recede](duration) {
      let t60;
      if (duration == null) dart.nullFailed(L74, 521, 25, "duration");
      if (dart.equals(this[_state], overscroll_indicator._GlowState.recede) || dart.equals(this[_state], overscroll_indicator._GlowState.idle)) return;
      t60 = this[_pullRecedeTimer];
      t60 == null ? null : t60.cancel();
      this[_pullRecedeTimer] = null;
      this[_glowOpacityTween].begin = this[_glowOpacity].value;
      this[_glowOpacityTween].end = 0.0;
      this[_glowSizeTween].begin = this[_glowSize].value;
      this[_glowSizeTween].end = 0.0;
      this[_glowController].duration = duration;
      this[_glowController].forward({from: 0.0});
      this[_state] = overscroll_indicator._GlowState.recede;
    }
    [_tickDisplacement](elapsed) {
      if (elapsed == null) dart.nullFailed(L74, 535, 35, "elapsed");
      if (this[_displacementTickerLastElapsed] != null) {
        let t = (dart.notNull(elapsed.inMicroseconds) - dart.notNull(dart.nullCheck(this[_displacementTickerLastElapsed]).inMicroseconds))[$toDouble]();
        this[_displacement] = dart.notNull(this[_displacementTarget]) - (dart.notNull(this[_displacementTarget]) - dart.notNull(this[_displacement])) * math.pow(2.0, -t / dart.notNull(overscroll_indicator._GlowController._crossAxisHalfTime.inMicroseconds));
        this.notifyListeners();
      }
      if (dart.test(utils.nearEqual(this[_displacementTarget], this[_displacement], tolerance.Tolerance.defaultTolerance.distance))) {
        this[_displacementTicker].stop();
        this[_displacementTickerLastElapsed] = null;
      } else {
        this[_displacementTickerLastElapsed] = elapsed;
      }
    }
    paint(canvas, size) {
      let t60;
      if (canvas == null) dart.nullFailed(L74, 549, 21, "canvas");
      if (size == null) dart.nullFailed(L74, 549, 34, "size");
      if (this[_glowOpacity].value === 0.0) return;
      let baseGlowScale = dart.notNull(size.width) > dart.notNull(size.height) ? dart.notNull(size.height) / dart.notNull(size.width) : 1.0;
      let radius = dart.notNull(size.width) * 3.0 / 2.0;
      let height = math.min(core.double, size.height, dart.notNull(size.width) * 0.20096189432249995);
      let scaleY = dart.notNull(this[_glowSize].value) * baseGlowScale;
      let rect = new ui.Rect.fromLTWH(0.0, 0.0, size.width, height);
      let center = new ui.Offset.new(dart.notNull(size.width) / 2.0 * (0.5 + dart.notNull(this[_displacement])), height - radius);
      let paint = (t60 = ui.Paint.new(), (() => {
        t60.color = this.color.withOpacity(this[_glowOpacity].value);
        return t60;
      })());
      canvas.save();
      canvas.translate(0.0, dart.notNull(this[_paintOffset]) + dart.notNull(this[_paintOffsetScrollPixels]));
      canvas.scale(1.0, scaleY);
      canvas.clipRect(rect);
      canvas.drawCircle(center, radius, paint);
      canvas.restore();
    }
  };
  (overscroll_indicator._GlowController.new = function(opts) {
    let t56, t56$;
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    if (vsync == null) dart.nullFailed(L74, 354, 29, "vsync");
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(L74, 355, 20, "color");
    let axis = opts && 'axis' in opts ? opts.axis : null;
    if (axis == null) dart.nullFailed(L74, 356, 19, "axis");
    this[_state] = overscroll_indicator._GlowState.idle;
    this[___GlowController__glowController] = null;
    this[___GlowController__glowController_isSet] = false;
    this[_pullRecedeTimer] = null;
    this[_paintOffset] = 0.0;
    this[_paintOffsetScrollPixels] = 0.0;
    this[_glowOpacityTween] = new (TweenOfdouble()).new({begin: 0.0, end: 0.0});
    this[___GlowController__glowOpacity] = null;
    this[___GlowController__glowOpacity_isSet] = false;
    this[_glowSizeTween] = new (TweenOfdouble()).new({begin: 0.0, end: 0.0});
    this[___GlowController__glowSize] = null;
    this[___GlowController__glowSize_isSet] = false;
    this[___GlowController__displacementTicker] = null;
    this[___GlowController__displacementTicker_isSet] = false;
    this[_displacementTickerLastElapsed] = null;
    this[_displacementTarget] = 0.5;
    this[_displacement] = 0.5;
    this[_pullDistance] = 0.0;
    if (!(vsync != null)) dart.assertFailed(null, L74, 357, 15, "vsync != null");
    if (!(color != null)) dart.assertFailed(null, L74, 358, 15, "color != null");
    if (!(axis != null)) dart.assertFailed(null, L74, 359, 15, "axis != null");
    this[_color] = color;
    this[_axis] = axis;
    overscroll_indicator._GlowController.__proto__.new.call(this);
    this[_glowController] = (t56 = new animation_controller.AnimationController.new({vsync: vsync}), (() => {
      t56.addStatusListener(dart.bind(this, _changePhase));
      return t56;
    })());
    let decelerator = (t56$ = new animations.CurvedAnimation.new({parent: this[_glowController], curve: curves.Curves.decelerate}), (() => {
      t56$.addListener(dart.bind(this, 'notifyListeners'));
      return t56$;
    })());
    this[_glowOpacity] = decelerator.drive(core.double, this[_glowOpacityTween]);
    this[_glowSize] = decelerator.drive(core.double, this[_glowSizeTween]);
    this[_displacementTicker] = vsync.createTicker(dart.bind(this, _tickDisplacement));
  }).prototype = overscroll_indicator._GlowController.prototype;
  dart.addTypeTests(overscroll_indicator._GlowController);
  dart.addTypeCaches(overscroll_indicator._GlowController);
  dart.setMethodSignature(overscroll_indicator._GlowController, () => ({
    __proto__: dart.getMethods(overscroll_indicator._GlowController.__proto__),
    absorbImpact: dart.fnType(dart.void, [core.double]),
    pull: dart.fnType(dart.void, [core.double, core.double, core.double, core.double]),
    scrollEnd: dart.fnType(dart.void, []),
    [_changePhase]: dart.fnType(dart.void, [animation.AnimationStatus]),
    [_recede]: dart.fnType(dart.void, [core.Duration]),
    [_tickDisplacement]: dart.fnType(dart.void, [core.Duration]),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size])
  }));
  dart.setGetterSignature(overscroll_indicator._GlowController, () => ({
    __proto__: dart.getGetters(overscroll_indicator._GlowController.__proto__),
    [_glowController]: animation_controller.AnimationController,
    [_glowOpacity]: animation.Animation$(core.double),
    [_glowSize]: animation.Animation$(core.double),
    [_displacementTicker]: ticker.Ticker,
    color: ui.Color,
    axis: basic_types.Axis
  }));
  dart.setSetterSignature(overscroll_indicator._GlowController, () => ({
    __proto__: dart.getSetters(overscroll_indicator._GlowController.__proto__),
    [_glowController]: animation_controller.AnimationController,
    [_glowOpacity]: animation.Animation$(core.double),
    [_glowSize]: animation.Animation$(core.double),
    [_displacementTicker]: ticker.Ticker,
    color: ui.Color,
    axis: basic_types.Axis
  }));
  dart.setLibraryUri(overscroll_indicator._GlowController, L75);
  dart.setFieldSignature(overscroll_indicator._GlowController, () => ({
    __proto__: dart.getFields(overscroll_indicator._GlowController.__proto__),
    [_state]: dart.fieldType(overscroll_indicator._GlowState),
    [___GlowController__glowController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [___GlowController__glowController_isSet]: dart.fieldType(core.bool),
    [_pullRecedeTimer]: dart.fieldType(dart.nullable(async.Timer)),
    [_paintOffset]: dart.fieldType(core.double),
    [_paintOffsetScrollPixels]: dart.fieldType(core.double),
    [_glowOpacityTween]: dart.finalFieldType(tween.Tween$(core.double)),
    [___GlowController__glowOpacity]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [___GlowController__glowOpacity_isSet]: dart.fieldType(core.bool),
    [_glowSizeTween]: dart.finalFieldType(tween.Tween$(core.double)),
    [___GlowController__glowSize]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [___GlowController__glowSize_isSet]: dart.fieldType(core.bool),
    [___GlowController__displacementTicker]: dart.fieldType(dart.nullable(ticker.Ticker)),
    [___GlowController__displacementTicker_isSet]: dart.fieldType(core.bool),
    [_displacementTickerLastElapsed]: dart.fieldType(dart.nullable(core.Duration)),
    [_displacementTarget]: dart.fieldType(core.double),
    [_displacement]: dart.fieldType(core.double),
    [_pullDistance]: dart.fieldType(core.double),
    [_color]: dart.fieldType(ui.Color),
    [_axis]: dart.fieldType(basic_types.Axis)
  }));
  dart.defineLazy(overscroll_indicator._GlowController, {
    /*overscroll_indicator._GlowController._recedeTime*/get _recedeTime() {
      return C705 || CT.C705;
    },
    /*overscroll_indicator._GlowController._pullTime*/get _pullTime() {
      return C706 || CT.C706;
    },
    /*overscroll_indicator._GlowController._pullHoldTime*/get _pullHoldTime() {
      return C706 || CT.C706;
    },
    /*overscroll_indicator._GlowController._pullDecayTime*/get _pullDecayTime() {
      return C707 || CT.C707;
    },
    /*overscroll_indicator._GlowController._crossAxisHalfTime*/get _crossAxisHalfTime() {
      return new core.Duration.new({microseconds: (1000000 / 60.0)[$round]()});
    },
    /*overscroll_indicator._GlowController._maxOpacity*/get _maxOpacity() {
      return 0.5;
    },
    /*overscroll_indicator._GlowController._pullOpacityGlowFactor*/get _pullOpacityGlowFactor() {
      return 0.8;
    },
    /*overscroll_indicator._GlowController._velocityGlowFactor*/get _velocityGlowFactor() {
      return 0.00006;
    },
    /*overscroll_indicator._GlowController._sqrt3*/get _sqrt3() {
      return 1.73205080757;
    },
    /*overscroll_indicator._GlowController._widthToHeightFactor*/get _widthToHeightFactor() {
      return 0.20096189432249995;
    },
    /*overscroll_indicator._GlowController._minVelocity*/get _minVelocity() {
      return 100;
    },
    /*overscroll_indicator._GlowController._maxVelocity*/get _maxVelocity() {
      return 10000;
    }
  }, false);
  var _paintSide = dart.privateName(overscroll_indicator, "_paintSide");
  overscroll_indicator._GlowingOverscrollIndicatorPainter = class _GlowingOverscrollIndicatorPainter extends custom_paint.CustomPainter {
    [_paintSide](canvas, size, controller, axisDirection, growthDirection) {
      if (canvas == null) dart.nullFailed(L74, 593, 26, "canvas");
      if (size == null) dart.nullFailed(L74, 593, 39, "size");
      if (axisDirection == null) dart.nullFailed(L74, 593, 88, "axisDirection");
      if (growthDirection == null) dart.nullFailed(L74, 593, 119, "growthDirection");
      if (controller == null) return;
      switch (sliver.applyGrowthDirectionToAxisDirection(axisDirection, growthDirection)) {
        case C644 || CT.C644:
        {
          controller.paint(canvas, size);
          break;
        }
        case C642 || CT.C642:
        {
          canvas.save();
          canvas.translate(0.0, size.height);
          canvas.scale(1.0, -1.0);
          controller.paint(canvas, size);
          canvas.restore();
          break;
        }
        case C646 || CT.C646:
        {
          canvas.save();
          canvas.rotate(1.5707963267948966);
          canvas.scale(1.0, -1.0);
          controller.paint(canvas, new ui.Size.new(size.height, size.width));
          canvas.restore();
          break;
        }
        case C645 || CT.C645:
        {
          canvas.save();
          canvas.translate(size.width, 0.0);
          canvas.rotate(1.5707963267948966);
          controller.paint(canvas, new ui.Size.new(size.height, size.width));
          canvas.restore();
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    paint(canvas, size) {
      if (canvas == null) dart.nullFailed(L74, 625, 21, "canvas");
      if (size == null) dart.nullFailed(L74, 625, 34, "size");
      this[_paintSide](canvas, size, this.leadingController, this.axisDirection, sliver.GrowthDirection.reverse);
      this[_paintSide](canvas, size, this.trailingController, this.axisDirection, sliver.GrowthDirection.forward);
    }
    shouldRepaint(oldDelegate) {
      overscroll_indicator._GlowingOverscrollIndicatorPainter.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(L74, 631, 57, "oldDelegate");
      return !dart.equals(oldDelegate.leadingController, this.leadingController) || !dart.equals(oldDelegate.trailingController, this.trailingController);
    }
  };
  (overscroll_indicator._GlowingOverscrollIndicatorPainter.new = function(opts) {
    let leadingController = opts && 'leadingController' in opts ? opts.leadingController : null;
    let trailingController = opts && 'trailingController' in opts ? opts.trailingController : null;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
    if (axisDirection == null) dart.nullFailed(L74, 572, 19, "axisDirection");
    let repaint = opts && 'repaint' in opts ? opts.repaint : null;
    this.leadingController = leadingController;
    this.trailingController = trailingController;
    this.axisDirection = axisDirection;
    overscroll_indicator._GlowingOverscrollIndicatorPainter.__proto__.new.call(this, {repaint: repaint});
    ;
  }).prototype = overscroll_indicator._GlowingOverscrollIndicatorPainter.prototype;
  dart.addTypeTests(overscroll_indicator._GlowingOverscrollIndicatorPainter);
  dart.addTypeCaches(overscroll_indicator._GlowingOverscrollIndicatorPainter);
  dart.setMethodSignature(overscroll_indicator._GlowingOverscrollIndicatorPainter, () => ({
    __proto__: dart.getMethods(overscroll_indicator._GlowingOverscrollIndicatorPainter.__proto__),
    [_paintSide]: dart.fnType(dart.void, [ui.Canvas, ui.Size, dart.nullable(overscroll_indicator._GlowController), basic_types.AxisDirection, sliver.GrowthDirection]),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(overscroll_indicator._GlowingOverscrollIndicatorPainter, L75);
  dart.setFieldSignature(overscroll_indicator._GlowingOverscrollIndicatorPainter, () => ({
    __proto__: dart.getFields(overscroll_indicator._GlowingOverscrollIndicatorPainter.__proto__),
    leadingController: dart.finalFieldType(dart.nullable(overscroll_indicator._GlowController)),
    trailingController: dart.finalFieldType(dart.nullable(overscroll_indicator._GlowController)),
    axisDirection: dart.finalFieldType(basic_types.AxisDirection)
  }));
  dart.defineLazy(overscroll_indicator._GlowingOverscrollIndicatorPainter, {
    /*overscroll_indicator._GlowingOverscrollIndicatorPainter.piOver2*/get piOver2() {
      return 1.5707963267948966;
    }
  }, false);
  var leading$ = dart.privateName(overscroll_indicator, "OverscrollIndicatorNotification.leading");
  var paintOffset = dart.privateName(overscroll_indicator, "OverscrollIndicatorNotification.paintOffset");
  const Notification_ViewportNotificationMixin$36 = class Notification_ViewportNotificationMixin extends notification_listener.Notification {};
  (Notification_ViewportNotificationMixin$36.new = function() {
    scroll_notification.ViewportNotificationMixin[dart.mixinNew].call(this);
    Notification_ViewportNotificationMixin$36.__proto__.new.call(this);
  }).prototype = Notification_ViewportNotificationMixin$36.prototype;
  dart.applyMixin(Notification_ViewportNotificationMixin$36, scroll_notification.ViewportNotificationMixin);
  overscroll_indicator.OverscrollIndicatorNotification = class OverscrollIndicatorNotification extends Notification_ViewportNotificationMixin$36 {
    get leading() {
      return this[leading$];
    }
    set leading(value) {
      super.leading = value;
    }
    get paintOffset() {
      return this[paintOffset];
    }
    set paintOffset(value) {
      this[paintOffset] = value;
    }
    disallowGlow() {
      this[_accepted] = false;
    }
    debugFillDescription(description) {
      if (description == null) dart.nullFailed(L74, 679, 42, "description");
      super.debugFillDescription(description);
      description[$add]("side: " + (dart.test(this.leading) ? "leading edge" : "trailing edge"));
    }
  };
  (overscroll_indicator.OverscrollIndicatorNotification.new = function(opts) {
    let leading = opts && 'leading' in opts ? opts.leading : null;
    if (leading == null) dart.nullFailed(L74, 652, 19, "leading");
    this[paintOffset] = 0.0;
    this[_accepted] = true;
    this[leading$] = leading;
    overscroll_indicator.OverscrollIndicatorNotification.__proto__.new.call(this);
    ;
  }).prototype = overscroll_indicator.OverscrollIndicatorNotification.prototype;
  dart.addTypeTests(overscroll_indicator.OverscrollIndicatorNotification);
  dart.addTypeCaches(overscroll_indicator.OverscrollIndicatorNotification);
  dart.setMethodSignature(overscroll_indicator.OverscrollIndicatorNotification, () => ({
    __proto__: dart.getMethods(overscroll_indicator.OverscrollIndicatorNotification.__proto__),
    disallowGlow: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(overscroll_indicator.OverscrollIndicatorNotification, L75);
  dart.setFieldSignature(overscroll_indicator.OverscrollIndicatorNotification, () => ({
    __proto__: dart.getFields(overscroll_indicator.OverscrollIndicatorNotification.__proto__),
    leading: dart.finalFieldType(core.bool),
    paintOffset: dart.fieldType(core.double),
    [_accepted]: dart.fieldType(core.bool)
  }));
  scroll_physics.ScrollPhysics = class ScrollPhysics extends core.Object {
    get parent() {
      return this[parent$0];
    }
    set parent(value) {
      super.parent = value;
    }
    buildParent(ancestor) {
      let t60, t60$;
      t60$ = (t60 = this.parent, t60 == null ? null : t60.applyTo(ancestor));
      return t60$ == null ? ancestor : t60$;
    }
    applyTo(ancestor) {
      return new scroll_physics.ScrollPhysics.new({parent: this.buildParent(ancestor)});
    }
    applyPhysicsToUserOffset(position, offset) {
      if (position == null) dart.nullFailed(L76, 156, 49, "position");
      if (offset == null) dart.nullFailed(L76, 156, 66, "offset");
      if (this.parent == null) return offset;
      return dart.nullCheck(this.parent).applyPhysicsToUserOffset(position, offset);
    }
    shouldAcceptUserOffset(position) {
      if (position == null) dart.nullFailed(L76, 171, 45, "position");
      if (this.parent == null) return position.pixels !== 0.0 || position.minScrollExtent != position.maxScrollExtent;
      return dart.nullCheck(this.parent).shouldAcceptUserOffset(position);
    }
    recommendDeferredLoading(velocity, metrics, context) {
      if (velocity == null) dart.nullFailed(L76, 218, 40, "velocity");
      if (metrics == null) dart.nullFailed(L76, 218, 64, "metrics");
      if (context == null) dart.nullFailed(L76, 218, 86, "context");
      if (!(velocity != null)) dart.assertFailed(null, L76, 219, 12, "velocity != null");
      if (!(metrics != null)) dart.assertFailed(null, L76, 220, 12, "metrics != null");
      if (!(context != null)) dart.assertFailed(null, L76, 221, 12, "context != null");
      if (this.parent == null) {
        let maxPhysicalPixels = dart.nullCheck(binding$5.WidgetsBinding.instance).window.physicalSize.longestSide;
        return velocity[$abs]() > dart.notNull(maxPhysicalPixels);
      }
      return dart.nullCheck(this.parent).recommendDeferredLoading(velocity, metrics, context);
    }
    applyBoundaryConditions(position, value) {
      if (position == null) dart.nullFailed(L76, 263, 48, "position");
      if (value == null) dart.nullFailed(L76, 263, 65, "value");
      if (this.parent == null) return 0.0;
      return dart.nullCheck(this.parent).applyBoundaryConditions(position, value);
    }
    adjustPositionForNewDimensions(opts) {
      let oldPosition = opts && 'oldPosition' in opts ? opts.oldPosition : null;
      if (oldPosition == null) dart.nullFailed(L76, 314, 28, "oldPosition");
      let newPosition = opts && 'newPosition' in opts ? opts.newPosition : null;
      if (newPosition == null) dart.nullFailed(L76, 315, 28, "newPosition");
      let isScrolling = opts && 'isScrolling' in opts ? opts.isScrolling : null;
      if (isScrolling == null) dart.nullFailed(L76, 316, 19, "isScrolling");
      let velocity = opts && 'velocity' in opts ? opts.velocity : null;
      if (velocity == null) dart.nullFailed(L76, 317, 21, "velocity");
      if (this.parent == null) return newPosition.pixels;
      return dart.nullCheck(this.parent).adjustPositionForNewDimensions({oldPosition: oldPosition, newPosition: newPosition, isScrolling: isScrolling, velocity: velocity});
    }
    createBallisticSimulation(position, velocity) {
      if (position == null) dart.nullFailed(L76, 336, 55, "position");
      if (velocity == null) dart.nullFailed(L76, 336, 72, "velocity");
      if (this.parent == null) return null;
      return dart.nullCheck(this.parent).createBallisticSimulation(position, velocity);
    }
    get spring() {
      let t60, t60$;
      t60$ = (t60 = this.parent, t60 == null ? null : t60.spring);
      return t60$ == null ? scroll_physics.ScrollPhysics._kDefaultSpring : t60$;
    }
    get tolerance() {
      let t60, t60$;
      t60$ = (t60 = this.parent, t60 == null ? null : t60.tolerance);
      return t60$ == null ? scroll_physics.ScrollPhysics._kDefaultTolerance : t60$;
    }
    get minFlingDistance() {
      let t60, t60$;
      t60$ = (t60 = this.parent, t60 == null ? null : t60.minFlingDistance);
      return t60$ == null ? 18 : t60$;
    }
    get minFlingVelocity() {
      let t60, t60$;
      t60$ = (t60 = this.parent, t60 == null ? null : t60.minFlingVelocity);
      return t60$ == null ? 50 : t60$;
    }
    get maxFlingVelocity() {
      let t60, t60$;
      t60$ = (t60 = this.parent, t60 == null ? null : t60.maxFlingVelocity);
      return t60$ == null ? 8000 : t60$;
    }
    carriedMomentum(existingVelocity) {
      if (existingVelocity == null) dart.nullFailed(L76, 395, 33, "existingVelocity");
      if (this.parent == null) return 0.0;
      return dart.nullCheck(this.parent).carriedMomentum(existingVelocity);
    }
    get dragStartDistanceMotionThreshold() {
      let t60;
      t60 = this.parent;
      return t60 == null ? null : t60.dragStartDistanceMotionThreshold;
    }
    get allowImplicitScrolling() {
      return true;
    }
    toString() {
      if (this.parent == null) return object.objectRuntimeType(this, "ScrollPhsyics");
      return dart.str(object.objectRuntimeType(this, "ScrollPhysics")) + " -> " + dart.str(this.parent);
    }
  };
  (scroll_physics.ScrollPhysics.new = function(opts) {
    let parent = opts && 'parent' in opts ? opts.parent : null;
    this[parent$0] = parent;
    ;
  }).prototype = scroll_physics.ScrollPhysics.prototype;
  dart.addTypeTests(scroll_physics.ScrollPhysics);
  dart.addTypeCaches(scroll_physics.ScrollPhysics);
  const parent$0 = ScrollPhysics_parent;
  dart.setMethodSignature(scroll_physics.ScrollPhysics, () => ({
    __proto__: dart.getMethods(scroll_physics.ScrollPhysics.__proto__),
    buildParent: dart.fnType(dart.nullable(scroll_physics.ScrollPhysics), [dart.nullable(scroll_physics.ScrollPhysics)]),
    applyTo: dart.fnType(scroll_physics.ScrollPhysics, [dart.nullable(scroll_physics.ScrollPhysics)]),
    applyPhysicsToUserOffset: dart.fnType(core.double, [scroll_metrics.ScrollMetrics, core.double]),
    shouldAcceptUserOffset: dart.fnType(core.bool, [scroll_metrics.ScrollMetrics]),
    recommendDeferredLoading: dart.fnType(core.bool, [core.double, scroll_metrics.ScrollMetrics, framework.BuildContext]),
    applyBoundaryConditions: dart.fnType(core.double, [scroll_metrics.ScrollMetrics, core.double]),
    adjustPositionForNewDimensions: dart.fnType(core.double, [], {}, {isScrolling: core.bool, newPosition: scroll_metrics.ScrollMetrics, oldPosition: scroll_metrics.ScrollMetrics, velocity: core.double}),
    createBallisticSimulation: dart.fnType(dart.nullable(simulation.Simulation), [scroll_metrics.ScrollMetrics, core.double]),
    carriedMomentum: dart.fnType(core.double, [core.double])
  }));
  dart.setGetterSignature(scroll_physics.ScrollPhysics, () => ({
    __proto__: dart.getGetters(scroll_physics.ScrollPhysics.__proto__),
    spring: spring_simulation.SpringDescription,
    tolerance: tolerance.Tolerance,
    minFlingDistance: core.double,
    minFlingVelocity: core.double,
    maxFlingVelocity: core.double,
    dragStartDistanceMotionThreshold: dart.nullable(core.double),
    allowImplicitScrolling: core.bool
  }));
  dart.setLibraryUri(scroll_physics.ScrollPhysics, L77);
  dart.setFieldSignature(scroll_physics.ScrollPhysics, () => ({
    __proto__: dart.getFields(scroll_physics.ScrollPhysics.__proto__),
    parent: dart.finalFieldType(dart.nullable(scroll_physics.ScrollPhysics))
  }));
  dart.defineExtensionMethods(scroll_physics.ScrollPhysics, ['toString']);
  dart.defineLazy(scroll_physics.ScrollPhysics, {
    /*scroll_physics.ScrollPhysics._kDefaultSpring*/get _kDefaultSpring() {
      return new spring_simulation.SpringDescription.withDampingRatio({mass: 0.5, stiffness: 100.0, ratio: 1.1});
    },
    /*scroll_physics.ScrollPhysics._kDefaultTolerance*/get _kDefaultTolerance() {
      return new tolerance.Tolerance.new({velocity: 1.0 / (0.05 * dart.notNull(dart.nullCheck(binding$5.WidgetsBinding.instance).window.devicePixelRatio)), distance: 1.0 / dart.notNull(dart.nullCheck(binding$5.WidgetsBinding.instance).window.devicePixelRatio)});
    }
  }, false);
  scroll_physics.RangeMaintainingScrollPhysics = class RangeMaintainingScrollPhysics extends scroll_physics.ScrollPhysics {
    applyTo(ancestor) {
      return new scroll_physics.RangeMaintainingScrollPhysics.new({parent: this.buildParent(ancestor)});
    }
    adjustPositionForNewDimensions(opts) {
      let oldPosition = opts && 'oldPosition' in opts ? opts.oldPosition : null;
      if (oldPosition == null) dart.nullFailed(L76, 487, 28, "oldPosition");
      let newPosition = opts && 'newPosition' in opts ? opts.newPosition : null;
      if (newPosition == null) dart.nullFailed(L76, 488, 28, "newPosition");
      let isScrolling = opts && 'isScrolling' in opts ? opts.isScrolling : null;
      if (isScrolling == null) dart.nullFailed(L76, 489, 19, "isScrolling");
      let velocity = opts && 'velocity' in opts ? opts.velocity : null;
      if (velocity == null) dart.nullFailed(L76, 490, 21, "velocity");
      let maintainOverscroll = true;
      let enforceBoundary = true;
      if (velocity !== 0.0) {
        maintainOverscroll = false;
        enforceBoundary = false;
      }
      if (oldPosition.minScrollExtent == newPosition.minScrollExtent && oldPosition.maxScrollExtent == newPosition.maxScrollExtent) {
        maintainOverscroll = false;
      }
      if (oldPosition.pixels != newPosition.pixels) {
        maintainOverscroll = false;
        if (oldPosition.minScrollExtent[$isFinite] && oldPosition.maxScrollExtent[$isFinite] && newPosition.minScrollExtent[$isFinite] && newPosition.maxScrollExtent[$isFinite]) {
          enforceBoundary = false;
        }
      }
      if (dart.notNull(oldPosition.pixels) < dart.notNull(oldPosition.minScrollExtent) || dart.notNull(oldPosition.pixels) > dart.notNull(oldPosition.maxScrollExtent)) {
        enforceBoundary = false;
      }
      if (maintainOverscroll) {
        if (dart.notNull(oldPosition.pixels) < dart.notNull(oldPosition.minScrollExtent)) {
          let oldDelta = dart.notNull(oldPosition.minScrollExtent) - dart.notNull(oldPosition.pixels);
          return dart.notNull(newPosition.minScrollExtent) - oldDelta;
        }
        if (dart.notNull(oldPosition.pixels) > dart.notNull(oldPosition.maxScrollExtent)) {
          let oldDelta = dart.notNull(oldPosition.pixels) - dart.notNull(oldPosition.maxScrollExtent);
          return dart.notNull(newPosition.maxScrollExtent) + oldDelta;
        }
      }
      let result = super.adjustPositionForNewDimensions({oldPosition: oldPosition, newPosition: newPosition, isScrolling: isScrolling, velocity: velocity});
      if (enforceBoundary) {
        result = result[$clamp](newPosition.minScrollExtent, newPosition.maxScrollExtent);
      }
      return result;
    }
  };
  (scroll_physics.RangeMaintainingScrollPhysics.new = function(opts) {
    let parent = opts && 'parent' in opts ? opts.parent : null;
    scroll_physics.RangeMaintainingScrollPhysics.__proto__.new.call(this, {parent: parent});
    ;
  }).prototype = scroll_physics.RangeMaintainingScrollPhysics.prototype;
  dart.addTypeTests(scroll_physics.RangeMaintainingScrollPhysics);
  dart.addTypeCaches(scroll_physics.RangeMaintainingScrollPhysics);
  dart.setMethodSignature(scroll_physics.RangeMaintainingScrollPhysics, () => ({
    __proto__: dart.getMethods(scroll_physics.RangeMaintainingScrollPhysics.__proto__),
    applyTo: dart.fnType(scroll_physics.RangeMaintainingScrollPhysics, [dart.nullable(scroll_physics.ScrollPhysics)])
  }));
  dart.setLibraryUri(scroll_physics.RangeMaintainingScrollPhysics, L77);
  scroll_physics.BouncingScrollPhysics = class BouncingScrollPhysics extends scroll_physics.ScrollPhysics {
    applyTo(ancestor) {
      return new scroll_physics.BouncingScrollPhysics.new({parent: this.buildParent(ancestor)});
    }
    frictionFactor(overscrollFraction) {
      if (overscrollFraction == null) dart.nullFailed(L76, 591, 32, "overscrollFraction");
      return 0.52 * math.pow(1 - dart.notNull(overscrollFraction), 2);
    }
    applyPhysicsToUserOffset(position, offset) {
      if (position == null) dart.nullFailed(L76, 594, 49, "position");
      if (offset == null) dart.nullFailed(L76, 594, 66, "offset");
      if (!(offset !== 0.0)) dart.assertFailed(null, L76, 595, 12, "offset != 0.0");
      if (!(dart.notNull(position.minScrollExtent) <= dart.notNull(position.maxScrollExtent))) dart.assertFailed(null, L76, 596, 12, "position.minScrollExtent <= position.maxScrollExtent");
      if (!dart.test(position.outOfRange)) return offset;
      let overscrollPastStart = math.max(core.double, dart.notNull(position.minScrollExtent) - dart.notNull(position.pixels), 0.0);
      let overscrollPastEnd = math.max(core.double, dart.notNull(position.pixels) - dart.notNull(position.maxScrollExtent), 0.0);
      let overscrollPast = math.max(core.double, overscrollPastStart, overscrollPastEnd);
      let easing = overscrollPastStart > 0.0 && dart.notNull(offset) < 0.0 || overscrollPastEnd > 0.0 && dart.notNull(offset) > 0.0;
      let friction = easing ? this.frictionFactor((overscrollPast - offset[$abs]()) / dart.notNull(position.viewportDimension)) : this.frictionFactor(overscrollPast / dart.notNull(position.viewportDimension));
      let direction = offset[$sign];
      return direction * dart.notNull(scroll_physics.BouncingScrollPhysics._applyFriction(overscrollPast, offset[$abs](), friction));
    }
    static _applyFriction(extentOutside, absDelta, gamma) {
      if (extentOutside == null) dart.nullFailed(L76, 616, 39, "extentOutside");
      if (absDelta == null) dart.nullFailed(L76, 616, 61, "absDelta");
      if (gamma == null) dart.nullFailed(L76, 616, 78, "gamma");
      if (!(dart.notNull(absDelta) > 0)) dart.assertFailed(null, L76, 617, 12, "absDelta > 0");
      let total = 0.0;
      if (dart.notNull(extentOutside) > 0) {
        let deltaToLimit = dart.notNull(extentOutside) / dart.notNull(gamma);
        if (dart.notNull(absDelta) < deltaToLimit) return dart.notNull(absDelta) * dart.notNull(gamma);
        total = total + dart.notNull(extentOutside);
        absDelta = dart.notNull(absDelta) - deltaToLimit;
      }
      return total + dart.notNull(absDelta);
    }
    applyBoundaryConditions(position, value) {
      if (position == null) dart.nullFailed(L76, 630, 48, "position");
      if (value == null) dart.nullFailed(L76, 630, 65, "value");
      return 0.0;
    }
    createBallisticSimulation(position, velocity) {
      if (position == null) dart.nullFailed(L76, 633, 55, "position");
      if (velocity == null) dart.nullFailed(L76, 633, 72, "velocity");
      let tolerance = this.tolerance;
      if (velocity[$abs]() >= dart.notNull(tolerance.velocity) || dart.test(position.outOfRange)) {
        return new scroll_simulation.BouncingScrollSimulation.new({spring: this.spring, position: position.pixels, velocity: velocity, leadingExtent: position.minScrollExtent, trailingExtent: position.maxScrollExtent, tolerance: tolerance});
      }
      return null;
    }
    get minFlingVelocity() {
      return 50 * 2.0;
    }
    carriedMomentum(existingVelocity) {
      if (existingVelocity == null) dart.nullFailed(L76, 668, 33, "existingVelocity");
      return existingVelocity[$sign] * math.min(core.num, 0.000816 * math.pow(existingVelocity[$abs](), 1.967)[$toDouble](), 40000.0);
    }
    get dragStartDistanceMotionThreshold() {
      return 3.5;
    }
  };
  (scroll_physics.BouncingScrollPhysics.new = function(opts) {
    let parent = opts && 'parent' in opts ? opts.parent : null;
    scroll_physics.BouncingScrollPhysics.__proto__.new.call(this, {parent: parent});
    ;
  }).prototype = scroll_physics.BouncingScrollPhysics.prototype;
  dart.addTypeTests(scroll_physics.BouncingScrollPhysics);
  dart.addTypeCaches(scroll_physics.BouncingScrollPhysics);
  dart.setMethodSignature(scroll_physics.BouncingScrollPhysics, () => ({
    __proto__: dart.getMethods(scroll_physics.BouncingScrollPhysics.__proto__),
    applyTo: dart.fnType(scroll_physics.BouncingScrollPhysics, [dart.nullable(scroll_physics.ScrollPhysics)]),
    frictionFactor: dart.fnType(core.double, [core.double])
  }));
  dart.setGetterSignature(scroll_physics.BouncingScrollPhysics, () => ({
    __proto__: dart.getGetters(scroll_physics.BouncingScrollPhysics.__proto__),
    dragStartDistanceMotionThreshold: core.double
  }));
  dart.setLibraryUri(scroll_physics.BouncingScrollPhysics, L77);
  scroll_physics.ClampingScrollPhysics = class ClampingScrollPhysics extends scroll_physics.ScrollPhysics {
    applyTo(ancestor) {
      return new scroll_physics.ClampingScrollPhysics.new({parent: this.buildParent(ancestor)});
    }
    applyBoundaryConditions(position, value) {
      if (position == null) dart.nullFailed(L76, 705, 48, "position");
      if (value == null) dart.nullFailed(L76, 705, 65, "value");
      if (!dart.test(dart.fn(() => {
        if (value == position.pixels) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(this[$runtimeType]) + ".applyBoundaryConditions() was called redundantly."), new assertions.ErrorDescription.new("The proposed new position, " + dart.str(value) + ", is exactly equal to the current position of the " + "given " + dart.str(dart.runtimeType(position)) + ", " + dart.str(position.pixels) + ".\n" + "The applyBoundaryConditions method should only be called when the value is " + "going to actually change the pixels, otherwise it is redundant."), new (DiagnosticsPropertyOfScrollPhysics()).new("The physics object in question was", this, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty}), new (DiagnosticsPropertyOfScrollMetrics()).new("The position object in question was", position, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty})])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L76, 706, 12, "() {\r\n      if (value == position.pixels) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('$runtimeType.applyBoundaryConditions() was called redundantly.'),\r\n          ErrorDescription(\r\n            'The proposed new position, $value, is exactly equal to the current position of the '\r\n            'given ${position.runtimeType}, ${position.pixels}.\\n'\r\n            'The applyBoundaryConditions method should only be called when the value is '\r\n            'going to actually change the pixels, otherwise it is redundant.'\r\n          ),\r\n          DiagnosticsProperty<ScrollPhysics>('The physics object in question was', this, style: DiagnosticsTreeStyle.errorProperty),\r\n          DiagnosticsProperty<ScrollMetrics>('The position object in question was', position, style: DiagnosticsTreeStyle.errorProperty)\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      if (dart.notNull(value) < dart.notNull(position.pixels) && dart.notNull(position.pixels) <= dart.notNull(position.minScrollExtent)) return dart.notNull(value) - dart.notNull(position.pixels);
      if (dart.notNull(position.maxScrollExtent) <= dart.notNull(position.pixels) && dart.notNull(position.pixels) < dart.notNull(value)) return dart.notNull(value) - dart.notNull(position.pixels);
      if (dart.notNull(value) < dart.notNull(position.minScrollExtent) && dart.notNull(position.minScrollExtent) < dart.notNull(position.pixels)) return dart.notNull(value) - dart.notNull(position.minScrollExtent);
      if (dart.notNull(position.pixels) < dart.notNull(position.maxScrollExtent) && dart.notNull(position.maxScrollExtent) < dart.notNull(value)) return dart.notNull(value) - dart.notNull(position.maxScrollExtent);
      return 0.0;
    }
    createBallisticSimulation(position, velocity) {
      if (position == null) dart.nullFailed(L76, 734, 55, "position");
      if (velocity == null) dart.nullFailed(L76, 734, 72, "velocity");
      let tolerance = this.tolerance;
      if (dart.test(position.outOfRange)) {
        let end = null;
        if (dart.notNull(position.pixels) > dart.notNull(position.maxScrollExtent)) end = position.maxScrollExtent;
        if (dart.notNull(position.pixels) < dart.notNull(position.minScrollExtent)) end = position.minScrollExtent;
        if (!(end != null)) dart.assertFailed(null, L76, 742, 14, "end != null");
        return new spring_simulation.ScrollSpringSimulation.new(this.spring, position.pixels, dart.nullCheck(end), math.min(core.double, 0.0, velocity), {tolerance: tolerance});
      }
      if (velocity[$abs]() < dart.notNull(tolerance.velocity)) return null;
      if (dart.notNull(velocity) > 0.0 && dart.notNull(position.pixels) >= dart.notNull(position.maxScrollExtent)) return null;
      if (dart.notNull(velocity) < 0.0 && dart.notNull(position.pixels) <= dart.notNull(position.minScrollExtent)) return null;
      return new scroll_simulation.ClampingScrollSimulation.new({position: position.pixels, velocity: velocity, tolerance: tolerance});
    }
  };
  (scroll_physics.ClampingScrollPhysics.new = function(opts) {
    let parent = opts && 'parent' in opts ? opts.parent : null;
    scroll_physics.ClampingScrollPhysics.__proto__.new.call(this, {parent: parent});
    ;
  }).prototype = scroll_physics.ClampingScrollPhysics.prototype;
  dart.addTypeTests(scroll_physics.ClampingScrollPhysics);
  dart.addTypeCaches(scroll_physics.ClampingScrollPhysics);
  dart.setMethodSignature(scroll_physics.ClampingScrollPhysics, () => ({
    __proto__: dart.getMethods(scroll_physics.ClampingScrollPhysics.__proto__),
    applyTo: dart.fnType(scroll_physics.ClampingScrollPhysics, [dart.nullable(scroll_physics.ScrollPhysics)])
  }));
  dart.setLibraryUri(scroll_physics.ClampingScrollPhysics, L77);
  scroll_physics.AlwaysScrollableScrollPhysics = class AlwaysScrollableScrollPhysics extends scroll_physics.ScrollPhysics {
    applyTo(ancestor) {
      return new scroll_physics.AlwaysScrollableScrollPhysics.new({parent: this.buildParent(ancestor)});
    }
    shouldAcceptUserOffset(position) {
      if (position == null) dart.nullFailed(L76, 793, 45, "position");
      return true;
    }
  };
  (scroll_physics.AlwaysScrollableScrollPhysics.new = function(opts) {
    let parent = opts && 'parent' in opts ? opts.parent : null;
    scroll_physics.AlwaysScrollableScrollPhysics.__proto__.new.call(this, {parent: parent});
    ;
  }).prototype = scroll_physics.AlwaysScrollableScrollPhysics.prototype;
  dart.addTypeTests(scroll_physics.AlwaysScrollableScrollPhysics);
  dart.addTypeCaches(scroll_physics.AlwaysScrollableScrollPhysics);
  dart.setMethodSignature(scroll_physics.AlwaysScrollableScrollPhysics, () => ({
    __proto__: dart.getMethods(scroll_physics.AlwaysScrollableScrollPhysics.__proto__),
    applyTo: dart.fnType(scroll_physics.AlwaysScrollableScrollPhysics, [dart.nullable(scroll_physics.ScrollPhysics)])
  }));
  dart.setLibraryUri(scroll_physics.AlwaysScrollableScrollPhysics, L77);
  scroll_physics.NeverScrollableScrollPhysics = class NeverScrollableScrollPhysics extends scroll_physics.ScrollPhysics {
    applyTo(ancestor) {
      return new scroll_physics.NeverScrollableScrollPhysics.new({parent: this.buildParent(ancestor)});
    }
    shouldAcceptUserOffset(position) {
      if (position == null) dart.nullFailed(L76, 816, 45, "position");
      return false;
    }
    get allowImplicitScrolling() {
      return false;
    }
  };
  (scroll_physics.NeverScrollableScrollPhysics.new = function(opts) {
    let parent = opts && 'parent' in opts ? opts.parent : null;
    scroll_physics.NeverScrollableScrollPhysics.__proto__.new.call(this, {parent: parent});
    ;
  }).prototype = scroll_physics.NeverScrollableScrollPhysics.prototype;
  dart.addTypeTests(scroll_physics.NeverScrollableScrollPhysics);
  dart.addTypeCaches(scroll_physics.NeverScrollableScrollPhysics);
  dart.setMethodSignature(scroll_physics.NeverScrollableScrollPhysics, () => ({
    __proto__: dart.getMethods(scroll_physics.NeverScrollableScrollPhysics.__proto__),
    applyTo: dart.fnType(scroll_physics.NeverScrollableScrollPhysics, [dart.nullable(scroll_physics.ScrollPhysics)])
  }));
  dart.setLibraryUri(scroll_physics.NeverScrollableScrollPhysics, L77);
  var C710;
  var C711;
  var C709;
  var C708;
  var enabled$0 = dart.privateName(ticker_provider, "TickerMode.enabled");
  var child$26 = dart.privateName(ticker_provider, "TickerMode.child");
  ticker_provider.TickerMode = class TickerMode extends framework.StatelessWidget {
    get enabled() {
      return this[enabled$0];
    }
    set enabled(value) {
      super.enabled = value;
    }
    get child() {
      return this[child$26];
    }
    set child(value) {
      super.child = value;
    }
    static of(context) {
      let t60, t60$;
      if (context == null) dart.nullFailed(L36, 60, 31, "context");
      let widget = context.dependOnInheritedWidgetOfExactType(ticker_provider._EffectiveTickerMode);
      t60$ = (t60 = widget, t60 == null ? null : t60.enabled);
      return t60$ == null ? true : t60$;
    }
    build(context) {
      if (context == null) dart.nullFailed(L36, 66, 29, "context");
      return new ticker_provider._EffectiveTickerMode.new({enabled: dart.test(this.enabled) && dart.test(ticker_provider.TickerMode.of(context)), child: this.child, $creationLocationd_0dea112b090073317d4: C708 || CT.C708});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L36, 74, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.FlagProperty.new("requested mode", {value: this.enabled, ifTrue: "enabled", ifFalse: "disabled", showName: true}));
    }
  };
  (ticker_provider.TickerMode.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let enabled = opts && 'enabled' in opts ? opts.enabled : null;
    if (enabled == null) dart.nullFailed(L36, 24, 19, "enabled");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L36, 25, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[enabled$0] = enabled;
    this[child$26] = child;
    if (!(enabled != null)) dart.assertFailed(null, L36, 26, 15, "enabled != null");
    ticker_provider.TickerMode.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ticker_provider.TickerMode.prototype;
  dart.addTypeTests(ticker_provider.TickerMode);
  dart.addTypeCaches(ticker_provider.TickerMode);
  dart.setMethodSignature(ticker_provider.TickerMode, () => ({
    __proto__: dart.getMethods(ticker_provider.TickerMode.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(ticker_provider.TickerMode, L37);
  dart.setFieldSignature(ticker_provider.TickerMode, () => ({
    __proto__: dart.getFields(ticker_provider.TickerMode.__proto__),
    enabled: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(framework.Widget)
  }));
  var enabled$1 = dart.privateName(ticker_provider, "_EffectiveTickerMode.enabled");
  ticker_provider._EffectiveTickerMode = class _EffectiveTickerMode extends framework.InheritedWidget {
    get enabled() {
      return this[enabled$1];
    }
    set enabled(value) {
      super.enabled = value;
    }
    updateShouldNotify(oldWidget) {
      ticker_provider._EffectiveTickerMode.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L36, 91, 48, "oldWidget");
      return !dart.equals(this.enabled, oldWidget.enabled);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L36, 94, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.FlagProperty.new("effective mode", {value: this.enabled, ifTrue: "enabled", ifFalse: "disabled", showName: true}));
    }
  };
  (ticker_provider._EffectiveTickerMode.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let enabled = opts && 'enabled' in opts ? opts.enabled : null;
    if (enabled == null) dart.nullFailed(L36, 83, 19, "enabled");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L36, 84, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[enabled$1] = enabled;
    if (!(enabled != null)) dart.assertFailed(null, L36, 85, 15, "enabled != null");
    ticker_provider._EffectiveTickerMode.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ticker_provider._EffectiveTickerMode.prototype;
  dart.addTypeTests(ticker_provider._EffectiveTickerMode);
  dart.addTypeCaches(ticker_provider._EffectiveTickerMode);
  dart.setMethodSignature(ticker_provider._EffectiveTickerMode, () => ({
    __proto__: dart.getMethods(ticker_provider._EffectiveTickerMode.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(ticker_provider._EffectiveTickerMode, L37);
  dart.setFieldSignature(ticker_provider._EffectiveTickerMode, () => ({
    __proto__: dart.getFields(ticker_provider._EffectiveTickerMode.__proto__),
    enabled: dart.finalFieldType(core.bool)
  }));
  var _creator$ = dart.privateName(ticker_provider, "_creator");
  ticker_provider._WidgetTicker = class _WidgetTicker extends ticker.Ticker {
    dispose() {
      this[_creator$][_removeTicker](this);
      super.dispose();
    }
  };
  (ticker_provider._WidgetTicker.new = function(onTick, _creator, opts) {
    if (onTick == null) dart.nullFailed(L36, 271, 32, "onTick");
    if (_creator == null) dart.nullFailed(L36, 271, 45, "_creator");
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    this[_creator$] = _creator;
    ticker_provider._WidgetTicker.__proto__.new.call(this, onTick, {debugLabel: debugLabel});
    ;
  }).prototype = ticker_provider._WidgetTicker.prototype;
  dart.addTypeTests(ticker_provider._WidgetTicker);
  dart.addTypeCaches(ticker_provider._WidgetTicker);
  dart.setLibraryUri(ticker_provider._WidgetTicker, L37);
  dart.setFieldSignature(ticker_provider._WidgetTicker, () => ({
    __proto__: dart.getFields(ticker_provider._WidgetTicker.__proto__),
    [_creator$]: dart.finalFieldType(ticker_provider.TickerProviderStateMixin$(framework.StatefulWidget))
  }));
  scroll_context.ScrollContext = class ScrollContext extends core.Object {};
  (scroll_context.ScrollContext.new = function() {
    ;
  }).prototype = scroll_context.ScrollContext.prototype;
  dart.addTypeTests(scroll_context.ScrollContext);
  dart.addTypeCaches(scroll_context.ScrollContext);
  dart.setLibraryUri(scroll_context.ScrollContext, L78);
  var _positions = dart.privateName(scroll_controller, "_positions");
  var _initialScrollOffset = dart.privateName(scroll_controller, "_initialScrollOffset");
  var keepScrollOffset$0 = dart.privateName(scroll_controller, "ScrollController.keepScrollOffset");
  var debugLabel$1 = dart.privateName(scroll_controller, "ScrollController.debugLabel");
  scroll_controller.ScrollController = class ScrollController extends change_notifier.ChangeNotifier {
    get keepScrollOffset() {
      return this[keepScrollOffset$0];
    }
    set keepScrollOffset(value) {
      super.keepScrollOffset = value;
    }
    get debugLabel() {
      return this[debugLabel$1];
    }
    set debugLabel(value) {
      super.debugLabel = value;
    }
    get initialScrollOffset() {
      return this[_initialScrollOffset];
    }
    get positions() {
      return this[_positions];
    }
    get hasClients() {
      return this[_positions][$isNotEmpty];
    }
    get position() {
      if (!dart.test(this[_positions][$isNotEmpty])) dart.assertFailed("ScrollController not attached to any scroll views.", L79, 108, 12, "_positions.isNotEmpty");
      if (!(this[_positions][$length] === 1)) dart.assertFailed("ScrollController attached to multiple scroll views.", L79, 109, 12, "_positions.length == 1");
      return this[_positions][$single];
    }
    get offset() {
      return this.position.pixels;
    }
    animateTo(offset, opts) {
      if (offset == null) dart.nullFailed(L79, 148, 12, "offset");
      let duration = opts && 'duration' in opts ? opts.duration : null;
      if (duration == null) dart.nullFailed(L79, 149, 23, "duration");
      let curve = opts && 'curve' in opts ? opts.curve : null;
      if (curve == null) dart.nullFailed(L79, 150, 20, "curve");
      return async.async(dart.void, (function* animateTo() {
        if (!dart.test(this[_positions][$isNotEmpty])) dart.assertFailed("ScrollController not attached to any scroll views.", L79, 152, 12, "_positions.isNotEmpty");
        yield async.Future.wait(dart.void, (() => {
          let t60 = JSArrayOfFutureOfvoid().of([]);
          for (let i = 0; i < dart.notNull(this[_positions][$length]); i = i + 1)
            t60.push(this[_positions][$_get](i).animateTo(offset, {duration: duration, curve: curve}));
          return t60;
        })());
      }).bind(this));
    }
    jumpTo(value) {
      if (value == null) dart.nullFailed(L79, 170, 22, "value");
      if (!dart.test(this[_positions][$isNotEmpty])) dart.assertFailed("ScrollController not attached to any scroll views.", L79, 171, 12, "_positions.isNotEmpty");
      for (let position of ListOfScrollPosition().from(this[_positions]))
        position.jumpTo(value);
    }
    attach(position) {
      if (position == null) dart.nullFailed(L79, 180, 30, "position");
      if (!!dart.test(this[_positions][$contains](position))) dart.assertFailed(null, L79, 181, 12, "!_positions.contains(position)");
      this[_positions][$add](position);
      position.addListener(dart.bind(this, 'notifyListeners'));
    }
    detach(position) {
      if (position == null) dart.nullFailed(L79, 190, 30, "position");
      if (!dart.test(this[_positions][$contains](position))) dart.assertFailed(null, L79, 191, 12, "_positions.contains(position)");
      position.removeListener(dart.bind(this, 'notifyListeners'));
      this[_positions][$remove](position);
    }
    dispose() {
      for (let position of this[_positions])
        position.removeListener(dart.bind(this, 'notifyListeners'));
      super.dispose();
    }
    createScrollPosition(physics, context, oldPosition) {
      if (physics == null) dart.nullFailed(L79, 230, 19, "physics");
      if (context == null) dart.nullFailed(L79, 231, 19, "context");
      return new scroll_position_with_single_context.ScrollPositionWithSingleContext.new({physics: physics, context: context, initialPixels: this.initialScrollOffset, keepScrollOffset: this.keepScrollOffset, oldPosition: oldPosition, debugLabel: this.debugLabel});
    }
    toString() {
      let description = JSArrayOfString().of([]);
      this.debugFillDescription(description);
      return dart.str(diagnostics$.describeIdentity(this)) + "(" + dart.str(description[$join](", ")) + ")";
    }
    debugFillDescription(description) {
      if (description == null) dart.nullFailed(L79, 261, 42, "description");
      if (this.debugLabel != null) description[$add](dart.nullCheck(this.debugLabel));
      if (this.initialScrollOffset !== 0.0) description[$add]("initialScrollOffset: " + this.initialScrollOffset[$toStringAsFixed](1) + ", ");
      if (dart.test(this[_positions][$isEmpty])) {
        description[$add]("no clients");
      } else if (this[_positions][$length] === 1) {
        description[$add]("one client, offset " + this.offset[$toStringAsFixed](1));
      } else {
        description[$add](dart.str(this[_positions][$length]) + " clients");
      }
    }
  };
  (scroll_controller.ScrollController.new = function(opts) {
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : 0;
    if (initialScrollOffset == null) dart.nullFailed(L79, 49, 12, "initialScrollOffset");
    let keepScrollOffset = opts && 'keepScrollOffset' in opts ? opts.keepScrollOffset : true;
    if (keepScrollOffset == null) dart.nullFailed(L79, 50, 10, "keepScrollOffset");
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    this[_positions] = JSArrayOfScrollPosition().of([]);
    this[keepScrollOffset$0] = keepScrollOffset;
    this[debugLabel$1] = debugLabel;
    if (!(initialScrollOffset != null)) dart.assertFailed(null, L79, 52, 15, "initialScrollOffset != null");
    if (!(keepScrollOffset != null)) dart.assertFailed(null, L79, 53, 15, "keepScrollOffset != null");
    this[_initialScrollOffset] = initialScrollOffset;
    scroll_controller.ScrollController.__proto__.new.call(this);
    ;
  }).prototype = scroll_controller.ScrollController.prototype;
  dart.addTypeTests(scroll_controller.ScrollController);
  dart.addTypeCaches(scroll_controller.ScrollController);
  dart.setMethodSignature(scroll_controller.ScrollController, () => ({
    __proto__: dart.getMethods(scroll_controller.ScrollController.__proto__),
    animateTo: dart.fnType(async.Future$(dart.void), [core.double], {}, {curve: curves.Curve, duration: core.Duration}),
    jumpTo: dart.fnType(dart.void, [core.double]),
    attach: dart.fnType(dart.void, [scroll_position.ScrollPosition]),
    detach: dart.fnType(dart.void, [scroll_position.ScrollPosition]),
    createScrollPosition: dart.fnType(scroll_position.ScrollPosition, [scroll_physics.ScrollPhysics, scroll_context.ScrollContext, dart.nullable(scroll_position.ScrollPosition)]),
    debugFillDescription: dart.fnType(dart.void, [core.List$(core.String)])
  }));
  dart.setGetterSignature(scroll_controller.ScrollController, () => ({
    __proto__: dart.getGetters(scroll_controller.ScrollController.__proto__),
    initialScrollOffset: core.double,
    positions: core.Iterable$(scroll_position.ScrollPosition),
    hasClients: core.bool,
    position: scroll_position.ScrollPosition,
    offset: core.double
  }));
  dart.setLibraryUri(scroll_controller.ScrollController, L80);
  dart.setFieldSignature(scroll_controller.ScrollController, () => ({
    __proto__: dart.getFields(scroll_controller.ScrollController.__proto__),
    [_initialScrollOffset]: dart.finalFieldType(core.double),
    keepScrollOffset: dart.finalFieldType(core.bool),
    debugLabel: dart.finalFieldType(dart.nullable(core.String)),
    [_positions]: dart.finalFieldType(core.List$(scroll_position.ScrollPosition))
  }));
  dart.defineExtensionMethods(scroll_controller.ScrollController, ['toString']);
  var _positionToListener = dart.privateName(scroll_controller, "_positionToListener");
  var _lastUpdated = dart.privateName(scroll_controller, "_lastUpdated");
  var _lastUpdatedOffset = dart.privateName(scroll_controller, "_lastUpdatedOffset");
  scroll_controller.TrackingScrollController = class TrackingScrollController extends scroll_controller.ScrollController {
    get mostRecentlyUpdatedPosition() {
      return this[_lastUpdated];
    }
    get initialScrollOffset() {
      let t61;
      t61 = this[_lastUpdatedOffset];
      return t61 == null ? super.initialScrollOffset : t61;
    }
    attach(position) {
      if (position == null) dart.nullFailed(L79, 347, 30, "position");
      super.attach(position);
      if (!!dart.test(this[_positionToListener][$containsKey](position))) dart.assertFailed(null, L79, 349, 12, "!_positionToListener.containsKey(position)");
      this[_positionToListener][$_set](position, dart.fn(() => {
        this[_lastUpdated] = position;
        this[_lastUpdatedOffset] = position.pixels;
      }, VoidTovoid()));
      position.addListener(dart.nullCheck(this[_positionToListener][$_get](position)));
    }
    detach(position) {
      if (position == null) dart.nullFailed(L79, 358, 30, "position");
      super.detach(position);
      if (!dart.test(this[_positionToListener][$containsKey](position))) dart.assertFailed(null, L79, 360, 12, "_positionToListener.containsKey(position)");
      position.removeListener(dart.nullCheck(this[_positionToListener][$_get](position)));
      this[_positionToListener][$remove](position);
      if (dart.equals(this[_lastUpdated], position)) this[_lastUpdated] = null;
      if (dart.test(this[_positionToListener][$isEmpty])) this[_lastUpdatedOffset] = null;
    }
    dispose() {
      for (let position of this.positions) {
        if (!dart.test(this[_positionToListener][$containsKey](position))) dart.assertFailed(null, L79, 372, 14, "_positionToListener.containsKey(position)");
        position.removeListener(dart.nullCheck(this[_positionToListener][$_get](position)));
      }
      super.dispose();
    }
  };
  (scroll_controller.TrackingScrollController.new = function(opts) {
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : 0;
    if (initialScrollOffset == null) dart.nullFailed(L79, 321, 12, "initialScrollOffset");
    let keepScrollOffset = opts && 'keepScrollOffset' in opts ? opts.keepScrollOffset : true;
    if (keepScrollOffset == null) dart.nullFailed(L79, 322, 10, "keepScrollOffset");
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    this[_positionToListener] = new (LinkedMapOfScrollPosition$VoidTovoid()).new();
    this[_lastUpdated] = null;
    this[_lastUpdatedOffset] = null;
    scroll_controller.TrackingScrollController.__proto__.new.call(this, {initialScrollOffset: initialScrollOffset, keepScrollOffset: keepScrollOffset, debugLabel: debugLabel});
    ;
  }).prototype = scroll_controller.TrackingScrollController.prototype;
  dart.addTypeTests(scroll_controller.TrackingScrollController);
  dart.addTypeCaches(scroll_controller.TrackingScrollController);
  dart.setGetterSignature(scroll_controller.TrackingScrollController, () => ({
    __proto__: dart.getGetters(scroll_controller.TrackingScrollController.__proto__),
    mostRecentlyUpdatedPosition: dart.nullable(scroll_position.ScrollPosition)
  }));
  dart.setLibraryUri(scroll_controller.TrackingScrollController, L80);
  dart.setFieldSignature(scroll_controller.TrackingScrollController, () => ({
    __proto__: dart.getFields(scroll_controller.TrackingScrollController.__proto__),
    [_positionToListener]: dart.finalFieldType(core.Map$(scroll_position.ScrollPosition, dart.fnType(dart.void, []))),
    [_lastUpdated]: dart.fieldType(dart.nullable(scroll_position.ScrollPosition)),
    [_lastUpdatedOffset]: dart.fieldType(dart.nullable(core.double))
  }));
  var controller$0 = dart.privateName(primary_scroll_controller, "PrimaryScrollController.controller");
  primary_scroll_controller.PrimaryScrollController = class PrimaryScrollController extends framework.InheritedWidget {
    get controller() {
      return this[controller$0];
    }
    set controller(value) {
      super.controller = value;
    }
    static of(context) {
      let t61;
      if (context == null) dart.nullFailed(L81, 61, 44, "context");
      let result = context.dependOnInheritedWidgetOfExactType(primary_scroll_controller.PrimaryScrollController);
      t61 = result;
      return t61 == null ? null : t61.controller;
    }
    updateShouldNotify(oldWidget) {
      primary_scroll_controller.PrimaryScrollController.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L81, 67, 51, "oldWidget");
      return !dart.equals(this.controller, oldWidget.controller);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L81, 70, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfScrollController()).new("controller", this.controller, {ifNull: "no controller", showName: false}));
    }
  };
  (primary_scroll_controller.PrimaryScrollController.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    if (controller == null) dart.nullFailed(L81, 36, 36, "controller");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L81, 37, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$0] = controller;
    if (!(controller != null)) dart.assertFailed(null, L81, 38, 15, "controller != null");
    primary_scroll_controller.PrimaryScrollController.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = primary_scroll_controller.PrimaryScrollController.prototype;
  (primary_scroll_controller.PrimaryScrollController.none = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L81, 44, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$0] = null;
    primary_scroll_controller.PrimaryScrollController.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = primary_scroll_controller.PrimaryScrollController.prototype;
  dart.addTypeTests(primary_scroll_controller.PrimaryScrollController);
  dart.addTypeCaches(primary_scroll_controller.PrimaryScrollController);
  dart.setMethodSignature(primary_scroll_controller.PrimaryScrollController, () => ({
    __proto__: dart.getMethods(primary_scroll_controller.PrimaryScrollController.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(primary_scroll_controller.PrimaryScrollController, L82);
  dart.setFieldSignature(primary_scroll_controller.PrimaryScrollController, () => ({
    __proto__: dart.getFields(primary_scroll_controller.PrimaryScrollController.__proto__),
    controller: dart.finalFieldType(dart.nullable(scroll_controller.ScrollController))
  }));
  var _constructor = dart.privateName(gesture_detector, "_constructor");
  var _initializer = dart.privateName(gesture_detector, "_initializer");
  const _is_GestureRecognizerFactoryWithHandlers_default = Symbol('_is_GestureRecognizerFactoryWithHandlers_default');
  var _constructor$ = dart.privateName(gesture_detector, "GestureRecognizerFactoryWithHandlers._constructor");
  var _initializer$ = dart.privateName(gesture_detector, "GestureRecognizerFactoryWithHandlers._initializer");
  gesture_detector.GestureRecognizerFactoryWithHandlers$ = dart.generic(T => {
    class GestureRecognizerFactoryWithHandlers extends gesture_detector.GestureRecognizerFactory$(T) {
      get [_constructor]() {
        return this[_constructor$];
      }
      set [_constructor](value) {
        super[_constructor] = value;
      }
      get [_initializer]() {
        return this[_initializer$];
      }
      set [_initializer](value) {
        super[_initializer] = value;
      }
      _constructor() {
        return this[_constructor]();
      }
      initializer(instance) {
        let t61;
        T.as(instance);
        if (instance == null) dart.nullFailed(L26, 107, 22, "instance");
        t61 = instance;
        return this[_initializer](t61);
      }
    }
    (GestureRecognizerFactoryWithHandlers.new = function(_constructor, _initializer) {
      if (_constructor == null) dart.nullFailed(L26, 95, 51, "_constructor");
      if (_initializer == null) dart.nullFailed(L26, 95, 70, "_initializer");
      this[_constructor$] = _constructor;
      this[_initializer$] = _initializer;
      if (!(_constructor != null)) dart.assertFailed(null, L26, 96, 14, "_constructor != null");
      if (!(_initializer != null)) dart.assertFailed(null, L26, 97, 14, "_initializer != null");
      GestureRecognizerFactoryWithHandlers.__proto__.new.call(this);
      ;
    }).prototype = GestureRecognizerFactoryWithHandlers.prototype;
    dart.addTypeTests(GestureRecognizerFactoryWithHandlers);
    GestureRecognizerFactoryWithHandlers.prototype[_is_GestureRecognizerFactoryWithHandlers_default] = true;
    dart.addTypeCaches(GestureRecognizerFactoryWithHandlers);
    dart.setMethodSignature(GestureRecognizerFactoryWithHandlers, () => ({
      __proto__: dart.getMethods(GestureRecognizerFactoryWithHandlers.__proto__),
      _constructor: dart.fnType(T, []),
      initializer: dart.fnType(dart.void, [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(GestureRecognizerFactoryWithHandlers, L25);
    dart.setFieldSignature(GestureRecognizerFactoryWithHandlers, () => ({
      __proto__: dart.getFields(GestureRecognizerFactoryWithHandlers.__proto__),
      [_constructor]: dart.finalFieldType(dart.fnType(T, [])),
      [_initializer]: dart.finalFieldType(dart.fnType(dart.void, [T]))
    }));
    return GestureRecognizerFactoryWithHandlers;
  });
  gesture_detector.GestureRecognizerFactoryWithHandlers = gesture_detector.GestureRecognizerFactoryWithHandlers$();
  dart.addTypeTests(gesture_detector.GestureRecognizerFactoryWithHandlers, _is_GestureRecognizerFactoryWithHandlers_default);
  var C714;
  var C715;
  var C716;
  var C717;
  var C713;
  var C712;
  var child$27 = dart.privateName(gesture_detector, "GestureDetector.child");
  var onTapDown$0 = dart.privateName(gesture_detector, "GestureDetector.onTapDown");
  var onTapUp$ = dart.privateName(gesture_detector, "GestureDetector.onTapUp");
  var onTap$ = dart.privateName(gesture_detector, "GestureDetector.onTap");
  var onTapCancel$ = dart.privateName(gesture_detector, "GestureDetector.onTapCancel");
  var onSecondaryTap$ = dart.privateName(gesture_detector, "GestureDetector.onSecondaryTap");
  var onSecondaryTapDown$ = dart.privateName(gesture_detector, "GestureDetector.onSecondaryTapDown");
  var onSecondaryTapUp$ = dart.privateName(gesture_detector, "GestureDetector.onSecondaryTapUp");
  var onSecondaryTapCancel$ = dart.privateName(gesture_detector, "GestureDetector.onSecondaryTapCancel");
  var onTertiaryTapDown$ = dart.privateName(gesture_detector, "GestureDetector.onTertiaryTapDown");
  var onTertiaryTapUp$ = dart.privateName(gesture_detector, "GestureDetector.onTertiaryTapUp");
  var onTertiaryTapCancel$ = dart.privateName(gesture_detector, "GestureDetector.onTertiaryTapCancel");
  var onDoubleTapDown$0 = dart.privateName(gesture_detector, "GestureDetector.onDoubleTapDown");
  var onDoubleTap$ = dart.privateName(gesture_detector, "GestureDetector.onDoubleTap");
  var onDoubleTapCancel$ = dart.privateName(gesture_detector, "GestureDetector.onDoubleTapCancel");
  var onLongPress$ = dart.privateName(gesture_detector, "GestureDetector.onLongPress");
  var onLongPressStart$ = dart.privateName(gesture_detector, "GestureDetector.onLongPressStart");
  var onLongPressMoveUpdate$ = dart.privateName(gesture_detector, "GestureDetector.onLongPressMoveUpdate");
  var onLongPressUp$ = dart.privateName(gesture_detector, "GestureDetector.onLongPressUp");
  var onLongPressEnd$ = dart.privateName(gesture_detector, "GestureDetector.onLongPressEnd");
  var onSecondaryLongPress$ = dart.privateName(gesture_detector, "GestureDetector.onSecondaryLongPress");
  var onSecondaryLongPressStart$ = dart.privateName(gesture_detector, "GestureDetector.onSecondaryLongPressStart");
  var onSecondaryLongPressMoveUpdate$ = dart.privateName(gesture_detector, "GestureDetector.onSecondaryLongPressMoveUpdate");
  var onSecondaryLongPressUp$ = dart.privateName(gesture_detector, "GestureDetector.onSecondaryLongPressUp");
  var onSecondaryLongPressEnd$ = dart.privateName(gesture_detector, "GestureDetector.onSecondaryLongPressEnd");
  var onVerticalDragDown$ = dart.privateName(gesture_detector, "GestureDetector.onVerticalDragDown");
  var onVerticalDragStart$ = dart.privateName(gesture_detector, "GestureDetector.onVerticalDragStart");
  var onVerticalDragUpdate$ = dart.privateName(gesture_detector, "GestureDetector.onVerticalDragUpdate");
  var onVerticalDragEnd$ = dart.privateName(gesture_detector, "GestureDetector.onVerticalDragEnd");
  var onVerticalDragCancel$ = dart.privateName(gesture_detector, "GestureDetector.onVerticalDragCancel");
  var onHorizontalDragDown$ = dart.privateName(gesture_detector, "GestureDetector.onHorizontalDragDown");
  var onHorizontalDragStart$ = dart.privateName(gesture_detector, "GestureDetector.onHorizontalDragStart");
  var onHorizontalDragUpdate$ = dart.privateName(gesture_detector, "GestureDetector.onHorizontalDragUpdate");
  var onHorizontalDragEnd$ = dart.privateName(gesture_detector, "GestureDetector.onHorizontalDragEnd");
  var onHorizontalDragCancel$ = dart.privateName(gesture_detector, "GestureDetector.onHorizontalDragCancel");
  var onPanDown$ = dart.privateName(gesture_detector, "GestureDetector.onPanDown");
  var onPanStart$ = dart.privateName(gesture_detector, "GestureDetector.onPanStart");
  var onPanUpdate$ = dart.privateName(gesture_detector, "GestureDetector.onPanUpdate");
  var onPanEnd$ = dart.privateName(gesture_detector, "GestureDetector.onPanEnd");
  var onPanCancel$ = dart.privateName(gesture_detector, "GestureDetector.onPanCancel");
  var onScaleStart$ = dart.privateName(gesture_detector, "GestureDetector.onScaleStart");
  var onScaleUpdate$ = dart.privateName(gesture_detector, "GestureDetector.onScaleUpdate");
  var onScaleEnd$ = dart.privateName(gesture_detector, "GestureDetector.onScaleEnd");
  var onForcePressStart$0 = dart.privateName(gesture_detector, "GestureDetector.onForcePressStart");
  var onForcePressPeak$ = dart.privateName(gesture_detector, "GestureDetector.onForcePressPeak");
  var onForcePressUpdate$ = dart.privateName(gesture_detector, "GestureDetector.onForcePressUpdate");
  var onForcePressEnd$0 = dart.privateName(gesture_detector, "GestureDetector.onForcePressEnd");
  var behavior$1 = dart.privateName(gesture_detector, "GestureDetector.behavior");
  var excludeFromSemantics$ = dart.privateName(gesture_detector, "GestureDetector.excludeFromSemantics");
  var dragStartBehavior$1 = dart.privateName(gesture_detector, "GestureDetector.dragStartBehavior");
  gesture_detector.GestureDetector = class GestureDetector extends framework.StatelessWidget {
    get child() {
      return this[child$27];
    }
    set child(value) {
      super.child = value;
    }
    get onTapDown() {
      return this[onTapDown$0];
    }
    set onTapDown(value) {
      super.onTapDown = value;
    }
    get onTapUp() {
      return this[onTapUp$];
    }
    set onTapUp(value) {
      super.onTapUp = value;
    }
    get onTap() {
      return this[onTap$];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get onTapCancel() {
      return this[onTapCancel$];
    }
    set onTapCancel(value) {
      super.onTapCancel = value;
    }
    get onSecondaryTap() {
      return this[onSecondaryTap$];
    }
    set onSecondaryTap(value) {
      super.onSecondaryTap = value;
    }
    get onSecondaryTapDown() {
      return this[onSecondaryTapDown$];
    }
    set onSecondaryTapDown(value) {
      super.onSecondaryTapDown = value;
    }
    get onSecondaryTapUp() {
      return this[onSecondaryTapUp$];
    }
    set onSecondaryTapUp(value) {
      super.onSecondaryTapUp = value;
    }
    get onSecondaryTapCancel() {
      return this[onSecondaryTapCancel$];
    }
    set onSecondaryTapCancel(value) {
      super.onSecondaryTapCancel = value;
    }
    get onTertiaryTapDown() {
      return this[onTertiaryTapDown$];
    }
    set onTertiaryTapDown(value) {
      super.onTertiaryTapDown = value;
    }
    get onTertiaryTapUp() {
      return this[onTertiaryTapUp$];
    }
    set onTertiaryTapUp(value) {
      super.onTertiaryTapUp = value;
    }
    get onTertiaryTapCancel() {
      return this[onTertiaryTapCancel$];
    }
    set onTertiaryTapCancel(value) {
      super.onTertiaryTapCancel = value;
    }
    get onDoubleTapDown() {
      return this[onDoubleTapDown$0];
    }
    set onDoubleTapDown(value) {
      super.onDoubleTapDown = value;
    }
    get onDoubleTap() {
      return this[onDoubleTap$];
    }
    set onDoubleTap(value) {
      super.onDoubleTap = value;
    }
    get onDoubleTapCancel() {
      return this[onDoubleTapCancel$];
    }
    set onDoubleTapCancel(value) {
      super.onDoubleTapCancel = value;
    }
    get onLongPress() {
      return this[onLongPress$];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onLongPressStart() {
      return this[onLongPressStart$];
    }
    set onLongPressStart(value) {
      super.onLongPressStart = value;
    }
    get onLongPressMoveUpdate() {
      return this[onLongPressMoveUpdate$];
    }
    set onLongPressMoveUpdate(value) {
      super.onLongPressMoveUpdate = value;
    }
    get onLongPressUp() {
      return this[onLongPressUp$];
    }
    set onLongPressUp(value) {
      super.onLongPressUp = value;
    }
    get onLongPressEnd() {
      return this[onLongPressEnd$];
    }
    set onLongPressEnd(value) {
      super.onLongPressEnd = value;
    }
    get onSecondaryLongPress() {
      return this[onSecondaryLongPress$];
    }
    set onSecondaryLongPress(value) {
      super.onSecondaryLongPress = value;
    }
    get onSecondaryLongPressStart() {
      return this[onSecondaryLongPressStart$];
    }
    set onSecondaryLongPressStart(value) {
      super.onSecondaryLongPressStart = value;
    }
    get onSecondaryLongPressMoveUpdate() {
      return this[onSecondaryLongPressMoveUpdate$];
    }
    set onSecondaryLongPressMoveUpdate(value) {
      super.onSecondaryLongPressMoveUpdate = value;
    }
    get onSecondaryLongPressUp() {
      return this[onSecondaryLongPressUp$];
    }
    set onSecondaryLongPressUp(value) {
      super.onSecondaryLongPressUp = value;
    }
    get onSecondaryLongPressEnd() {
      return this[onSecondaryLongPressEnd$];
    }
    set onSecondaryLongPressEnd(value) {
      super.onSecondaryLongPressEnd = value;
    }
    get onVerticalDragDown() {
      return this[onVerticalDragDown$];
    }
    set onVerticalDragDown(value) {
      super.onVerticalDragDown = value;
    }
    get onVerticalDragStart() {
      return this[onVerticalDragStart$];
    }
    set onVerticalDragStart(value) {
      super.onVerticalDragStart = value;
    }
    get onVerticalDragUpdate() {
      return this[onVerticalDragUpdate$];
    }
    set onVerticalDragUpdate(value) {
      super.onVerticalDragUpdate = value;
    }
    get onVerticalDragEnd() {
      return this[onVerticalDragEnd$];
    }
    set onVerticalDragEnd(value) {
      super.onVerticalDragEnd = value;
    }
    get onVerticalDragCancel() {
      return this[onVerticalDragCancel$];
    }
    set onVerticalDragCancel(value) {
      super.onVerticalDragCancel = value;
    }
    get onHorizontalDragDown() {
      return this[onHorizontalDragDown$];
    }
    set onHorizontalDragDown(value) {
      super.onHorizontalDragDown = value;
    }
    get onHorizontalDragStart() {
      return this[onHorizontalDragStart$];
    }
    set onHorizontalDragStart(value) {
      super.onHorizontalDragStart = value;
    }
    get onHorizontalDragUpdate() {
      return this[onHorizontalDragUpdate$];
    }
    set onHorizontalDragUpdate(value) {
      super.onHorizontalDragUpdate = value;
    }
    get onHorizontalDragEnd() {
      return this[onHorizontalDragEnd$];
    }
    set onHorizontalDragEnd(value) {
      super.onHorizontalDragEnd = value;
    }
    get onHorizontalDragCancel() {
      return this[onHorizontalDragCancel$];
    }
    set onHorizontalDragCancel(value) {
      super.onHorizontalDragCancel = value;
    }
    get onPanDown() {
      return this[onPanDown$];
    }
    set onPanDown(value) {
      super.onPanDown = value;
    }
    get onPanStart() {
      return this[onPanStart$];
    }
    set onPanStart(value) {
      super.onPanStart = value;
    }
    get onPanUpdate() {
      return this[onPanUpdate$];
    }
    set onPanUpdate(value) {
      super.onPanUpdate = value;
    }
    get onPanEnd() {
      return this[onPanEnd$];
    }
    set onPanEnd(value) {
      super.onPanEnd = value;
    }
    get onPanCancel() {
      return this[onPanCancel$];
    }
    set onPanCancel(value) {
      super.onPanCancel = value;
    }
    get onScaleStart() {
      return this[onScaleStart$];
    }
    set onScaleStart(value) {
      super.onScaleStart = value;
    }
    get onScaleUpdate() {
      return this[onScaleUpdate$];
    }
    set onScaleUpdate(value) {
      super.onScaleUpdate = value;
    }
    get onScaleEnd() {
      return this[onScaleEnd$];
    }
    set onScaleEnd(value) {
      super.onScaleEnd = value;
    }
    get onForcePressStart() {
      return this[onForcePressStart$0];
    }
    set onForcePressStart(value) {
      super.onForcePressStart = value;
    }
    get onForcePressPeak() {
      return this[onForcePressPeak$];
    }
    set onForcePressPeak(value) {
      super.onForcePressPeak = value;
    }
    get onForcePressUpdate() {
      return this[onForcePressUpdate$];
    }
    set onForcePressUpdate(value) {
      super.onForcePressUpdate = value;
    }
    get onForcePressEnd() {
      return this[onForcePressEnd$0];
    }
    set onForcePressEnd(value) {
      super.onForcePressEnd = value;
    }
    get behavior() {
      return this[behavior$1];
    }
    set behavior(value) {
      super.behavior = value;
    }
    get excludeFromSemantics() {
      return this[excludeFromSemantics$];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$1];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(L26, 761, 29, "context");
      let gestures = new (LinkedMapOfType$GestureRecognizerFactoryOfGestureRecognizer()).new();
      if (this.onTapDown != null || this.onTapUp != null || this.onTap != null || this.onTapCancel != null || this.onSecondaryTap != null || this.onSecondaryTapDown != null || this.onSecondaryTapUp != null || this.onSecondaryTapCancel != null || this.onTertiaryTapDown != null || this.onTertiaryTapUp != null || this.onTertiaryTapCancel != null) {
        gestures[$_set](dart.wrapType(tap$.TapGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfTapGestureRecognizer()).new(dart.fn(() => new tap$.TapGestureRecognizer.new({debugOwner: this}), VoidToTapGestureRecognizer()), dart.fn(instance => {
          let t61;
          if (instance == null) dart.nullFailed(L26, 778, 31, "instance");
          t61 = instance;
          (() => {
            t61.onTapDown = this.onTapDown;
            t61.onTapUp = this.onTapUp;
            t61.onTap = this.onTap;
            t61.onTapCancel = this.onTapCancel;
            t61.onSecondaryTap = this.onSecondaryTap;
            t61.onSecondaryTapDown = this.onSecondaryTapDown;
            t61.onSecondaryTapUp = this.onSecondaryTapUp;
            t61.onSecondaryTapCancel = this.onSecondaryTapCancel;
            t61.onTertiaryTapDown = this.onTertiaryTapDown;
            t61.onTertiaryTapUp = this.onTertiaryTapUp;
            t61.onTertiaryTapCancel = this.onTertiaryTapCancel;
            return t61;
          })();
        }, TapGestureRecognizerTovoid())));
      }
      if (this.onDoubleTap != null) {
        gestures[$_set](dart.wrapType(multitap.DoubleTapGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfDoubleTapGestureRecognizer()).new(dart.fn(() => new multitap.DoubleTapGestureRecognizer.new({debugOwner: this}), VoidToDoubleTapGestureRecognizer()), dart.fn(instance => {
          let t61;
          if (instance == null) dart.nullFailed(L26, 798, 37, "instance");
          t61 = instance;
          (() => {
            t61.onDoubleTapDown = this.onDoubleTapDown;
            t61.onDoubleTap = this.onDoubleTap;
            t61.onDoubleTapCancel = this.onDoubleTapCancel;
            return t61;
          })();
        }, DoubleTapGestureRecognizerTovoid())));
      }
      if (this.onLongPress != null || this.onLongPressUp != null || this.onLongPressStart != null || this.onLongPressMoveUpdate != null || this.onLongPressEnd != null || this.onSecondaryLongPress != null || this.onSecondaryLongPressUp != null || this.onSecondaryLongPressStart != null || this.onSecondaryLongPressMoveUpdate != null || this.onSecondaryLongPressEnd != null) {
        gestures[$_set](dart.wrapType(long_press.LongPressGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfLongPressGestureRecognizer()).new(dart.fn(() => new long_press.LongPressGestureRecognizer.new({debugOwner: this}), VoidToLongPressGestureRecognizer()), dart.fn(instance => {
          let t61;
          if (instance == null) dart.nullFailed(L26, 819, 37, "instance");
          t61 = instance;
          (() => {
            t61.onLongPress = this.onLongPress;
            t61.onLongPressStart = this.onLongPressStart;
            t61.onLongPressMoveUpdate = this.onLongPressMoveUpdate;
            t61.onLongPressEnd = this.onLongPressEnd;
            t61.onLongPressUp = this.onLongPressUp;
            t61.onSecondaryLongPress = this.onSecondaryLongPress;
            t61.onSecondaryLongPressStart = this.onSecondaryLongPressStart;
            t61.onSecondaryLongPressMoveUpdate = this.onSecondaryLongPressMoveUpdate;
            t61.onSecondaryLongPressEnd = this.onSecondaryLongPressEnd;
            t61.onSecondaryLongPressUp = this.onSecondaryLongPressUp;
            return t61;
          })();
        }, LongPressGestureRecognizerTovoid())));
      }
      if (this.onVerticalDragDown != null || this.onVerticalDragStart != null || this.onVerticalDragUpdate != null || this.onVerticalDragEnd != null || this.onVerticalDragCancel != null) {
        gestures[$_set](dart.wrapType(monodrag.VerticalDragGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfVerticalDragGestureRecognizer()).new(dart.fn(() => new monodrag.VerticalDragGestureRecognizer.new({debugOwner: this}), VoidToVerticalDragGestureRecognizer()), dart.fn(instance => {
          let t61;
          if (instance == null) dart.nullFailed(L26, 842, 40, "instance");
          t61 = instance;
          (() => {
            t61.onDown = this.onVerticalDragDown;
            t61.onStart = this.onVerticalDragStart;
            t61.onUpdate = this.onVerticalDragUpdate;
            t61.onEnd = this.onVerticalDragEnd;
            t61.onCancel = this.onVerticalDragCancel;
            t61.dragStartBehavior = this.dragStartBehavior;
            return t61;
          })();
        }, VerticalDragGestureRecognizerTovoid())));
      }
      if (this.onHorizontalDragDown != null || this.onHorizontalDragStart != null || this.onHorizontalDragUpdate != null || this.onHorizontalDragEnd != null || this.onHorizontalDragCancel != null) {
        gestures[$_set](dart.wrapType(monodrag.HorizontalDragGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfHorizontalDragGestureRecognizer()).new(dart.fn(() => new monodrag.HorizontalDragGestureRecognizer.new({debugOwner: this}), VoidToHorizontalDragGestureRecognizer()), dart.fn(instance => {
          let t61;
          if (instance == null) dart.nullFailed(L26, 861, 42, "instance");
          t61 = instance;
          (() => {
            t61.onDown = this.onHorizontalDragDown;
            t61.onStart = this.onHorizontalDragStart;
            t61.onUpdate = this.onHorizontalDragUpdate;
            t61.onEnd = this.onHorizontalDragEnd;
            t61.onCancel = this.onHorizontalDragCancel;
            t61.dragStartBehavior = this.dragStartBehavior;
            return t61;
          })();
        }, HorizontalDragGestureRecognizerTovoid())));
      }
      if (this.onPanDown != null || this.onPanStart != null || this.onPanUpdate != null || this.onPanEnd != null || this.onPanCancel != null) {
        gestures[$_set](dart.wrapType(monodrag.PanGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfPanGestureRecognizer()).new(dart.fn(() => new monodrag.PanGestureRecognizer.new({debugOwner: this}), VoidToPanGestureRecognizer()), dart.fn(instance => {
          let t61;
          if (instance == null) dart.nullFailed(L26, 880, 31, "instance");
          t61 = instance;
          (() => {
            t61.onDown = this.onPanDown;
            t61.onStart = this.onPanStart;
            t61.onUpdate = this.onPanUpdate;
            t61.onEnd = this.onPanEnd;
            t61.onCancel = this.onPanCancel;
            t61.dragStartBehavior = this.dragStartBehavior;
            return t61;
          })();
        }, PanGestureRecognizerTovoid())));
      }
      if (this.onScaleStart != null || this.onScaleUpdate != null || this.onScaleEnd != null) {
        gestures[$_set](dart.wrapType(scale.ScaleGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfScaleGestureRecognizer()).new(dart.fn(() => new scale.ScaleGestureRecognizer.new({debugOwner: this}), VoidToScaleGestureRecognizer()), dart.fn(instance => {
          let t61;
          if (instance == null) dart.nullFailed(L26, 895, 33, "instance");
          t61 = instance;
          (() => {
            t61.onStart = this.onScaleStart;
            t61.onUpdate = this.onScaleUpdate;
            t61.onEnd = this.onScaleEnd;
            return t61;
          })();
        }, ScaleGestureRecognizerTovoid())));
      }
      if (this.onForcePressStart != null || this.onForcePressPeak != null || this.onForcePressUpdate != null || this.onForcePressEnd != null) {
        gestures[$_set](dart.wrapType(force_press.ForcePressGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfForcePressGestureRecognizer()).new(dart.fn(() => new force_press.ForcePressGestureRecognizer.new({debugOwner: this}), VoidToForcePressGestureRecognizer()), dart.fn(instance => {
          let t61;
          if (instance == null) dart.nullFailed(L26, 910, 38, "instance");
          t61 = instance;
          (() => {
            t61.onStart = this.onForcePressStart;
            t61.onPeak = this.onForcePressPeak;
            t61.onUpdate = this.onForcePressUpdate;
            t61.onEnd = this.onForcePressEnd;
            return t61;
          })();
        }, ForcePressGestureRecognizerTovoid())));
      }
      return new gesture_detector.RawGestureDetector.new({gestures: gestures, behavior: this.behavior, excludeFromSemantics: this.excludeFromSemantics, child: this.child, $creationLocationd_0dea112b090073317d4: C712 || CT.C712});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L26, 929, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfDragStartBehavior()).new("startBehavior", this.dragStartBehavior));
    }
  };
  (gesture_detector.GestureDetector.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
    let onTapUp = opts && 'onTapUp' in opts ? opts.onTapUp : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onTapCancel = opts && 'onTapCancel' in opts ? opts.onTapCancel : null;
    let onSecondaryTap = opts && 'onSecondaryTap' in opts ? opts.onSecondaryTap : null;
    let onSecondaryTapDown = opts && 'onSecondaryTapDown' in opts ? opts.onSecondaryTapDown : null;
    let onSecondaryTapUp = opts && 'onSecondaryTapUp' in opts ? opts.onSecondaryTapUp : null;
    let onSecondaryTapCancel = opts && 'onSecondaryTapCancel' in opts ? opts.onSecondaryTapCancel : null;
    let onTertiaryTapDown = opts && 'onTertiaryTapDown' in opts ? opts.onTertiaryTapDown : null;
    let onTertiaryTapUp = opts && 'onTertiaryTapUp' in opts ? opts.onTertiaryTapUp : null;
    let onTertiaryTapCancel = opts && 'onTertiaryTapCancel' in opts ? opts.onTertiaryTapCancel : null;
    let onDoubleTapDown = opts && 'onDoubleTapDown' in opts ? opts.onDoubleTapDown : null;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let onDoubleTapCancel = opts && 'onDoubleTapCancel' in opts ? opts.onDoubleTapCancel : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onLongPressStart = opts && 'onLongPressStart' in opts ? opts.onLongPressStart : null;
    let onLongPressMoveUpdate = opts && 'onLongPressMoveUpdate' in opts ? opts.onLongPressMoveUpdate : null;
    let onLongPressUp = opts && 'onLongPressUp' in opts ? opts.onLongPressUp : null;
    let onLongPressEnd = opts && 'onLongPressEnd' in opts ? opts.onLongPressEnd : null;
    let onSecondaryLongPress = opts && 'onSecondaryLongPress' in opts ? opts.onSecondaryLongPress : null;
    let onSecondaryLongPressStart = opts && 'onSecondaryLongPressStart' in opts ? opts.onSecondaryLongPressStart : null;
    let onSecondaryLongPressMoveUpdate = opts && 'onSecondaryLongPressMoveUpdate' in opts ? opts.onSecondaryLongPressMoveUpdate : null;
    let onSecondaryLongPressUp = opts && 'onSecondaryLongPressUp' in opts ? opts.onSecondaryLongPressUp : null;
    let onSecondaryLongPressEnd = opts && 'onSecondaryLongPressEnd' in opts ? opts.onSecondaryLongPressEnd : null;
    let onVerticalDragDown = opts && 'onVerticalDragDown' in opts ? opts.onVerticalDragDown : null;
    let onVerticalDragStart = opts && 'onVerticalDragStart' in opts ? opts.onVerticalDragStart : null;
    let onVerticalDragUpdate = opts && 'onVerticalDragUpdate' in opts ? opts.onVerticalDragUpdate : null;
    let onVerticalDragEnd = opts && 'onVerticalDragEnd' in opts ? opts.onVerticalDragEnd : null;
    let onVerticalDragCancel = opts && 'onVerticalDragCancel' in opts ? opts.onVerticalDragCancel : null;
    let onHorizontalDragDown = opts && 'onHorizontalDragDown' in opts ? opts.onHorizontalDragDown : null;
    let onHorizontalDragStart = opts && 'onHorizontalDragStart' in opts ? opts.onHorizontalDragStart : null;
    let onHorizontalDragUpdate = opts && 'onHorizontalDragUpdate' in opts ? opts.onHorizontalDragUpdate : null;
    let onHorizontalDragEnd = opts && 'onHorizontalDragEnd' in opts ? opts.onHorizontalDragEnd : null;
    let onHorizontalDragCancel = opts && 'onHorizontalDragCancel' in opts ? opts.onHorizontalDragCancel : null;
    let onForcePressStart = opts && 'onForcePressStart' in opts ? opts.onForcePressStart : null;
    let onForcePressPeak = opts && 'onForcePressPeak' in opts ? opts.onForcePressPeak : null;
    let onForcePressUpdate = opts && 'onForcePressUpdate' in opts ? opts.onForcePressUpdate : null;
    let onForcePressEnd = opts && 'onForcePressEnd' in opts ? opts.onForcePressEnd : null;
    let onPanDown = opts && 'onPanDown' in opts ? opts.onPanDown : null;
    let onPanStart = opts && 'onPanStart' in opts ? opts.onPanStart : null;
    let onPanUpdate = opts && 'onPanUpdate' in opts ? opts.onPanUpdate : null;
    let onPanEnd = opts && 'onPanEnd' in opts ? opts.onPanEnd : null;
    let onPanCancel = opts && 'onPanCancel' in opts ? opts.onPanCancel : null;
    let onScaleStart = opts && 'onScaleStart' in opts ? opts.onScaleStart : null;
    let onScaleUpdate = opts && 'onScaleUpdate' in opts ? opts.onScaleUpdate : null;
    let onScaleEnd = opts && 'onScaleEnd' in opts ? opts.onScaleEnd : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    if (excludeFromSemantics == null) dart.nullFailed(L26, 266, 10, "excludeFromSemantics");
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C492 || CT.C492;
    if (dragStartBehavior == null) dart.nullFailed(L26, 267, 10, "dragStartBehavior");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$27] = child;
    this[onTapDown$0] = onTapDown;
    this[onTapUp$] = onTapUp;
    this[onTap$] = onTap;
    this[onTapCancel$] = onTapCancel;
    this[onSecondaryTap$] = onSecondaryTap;
    this[onSecondaryTapDown$] = onSecondaryTapDown;
    this[onSecondaryTapUp$] = onSecondaryTapUp;
    this[onSecondaryTapCancel$] = onSecondaryTapCancel;
    this[onTertiaryTapDown$] = onTertiaryTapDown;
    this[onTertiaryTapUp$] = onTertiaryTapUp;
    this[onTertiaryTapCancel$] = onTertiaryTapCancel;
    this[onDoubleTapDown$0] = onDoubleTapDown;
    this[onDoubleTap$] = onDoubleTap;
    this[onDoubleTapCancel$] = onDoubleTapCancel;
    this[onLongPress$] = onLongPress;
    this[onLongPressStart$] = onLongPressStart;
    this[onLongPressMoveUpdate$] = onLongPressMoveUpdate;
    this[onLongPressUp$] = onLongPressUp;
    this[onLongPressEnd$] = onLongPressEnd;
    this[onSecondaryLongPress$] = onSecondaryLongPress;
    this[onSecondaryLongPressStart$] = onSecondaryLongPressStart;
    this[onSecondaryLongPressMoveUpdate$] = onSecondaryLongPressMoveUpdate;
    this[onSecondaryLongPressUp$] = onSecondaryLongPressUp;
    this[onSecondaryLongPressEnd$] = onSecondaryLongPressEnd;
    this[onVerticalDragDown$] = onVerticalDragDown;
    this[onVerticalDragStart$] = onVerticalDragStart;
    this[onVerticalDragUpdate$] = onVerticalDragUpdate;
    this[onVerticalDragEnd$] = onVerticalDragEnd;
    this[onVerticalDragCancel$] = onVerticalDragCancel;
    this[onHorizontalDragDown$] = onHorizontalDragDown;
    this[onHorizontalDragStart$] = onHorizontalDragStart;
    this[onHorizontalDragUpdate$] = onHorizontalDragUpdate;
    this[onHorizontalDragEnd$] = onHorizontalDragEnd;
    this[onHorizontalDragCancel$] = onHorizontalDragCancel;
    this[onForcePressStart$0] = onForcePressStart;
    this[onForcePressPeak$] = onForcePressPeak;
    this[onForcePressUpdate$] = onForcePressUpdate;
    this[onForcePressEnd$0] = onForcePressEnd;
    this[onPanDown$] = onPanDown;
    this[onPanStart$] = onPanStart;
    this[onPanUpdate$] = onPanUpdate;
    this[onPanEnd$] = onPanEnd;
    this[onPanCancel$] = onPanCancel;
    this[onScaleStart$] = onScaleStart;
    this[onScaleUpdate$] = onScaleUpdate;
    this[onScaleEnd$] = onScaleEnd;
    this[behavior$1] = behavior;
    this[excludeFromSemantics$] = excludeFromSemantics;
    this[dragStartBehavior$1] = dragStartBehavior;
    if (!(excludeFromSemantics != null)) dart.assertFailed(null, L26, 268, 15, "excludeFromSemantics != null");
    if (!(dragStartBehavior != null)) dart.assertFailed(null, L26, 269, 15, "dragStartBehavior != null");
    if (!dart.test(dart.fn(() => {
      let haveVerticalDrag = onVerticalDragStart != null || onVerticalDragUpdate != null || onVerticalDragEnd != null;
      let haveHorizontalDrag = onHorizontalDragStart != null || onHorizontalDragUpdate != null || onHorizontalDragEnd != null;
      let havePan = onPanStart != null || onPanUpdate != null || onPanEnd != null;
      let haveScale = onScaleStart != null || onScaleUpdate != null || onScaleEnd != null;
      if (havePan || haveScale) {
        if (havePan && haveScale) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Incorrect GestureDetector arguments."), new assertions.ErrorDescription.new("Having both a pan gesture recognizer and a scale gesture recognizer is redundant; scale is a superset of pan."), new assertions.ErrorHint.new("Just use the scale gesture recognizer.")])));
        }
        let recognizer = havePan ? "pan" : "scale";
        if (haveVerticalDrag && haveHorizontalDrag) {
          dart.throw(assertions.FlutterError.new("Incorrect GestureDetector arguments.\n" + "Simultaneously having a vertical drag gesture recognizer, a horizontal drag gesture recognizer, and a " + recognizer + " gesture recognizer " + "will result in the " + recognizer + " gesture recognizer being ignored, since the other two will catch all drags."));
        }
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L26, 270, 15, "() {\r\n         final bool haveVerticalDrag = onVerticalDragStart != null || onVerticalDragUpdate != null || onVerticalDragEnd != null;\r\n         final bool haveHorizontalDrag = onHorizontalDragStart != null || onHorizontalDragUpdate != null || onHorizontalDragEnd != null;\r\n         final bool havePan = onPanStart != null || onPanUpdate != null || onPanEnd != null;\r\n         final bool haveScale = onScaleStart != null || onScaleUpdate != null || onScaleEnd != null;\r\n         if (havePan || haveScale) {\r\n           if (havePan && haveScale) {\r\n             throw FlutterError.fromParts(<DiagnosticsNode>[\r\n               ErrorSummary('Incorrect GestureDetector arguments.'),\r\n               ErrorDescription(\r\n                 'Having both a pan gesture recognizer and a scale gesture recognizer is redundant; scale is a superset of pan.'\r\n               ),\r\n               ErrorHint('Just use the scale gesture recognizer.')\r\n             ]);\r\n           }\r\n           final String recognizer = havePan ? 'pan' : 'scale';\r\n           if (haveVerticalDrag && haveHorizontalDrag) {\r\n             throw FlutterError(\r\n               'Incorrect GestureDetector arguments.\\n'\r\n               'Simultaneously having a vertical drag gesture recognizer, a horizontal drag gesture recognizer, and a $recognizer gesture recognizer '\r\n               'will result in the $recognizer gesture recognizer being ignored, since the other two will catch all drags.'\r\n             );\r\n           }\r\n         }\r\n         return true;\r\n       }()");
    gesture_detector.GestureDetector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = gesture_detector.GestureDetector.prototype;
  dart.addTypeTests(gesture_detector.GestureDetector);
  dart.addTypeCaches(gesture_detector.GestureDetector);
  dart.setMethodSignature(gesture_detector.GestureDetector, () => ({
    __proto__: dart.getMethods(gesture_detector.GestureDetector.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(gesture_detector.GestureDetector, L25);
  dart.setFieldSignature(gesture_detector.GestureDetector, () => ({
    __proto__: dart.getFields(gesture_detector.GestureDetector.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    onTapDown: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [tap$.TapDownDetails]))),
    onTapUp: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [tap$.TapUpDetails]))),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onTapCancel: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onSecondaryTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onSecondaryTapDown: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [tap$.TapDownDetails]))),
    onSecondaryTapUp: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [tap$.TapUpDetails]))),
    onSecondaryTapCancel: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onTertiaryTapDown: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [tap$.TapDownDetails]))),
    onTertiaryTapUp: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [tap$.TapUpDetails]))),
    onTertiaryTapCancel: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onDoubleTapDown: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [tap$.TapDownDetails]))),
    onDoubleTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onDoubleTapCancel: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPressStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [long_press.LongPressStartDetails]))),
    onLongPressMoveUpdate: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [long_press.LongPressMoveUpdateDetails]))),
    onLongPressUp: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPressEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [long_press.LongPressEndDetails]))),
    onSecondaryLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onSecondaryLongPressStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [long_press.LongPressStartDetails]))),
    onSecondaryLongPressMoveUpdate: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [long_press.LongPressMoveUpdateDetails]))),
    onSecondaryLongPressUp: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onSecondaryLongPressEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [long_press.LongPressEndDetails]))),
    onVerticalDragDown: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragDownDetails]))),
    onVerticalDragStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragStartDetails]))),
    onVerticalDragUpdate: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragUpdateDetails]))),
    onVerticalDragEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragEndDetails]))),
    onVerticalDragCancel: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onHorizontalDragDown: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragDownDetails]))),
    onHorizontalDragStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragStartDetails]))),
    onHorizontalDragUpdate: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragUpdateDetails]))),
    onHorizontalDragEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragEndDetails]))),
    onHorizontalDragCancel: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onPanDown: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragDownDetails]))),
    onPanStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragStartDetails]))),
    onPanUpdate: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragUpdateDetails]))),
    onPanEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragEndDetails]))),
    onPanCancel: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onScaleStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [scale.ScaleStartDetails]))),
    onScaleUpdate: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [scale.ScaleUpdateDetails]))),
    onScaleEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [scale.ScaleEndDetails]))),
    onForcePressStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [force_press.ForcePressDetails]))),
    onForcePressPeak: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [force_press.ForcePressDetails]))),
    onForcePressUpdate: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [force_press.ForcePressDetails]))),
    onForcePressEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [force_press.ForcePressDetails]))),
    behavior: dart.finalFieldType(dart.nullable(proxy_box.HitTestBehavior)),
    excludeFromSemantics: dart.finalFieldType(core.bool),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior)
  }));
  var C718;
  var child$28 = dart.privateName(gesture_detector, "RawGestureDetector.child");
  var gestures$ = dart.privateName(gesture_detector, "RawGestureDetector.gestures");
  var behavior$2 = dart.privateName(gesture_detector, "RawGestureDetector.behavior");
  var excludeFromSemantics$0 = dart.privateName(gesture_detector, "RawGestureDetector.excludeFromSemantics");
  var semantics$ = dart.privateName(gesture_detector, "RawGestureDetector.semantics");
  gesture_detector.RawGestureDetector = class RawGestureDetector extends framework.StatefulWidget {
    get child() {
      return this[child$28];
    }
    set child(value) {
      super.child = value;
    }
    get gestures() {
      return this[gestures$];
    }
    set gestures(value) {
      super.gestures = value;
    }
    get behavior() {
      return this[behavior$2];
    }
    set behavior(value) {
      super.behavior = value;
    }
    get excludeFromSemantics() {
      return this[excludeFromSemantics$0];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get semantics() {
      return this[semantics$];
    }
    set semantics(value) {
      super.semantics = value;
    }
    createState() {
      return new gesture_detector.RawGestureDetectorState.new();
    }
  };
  (gesture_detector.RawGestureDetector.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let gestures = opts && 'gestures' in opts ? opts.gestures : C718 || CT.C718;
    if (gestures == null) dart.nullFailed(L26, 984, 10, "gestures");
    let behavior = opts && 'behavior' in opts ? opts.behavior : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    if (excludeFromSemantics == null) dart.nullFailed(L26, 986, 10, "excludeFromSemantics");
    let semantics = opts && 'semantics' in opts ? opts.semantics : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$28] = child;
    this[gestures$] = gestures;
    this[behavior$2] = behavior;
    this[excludeFromSemantics$0] = excludeFromSemantics;
    this[semantics$] = semantics;
    if (!(gestures != null)) dart.assertFailed(null, L26, 988, 15, "gestures != null");
    if (!(excludeFromSemantics != null)) dart.assertFailed(null, L26, 989, 15, "excludeFromSemantics != null");
    gesture_detector.RawGestureDetector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = gesture_detector.RawGestureDetector.prototype;
  dart.addTypeTests(gesture_detector.RawGestureDetector);
  dart.addTypeCaches(gesture_detector.RawGestureDetector);
  dart.setMethodSignature(gesture_detector.RawGestureDetector, () => ({
    __proto__: dart.getMethods(gesture_detector.RawGestureDetector.__proto__),
    createState: dart.fnType(gesture_detector.RawGestureDetectorState, [])
  }));
  dart.setLibraryUri(gesture_detector.RawGestureDetector, L25);
  dart.setFieldSignature(gesture_detector.RawGestureDetector, () => ({
    __proto__: dart.getFields(gesture_detector.RawGestureDetector.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    gestures: dart.finalFieldType(core.Map$(core.Type, gesture_detector.GestureRecognizerFactory$(recognizer.GestureRecognizer))),
    behavior: dart.finalFieldType(dart.nullable(proxy_box.HitTestBehavior)),
    excludeFromSemantics: dart.finalFieldType(core.bool),
    semantics: dart.finalFieldType(dart.nullable(gesture_detector.SemanticsGestureDelegate))
  }));
  var _recognizers = dart.privateName(gesture_detector, "_recognizers");
  var C719;
  var _semantics = dart.privateName(gesture_detector, "_semantics");
  var _syncAll = dart.privateName(gesture_detector, "_syncAll");
  var _updateSemanticsForRenderObject = dart.privateName(gesture_detector, "_updateSemanticsForRenderObject");
  var _handlePointerDown$0 = dart.privateName(gesture_detector, "_handlePointerDown");
  var _defaultBehavior = dart.privateName(gesture_detector, "_defaultBehavior");
  var C722;
  var C723;
  var C724;
  var C721;
  var C720;
  var C727;
  var C728;
  var C726;
  var C725;
  gesture_detector.RawGestureDetectorState = class RawGestureDetectorState extends framework.State$(gesture_detector.RawGestureDetector) {
    initState() {
      let t61;
      super.initState();
      this[_semantics] = (t61 = this.widget.semantics, t61 == null ? new gesture_detector._DefaultSemanticsGestureDelegate.new(this) : t61);
      this[_syncAll](this.widget.gestures);
    }
    didUpdateWidget(oldWidget) {
      let t61;
      gesture_detector.RawGestureDetector.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L26, 1102, 43, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!(oldWidget.semantics == null && this.widget.semantics == null)) {
        this[_semantics] = (t61 = this.widget.semantics, t61 == null ? new gesture_detector._DefaultSemanticsGestureDelegate.new(this) : t61);
      }
      this[_syncAll](this.widget.gestures);
    }
    replaceGestureRecognizers(gestures) {
      if (gestures == null) dart.nullFailed(L26, 1123, 70, "gestures");
      if (!dart.test(dart.fn(() => {
        if (!dart.test(dart.nullCheck(dart.nullCheck(this.context.findRenderObject()).owner).debugDoingLayout)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Unexpected call to replaceGestureRecognizers() method of RawGestureDetectorState."), new assertions.ErrorDescription.new("The replaceGestureRecognizers() method can only be called during the layout phase."), new assertions.ErrorHint.new("To set the gesture recognizers at other times, trigger a new build using setState() " + "and provide the new gesture recognizers as constructor arguments to the corresponding " + "RawGestureDetector or GestureDetector object.")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L26, 1124, 12, "() {\r\n      if (!context.findRenderObject()!.owner!.debugDoingLayout) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Unexpected call to replaceGestureRecognizers() method of RawGestureDetectorState.'),\r\n          ErrorDescription('The replaceGestureRecognizers() method can only be called during the layout phase.'),\r\n          ErrorHint(\r\n            'To set the gesture recognizers at other times, trigger a new build using setState() '\r\n            'and provide the new gesture recognizers as constructor arguments to the corresponding '\r\n            'RawGestureDetector or GestureDetector object.'\r\n          ),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      this[_syncAll](gestures);
      if (!dart.test(this.widget.excludeFromSemantics)) {
        let semanticsGestureHandler = proxy_box.RenderSemanticsGestureHandler.as(dart.nullCheck(this.context.findRenderObject()));
        this[_updateSemanticsForRenderObject](semanticsGestureHandler);
      }
    }
    replaceSemanticsActions(actions) {
      if (actions == null) dart.nullFailed(L26, 1156, 53, "actions");
      if (dart.test(this.widget.excludeFromSemantics)) return;
      let semanticsGestureHandler = RenderSemanticsGestureHandlerN().as(this.context.findRenderObject());
      if (!dart.test(dart.fn(() => {
        if (semanticsGestureHandler == null) {
          dart.throw(assertions.FlutterError.new("Unexpected call to replaceSemanticsActions() method of RawGestureDetectorState.\n" + "The replaceSemanticsActions() method can only be called after the RenderSemanticsGestureHandler has been created."));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L26, 1161, 12, "() {\r\n      if (semanticsGestureHandler == null) {\r\n        throw FlutterError(\r\n          'Unexpected call to replaceSemanticsActions() method of RawGestureDetectorState.\\n'\r\n          'The replaceSemanticsActions() method can only be called after the RenderSemanticsGestureHandler has been created.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      dart.nullCheck(semanticsGestureHandler).validActions = actions;
    }
    dispose() {
      for (let recognizer of dart.nullCheck(this[_recognizers])[$values])
        recognizer.dispose();
      this[_recognizers] = null;
      super.dispose();
    }
    [_syncAll](gestures) {
      let t61;
      if (gestures == null) dart.nullFailed(L26, 1182, 53, "gestures");
      if (!(this[_recognizers] != null)) dart.assertFailed(null, L26, 1183, 12, "_recognizers != null");
      let oldRecognizers = dart.nullCheck(this[_recognizers]);
      this[_recognizers] = new (LinkedMapOfType$GestureRecognizer()).new();
      for (let type of gestures[$keys]) {
        if (!(gestures[$_get](type) != null)) dart.assertFailed(null, L26, 1187, 14, "gestures[type] != null");
        if (!dart.test(dart.nullCheck(gestures[$_get](type))[_debugAssertTypeMatches](type))) dart.assertFailed(null, L26, 1188, 14, "gestures[type]!._debugAssertTypeMatches(type)");
        if (!!dart.test(dart.nullCheck(this[_recognizers])[$containsKey](type))) dart.assertFailed(null, L26, 1189, 14, "!_recognizers!.containsKey(type)");
        dart.nullCheck(this[_recognizers])[$_set](type, (t61 = oldRecognizers[$_get](type), t61 == null ? dart.nullCheck(gestures[$_get](type))._constructor() : t61));
        if (!dart.equals(dart.runtimeType(dart.nullCheck(this[_recognizers])[$_get](type)), type)) dart.assertFailed("GestureRecognizerFactory of type " + dart.str(type) + " created a GestureRecognizer of type " + dart.str(dart.runtimeType(dart.nullCheck(this[_recognizers])[$_get](type))) + ". The GestureRecognizerFactory must be specialized with the type of the class that it returns from its constructor method.", L26, 1191, 14, "_recognizers![type].runtimeType == type");
        dart.nullCheck(gestures[$_get](type)).initializer(dart.nullCheck(dart.nullCheck(this[_recognizers])[$_get](type)));
      }
      for (let type of oldRecognizers[$keys]) {
        if (!dart.test(dart.nullCheck(this[_recognizers])[$containsKey](type))) dart.nullCheck(oldRecognizers[$_get](type)).dispose();
      }
    }
    [_handlePointerDown$0](event) {
      if (event == null) dart.nullFailed(L26, 1200, 44, "event");
      if (!(this[_recognizers] != null)) dart.assertFailed(null, L26, 1201, 12, "_recognizers != null");
      for (let recognizer of dart.nullCheck(this[_recognizers])[$values])
        recognizer.addPointer(event);
    }
    get [_defaultBehavior]() {
      return this.widget.child == null ? proxy_box.HitTestBehavior.translucent : proxy_box.HitTestBehavior.deferToChild;
    }
    [_updateSemanticsForRenderObject](renderObject) {
      if (renderObject == null) dart.nullFailed(L26, 1210, 70, "renderObject");
      if (!!dart.test(this.widget.excludeFromSemantics)) dart.assertFailed(null, L26, 1211, 12, "!widget.excludeFromSemantics");
      if (!(this[_semantics] != null)) dart.assertFailed(null, L26, 1212, 12, "_semantics != null");
      dart.nullCheck(this[_semantics]).assignSemantics(renderObject);
    }
    build(context) {
      let t61;
      if (context == null) dart.nullFailed(L26, 1217, 29, "context");
      let result = new basic.Listener.new({onPointerDown: dart.bind(this, _handlePointerDown$0), behavior: (t61 = this.widget.behavior, t61 == null ? this[_defaultBehavior] : t61), child: this.widget.child, $creationLocationd_0dea112b090073317d4: C720 || CT.C720});
      if (!dart.test(this.widget.excludeFromSemantics)) result = new gesture_detector._GestureSemantics.new({child: result, assignSemantics: dart.bind(this, _updateSemanticsForRenderObject), $creationLocationd_0dea112b090073317d4: C725 || CT.C725});
      return result;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L26, 1232, 56, "properties");
      super.debugFillProperties(properties);
      if (this[_recognizers] == null) {
        properties.add(diagnostics$.DiagnosticsNode.message("DISPOSED"));
      } else {
        let gestures = dart.nullCheck(this[_recognizers])[$values][$map](core.String, dart.fn(recognizer => {
          if (recognizer == null) dart.nullFailed(L26, 1237, 89, "recognizer");
          return recognizer.debugDescription;
        }, GestureRecognizerToString()))[$toList]();
        properties.add(new (IterablePropertyOfString()).new("gestures", gestures, {ifEmpty: "<none>"}));
        properties.add(new (IterablePropertyOfGestureRecognizer()).new("recognizers", dart.nullCheck(this[_recognizers])[$values], {level: diagnostics$.DiagnosticLevel.fine}));
        properties.add(new (DiagnosticsPropertyOfbool()).new("excludeFromSemantics", this.widget.excludeFromSemantics, {defaultValue: false}));
        if (!dart.test(this.widget.excludeFromSemantics)) {
          properties.add(new (DiagnosticsPropertyOfSemanticsGestureDelegate()).new("semantics", this.widget.semantics, {defaultValue: null}));
        }
      }
      properties.add(new (EnumPropertyOfHitTestBehavior()).new("behavior", this.widget.behavior, {defaultValue: null}));
    }
  };
  (gesture_detector.RawGestureDetectorState.new = function() {
    this[_recognizers] = C719 || CT.C719;
    this[_semantics] = null;
    gesture_detector.RawGestureDetectorState.__proto__.new.call(this);
    ;
  }).prototype = gesture_detector.RawGestureDetectorState.prototype;
  dart.addTypeTests(gesture_detector.RawGestureDetectorState);
  dart.addTypeCaches(gesture_detector.RawGestureDetectorState);
  dart.setMethodSignature(gesture_detector.RawGestureDetectorState, () => ({
    __proto__: dart.getMethods(gesture_detector.RawGestureDetectorState.__proto__),
    replaceGestureRecognizers: dart.fnType(dart.void, [core.Map$(core.Type, gesture_detector.GestureRecognizerFactory$(recognizer.GestureRecognizer))]),
    replaceSemanticsActions: dart.fnType(dart.void, [core.Set$(ui.SemanticsAction)]),
    [_syncAll]: dart.fnType(dart.void, [core.Map$(core.Type, gesture_detector.GestureRecognizerFactory$(recognizer.GestureRecognizer))]),
    [_handlePointerDown$0]: dart.fnType(dart.void, [events.PointerDownEvent]),
    [_updateSemanticsForRenderObject]: dart.fnType(dart.void, [proxy_box.RenderSemanticsGestureHandler]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(gesture_detector.RawGestureDetectorState, () => ({
    __proto__: dart.getGetters(gesture_detector.RawGestureDetectorState.__proto__),
    [_defaultBehavior]: proxy_box.HitTestBehavior
  }));
  dart.setLibraryUri(gesture_detector.RawGestureDetectorState, L25);
  dart.setFieldSignature(gesture_detector.RawGestureDetectorState, () => ({
    __proto__: dart.getFields(gesture_detector.RawGestureDetectorState.__proto__),
    [_recognizers]: dart.fieldType(dart.nullable(core.Map$(core.Type, recognizer.GestureRecognizer))),
    [_semantics]: dart.fieldType(dart.nullable(gesture_detector.SemanticsGestureDelegate))
  }));
  var assignSemantics$ = dart.privateName(gesture_detector, "_GestureSemantics.assignSemantics");
  gesture_detector._GestureSemantics = class _GestureSemantics extends framework.SingleChildRenderObjectWidget {
    get assignSemantics() {
      return this[assignSemantics$];
    }
    set assignSemantics(value) {
      super.assignSemantics = value;
    }
    createRenderObject(context) {
      let t61;
      if (context == null) dart.nullFailed(L26, 1262, 65, "context");
      let renderObject = new proxy_box.RenderSemanticsGestureHandler.new();
      t61 = renderObject;
      this.assignSemantics(t61);
      return renderObject;
    }
    updateRenderObject(context, renderObject) {
      let t61;
      if (context == null) dart.nullFailed(L26, 1269, 40, "context");
      proxy_box.RenderSemanticsGestureHandler.as(renderObject);
      if (renderObject == null) dart.nullFailed(L26, 1269, 79, "renderObject");
      t61 = renderObject;
      this.assignSemantics(t61);
    }
  };
  (gesture_detector._GestureSemantics.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let assignSemantics = opts && 'assignSemantics' in opts ? opts.assignSemantics : null;
    if (assignSemantics == null) dart.nullFailed(L26, 1255, 19, "assignSemantics");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[assignSemantics$] = assignSemantics;
    if (!(assignSemantics != null)) dart.assertFailed(null, L26, 1256, 15, "assignSemantics != null");
    gesture_detector._GestureSemantics.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = gesture_detector._GestureSemantics.prototype;
  dart.addTypeTests(gesture_detector._GestureSemantics);
  dart.addTypeCaches(gesture_detector._GestureSemantics);
  dart.setMethodSignature(gesture_detector._GestureSemantics, () => ({
    __proto__: dart.getMethods(gesture_detector._GestureSemantics.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderSemanticsGestureHandler, [framework.BuildContext])
  }));
  dart.setLibraryUri(gesture_detector._GestureSemantics, L25);
  dart.setFieldSignature(gesture_detector._GestureSemantics, () => ({
    __proto__: dart.getFields(gesture_detector._GestureSemantics.__proto__),
    assignSemantics: dart.finalFieldType(dart.fnType(dart.void, [proxy_box.RenderSemanticsGestureHandler]))
  }));
  var _getTapHandler = dart.privateName(gesture_detector, "_getTapHandler");
  var _getLongPressHandler = dart.privateName(gesture_detector, "_getLongPressHandler");
  var _getHorizontalDragUpdateHandler = dart.privateName(gesture_detector, "_getHorizontalDragUpdateHandler");
  var _getVerticalDragUpdateHandler = dart.privateName(gesture_detector, "_getVerticalDragUpdateHandler");
  var LongPressStartDetails_localPosition = dart.privateName(long_press, "LongPressStartDetails.localPosition");
  var LongPressStartDetails_globalPosition = dart.privateName(long_press, "LongPressStartDetails.globalPosition");
  var C729;
  var Velocity_pixelsPerSecond = dart.privateName(velocity_tracker, "Velocity.pixelsPerSecond");
  var C731;
  var LongPressEndDetails_velocity = dart.privateName(long_press, "LongPressEndDetails.velocity");
  var LongPressEndDetails_localPosition = dart.privateName(long_press, "LongPressEndDetails.localPosition");
  var LongPressEndDetails_globalPosition = dart.privateName(long_press, "LongPressEndDetails.globalPosition");
  var C730;
  gesture_detector._DefaultSemanticsGestureDelegate = class _DefaultSemanticsGestureDelegate extends gesture_detector.SemanticsGestureDelegate {
    assignSemantics(renderObject) {
      let t61;
      if (renderObject == null) dart.nullFailed(L26, 1310, 54, "renderObject");
      if (!!dart.test(this.detectorState.widget.excludeFromSemantics)) dart.assertFailed(null, L26, 1311, 12, "!detectorState.widget.excludeFromSemantics");
      let recognizers = dart.nullCheck(this.detectorState[_recognizers]);
      t61 = renderObject;
      (() => {
        t61.onTap = this[_getTapHandler](recognizers);
        t61.onLongPress = this[_getLongPressHandler](recognizers);
        t61.onHorizontalDragUpdate = this[_getHorizontalDragUpdateHandler](recognizers);
        t61.onVerticalDragUpdate = this[_getVerticalDragUpdateHandler](recognizers);
        return t61;
      })();
    }
    [_getTapHandler](recognizers) {
      if (recognizers == null) dart.nullFailed(L26, 1320, 67, "recognizers");
      let tap = TapGestureRecognizerN().as(recognizers[$_get](dart.wrapType(tap$.TapGestureRecognizer)));
      if (tap == null) return null;
      if (!tap$.TapGestureRecognizer.is(tap)) dart.assertFailed(null, L26, 1324, 12, "tap is TapGestureRecognizer");
      return dart.fn(() => {
        if (!(tap != null)) dart.assertFailed(null, L26, 1327, 14, "tap != null");
        if (tap.onTapDown != null) dart.nullCheck(tap.onTapDown)(new tap$.TapDownDetails.new());
        if (tap.onTapUp != null) dart.nullCheck(tap.onTapUp)(new tap$.TapUpDetails.new({kind: ui.PointerDeviceKind.unknown}));
        if (tap.onTap != null) dart.nullCheck(tap.onTap)();
      }, VoidTovoid());
    }
    [_getLongPressHandler](recognizers) {
      if (recognizers == null) dart.nullFailed(L26, 1337, 79, "recognizers");
      let longPress = LongPressGestureRecognizerN().as(recognizers[$_get](dart.wrapType(long_press.LongPressGestureRecognizer)));
      if (longPress == null) return null;
      return dart.fn(() => {
        if (!long_press.LongPressGestureRecognizer.is(longPress)) dart.assertFailed(null, L26, 1343, 14, "longPress is LongPressGestureRecognizer");
        if (longPress.onLongPressStart != null) dart.nullCheck(longPress.onLongPressStart)(C729 || CT.C729);
        if (longPress.onLongPress != null) dart.nullCheck(longPress.onLongPress)();
        if (longPress.onLongPressEnd != null) dart.nullCheck(longPress.onLongPressEnd)(C730 || CT.C730);
        if (longPress.onLongPressUp != null) dart.nullCheck(longPress.onLongPressUp)();
      }, VoidTovoid());
    }
    [_getHorizontalDragUpdateHandler](recognizers) {
      if (recognizers == null) dart.nullFailed(L26, 1355, 91, "recognizers");
      let horizontal = HorizontalDragGestureRecognizerN().as(recognizers[$_get](dart.wrapType(monodrag.HorizontalDragGestureRecognizer)));
      let pan = PanGestureRecognizerN().as(recognizers[$_get](dart.wrapType(monodrag.PanGestureRecognizer)));
      let horizontalHandler = horizontal == null ? null : dart.fn(details => {
        if (details == null) dart.nullFailed(L26, 1361, 26, "details");
        if (!monodrag.HorizontalDragGestureRecognizer.is(horizontal)) dart.assertFailed(null, L26, 1362, 16, "horizontal is HorizontalDragGestureRecognizer");
        if (horizontal.onDown != null) dart.nullCheck(horizontal.onDown)(new drag_details.DragDownDetails.new());
        if (horizontal.onStart != null) dart.nullCheck(horizontal.onStart)(new drag_details.DragStartDetails.new());
        if (horizontal.onUpdate != null) dart.nullCheck(horizontal.onUpdate)(details);
        if (horizontal.onEnd != null) dart.nullCheck(horizontal.onEnd)(new drag_details.DragEndDetails.new({primaryVelocity: 0.0}));
      }, DragUpdateDetailsTovoid());
      let panHandler = pan == null ? null : dart.fn(details => {
        if (details == null) dart.nullFailed(L26, 1375, 26, "details");
        if (!monodrag.PanGestureRecognizer.is(pan)) dart.assertFailed(null, L26, 1376, 16, "pan is PanGestureRecognizer");
        if (pan.onDown != null) dart.nullCheck(pan.onDown)(new drag_details.DragDownDetails.new());
        if (pan.onStart != null) dart.nullCheck(pan.onStart)(new drag_details.DragStartDetails.new());
        if (pan.onUpdate != null) dart.nullCheck(pan.onUpdate)(details);
        if (pan.onEnd != null) dart.nullCheck(pan.onEnd)(new drag_details.DragEndDetails.new());
      }, DragUpdateDetailsTovoid());
      if (horizontalHandler == null && panHandler == null) return null;
      return dart.fn(details => {
        if (details == null) dart.nullFailed(L26, 1389, 31, "details");
        if (horizontalHandler != null) horizontalHandler(details);
        if (panHandler != null) panHandler(details);
      }, DragUpdateDetailsTovoid());
    }
    [_getVerticalDragUpdateHandler](recognizers) {
      if (recognizers == null) dart.nullFailed(L26, 1397, 89, "recognizers");
      let vertical = VerticalDragGestureRecognizerN().as(recognizers[$_get](dart.wrapType(monodrag.VerticalDragGestureRecognizer)));
      let pan = PanGestureRecognizerN().as(recognizers[$_get](dart.wrapType(monodrag.PanGestureRecognizer)));
      let verticalHandler = vertical == null ? null : dart.fn(details => {
        if (details == null) dart.nullFailed(L26, 1403, 26, "details");
        if (!monodrag.VerticalDragGestureRecognizer.is(vertical)) dart.assertFailed(null, L26, 1404, 16, "vertical is VerticalDragGestureRecognizer");
        if (vertical.onDown != null) dart.nullCheck(vertical.onDown)(new drag_details.DragDownDetails.new());
        if (vertical.onStart != null) dart.nullCheck(vertical.onStart)(new drag_details.DragStartDetails.new());
        if (vertical.onUpdate != null) dart.nullCheck(vertical.onUpdate)(details);
        if (vertical.onEnd != null) dart.nullCheck(vertical.onEnd)(new drag_details.DragEndDetails.new({primaryVelocity: 0.0}));
      }, DragUpdateDetailsTovoid());
      let panHandler = pan == null ? null : dart.fn(details => {
        if (details == null) dart.nullFailed(L26, 1417, 26, "details");
        if (!monodrag.PanGestureRecognizer.is(pan)) dart.assertFailed(null, L26, 1418, 16, "pan is PanGestureRecognizer");
        if (pan.onDown != null) dart.nullCheck(pan.onDown)(new drag_details.DragDownDetails.new());
        if (pan.onStart != null) dart.nullCheck(pan.onStart)(new drag_details.DragStartDetails.new());
        if (pan.onUpdate != null) dart.nullCheck(pan.onUpdate)(details);
        if (pan.onEnd != null) dart.nullCheck(pan.onEnd)(new drag_details.DragEndDetails.new());
      }, DragUpdateDetailsTovoid());
      if (verticalHandler == null && panHandler == null) return null;
      return dart.fn(details => {
        if (details == null) dart.nullFailed(L26, 1431, 31, "details");
        if (verticalHandler != null) verticalHandler(details);
        if (panHandler != null) panHandler(details);
      }, DragUpdateDetailsTovoid());
    }
  };
  (gesture_detector._DefaultSemanticsGestureDelegate.new = function(detectorState) {
    if (detectorState == null) dart.nullFailed(L26, 1305, 41, "detectorState");
    this.detectorState = detectorState;
    gesture_detector._DefaultSemanticsGestureDelegate.__proto__.new.call(this);
    ;
  }).prototype = gesture_detector._DefaultSemanticsGestureDelegate.prototype;
  dart.addTypeTests(gesture_detector._DefaultSemanticsGestureDelegate);
  dart.addTypeCaches(gesture_detector._DefaultSemanticsGestureDelegate);
  dart.setMethodSignature(gesture_detector._DefaultSemanticsGestureDelegate, () => ({
    __proto__: dart.getMethods(gesture_detector._DefaultSemanticsGestureDelegate.__proto__),
    assignSemantics: dart.fnType(dart.void, [proxy_box.RenderSemanticsGestureHandler]),
    [_getTapHandler]: dart.fnType(dart.nullable(dart.fnType(dart.void, [])), [core.Map$(core.Type, recognizer.GestureRecognizer)]),
    [_getLongPressHandler]: dart.fnType(dart.nullable(dart.fnType(dart.void, [])), [core.Map$(core.Type, recognizer.GestureRecognizer)]),
    [_getHorizontalDragUpdateHandler]: dart.fnType(dart.nullable(dart.fnType(dart.void, [drag_details.DragUpdateDetails])), [core.Map$(core.Type, recognizer.GestureRecognizer)]),
    [_getVerticalDragUpdateHandler]: dart.fnType(dart.nullable(dart.fnType(dart.void, [drag_details.DragUpdateDetails])), [core.Map$(core.Type, recognizer.GestureRecognizer)])
  }));
  dart.setLibraryUri(gesture_detector._DefaultSemanticsGestureDelegate, L25);
  dart.setFieldSignature(gesture_detector._DefaultSemanticsGestureDelegate, () => ({
    __proto__: dart.getFields(gesture_detector._DefaultSemanticsGestureDelegate.__proto__),
    detectorState: dart.finalFieldType(gesture_detector.RawGestureDetectorState)
  }));
  var axisDirection$2 = dart.privateName(scrollable$, "Scrollable.axisDirection");
  var controller$1 = dart.privateName(scrollable$, "Scrollable.controller");
  var physics$0 = dart.privateName(scrollable$, "Scrollable.physics");
  var viewportBuilder$ = dart.privateName(scrollable$, "Scrollable.viewportBuilder");
  var incrementCalculator$ = dart.privateName(scrollable$, "Scrollable.incrementCalculator");
  var excludeFromSemantics$1 = dart.privateName(scrollable$, "Scrollable.excludeFromSemantics");
  var semanticChildCount$ = dart.privateName(scrollable$, "Scrollable.semanticChildCount");
  var dragStartBehavior$2 = dart.privateName(scrollable$, "Scrollable.dragStartBehavior");
  var restorationId$2 = dart.privateName(scrollable$, "Scrollable.restorationId");
  scrollable$.Scrollable = class Scrollable extends framework.StatefulWidget {
    get axisDirection() {
      return this[axisDirection$2];
    }
    set axisDirection(value) {
      super.axisDirection = value;
    }
    get controller() {
      return this[controller$1];
    }
    set controller(value) {
      super.controller = value;
    }
    get physics() {
      return this[physics$0];
    }
    set physics(value) {
      super.physics = value;
    }
    get viewportBuilder() {
      return this[viewportBuilder$];
    }
    set viewportBuilder(value) {
      super.viewportBuilder = value;
    }
    get incrementCalculator() {
      return this[incrementCalculator$];
    }
    set incrementCalculator(value) {
      super.incrementCalculator = value;
    }
    get excludeFromSemantics() {
      return this[excludeFromSemantics$1];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get semanticChildCount() {
      return this[semanticChildCount$];
    }
    set semanticChildCount(value) {
      super.semanticChildCount = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$2];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get restorationId() {
      return this[restorationId$2];
    }
    set restorationId(value) {
      super.restorationId = value;
    }
    get axis() {
      return basic_types.axisDirectionToAxis(this.axisDirection);
    }
    createState() {
      return new scrollable$.ScrollableState.new();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L83, 257, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfAxisDirection()).new("axisDirection", this.axisDirection));
      properties.add(new (DiagnosticsPropertyOfScrollPhysics()).new("physics", this.physics));
      properties.add(new diagnostics$.StringProperty.new("restorationId", this.restorationId));
    }
    static of(context) {
      let t61;
      if (context == null) dart.nullFailed(L83, 274, 43, "context");
      let widget = context.dependOnInheritedWidgetOfExactType(scrollable$._ScrollableScope);
      t61 = widget;
      return t61 == null ? null : t61.scrollable;
    }
    static recommendDeferredLoadingForContext(context) {
      let t61;
      if (context == null) dart.nullFailed(L83, 292, 63, "context");
      let widget = _ScrollableScopeN().as((t61 = context.getElementForInheritedWidgetOfExactType(scrollable$._ScrollableScope), t61 == null ? null : t61.widget));
      if (widget == null) {
        return false;
      }
      return widget.position.recommendDeferredLoading(context);
    }
    static ensureVisible(context, opts) {
      let t61;
      if (context == null) dart.nullFailed(L83, 303, 18, "context");
      let alignment = opts && 'alignment' in opts ? opts.alignment : 0;
      if (alignment == null) dart.nullFailed(L83, 304, 12, "alignment");
      let duration = opts && 'duration' in opts ? opts.duration : C677 || CT.C677;
      if (duration == null) dart.nullFailed(L83, 305, 14, "duration");
      let curve = opts && 'curve' in opts ? opts.curve : C678 || CT.C678;
      if (curve == null) dart.nullFailed(L83, 306, 11, "curve");
      let alignmentPolicy = opts && 'alignmentPolicy' in opts ? opts.alignmentPolicy : C679 || CT.C679;
      if (alignmentPolicy == null) dart.nullFailed(L83, 307, 35, "alignmentPolicy");
      let futures = JSArrayOfFutureOfvoid().of([]);
      let targetRenderObject = null;
      let scrollable = scrollable$.Scrollable.of(context);
      while (scrollable != null) {
        futures[$add](scrollable.position.ensureVisible(dart.nullCheck(context.findRenderObject()), {alignment: alignment, duration: duration, curve: curve, alignmentPolicy: alignmentPolicy, targetRenderObject: targetRenderObject}));
        targetRenderObject = (t61 = targetRenderObject, t61 == null ? context.findRenderObject() : t61);
        context = scrollable.context;
        scrollable = scrollable$.Scrollable.of(context);
      }
      if (dart.test(futures[$isEmpty]) || dart.equals(duration, core.Duration.zero)) return FutureOfvoid().value();
      if (futures[$length] === 1) return futures[$single];
      return async.Future.wait(dart.void, futures).then(dart.void, dart.fn(_ => {
        if (_ == null) dart.nullFailed(L83, 338, 62, "_");
        return null;
      }, ListOfvoidToNull()));
    }
  };
  (scrollable$.Scrollable.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : C642 || CT.C642;
    if (axisDirection == null) dart.nullFailed(L83, 87, 10, "axisDirection");
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let viewportBuilder = opts && 'viewportBuilder' in opts ? opts.viewportBuilder : null;
    if (viewportBuilder == null) dart.nullFailed(L83, 90, 19, "viewportBuilder");
    let incrementCalculator = opts && 'incrementCalculator' in opts ? opts.incrementCalculator : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    if (excludeFromSemantics == null) dart.nullFailed(L83, 92, 10, "excludeFromSemantics");
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C492 || CT.C492;
    if (dragStartBehavior == null) dart.nullFailed(L83, 94, 10, "dragStartBehavior");
    let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[axisDirection$2] = axisDirection;
    this[controller$1] = controller;
    this[physics$0] = physics;
    this[viewportBuilder$] = viewportBuilder;
    this[incrementCalculator$] = incrementCalculator;
    this[excludeFromSemantics$1] = excludeFromSemantics;
    this[semanticChildCount$] = semanticChildCount;
    this[dragStartBehavior$2] = dragStartBehavior;
    this[restorationId$2] = restorationId;
    if (!(axisDirection != null)) dart.assertFailed(null, L83, 96, 15, "axisDirection != null");
    if (!(dragStartBehavior != null)) dart.assertFailed(null, L83, 97, 15, "dragStartBehavior != null");
    if (!(viewportBuilder != null)) dart.assertFailed(null, L83, 98, 15, "viewportBuilder != null");
    if (!(excludeFromSemantics != null)) dart.assertFailed(null, L83, 99, 15, "excludeFromSemantics != null");
    if (!(semanticChildCount == null || dart.notNull(semanticChildCount) >= 0)) dart.assertFailed(null, L83, 100, 15, "semanticChildCount == null || semanticChildCount >= 0");
    scrollable$.Scrollable.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scrollable$.Scrollable.prototype;
  dart.addTypeTests(scrollable$.Scrollable);
  dart.addTypeCaches(scrollable$.Scrollable);
  dart.setMethodSignature(scrollable$.Scrollable, () => ({
    __proto__: dart.getMethods(scrollable$.Scrollable.__proto__),
    createState: dart.fnType(scrollable$.ScrollableState, [])
  }));
  dart.setGetterSignature(scrollable$.Scrollable, () => ({
    __proto__: dart.getGetters(scrollable$.Scrollable.__proto__),
    axis: basic_types.Axis
  }));
  dart.setLibraryUri(scrollable$.Scrollable, L84);
  dart.setFieldSignature(scrollable$.Scrollable, () => ({
    __proto__: dart.getFields(scrollable$.Scrollable.__proto__),
    axisDirection: dart.finalFieldType(basic_types.AxisDirection),
    controller: dart.finalFieldType(dart.nullable(scroll_controller.ScrollController)),
    physics: dart.finalFieldType(dart.nullable(scroll_physics.ScrollPhysics)),
    viewportBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, viewport_offset.ViewportOffset])),
    incrementCalculator: dart.finalFieldType(dart.nullable(dart.fnType(core.double, [scrollable$.ScrollIncrementDetails]))),
    excludeFromSemantics: dart.finalFieldType(core.bool),
    semanticChildCount: dart.finalFieldType(dart.nullable(core.int)),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    restorationId: dart.finalFieldType(dart.nullable(core.String))
  }));
  var scrollable$0 = dart.privateName(scrollable$, "_ScrollableScope.scrollable");
  var position$1 = dart.privateName(scrollable$, "_ScrollableScope.position");
  scrollable$._ScrollableScope = class _ScrollableScope extends framework.InheritedWidget {
    get scrollable() {
      return this[scrollable$0];
    }
    set scrollable(value) {
      super.scrollable = value;
    }
    get position() {
      return this[position$1];
    }
    set position(value) {
      super.position = value;
    }
    updateShouldNotify(old) {
      scrollable$._ScrollableScope.as(old);
      if (old == null) dart.nullFailed(L83, 358, 44, "old");
      return !dart.equals(this.position, old.position);
    }
  };
  (scrollable$._ScrollableScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollable = opts && 'scrollable' in opts ? opts.scrollable : null;
    if (scrollable == null) dart.nullFailed(L83, 347, 19, "scrollable");
    let position = opts && 'position' in opts ? opts.position : null;
    if (position == null) dart.nullFailed(L83, 348, 19, "position");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L83, 349, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[scrollable$0] = scrollable;
    this[position$1] = position;
    if (!(scrollable != null)) dart.assertFailed(null, L83, 350, 15, "scrollable != null");
    if (!(child != null)) dart.assertFailed(null, L83, 351, 15, "child != null");
    scrollable$._ScrollableScope.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scrollable$._ScrollableScope.prototype;
  dart.addTypeTests(scrollable$._ScrollableScope);
  dart.addTypeCaches(scrollable$._ScrollableScope);
  dart.setMethodSignature(scrollable$._ScrollableScope, () => ({
    __proto__: dart.getMethods(scrollable$._ScrollableScope.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(scrollable$._ScrollableScope, L84);
  dart.setFieldSignature(scrollable$._ScrollableScope, () => ({
    __proto__: dart.getFields(scrollable$._ScrollableScope.__proto__),
    scrollable: dart.finalFieldType(scrollable$.ScrollableState),
    position: dart.finalFieldType(scroll_position.ScrollPosition)
  }));
  var _position = dart.privateName(scrollable$, "_position");
  var _persistedScrollOffset = dart.privateName(scrollable$, "_persistedScrollOffset");
  var __ScrollableState__configuration = dart.privateName(scrollable$, "_#ScrollableState#_configuration");
  var __ScrollableState__configuration_isSet = dart.privateName(scrollable$, "_#ScrollableState#_configuration#isSet");
  var _physics = dart.privateName(scrollable$, "_physics");
  var _scrollSemanticsKey = dart.privateName(scrollable$, "_scrollSemanticsKey");
  var _gestureDetectorKey = dart.privateName(scrollable$, "_gestureDetectorKey");
  var _ignorePointerKey$ = dart.privateName(scrollable$, "_ignorePointerKey");
  var _gestureRecognizers = dart.privateName(scrollable$, "_gestureRecognizers");
  var _shouldIgnorePointer = dart.privateName(scrollable$, "_shouldIgnorePointer");
  var _lastCanDrag = dart.privateName(scrollable$, "_lastCanDrag");
  var _lastAxisDirection = dart.privateName(scrollable$, "_lastAxisDirection");
  var _drag = dart.privateName(scrollable$, "_drag");
  var _hold = dart.privateName(scrollable$, "_hold");
  var _configuration = dart.privateName(scrollable$, "_configuration");
  var _updatePosition = dart.privateName(scrollable$, "_updatePosition");
  var _shouldUpdatePosition = dart.privateName(scrollable$, "_shouldUpdatePosition");
  var _handleDragCancel = dart.privateName(scrollable$, "_handleDragCancel");
  var _handleDragDown = dart.privateName(scrollable$, "_handleDragDown");
  var _handleDragStart$ = dart.privateName(scrollable$, "_handleDragStart");
  var _handleDragUpdate$ = dart.privateName(scrollable$, "_handleDragUpdate");
  var _handleDragEnd$ = dart.privateName(scrollable$, "_handleDragEnd");
  var _disposeHold = dart.privateName(scrollable$, "_disposeHold");
  var _disposeDrag = dart.privateName(scrollable$, "_disposeDrag");
  var _pointerSignalEventDelta = dart.privateName(scrollable$, "_pointerSignalEventDelta");
  var _targetScrollOffsetForPointerScroll = dart.privateName(scrollable$, "_targetScrollOffsetForPointerScroll");
  var _handlePointerScroll = dart.privateName(scrollable$, "_handlePointerScroll");
  var _receivedPointerSignal = dart.privateName(scrollable$, "_receivedPointerSignal");
  var C734;
  var C735;
  var C736;
  var C737;
  var C733;
  var C732;
  var C740;
  var C741;
  var C739;
  var C738;
  var C744;
  var C745;
  var C746;
  var C747;
  var C748;
  var C743;
  var C742;
  var C751;
  var C752;
  var C750;
  var C749;
  var C755;
  var C756;
  var C757;
  var C754;
  var C753;
  var C760;
  var C761;
  var C762;
  var C763;
  var C764;
  var C759;
  var C758;
  const State_TickerProviderStateMixin$36$1 = class State_TickerProviderStateMixin extends framework.State$(scrollable$.Scrollable) {};
  (State_TickerProviderStateMixin$36$1.new = function() {
    ticker_provider.TickerProviderStateMixin$(scrollable$.Scrollable)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$1.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$1.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$1, ticker_provider.TickerProviderStateMixin$(scrollable$.Scrollable));
  const State_RestorationMixin$36$0 = class State_RestorationMixin extends State_TickerProviderStateMixin$36$1 {};
  (State_RestorationMixin$36$0.new = function() {
    restoration$.RestorationMixin$(scrollable$.Scrollable)[dart.mixinNew].call(this);
    State_RestorationMixin$36$0.__proto__.new.call(this);
  }).prototype = State_RestorationMixin$36$0.prototype;
  dart.applyMixin(State_RestorationMixin$36$0, restoration$.RestorationMixin$(scrollable$.Scrollable));
  scrollable$.ScrollableState = class ScrollableState extends State_RestorationMixin$36$0 {
    get position() {
      return dart.nullCheck(this[_position]);
    }
    get axisDirection() {
      return this.widget.axisDirection;
    }
    get [_configuration]() {
      let t61;
      return dart.test(this[__ScrollableState__configuration_isSet]) ? (t61 = this[__ScrollableState__configuration], t61) : dart.throw(new _internal.LateError.fieldNI("_configuration"));
    }
    set [_configuration](t61) {
      if (t61 == null) dart.nullFailed(L83, 388, 23, "null");
      this[__ScrollableState__configuration_isSet] = true;
      this[__ScrollableState__configuration] = t61;
    }
    [_updatePosition]() {
      let t62, t62$, t62$0, t62$1;
      this[_configuration] = scroll_configuration.ScrollConfiguration.of(this.context);
      this[_physics] = this[_configuration].getScrollPhysics(this.context);
      if (this.widget.physics != null) this[_physics] = dart.nullCheck(this.widget.physics).applyTo(this[_physics]);
      let controller = this.widget.controller;
      let oldPosition = this[_position];
      if (oldPosition != null) {
        t62 = controller;
        t62 == null ? null : t62.detach(oldPosition);
        async.scheduleMicrotask(dart.bind(oldPosition, 'dispose'));
      }
      this[_position] = (t62$0 = (t62$ = controller, t62$ == null ? null : t62$.createScrollPosition(dart.nullCheck(this[_physics]), this, oldPosition)), t62$0 == null ? new scroll_position_with_single_context.ScrollPositionWithSingleContext.new({physics: dart.nullCheck(this[_physics]), context: this, oldPosition: oldPosition}) : t62$0);
      if (!(this[_position] != null)) dart.assertFailed(null, L83, 409, 12, "_position != null");
      t62$1 = controller;
      t62$1 == null ? null : t62$1.attach(this.position);
    }
    restoreState(oldBucket, initialRestore) {
      if (initialRestore == null) dart.nullFailed(L83, 414, 56, "initialRestore");
      this.registerForRestoration(this[_persistedScrollOffset], "offset");
      if (!(this[_position] != null)) dart.assertFailed(null, L83, 416, 12, "_position != null");
      if (this[_persistedScrollOffset].value != null) {
        this.position.restoreOffset(dart.nullCheck(this[_persistedScrollOffset].value), {initialRestore: initialRestore});
      }
    }
    saveOffset(offset) {
      if (offset == null) dart.nullFailed(L83, 423, 26, "offset");
      if (!dart.test(restoration.debugIsSerializableForRestoration(offset))) dart.assertFailed(null, L83, 424, 12, "debugIsSerializableForRestoration(offset)");
      this[_persistedScrollOffset].value = offset;
      dart.nullCheck(binding$0.ServicesBinding.instance).restorationManager.flushData();
    }
    didChangeDependencies() {
      this[_updatePosition]();
      super.didChangeDependencies();
    }
    [_shouldUpdatePosition](oldWidget) {
      let t62, t62$, t62$0, t62$1, t62$2, t62$3;
      if (oldWidget == null) dart.nullFailed(L83, 437, 41, "oldWidget");
      let newPhysics = this.widget.physics;
      let oldPhysics = oldWidget.physics;
      do {
        if (!dart.equals((t62 = newPhysics, t62 == null ? null : dart.runtimeType(t62)), (t62$ = oldPhysics, t62$ == null ? null : dart.runtimeType(t62$)))) return true;
        newPhysics = (t62$0 = newPhysics, t62$0 == null ? null : t62$0.parent);
        oldPhysics = (t62$1 = oldPhysics, t62$1 == null ? null : t62$1.parent);
      } while (newPhysics != null || oldPhysics != null);
      return !dart.equals((t62$2 = this.widget.controller, t62$2 == null ? null : dart.runtimeType(t62$2)), (t62$3 = oldWidget.controller, t62$3 == null ? null : dart.runtimeType(t62$3)));
    }
    didUpdateWidget(oldWidget) {
      let t62, t62$;
      scrollable$.Scrollable.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L83, 451, 35, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.controller, oldWidget.controller)) {
        t62 = oldWidget.controller;
        t62 == null ? null : t62.detach(this.position);
        t62$ = this.widget.controller;
        t62$ == null ? null : t62$.attach(this.position);
      }
      if (dart.test(this[_shouldUpdatePosition](oldWidget))) this[_updatePosition]();
    }
    dispose() {
      let t62;
      t62 = this.widget.controller;
      t62 == null ? null : t62.detach(this.position);
      this.position.dispose();
      this[_persistedScrollOffset].dispose();
      super.dispose();
    }
    setSemanticsActions(actions) {
      if (actions == null) dart.nullFailed(L83, 478, 49, "actions");
      if (this[_gestureDetectorKey].currentState != null) dart.nullCheck(this[_gestureDetectorKey].currentState).replaceSemanticsActions(actions);
    }
    setCanDrag(canDrag) {
      if (canDrag == null) dart.nullFailed(L83, 498, 24, "canDrag");
      if (dart.equals(canDrag, this[_lastCanDrag]) && (!dart.test(canDrag) || dart.equals(this.widget.axis, this[_lastAxisDirection]))) return;
      if (!dart.test(canDrag)) {
        this[_gestureRecognizers] = C718 || CT.C718;
        this[_handleDragCancel]();
      } else {
        switch (this.widget.axis) {
          case C424 || CT.C424:
          {
            this[_gestureRecognizers] = new (LinkedMapOfType$GestureRecognizerFactoryOfGestureRecognizer()).from([dart.wrapType(monodrag.VerticalDragGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfVerticalDragGestureRecognizer()).new(dart.fn(() => new monodrag.VerticalDragGestureRecognizer.new(), VoidToVerticalDragGestureRecognizer()), dart.fn(instance => {
                let t63, t63$, t63$0, t62;
                if (instance == null) dart.nullFailed(L83, 513, 46, "instance");
                t62 = instance;
                (() => {
                  t62.onDown = dart.bind(this, _handleDragDown);
                  t62.onStart = dart.bind(this, _handleDragStart$);
                  t62.onUpdate = dart.bind(this, _handleDragUpdate$);
                  t62.onEnd = dart.bind(this, _handleDragEnd$);
                  t62.onCancel = dart.bind(this, _handleDragCancel);
                  t62.minFlingDistance = (t63 = this[_physics], t63 == null ? null : t63.minFlingDistance);
                  t62.minFlingVelocity = (t63$ = this[_physics], t63$ == null ? null : t63$.minFlingVelocity);
                  t62.maxFlingVelocity = (t63$0 = this[_physics], t63$0 == null ? null : t63$0.maxFlingVelocity);
                  t62.velocityTrackerBuilder = this[_configuration].velocityTrackerBuilder(this.context);
                  t62.dragStartBehavior = this.widget.dragStartBehavior;
                  return t62;
                })();
              }, VerticalDragGestureRecognizerTovoid()))]);
            break;
          }
          case C685 || CT.C685:
          {
            this[_gestureRecognizers] = new (LinkedMapOfType$GestureRecognizerFactoryOfGestureRecognizer()).from([dart.wrapType(monodrag.HorizontalDragGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfHorizontalDragGestureRecognizer()).new(dart.fn(() => new monodrag.HorizontalDragGestureRecognizer.new(), VoidToHorizontalDragGestureRecognizer()), dart.fn(instance => {
                let t63, t63$, t63$0, t62;
                if (instance == null) dart.nullFailed(L83, 533, 48, "instance");
                t62 = instance;
                (() => {
                  t62.onDown = dart.bind(this, _handleDragDown);
                  t62.onStart = dart.bind(this, _handleDragStart$);
                  t62.onUpdate = dart.bind(this, _handleDragUpdate$);
                  t62.onEnd = dart.bind(this, _handleDragEnd$);
                  t62.onCancel = dart.bind(this, _handleDragCancel);
                  t62.minFlingDistance = (t63 = this[_physics], t63 == null ? null : t63.minFlingDistance);
                  t62.minFlingVelocity = (t63$ = this[_physics], t63$ == null ? null : t63$.minFlingVelocity);
                  t62.maxFlingVelocity = (t63$0 = this[_physics], t63$0 == null ? null : t63$0.maxFlingVelocity);
                  t62.velocityTrackerBuilder = this[_configuration].velocityTrackerBuilder(this.context);
                  t62.dragStartBehavior = this.widget.dragStartBehavior;
                  return t62;
                })();
              }, HorizontalDragGestureRecognizerTovoid()))]);
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      this[_lastCanDrag] = canDrag;
      this[_lastAxisDirection] = this.widget.axis;
      if (this[_gestureDetectorKey].currentState != null) dart.nullCheck(this[_gestureDetectorKey].currentState).replaceGestureRecognizers(this[_gestureRecognizers]);
    }
    get vsync() {
      return this;
    }
    setIgnorePointer(value) {
      if (value == null) dart.nullFailed(L83, 562, 30, "value");
      if (dart.equals(this[_shouldIgnorePointer], value)) return;
      this[_shouldIgnorePointer] = value;
      if (this[_ignorePointerKey$].currentContext != null) {
        let renderBox = proxy_box.RenderIgnorePointer.as(dart.nullCheck(dart.nullCheck(this[_ignorePointerKey$].currentContext).findRenderObject()));
        renderBox.ignoring = this[_shouldIgnorePointer];
      }
    }
    get notificationContext() {
      return this[_gestureDetectorKey].currentContext;
    }
    get storageContext() {
      return this.context;
    }
    [_handleDragDown](details) {
      if (details == null) dart.nullFailed(L83, 583, 40, "details");
      if (!(this[_drag] == null)) dart.assertFailed(null, L83, 584, 12, "_drag == null");
      if (!(this[_hold] == null)) dart.assertFailed(null, L83, 585, 12, "_hold == null");
      this[_hold] = this.position.hold(dart.bind(this, _disposeHold));
    }
    [_handleDragStart$](details) {
      if (details == null) dart.nullFailed(L83, 589, 42, "details");
      if (!(this[_drag] == null)) dart.assertFailed(null, L83, 593, 12, "_drag == null");
      this[_drag] = this.position.drag(details, dart.bind(this, _disposeDrag));
      if (!(this[_drag] != null)) dart.assertFailed(null, L83, 595, 12, "_drag != null");
      if (!(this[_hold] == null)) dart.assertFailed(null, L83, 596, 12, "_hold == null");
    }
    [_handleDragUpdate$](details) {
      let t62;
      if (details == null) dart.nullFailed(L83, 599, 44, "details");
      if (!(this[_hold] == null || this[_drag] == null)) dart.assertFailed(null, L83, 601, 12, "_hold == null || _drag == null");
      t62 = this[_drag];
      t62 == null ? null : t62.update(details);
    }
    [_handleDragEnd$](details) {
      let t62;
      if (details == null) dart.nullFailed(L83, 605, 38, "details");
      if (!(this[_hold] == null || this[_drag] == null)) dart.assertFailed(null, L83, 607, 12, "_hold == null || _drag == null");
      t62 = this[_drag];
      t62 == null ? null : t62.end(details);
      if (!(this[_drag] == null)) dart.assertFailed(null, L83, 609, 12, "_drag == null");
    }
    [_handleDragCancel]() {
      let t62, t62$;
      if (!(this[_hold] == null || this[_drag] == null)) dart.assertFailed(null, L83, 615, 12, "_hold == null || _drag == null");
      t62 = this[_hold];
      t62 == null ? null : t62.cancel();
      t62$ = this[_drag];
      t62$ == null ? null : t62$.cancel();
      if (!(this[_hold] == null)) dart.assertFailed(null, L83, 618, 12, "_hold == null");
      if (!(this[_drag] == null)) dart.assertFailed(null, L83, 619, 12, "_drag == null");
    }
    [_disposeHold]() {
      this[_hold] = null;
    }
    [_disposeDrag]() {
      this[_drag] = null;
    }
    [_targetScrollOffsetForPointerScroll](event) {
      if (event == null) dart.nullFailed(L83, 634, 65, "event");
      let delta = this[_pointerSignalEventDelta](event);
      return math.min(core.double, math.max(core.double, dart.notNull(this.position.pixels) + dart.notNull(delta), this.position.minScrollExtent), this.position.maxScrollExtent);
    }
    [_pointerSignalEventDelta](event) {
      if (event == null) dart.nullFailed(L83, 642, 54, "event");
      let delta = dart.equals(this.widget.axis, basic_types.Axis.horizontal) ? event.scrollDelta.dx : event.scrollDelta.dy;
      if (dart.test(basic_types.axisDirectionIsReversed(this.widget.axisDirection))) {
        delta = dart.notNull(delta) * -1;
      }
      return delta;
    }
    [_receivedPointerSignal](event) {
      if (event == null) dart.nullFailed(L83, 653, 50, "event");
      if (events.PointerScrollEvent.is(event) && this[_position] != null) {
        if (this[_physics] != null && !dart.test(dart.nullCheck(this[_physics]).shouldAcceptUserOffset(this.position))) {
          return;
        }
        let targetScrollOffset = this[_targetScrollOffsetForPointerScroll](event);
        if (targetScrollOffset != this.position.pixels) {
          dart.nullCheck(binding$1.GestureBinding.instance).pointerSignalResolver.register(event, dart.bind(this, _handlePointerScroll));
        }
      }
    }
    [_handlePointerScroll](event) {
      if (event == null) dart.nullFailed(L83, 666, 42, "event");
      if (!events.PointerScrollEvent.is(event)) dart.assertFailed(null, L83, 667, 12, "event is PointerScrollEvent");
      let targetScrollOffset = this[_targetScrollOffsetForPointerScroll](events.PointerScrollEvent.as(event));
      if (targetScrollOffset != this.position.pixels) {
        this.position.pointerScroll(this[_pointerSignalEventDelta](event));
      }
    }
    build(context) {
      let t64, t63, t62;
      if (context == null) dart.nullFailed(L83, 677, 29, "context");
      if (!(this[_position] != null)) dart.assertFailed(null, L83, 678, 12, "_position != null");
      let result = new scrollable$._ScrollableScope.new({scrollable: this, position: this.position, child: new basic.Listener.new({onPointerSignal: dart.bind(this, _receivedPointerSignal), child: new gesture_detector.RawGestureDetector.new({key: this[_gestureDetectorKey], gestures: this[_gestureRecognizers], behavior: proxy_box.HitTestBehavior.opaque, excludeFromSemantics: this.widget.excludeFromSemantics, child: new basic.Semantics.new({explicitChildNodes: !dart.test(this.widget.excludeFromSemantics), child: new basic.IgnorePointer.new({key: this[_ignorePointerKey$], ignoring: this[_shouldIgnorePointer], ignoringSemantics: false, child: (t62 = this.widget, t63 = context, t64 = this.position, t62.viewportBuilder(t63, t64)), $creationLocationd_0dea112b090073317d4: C732 || CT.C732}), $creationLocationd_0dea112b090073317d4: C738 || CT.C738}), $creationLocationd_0dea112b090073317d4: C742 || CT.C742}), $creationLocationd_0dea112b090073317d4: C749 || CT.C749}), $creationLocationd_0dea112b090073317d4: C753 || CT.C753});
      if (!dart.test(this.widget.excludeFromSemantics)) {
        result = new scrollable$._ScrollSemantics.new({key: this[_scrollSemanticsKey], child: result, position: this.position, allowImplicitScrolling: dart.nullCheck(this[_physics]).allowImplicitScrolling, semanticChildCount: this.widget.semanticChildCount, $creationLocationd_0dea112b090073317d4: C758 || CT.C758});
      }
      return this[_configuration].buildViewportChrome(context, result, this.widget.axisDirection);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L83, 725, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfScrollPosition()).new("position", this.position));
      properties.add(new (DiagnosticsPropertyOfScrollPhysics()).new("effective physics", this[_physics]));
    }
    get restorationId() {
      return this.widget.restorationId;
    }
  };
  (scrollable$.ScrollableState.new = function() {
    this[_position] = null;
    this[_persistedScrollOffset] = new scrollable$._RestorableScrollOffset.new();
    this[__ScrollableState__configuration] = null;
    this[__ScrollableState__configuration_isSet] = false;
    this[_physics] = null;
    this[_scrollSemanticsKey] = GlobalKeyOfStateOfStatefulWidget().new();
    this[_gestureDetectorKey] = GlobalKeyOfRawGestureDetectorState().new();
    this[_ignorePointerKey$] = GlobalKeyOfStateOfStatefulWidget().new();
    this[_gestureRecognizers] = C718 || CT.C718;
    this[_shouldIgnorePointer] = false;
    this[_lastCanDrag] = null;
    this[_lastAxisDirection] = null;
    this[_drag] = null;
    this[_hold] = null;
    scrollable$.ScrollableState.__proto__.new.call(this);
    ;
  }).prototype = scrollable$.ScrollableState.prototype;
  dart.addTypeTests(scrollable$.ScrollableState);
  dart.addTypeCaches(scrollable$.ScrollableState);
  scrollable$.ScrollableState[dart.implements] = () => [scroll_context.ScrollContext];
  dart.setMethodSignature(scrollable$.ScrollableState, () => ({
    __proto__: dart.getMethods(scrollable$.ScrollableState.__proto__),
    [_updatePosition]: dart.fnType(dart.void, []),
    restoreState: dart.fnType(dart.void, [dart.nullable(restoration.RestorationBucket), core.bool]),
    saveOffset: dart.fnType(dart.void, [core.double]),
    [_shouldUpdatePosition]: dart.fnType(core.bool, [scrollable$.Scrollable]),
    setSemanticsActions: dart.fnType(dart.void, [core.Set$(ui.SemanticsAction)]),
    setCanDrag: dart.fnType(dart.void, [core.bool]),
    setIgnorePointer: dart.fnType(dart.void, [core.bool]),
    [_handleDragDown]: dart.fnType(dart.void, [drag_details.DragDownDetails]),
    [_handleDragStart$]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [_handleDragUpdate$]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [_handleDragEnd$]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    [_handleDragCancel]: dart.fnType(dart.void, []),
    [_disposeHold]: dart.fnType(dart.void, []),
    [_disposeDrag]: dart.fnType(dart.void, []),
    [_targetScrollOffsetForPointerScroll]: dart.fnType(core.double, [events.PointerScrollEvent]),
    [_pointerSignalEventDelta]: dart.fnType(core.double, [events.PointerScrollEvent]),
    [_receivedPointerSignal]: dart.fnType(dart.void, [events.PointerSignalEvent]),
    [_handlePointerScroll]: dart.fnType(dart.void, [events.PointerEvent]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(scrollable$.ScrollableState, () => ({
    __proto__: dart.getGetters(scrollable$.ScrollableState.__proto__),
    position: scroll_position.ScrollPosition,
    axisDirection: basic_types.AxisDirection,
    [_configuration]: scroll_configuration.ScrollBehavior,
    vsync: ticker.TickerProvider,
    notificationContext: dart.nullable(framework.BuildContext),
    storageContext: framework.BuildContext,
    restorationId: dart.nullable(core.String)
  }));
  dart.setSetterSignature(scrollable$.ScrollableState, () => ({
    __proto__: dart.getSetters(scrollable$.ScrollableState.__proto__),
    [_configuration]: scroll_configuration.ScrollBehavior
  }));
  dart.setLibraryUri(scrollable$.ScrollableState, L84);
  dart.setFieldSignature(scrollable$.ScrollableState, () => ({
    __proto__: dart.getFields(scrollable$.ScrollableState.__proto__),
    [_position]: dart.fieldType(dart.nullable(scroll_position.ScrollPosition)),
    [_persistedScrollOffset]: dart.finalFieldType(scrollable$._RestorableScrollOffset),
    [__ScrollableState__configuration]: dart.fieldType(dart.nullable(scroll_configuration.ScrollBehavior)),
    [__ScrollableState__configuration_isSet]: dart.fieldType(core.bool),
    [_physics]: dart.fieldType(dart.nullable(scroll_physics.ScrollPhysics)),
    [_scrollSemanticsKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_gestureDetectorKey]: dart.finalFieldType(framework.GlobalKey$(gesture_detector.RawGestureDetectorState)),
    [_ignorePointerKey$]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_gestureRecognizers]: dart.fieldType(core.Map$(core.Type, gesture_detector.GestureRecognizerFactory$(recognizer.GestureRecognizer))),
    [_shouldIgnorePointer]: dart.fieldType(core.bool),
    [_lastCanDrag]: dart.fieldType(dart.nullable(core.bool)),
    [_lastAxisDirection]: dart.fieldType(dart.nullable(basic_types.Axis)),
    [_drag]: dart.fieldType(dart.nullable(drag.Drag)),
    [_hold]: dart.fieldType(dart.nullable(scroll_activity.ScrollHoldController))
  }));
  var position$2 = dart.privateName(scrollable$, "_ScrollSemantics.position");
  var allowImplicitScrolling$ = dart.privateName(scrollable$, "_ScrollSemantics.allowImplicitScrolling");
  var semanticChildCount$0 = dart.privateName(scrollable$, "_ScrollSemantics.semanticChildCount");
  scrollable$._ScrollSemantics = class _ScrollSemantics extends framework.SingleChildRenderObjectWidget {
    get position() {
      return this[position$2];
    }
    set position(value) {
      super.position = value;
    }
    get allowImplicitScrolling() {
      return this[allowImplicitScrolling$];
    }
    set allowImplicitScrolling(value) {
      super.allowImplicitScrolling = value;
    }
    get semanticChildCount() {
      return this[semanticChildCount$0];
    }
    set semanticChildCount(value) {
      super.semanticChildCount = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L83, 765, 58, "context");
      return new scrollable$._RenderScrollSemantics.new({position: this.position, allowImplicitScrolling: this.allowImplicitScrolling, semanticChildCount: this.semanticChildCount});
    }
    updateRenderObject(context, renderObject) {
      let t62;
      if (context == null) dart.nullFailed(L83, 774, 40, "context");
      scrollable$._RenderScrollSemantics.as(renderObject);
      if (renderObject == null) dart.nullFailed(L83, 774, 72, "renderObject");
      t62 = renderObject;
      (() => {
        t62.allowImplicitScrolling = this.allowImplicitScrolling;
        t62.position = this.position;
        t62.semanticChildCount = this.semanticChildCount;
        return t62;
      })();
    }
  };
  (scrollable$._ScrollSemantics.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let position = opts && 'position' in opts ? opts.position : null;
    if (position == null) dart.nullFailed(L83, 752, 19, "position");
    let allowImplicitScrolling = opts && 'allowImplicitScrolling' in opts ? opts.allowImplicitScrolling : null;
    if (allowImplicitScrolling == null) dart.nullFailed(L83, 753, 19, "allowImplicitScrolling");
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[position$2] = position;
    this[allowImplicitScrolling$] = allowImplicitScrolling;
    this[semanticChildCount$0] = semanticChildCount;
    if (!(position != null)) dart.assertFailed(null, L83, 756, 15, "position != null");
    if (!(semanticChildCount == null || dart.notNull(semanticChildCount) >= 0)) dart.assertFailed(null, L83, 757, 15, "semanticChildCount == null || semanticChildCount >= 0");
    scrollable$._ScrollSemantics.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scrollable$._ScrollSemantics.prototype;
  dart.addTypeTests(scrollable$._ScrollSemantics);
  dart.addTypeCaches(scrollable$._ScrollSemantics);
  dart.setMethodSignature(scrollable$._ScrollSemantics, () => ({
    __proto__: dart.getMethods(scrollable$._ScrollSemantics.__proto__),
    createRenderObject: dart.fnType(scrollable$._RenderScrollSemantics, [framework.BuildContext])
  }));
  dart.setLibraryUri(scrollable$._ScrollSemantics, L84);
  dart.setFieldSignature(scrollable$._ScrollSemantics, () => ({
    __proto__: dart.getFields(scrollable$._ScrollSemantics.__proto__),
    position: dart.finalFieldType(scroll_position.ScrollPosition),
    allowImplicitScrolling: dart.finalFieldType(core.bool),
    semanticChildCount: dart.finalFieldType(dart.nullable(core.int))
  }));
  var _innerNode = dart.privateName(scrollable$, "_innerNode");
  var _allowImplicitScrolling = dart.privateName(scrollable$, "_allowImplicitScrolling");
  var _semanticChildCount = dart.privateName(scrollable$, "_semanticChildCount");
  scrollable$._RenderScrollSemantics = class _RenderScrollSemantics extends proxy_box.RenderProxyBox {
    get position() {
      return this[_position];
    }
    set position(value) {
      if (value == null) dart.nullFailed(L83, 799, 31, "value");
      if (!(value != null)) dart.assertFailed(null, L83, 800, 12, "value != null");
      if (dart.equals(value, this[_position])) return;
      this[_position].removeListener(dart.bind(this, 'markNeedsSemanticsUpdate'));
      this[_position] = value;
      this[_position].addListener(dart.bind(this, 'markNeedsSemanticsUpdate'));
      this.markNeedsSemanticsUpdate();
    }
    get allowImplicitScrolling() {
      return this[_allowImplicitScrolling];
    }
    set allowImplicitScrolling(value) {
      if (value == null) dart.nullFailed(L83, 812, 35, "value");
      if (dart.equals(value, this[_allowImplicitScrolling])) return;
      this[_allowImplicitScrolling] = value;
      this.markNeedsSemanticsUpdate();
    }
    get semanticChildCount() {
      return this[_semanticChildCount];
    }
    set semanticChildCount(value) {
      if (value == this.semanticChildCount) return;
      this[_semanticChildCount] = value;
      this.markNeedsSemanticsUpdate();
    }
    describeSemanticsConfiguration(config) {
      let t62;
      if (config == null) dart.nullFailed(L83, 829, 62, "config");
      super.describeSemanticsConfiguration(config);
      config.isSemanticBoundary = true;
      if (dart.test(this.position.haveDimensions)) {
        t62 = config;
        (() => {
          t62.hasImplicitScrolling = this.allowImplicitScrolling;
          t62.scrollPosition = this[_position].pixels;
          t62.scrollExtentMax = this[_position].maxScrollExtent;
          t62.scrollExtentMin = this[_position].minScrollExtent;
          t62.scrollChildCount = this.semanticChildCount;
          return t62;
        })();
      }
    }
    assembleSemanticsNode(node, config, children) {
      let t62;
      if (node == null) dart.nullFailed(L83, 845, 44, "node");
      if (config == null) dart.nullFailed(L83, 845, 73, "config");
      if (children == null) dart.nullFailed(L83, 845, 105, "children");
      if (dart.test(children[$isEmpty]) || !dart.test(children[$first].isTagged(viewport$.RenderViewport.useTwoPaneSemantics))) {
        super.assembleSemanticsNode(node, config, children);
        return;
      }
      this[_innerNode] == null ? this[_innerNode] = new semantics.SemanticsNode.new({showOnScreen: dart.bind(this, 'showOnScreen')}) : null;
      t62 = dart.nullCheck(this[_innerNode]);
      (() => {
        t62.isMergedIntoParent = node.isPartOfNodeMerging;
        t62.rect = node.rect;
        return t62;
      })();
      let firstVisibleIndex = null;
      let excluded = JSArrayOfSemanticsNode().of([dart.nullCheck(this[_innerNode])]);
      let included = JSArrayOfSemanticsNode().of([]);
      for (let child of children) {
        if (!dart.test(child.isTagged(viewport$.RenderViewport.useTwoPaneSemantics))) dart.assertFailed(null, L83, 860, 14, "child.isTagged(RenderViewport.useTwoPaneSemantics)");
        if (dart.test(child.isTagged(viewport$.RenderViewport.excludeFromScrolling))) {
          excluded[$add](child);
        } else {
          if (!dart.test(child.hasFlag(ui.SemanticsFlag.isHidden))) firstVisibleIndex == null ? firstVisibleIndex = child.indexInParent : null;
          included[$add](child);
        }
      }
      config.scrollIndex = firstVisibleIndex;
      node.updateWith({config: null, childrenInInversePaintOrder: excluded});
      dart.nullCheck(this[_innerNode]).updateWith({config: config, childrenInInversePaintOrder: included});
    }
    clearSemantics() {
      super.clearSemantics();
      this[_innerNode] = null;
    }
  };
  (scrollable$._RenderScrollSemantics.new = function(opts) {
    let position = opts && 'position' in opts ? opts.position : null;
    if (position == null) dart.nullFailed(L83, 784, 29, "position");
    let allowImplicitScrolling = opts && 'allowImplicitScrolling' in opts ? opts.allowImplicitScrolling : null;
    if (allowImplicitScrolling == null) dart.nullFailed(L83, 785, 19, "allowImplicitScrolling");
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[_innerNode] = null;
    this[_position] = position;
    this[_allowImplicitScrolling] = allowImplicitScrolling;
    this[_semanticChildCount] = semanticChildCount;
    if (!(position != null)) dart.assertFailed(null, L83, 791, 15, "position != null");
    scrollable$._RenderScrollSemantics.__proto__.new.call(this, child);
    position.addListener(dart.bind(this, 'markNeedsSemanticsUpdate'));
  }).prototype = scrollable$._RenderScrollSemantics.prototype;
  dart.addTypeTests(scrollable$._RenderScrollSemantics);
  dart.addTypeCaches(scrollable$._RenderScrollSemantics);
  dart.setGetterSignature(scrollable$._RenderScrollSemantics, () => ({
    __proto__: dart.getGetters(scrollable$._RenderScrollSemantics.__proto__),
    position: scroll_position.ScrollPosition,
    allowImplicitScrolling: core.bool,
    semanticChildCount: dart.nullable(core.int)
  }));
  dart.setSetterSignature(scrollable$._RenderScrollSemantics, () => ({
    __proto__: dart.getSetters(scrollable$._RenderScrollSemantics.__proto__),
    position: scroll_position.ScrollPosition,
    allowImplicitScrolling: core.bool,
    semanticChildCount: dart.nullable(core.int)
  }));
  dart.setLibraryUri(scrollable$._RenderScrollSemantics, L84);
  dart.setFieldSignature(scrollable$._RenderScrollSemantics, () => ({
    __proto__: dart.getFields(scrollable$._RenderScrollSemantics.__proto__),
    [_position]: dart.fieldType(scroll_position.ScrollPosition),
    [_allowImplicitScrolling]: dart.fieldType(core.bool),
    [_semanticChildCount]: dart.fieldType(dart.nullable(core.int)),
    [_innerNode]: dart.fieldType(dart.nullable(semantics.SemanticsNode))
  }));
  var _name$15 = dart.privateName(scrollable$, "_name");
  var C765;
  var C766;
  var C767;
  scrollable$.ScrollIncrementType = class ScrollIncrementType extends core.Object {
    toString() {
      return this[_name$15];
    }
  };
  (scrollable$.ScrollIncrementType.new = function(index, _name) {
    if (index == null) dart.nullFailed(L83, 903, 6, "index");
    if (_name == null) dart.nullFailed(L83, 903, 6, "_name");
    this.index = index;
    this[_name$15] = _name;
    ;
  }).prototype = scrollable$.ScrollIncrementType.prototype;
  dart.addTypeTests(scrollable$.ScrollIncrementType);
  dart.addTypeCaches(scrollable$.ScrollIncrementType);
  dart.setLibraryUri(scrollable$.ScrollIncrementType, L84);
  dart.setFieldSignature(scrollable$.ScrollIncrementType, () => ({
    __proto__: dart.getFields(scrollable$.ScrollIncrementType.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$15]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(scrollable$.ScrollIncrementType, ['toString']);
  scrollable$.ScrollIncrementType.line = C765 || CT.C765;
  scrollable$.ScrollIncrementType.page = C766 || CT.C766;
  scrollable$.ScrollIncrementType.values = C767 || CT.C767;
  var type$ = dart.privateName(scrollable$, "ScrollIncrementDetails.type");
  var metrics$0 = dart.privateName(scrollable$, "ScrollIncrementDetails.metrics");
  scrollable$.ScrollIncrementDetails = class ScrollIncrementDetails extends core.Object {
    get type() {
      return this[type$];
    }
    set type(value) {
      super.type = value;
    }
    get metrics() {
      return this[metrics$0];
    }
    set metrics(value) {
      super.metrics = value;
    }
  };
  (scrollable$.ScrollIncrementDetails.new = function(opts) {
    let type = opts && 'type' in opts ? opts.type : null;
    if (type == null) dart.nullFailed(L83, 931, 19, "type");
    let metrics = opts && 'metrics' in opts ? opts.metrics : null;
    if (metrics == null) dart.nullFailed(L83, 932, 19, "metrics");
    this[type$] = type;
    this[metrics$0] = metrics;
    if (!(type != null)) dart.assertFailed(null, L83, 933, 16, "type != null");
    if (!(metrics != null)) dart.assertFailed(null, L83, 934, 16, "metrics != null");
    ;
  }).prototype = scrollable$.ScrollIncrementDetails.prototype;
  dart.addTypeTests(scrollable$.ScrollIncrementDetails);
  dart.addTypeCaches(scrollable$.ScrollIncrementDetails);
  dart.setLibraryUri(scrollable$.ScrollIncrementDetails, L84);
  dart.setFieldSignature(scrollable$.ScrollIncrementDetails, () => ({
    __proto__: dart.getFields(scrollable$.ScrollIncrementDetails.__proto__),
    type: dart.finalFieldType(scrollable$.ScrollIncrementType),
    metrics: dart.finalFieldType(scroll_metrics.ScrollMetrics)
  }));
  var direction$0 = dart.privateName(scrollable$, "ScrollIntent.direction");
  var type$0 = dart.privateName(scrollable$, "ScrollIntent.type");
  scrollable$.ScrollIntent = class ScrollIntent extends actions$.Intent {
    get direction() {
      return this[direction$0];
    }
    set direction(value) {
      super.direction = value;
    }
    get type() {
      return this[type$0];
    }
    set type(value) {
      super.type = value;
    }
  };
  (scrollable$.ScrollIntent.new = function(opts) {
    let direction = opts && 'direction' in opts ? opts.direction : null;
    if (direction == null) dart.nullFailed(L83, 955, 19, "direction");
    let type = opts && 'type' in opts ? opts.type : C765 || CT.C765;
    if (type == null) dart.nullFailed(L83, 956, 10, "type");
    this[direction$0] = direction;
    this[type$0] = type;
    if (!(direction != null)) dart.assertFailed(null, L83, 957, 16, "direction != null");
    if (!(type != null)) dart.assertFailed(null, L83, 958, 16, "type != null");
    scrollable$.ScrollIntent.__proto__.new.call(this);
    ;
  }).prototype = scrollable$.ScrollIntent.prototype;
  dart.addTypeTests(scrollable$.ScrollIntent);
  dart.addTypeCaches(scrollable$.ScrollIntent);
  dart.setLibraryUri(scrollable$.ScrollIntent, L84);
  dart.setFieldSignature(scrollable$.ScrollIntent, () => ({
    __proto__: dart.getFields(scrollable$.ScrollIntent.__proto__),
    direction: dart.finalFieldType(basic_types.AxisDirection),
    type: dart.finalFieldType(scrollable$.ScrollIncrementType)
  }));
  var _calculateScrollIncrement = dart.privateName(scrollable$, "_calculateScrollIncrement");
  var _getIncrement = dart.privateName(scrollable$, "_getIncrement");
  var C768;
  scrollable$.ScrollAction = class ScrollAction extends actions$.Action$(scrollable$.ScrollIntent) {
    isEnabled(intent) {
      scrollable$.ScrollIntent.as(intent);
      if (intent == null) dart.nullFailed(L83, 981, 31, "intent");
      let focus = focus_manager.primaryFocus;
      let contextIsValid = focus != null && focus.context != null;
      if (contextIsValid) {
        if (scrollable$.Scrollable.of(dart.nullCheck(dart.nullCheck(focus).context)) != null) return true;
        if (primary_scroll_controller.PrimaryScrollController.of(dart.nullCheck(focus.context)) != null) {
          let primaryScrollController = primary_scroll_controller.PrimaryScrollController.of(dart.nullCheck(focus.context));
          return primaryScrollController != null && dart.test(primaryScrollController.hasClients) && primaryScrollController.position.context.notificationContext != null && scrollable$.Scrollable.of(dart.nullCheck(primaryScrollController.position.context.notificationContext)) != null;
        }
      }
      return false;
    }
    [_calculateScrollIncrement](state, opts) {
      if (state == null) dart.nullFailed(L83, 1007, 52, "state");
      let type = opts && 'type' in opts ? opts.type : C765 || CT.C765;
      if (type == null) dart.nullFailed(L83, 1007, 81, "type");
      if (!(type != null)) dart.assertFailed(null, L83, 1008, 12, "type != null");
      if (!(state.position != null)) dart.assertFailed(null, L83, 1009, 12, "state.position != null");
      if (!dart.test(state.position.hasPixels)) dart.assertFailed(null, L83, 1010, 12, "state.position.hasPixels");
      if (!(state.position.viewportDimension != null)) dart.assertFailed(null, L83, 1011, 12, "state.position.viewportDimension != null");
      if (!(state.position.maxScrollExtent != null)) dart.assertFailed(null, L83, 1012, 12, "state.position.maxScrollExtent != null");
      if (!(state.position.minScrollExtent != null)) dart.assertFailed(null, L83, 1013, 12, "state.position.minScrollExtent != null");
      if (!(state[_physics] == null || dart.test(dart.nullCheck(state[_physics]).shouldAcceptUserOffset(state.position)))) dart.assertFailed(null, L83, 1014, 12, "state._physics == null || state._physics!.shouldAcceptUserOffset(state.position)");
      if (state.widget.incrementCalculator != null) {
        return dart.nullCheck(state.widget.incrementCalculator)(new scrollable$.ScrollIncrementDetails.new({type: type, metrics: state.position}));
      }
      switch (type) {
        case C765 || CT.C765:
        {
          return 50.0;
        }
        case C766 || CT.C766:
        {
          return 0.8 * dart.notNull(state.position.viewportDimension);
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [_getIncrement](state, intent) {
      if (state == null) dart.nullFailed(L83, 1033, 40, "state");
      if (intent == null) dart.nullFailed(L83, 1033, 60, "intent");
      let increment = this[_calculateScrollIncrement](state, {type: intent.type});
      switch (intent.direction) {
        case C642 || CT.C642:
        {
          switch (state.axisDirection) {
            case C644 || CT.C644:
            {
              return -dart.notNull(increment);
            }
            case C642 || CT.C642:
            {
              return increment;
            }
            case C645 || CT.C645:
            case C646 || CT.C646:
            {
              return 0.0;
            }
            default:
            {
              dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
            }
          }
        }
        case C644 || CT.C644:
        {
          switch (state.axisDirection) {
            case C644 || CT.C644:
            {
              return increment;
            }
            case C642 || CT.C642:
            {
              return -dart.notNull(increment);
            }
            case C645 || CT.C645:
            case C646 || CT.C646:
            {
              return 0.0;
            }
            default:
            {
              dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
            }
          }
        }
        case C646 || CT.C646:
        {
          switch (state.axisDirection) {
            case C645 || CT.C645:
            {
              return -dart.notNull(increment);
            }
            case C646 || CT.C646:
            {
              return increment;
            }
            case C644 || CT.C644:
            case C642 || CT.C642:
            {
              return 0.0;
            }
            default:
            {
              dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
            }
          }
        }
        case C645 || CT.C645:
        {
          switch (state.axisDirection) {
            case C645 || CT.C645:
            {
              return increment;
            }
            case C646 || CT.C646:
            {
              return -dart.notNull(increment);
            }
            case C644 || CT.C644:
            case C642 || CT.C642:
            {
              return 0.0;
            }
            default:
            {
              dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
            }
          }
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    invoke(intent) {
      scrollable$.ScrollIntent.as(intent);
      if (intent == null) dart.nullFailed(L83, 1080, 28, "intent");
      let state = scrollable$.Scrollable.of(dart.nullCheck(dart.nullCheck(focus_manager.primaryFocus).context));
      if (state == null) {
        let primaryScrollController = primary_scroll_controller.PrimaryScrollController.of(dart.nullCheck(dart.nullCheck(focus_manager.primaryFocus).context));
        state = scrollable$.Scrollable.of(dart.nullCheck(dart.nullCheck(primaryScrollController).position.context.notificationContext));
      }
      if (!(state != null)) dart.assertFailed(dart.str(dart.wrapType(scrollable$.ScrollAction)) + " was invoked on a context that has no scrollable parent", L83, 1086, 12, "state != null");
      if (!dart.test(dart.nullCheck(state).position.hasPixels)) dart.assertFailed("Scrollable must be laid out before it can be scrolled via a ScrollAction", L83, 1087, 12, "state!.position.hasPixels");
      if (!(dart.nullCheck(state).position.viewportDimension != null)) dart.assertFailed(null, L83, 1088, 12, "state!.position.viewportDimension != null");
      if (!(dart.nullCheck(state).position.maxScrollExtent != null)) dart.assertFailed(null, L83, 1089, 12, "state!.position.maxScrollExtent != null");
      if (!(dart.nullCheck(state).position.minScrollExtent != null)) dart.assertFailed(null, L83, 1090, 12, "state!.position.minScrollExtent != null");
      if (dart.nullCheck(state)[_physics] != null && !dart.test(dart.nullCheck(state[_physics]).shouldAcceptUserOffset(state.position))) {
        return;
      }
      let increment = this[_getIncrement](state, intent);
      if (increment === 0.0) {
        return;
      }
      state.position.moveTo(dart.notNull(state.position.pixels) + dart.notNull(increment), {duration: C768 || CT.C768, curve: curves.Curves.easeInOut});
    }
  };
  (scrollable$.ScrollAction.new = function() {
    scrollable$.ScrollAction.__proto__.new.call(this);
    ;
  }).prototype = scrollable$.ScrollAction.prototype;
  dart.addTypeTests(scrollable$.ScrollAction);
  dart.addTypeCaches(scrollable$.ScrollAction);
  dart.setMethodSignature(scrollable$.ScrollAction, () => ({
    __proto__: dart.getMethods(scrollable$.ScrollAction.__proto__),
    [_calculateScrollIncrement]: dart.fnType(core.double, [scrollable$.ScrollableState], {type: scrollable$.ScrollIncrementType}, {}),
    [_getIncrement]: dart.fnType(core.double, [scrollable$.ScrollableState, scrollable$.ScrollIntent]),
    invoke: dart.fnType(dart.void, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(scrollable$.ScrollAction, L84);
  scrollable$._RestorableScrollOffset = class _RestorableScrollOffset extends restoration_properties.RestorableValue$(dart.nullable(core.double)) {
    createDefaultValue() {
      return null;
    }
    didUpdateValue(oldValue) {
      doubleN().as(oldValue);
      this.notifyListeners();
    }
    fromPrimitives(data) {
      return core.double.as(dart.nullCheck(data));
    }
    toPrimitives() {
      return this.value;
    }
    get enabled() {
      return this.value != null;
    }
  };
  (scrollable$._RestorableScrollOffset.new = function() {
    scrollable$._RestorableScrollOffset.__proto__.new.call(this);
    ;
  }).prototype = scrollable$._RestorableScrollOffset.prototype;
  dart.addTypeTests(scrollable$._RestorableScrollOffset);
  dart.addTypeCaches(scrollable$._RestorableScrollOffset);
  dart.setMethodSignature(scrollable$._RestorableScrollOffset, () => ({
    __proto__: dart.getMethods(scrollable$._RestorableScrollOffset.__proto__),
    createDefaultValue: dart.fnType(dart.nullable(core.double), []),
    didUpdateValue: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    fromPrimitives: dart.fnType(core.double, [dart.nullable(core.Object)]),
    toPrimitives: dart.fnType(dart.nullable(core.Object), [])
  }));
  dart.setLibraryUri(scrollable$._RestorableScrollOffset, L84);
  const _is_ScrollAwareImageProvider_default = Symbol('_is_ScrollAwareImageProvider_default');
  var context$2 = dart.privateName(scroll_aware_image_provider, "ScrollAwareImageProvider.context");
  var imageProvider$ = dart.privateName(scroll_aware_image_provider, "ScrollAwareImageProvider.imageProvider");
  scroll_aware_image_provider.ScrollAwareImageProvider$ = dart.generic(T => {
    class ScrollAwareImageProvider extends image_provider.ImageProvider$(T) {
      get context() {
        return this[context$2];
      }
      set context(value) {
        super.context = value;
      }
      get imageProvider() {
        return this[imageProvider$];
      }
      set imageProvider(value) {
        super.imageProvider = value;
      }
      resolveStreamForKey(configuration, stream, key, handleError) {
        if (configuration == null) dart.nullFailed(L85, 72, 24, "configuration");
        if (stream == null) dart.nullFailed(L85, 73, 17, "stream");
        T.as(key);
        if (key == null) dart.nullFailed(L85, 74, 7, "key");
        if (handleError == null) dart.nullFailed(L85, 75, 24, "handleError");
        if (stream.completer != null || dart.test(dart.nullCheck(dart.nullCheck(binding$2.PaintingBinding.instance).imageCache).containsKey(key))) {
          this.imageProvider.resolveStreamForKey(configuration, stream, key, handleError);
          return;
        }
        if (this.context.context == null) {
          return;
        }
        if (dart.test(scrollable$.Scrollable.recommendDeferredLoadingForContext(dart.nullCheck(this.context.context)))) {
          dart.nullCheck(binding$.SchedulerBinding.instance).scheduleFrameCallback(dart.fn(_ => {
            if (_ == null) dart.nullFailed(L85, 99, 59, "_");
            async.scheduleMicrotask(dart.fn(() => this.resolveStreamForKey(configuration, stream, key, handleError), VoidTovoid()));
          }, DurationTovoid()));
          return;
        }
        this.imageProvider.resolveStreamForKey(configuration, stream, key, handleError);
      }
      load(key, decode) {
        T.as(key);
        if (key == null) dart.nullFailed(L85, 110, 31, "key");
        if (decode == null) dart.nullFailed(L85, 110, 52, "decode");
        return this.imageProvider.load(key, decode);
      }
      obtainKey(configuration) {
        if (configuration == null) dart.nullFailed(L85, 113, 42, "configuration");
        return this.imageProvider.obtainKey(configuration);
      }
    }
    (ScrollAwareImageProvider.new = function(opts) {
      let context = opts && 'context' in opts ? opts.context : null;
      if (context == null) dart.nullFailed(L85, 55, 19, "context");
      let imageProvider = opts && 'imageProvider' in opts ? opts.imageProvider : null;
      if (imageProvider == null) dart.nullFailed(L85, 56, 19, "imageProvider");
      this[context$2] = context;
      this[imageProvider$] = imageProvider;
      if (!(context != null)) dart.assertFailed(null, L85, 57, 15, "context != null");
      if (!(imageProvider != null)) dart.assertFailed(null, L85, 58, 15, "imageProvider != null");
      ScrollAwareImageProvider.__proto__.new.call(this);
      ;
    }).prototype = ScrollAwareImageProvider.prototype;
    dart.addTypeTests(ScrollAwareImageProvider);
    ScrollAwareImageProvider.prototype[_is_ScrollAwareImageProvider_default] = true;
    dart.addTypeCaches(ScrollAwareImageProvider);
    dart.setMethodSignature(ScrollAwareImageProvider, () => ({
      __proto__: dart.getMethods(ScrollAwareImageProvider.__proto__),
      load: dart.fnType(image_stream.ImageStreamCompleter, [dart.nullable(core.Object), dart.fnType(async.Future$(ui.Codec), [typed_data.Uint8List], {allowUpscaling: core.bool, cacheHeight: dart.nullable(core.int), cacheWidth: dart.nullable(core.int)}, {})]),
      obtainKey: dart.fnType(async.Future$(T), [image_provider.ImageConfiguration])
    }));
    dart.setLibraryUri(ScrollAwareImageProvider, L86);
    dart.setFieldSignature(ScrollAwareImageProvider, () => ({
      __proto__: dart.getFields(ScrollAwareImageProvider.__proto__),
      context: dart.finalFieldType(disposable_build_context.DisposableBuildContext$(framework.State$(framework.StatefulWidget))),
      imageProvider: dart.finalFieldType(image_provider.ImageProvider$(T))
    }));
    return ScrollAwareImageProvider;
  });
  scroll_aware_image_provider.ScrollAwareImageProvider = scroll_aware_image_provider.ScrollAwareImageProvider$();
  dart.addTypeTests(scroll_aware_image_provider.ScrollAwareImageProvider, _is_ScrollAwareImageProvider_default);
  var _name$16 = dart.privateName(media_query, "_name");
  var C769;
  var C770;
  var C771;
  media_query.Orientation = class Orientation extends core.Object {
    toString() {
      return this[_name$16];
    }
  };
  (media_query.Orientation.new = function(index, _name) {
    if (index == null) dart.nullFailed(L87, 16, 6, "index");
    if (_name == null) dart.nullFailed(L87, 16, 6, "_name");
    this.index = index;
    this[_name$16] = _name;
    ;
  }).prototype = media_query.Orientation.prototype;
  dart.addTypeTests(media_query.Orientation);
  dart.addTypeCaches(media_query.Orientation);
  dart.setLibraryUri(media_query.Orientation, L88);
  dart.setFieldSignature(media_query.Orientation, () => ({
    __proto__: dart.getFields(media_query.Orientation.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$16]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(media_query.Orientation, ['toString']);
  media_query.Orientation.portrait = C769 || CT.C769;
  media_query.Orientation.landscape = C770 || CT.C770;
  media_query.Orientation.values = C771 || CT.C771;
  var C772;
  var C773;
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var C774;
  var C775;
  var size$0 = dart.privateName(media_query, "MediaQueryData.size");
  var devicePixelRatio$0 = dart.privateName(media_query, "MediaQueryData.devicePixelRatio");
  var textScaleFactor$0 = dart.privateName(media_query, "MediaQueryData.textScaleFactor");
  var platformBrightness$ = dart.privateName(media_query, "MediaQueryData.platformBrightness");
  var viewInsets$ = dart.privateName(media_query, "MediaQueryData.viewInsets");
  var padding$ = dart.privateName(media_query, "MediaQueryData.padding");
  var viewPadding$ = dart.privateName(media_query, "MediaQueryData.viewPadding");
  var systemGestureInsets$ = dart.privateName(media_query, "MediaQueryData.systemGestureInsets");
  var alwaysUse24HourFormat$ = dart.privateName(media_query, "MediaQueryData.alwaysUse24HourFormat");
  var accessibleNavigation$ = dart.privateName(media_query, "MediaQueryData.accessibleNavigation");
  var invertColors$ = dart.privateName(media_query, "MediaQueryData.invertColors");
  var highContrast$ = dart.privateName(media_query, "MediaQueryData.highContrast");
  var disableAnimations$ = dart.privateName(media_query, "MediaQueryData.disableAnimations");
  var boldText$ = dart.privateName(media_query, "MediaQueryData.boldText");
  var navigationMode$ = dart.privateName(media_query, "MediaQueryData.navigationMode");
  media_query.MediaQueryData = class MediaQueryData extends core.Object {
    get size() {
      return this[size$0];
    }
    set size(value) {
      super.size = value;
    }
    get devicePixelRatio() {
      return this[devicePixelRatio$0];
    }
    set devicePixelRatio(value) {
      super.devicePixelRatio = value;
    }
    get textScaleFactor() {
      return this[textScaleFactor$0];
    }
    set textScaleFactor(value) {
      super.textScaleFactor = value;
    }
    get platformBrightness() {
      return this[platformBrightness$];
    }
    set platformBrightness(value) {
      super.platformBrightness = value;
    }
    get viewInsets() {
      return this[viewInsets$];
    }
    set viewInsets(value) {
      super.viewInsets = value;
    }
    get padding() {
      return this[padding$];
    }
    set padding(value) {
      super.padding = value;
    }
    get viewPadding() {
      return this[viewPadding$];
    }
    set viewPadding(value) {
      super.viewPadding = value;
    }
    get systemGestureInsets() {
      return this[systemGestureInsets$];
    }
    set systemGestureInsets(value) {
      super.systemGestureInsets = value;
    }
    get alwaysUse24HourFormat() {
      return this[alwaysUse24HourFormat$];
    }
    set alwaysUse24HourFormat(value) {
      super.alwaysUse24HourFormat = value;
    }
    get accessibleNavigation() {
      return this[accessibleNavigation$];
    }
    set accessibleNavigation(value) {
      super.accessibleNavigation = value;
    }
    get invertColors() {
      return this[invertColors$];
    }
    set invertColors(value) {
      super.invertColors = value;
    }
    get highContrast() {
      return this[highContrast$];
    }
    set highContrast(value) {
      super.highContrast = value;
    }
    get disableAnimations() {
      return this[disableAnimations$];
    }
    set disableAnimations(value) {
      super.disableAnimations = value;
    }
    get boldText() {
      return this[boldText$];
    }
    set boldText(value) {
      super.boldText = value;
    }
    get navigationMode() {
      return this[navigationMode$];
    }
    set navigationMode(value) {
      super.navigationMode = value;
    }
    get orientation() {
      return dart.notNull(this.size.width) > dart.notNull(this.size.height) ? media_query.Orientation.landscape : media_query.Orientation.portrait;
    }
    copyWith(opts) {
      let t62, t62$, t62$0, t62$1, t62$2, t62$3, t62$4, t62$5, t62$6, t62$7, t62$8, t62$9, t62$10, t62$11, t62$12;
      let size = opts && 'size' in opts ? opts.size : null;
      let devicePixelRatio = opts && 'devicePixelRatio' in opts ? opts.devicePixelRatio : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let platformBrightness = opts && 'platformBrightness' in opts ? opts.platformBrightness : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let viewPadding = opts && 'viewPadding' in opts ? opts.viewPadding : null;
      let viewInsets = opts && 'viewInsets' in opts ? opts.viewInsets : null;
      let systemGestureInsets = opts && 'systemGestureInsets' in opts ? opts.systemGestureInsets : null;
      let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : null;
      let highContrast = opts && 'highContrast' in opts ? opts.highContrast : null;
      let disableAnimations = opts && 'disableAnimations' in opts ? opts.disableAnimations : null;
      let invertColors = opts && 'invertColors' in opts ? opts.invertColors : null;
      let accessibleNavigation = opts && 'accessibleNavigation' in opts ? opts.accessibleNavigation : null;
      let boldText = opts && 'boldText' in opts ? opts.boldText : null;
      let navigationMode = opts && 'navigationMode' in opts ? opts.navigationMode : null;
      return new media_query.MediaQueryData.new({size: (t62 = size, t62 == null ? this.size : t62), devicePixelRatio: (t62$ = devicePixelRatio, t62$ == null ? this.devicePixelRatio : t62$), textScaleFactor: (t62$0 = textScaleFactor, t62$0 == null ? this.textScaleFactor : t62$0), platformBrightness: (t62$1 = platformBrightness, t62$1 == null ? this.platformBrightness : t62$1), padding: (t62$2 = padding, t62$2 == null ? this.padding : t62$2), viewPadding: (t62$3 = viewPadding, t62$3 == null ? this.viewPadding : t62$3), viewInsets: (t62$4 = viewInsets, t62$4 == null ? this.viewInsets : t62$4), systemGestureInsets: (t62$5 = systemGestureInsets, t62$5 == null ? this.systemGestureInsets : t62$5), alwaysUse24HourFormat: (t62$6 = alwaysUse24HourFormat, t62$6 == null ? this.alwaysUse24HourFormat : t62$6), invertColors: (t62$7 = invertColors, t62$7 == null ? this.invertColors : t62$7), highContrast: (t62$8 = highContrast, t62$8 == null ? this.highContrast : t62$8), disableAnimations: (t62$9 = disableAnimations, t62$9 == null ? this.disableAnimations : t62$9), accessibleNavigation: (t62$10 = accessibleNavigation, t62$10 == null ? this.accessibleNavigation : t62$10), boldText: (t62$11 = boldText, t62$11 == null ? this.boldText : t62$11), navigationMode: (t62$12 = navigationMode, t62$12 == null ? this.navigationMode : t62$12)});
    }
    removePadding(opts) {
      let removeLeft = opts && 'removeLeft' in opts ? opts.removeLeft : false;
      if (removeLeft == null) dart.nullFailed(L87, 427, 10, "removeLeft");
      let removeTop = opts && 'removeTop' in opts ? opts.removeTop : false;
      if (removeTop == null) dart.nullFailed(L87, 428, 10, "removeTop");
      let removeRight = opts && 'removeRight' in opts ? opts.removeRight : false;
      if (removeRight == null) dart.nullFailed(L87, 429, 10, "removeRight");
      let removeBottom = opts && 'removeBottom' in opts ? opts.removeBottom : false;
      if (removeBottom == null) dart.nullFailed(L87, 430, 10, "removeBottom");
      if (!(dart.test(removeLeft) || dart.test(removeTop) || dart.test(removeRight) || dart.test(removeBottom))) return this;
      return new media_query.MediaQueryData.new({size: this.size, devicePixelRatio: this.devicePixelRatio, textScaleFactor: this.textScaleFactor, platformBrightness: this.platformBrightness, padding: this.padding.copyWith({left: dart.test(removeLeft) ? 0.0 : null, top: dart.test(removeTop) ? 0.0 : null, right: dart.test(removeRight) ? 0.0 : null, bottom: dart.test(removeBottom) ? 0.0 : null}), viewPadding: this.viewPadding.copyWith({left: dart.test(removeLeft) ? math.max(core.double, 0.0, dart.notNull(this.viewPadding.left) - dart.notNull(this.padding.left)) : null, top: dart.test(removeTop) ? math.max(core.double, 0.0, dart.notNull(this.viewPadding.top) - dart.notNull(this.padding.top)) : null, right: dart.test(removeRight) ? math.max(core.double, 0.0, dart.notNull(this.viewPadding.right) - dart.notNull(this.padding.right)) : null, bottom: dart.test(removeBottom) ? math.max(core.double, 0.0, dart.notNull(this.viewPadding.bottom) - dart.notNull(this.padding.bottom)) : null}), viewInsets: this.viewInsets, alwaysUse24HourFormat: this.alwaysUse24HourFormat, highContrast: this.highContrast, disableAnimations: this.disableAnimations, invertColors: this.invertColors, accessibleNavigation: this.accessibleNavigation, boldText: this.boldText});
    }
    removeViewInsets(opts) {
      let removeLeft = opts && 'removeLeft' in opts ? opts.removeLeft : false;
      if (removeLeft == null) dart.nullFailed(L87, 475, 10, "removeLeft");
      let removeTop = opts && 'removeTop' in opts ? opts.removeTop : false;
      if (removeTop == null) dart.nullFailed(L87, 476, 10, "removeTop");
      let removeRight = opts && 'removeRight' in opts ? opts.removeRight : false;
      if (removeRight == null) dart.nullFailed(L87, 477, 10, "removeRight");
      let removeBottom = opts && 'removeBottom' in opts ? opts.removeBottom : false;
      if (removeBottom == null) dart.nullFailed(L87, 478, 10, "removeBottom");
      if (!(dart.test(removeLeft) || dart.test(removeTop) || dart.test(removeRight) || dart.test(removeBottom))) return this;
      return new media_query.MediaQueryData.new({size: this.size, devicePixelRatio: this.devicePixelRatio, textScaleFactor: this.textScaleFactor, platformBrightness: this.platformBrightness, padding: this.padding, viewPadding: this.viewPadding.copyWith({left: dart.test(removeLeft) ? math.max(core.double, 0.0, dart.notNull(this.viewPadding.left) - dart.notNull(this.viewInsets.left)) : null, top: dart.test(removeTop) ? math.max(core.double, 0.0, dart.notNull(this.viewPadding.top) - dart.notNull(this.viewInsets.top)) : null, right: dart.test(removeRight) ? math.max(core.double, 0.0, dart.notNull(this.viewPadding.right) - dart.notNull(this.viewInsets.right)) : null, bottom: dart.test(removeBottom) ? math.max(core.double, 0.0, dart.notNull(this.viewPadding.bottom) - dart.notNull(this.viewInsets.bottom)) : null}), viewInsets: this.viewInsets.copyWith({left: dart.test(removeLeft) ? 0.0 : null, top: dart.test(removeTop) ? 0.0 : null, right: dart.test(removeRight) ? 0.0 : null, bottom: dart.test(removeBottom) ? 0.0 : null}), alwaysUse24HourFormat: this.alwaysUse24HourFormat, highContrast: this.highContrast, disableAnimations: this.disableAnimations, invertColors: this.invertColors, accessibleNavigation: this.accessibleNavigation, boldText: this.boldText});
    }
    removeViewPadding(opts) {
      let removeLeft = opts && 'removeLeft' in opts ? opts.removeLeft : false;
      if (removeLeft == null) dart.nullFailed(L87, 523, 10, "removeLeft");
      let removeTop = opts && 'removeTop' in opts ? opts.removeTop : false;
      if (removeTop == null) dart.nullFailed(L87, 524, 10, "removeTop");
      let removeRight = opts && 'removeRight' in opts ? opts.removeRight : false;
      if (removeRight == null) dart.nullFailed(L87, 525, 10, "removeRight");
      let removeBottom = opts && 'removeBottom' in opts ? opts.removeBottom : false;
      if (removeBottom == null) dart.nullFailed(L87, 526, 10, "removeBottom");
      if (!(dart.test(removeLeft) || dart.test(removeTop) || dart.test(removeRight) || dart.test(removeBottom))) return this;
      return new media_query.MediaQueryData.new({size: this.size, devicePixelRatio: this.devicePixelRatio, textScaleFactor: this.textScaleFactor, platformBrightness: this.platformBrightness, padding: this.padding.copyWith({left: dart.test(removeLeft) ? 0.0 : null, top: dart.test(removeTop) ? 0.0 : null, right: dart.test(removeRight) ? 0.0 : null, bottom: dart.test(removeBottom) ? 0.0 : null}), viewInsets: this.viewInsets, viewPadding: this.viewPadding.copyWith({left: dart.test(removeLeft) ? 0.0 : null, top: dart.test(removeTop) ? 0.0 : null, right: dart.test(removeRight) ? 0.0 : null, bottom: dart.test(removeBottom) ? 0.0 : null}), alwaysUse24HourFormat: this.alwaysUse24HourFormat, highContrast: this.highContrast, disableAnimations: this.disableAnimations, invertColors: this.invertColors, accessibleNavigation: this.accessibleNavigation, boldText: this.boldText});
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      return media_query.MediaQueryData.is(other) && dart.equals(other.size, this.size) && other.devicePixelRatio == this.devicePixelRatio && other.textScaleFactor == this.textScaleFactor && dart.equals(other.platformBrightness, this.platformBrightness) && dart.equals(other.padding, this.padding) && dart.equals(other.viewPadding, this.viewPadding) && dart.equals(other.viewInsets, this.viewInsets) && dart.equals(other.alwaysUse24HourFormat, this.alwaysUse24HourFormat) && dart.equals(other.highContrast, this.highContrast) && dart.equals(other.disableAnimations, this.disableAnimations) && dart.equals(other.invertColors, this.invertColors) && dart.equals(other.accessibleNavigation, this.accessibleNavigation) && dart.equals(other.boldText, this.boldText) && dart.equals(other.navigationMode, this.navigationMode);
    }
    get hashCode() {
      return ui.hashValues(this.size, this.devicePixelRatio, this.textScaleFactor, this.platformBrightness, this.padding, this.viewPadding, this.viewInsets, this.alwaysUse24HourFormat, this.highContrast, this.disableAnimations, this.invertColors, this.accessibleNavigation, this.boldText, this.navigationMode);
    }
    toString() {
      let properties = JSArrayOfString().of(["size: " + dart.str(this.size), "devicePixelRatio: " + this.devicePixelRatio[$toStringAsFixed](1), "textScaleFactor: " + this.textScaleFactor[$toStringAsFixed](1), "platformBrightness: " + dart.str(this.platformBrightness), "padding: " + dart.str(this.padding), "viewPadding: " + dart.str(this.viewPadding), "viewInsets: " + dart.str(this.viewInsets), "alwaysUse24HourFormat: " + dart.str(this.alwaysUse24HourFormat), "accessibleNavigation: " + dart.str(this.accessibleNavigation), "highContrast: " + dart.str(this.highContrast), "disableAnimations: " + dart.str(this.disableAnimations), "invertColors: " + dart.str(this.invertColors), "boldText: " + dart.str(this.boldText), "navigationMode: " + dart.str(diagnostics$.describeEnum(this.navigationMode))]);
      return dart.str(object.objectRuntimeType(this, "MediaQueryData")) + "(" + dart.str(properties[$join](", ")) + ")";
    }
  };
  (media_query.MediaQueryData.new = function(opts) {
    let size = opts && 'size' in opts ? opts.size : C772 || CT.C772;
    if (size == null) dart.nullFailed(L87, 91, 10, "size");
    let devicePixelRatio = opts && 'devicePixelRatio' in opts ? opts.devicePixelRatio : 1;
    if (devicePixelRatio == null) dart.nullFailed(L87, 92, 10, "devicePixelRatio");
    let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : 1;
    if (textScaleFactor == null) dart.nullFailed(L87, 93, 10, "textScaleFactor");
    let platformBrightness = opts && 'platformBrightness' in opts ? opts.platformBrightness : C773 || CT.C773;
    if (platformBrightness == null) dart.nullFailed(L87, 94, 10, "platformBrightness");
    let padding = opts && 'padding' in opts ? opts.padding : C774 || CT.C774;
    if (padding == null) dart.nullFailed(L87, 95, 10, "padding");
    let viewInsets = opts && 'viewInsets' in opts ? opts.viewInsets : C774 || CT.C774;
    if (viewInsets == null) dart.nullFailed(L87, 96, 10, "viewInsets");
    let systemGestureInsets = opts && 'systemGestureInsets' in opts ? opts.systemGestureInsets : C774 || CT.C774;
    if (systemGestureInsets == null) dart.nullFailed(L87, 97, 10, "systemGestureInsets");
    let viewPadding = opts && 'viewPadding' in opts ? opts.viewPadding : C774 || CT.C774;
    if (viewPadding == null) dart.nullFailed(L87, 98, 10, "viewPadding");
    let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : false;
    if (alwaysUse24HourFormat == null) dart.nullFailed(L87, 99, 10, "alwaysUse24HourFormat");
    let accessibleNavigation = opts && 'accessibleNavigation' in opts ? opts.accessibleNavigation : false;
    if (accessibleNavigation == null) dart.nullFailed(L87, 100, 10, "accessibleNavigation");
    let invertColors = opts && 'invertColors' in opts ? opts.invertColors : false;
    if (invertColors == null) dart.nullFailed(L87, 101, 10, "invertColors");
    let highContrast = opts && 'highContrast' in opts ? opts.highContrast : false;
    if (highContrast == null) dart.nullFailed(L87, 102, 10, "highContrast");
    let disableAnimations = opts && 'disableAnimations' in opts ? opts.disableAnimations : false;
    if (disableAnimations == null) dart.nullFailed(L87, 103, 10, "disableAnimations");
    let boldText = opts && 'boldText' in opts ? opts.boldText : false;
    if (boldText == null) dart.nullFailed(L87, 104, 10, "boldText");
    let navigationMode = opts && 'navigationMode' in opts ? opts.navigationMode : C775 || CT.C775;
    if (navigationMode == null) dart.nullFailed(L87, 105, 10, "navigationMode");
    this[size$0] = size;
    this[devicePixelRatio$0] = devicePixelRatio;
    this[textScaleFactor$0] = textScaleFactor;
    this[platformBrightness$] = platformBrightness;
    this[padding$] = padding;
    this[viewInsets$] = viewInsets;
    this[systemGestureInsets$] = systemGestureInsets;
    this[viewPadding$] = viewPadding;
    this[alwaysUse24HourFormat$] = alwaysUse24HourFormat;
    this[accessibleNavigation$] = accessibleNavigation;
    this[invertColors$] = invertColors;
    this[highContrast$] = highContrast;
    this[disableAnimations$] = disableAnimations;
    this[boldText$] = boldText;
    this[navigationMode$] = navigationMode;
    if (!(size != null)) dart.assertFailed(null, L87, 106, 15, "size != null");
    if (!(devicePixelRatio != null)) dart.assertFailed(null, L87, 107, 15, "devicePixelRatio != null");
    if (!(textScaleFactor != null)) dart.assertFailed(null, L87, 108, 15, "textScaleFactor != null");
    if (!(platformBrightness != null)) dart.assertFailed(null, L87, 109, 15, "platformBrightness != null");
    if (!(padding != null)) dart.assertFailed(null, L87, 110, 15, "padding != null");
    if (!(viewInsets != null)) dart.assertFailed(null, L87, 111, 15, "viewInsets != null");
    if (!(systemGestureInsets != null)) dart.assertFailed(null, L87, 112, 15, "systemGestureInsets != null");
    if (!(viewPadding != null)) dart.assertFailed(null, L87, 113, 15, "viewPadding != null");
    if (!(alwaysUse24HourFormat != null)) dart.assertFailed(null, L87, 114, 15, "alwaysUse24HourFormat != null");
    if (!(accessibleNavigation != null)) dart.assertFailed(null, L87, 115, 15, "accessibleNavigation != null");
    if (!(invertColors != null)) dart.assertFailed(null, L87, 116, 15, "invertColors != null");
    if (!(highContrast != null)) dart.assertFailed(null, L87, 117, 15, "highContrast != null");
    if (!(disableAnimations != null)) dart.assertFailed(null, L87, 118, 15, "disableAnimations != null");
    if (!(boldText != null)) dart.assertFailed(null, L87, 119, 15, "boldText != null");
    if (!(navigationMode != null)) dart.assertFailed(null, L87, 120, 15, "navigationMode != null");
    ;
  }).prototype = media_query.MediaQueryData.prototype;
  (media_query.MediaQueryData.fromWindow = function(window) {
    if (window == null) dart.nullFailed(L87, 129, 55, "window");
    this[size$0] = window.physicalSize['/'](window.devicePixelRatio);
    this[devicePixelRatio$0] = window.devicePixelRatio;
    this[textScaleFactor$0] = window.textScaleFactor;
    this[platformBrightness$] = window.platformBrightness;
    this[padding$] = new edge_insets.EdgeInsets.fromWindowPadding(window.padding, window.devicePixelRatio);
    this[viewPadding$] = new edge_insets.EdgeInsets.fromWindowPadding(window.viewPadding, window.devicePixelRatio);
    this[viewInsets$] = new edge_insets.EdgeInsets.fromWindowPadding(window.viewInsets, window.devicePixelRatio);
    this[systemGestureInsets$] = new edge_insets.EdgeInsets.fromWindowPadding(window.systemGestureInsets, window.devicePixelRatio);
    this[accessibleNavigation$] = window.accessibilityFeatures.accessibleNavigation;
    this[invertColors$] = window.accessibilityFeatures.invertColors;
    this[disableAnimations$] = window.accessibilityFeatures.disableAnimations;
    this[boldText$] = window.accessibilityFeatures.boldText;
    this[highContrast$] = window.accessibilityFeatures.highContrast;
    this[alwaysUse24HourFormat$] = window.alwaysUse24HourFormat;
    this[navigationMode$] = media_query.NavigationMode.traditional;
    ;
  }).prototype = media_query.MediaQueryData.prototype;
  dart.addTypeTests(media_query.MediaQueryData);
  dart.addTypeCaches(media_query.MediaQueryData);
  dart.setMethodSignature(media_query.MediaQueryData, () => ({
    __proto__: dart.getMethods(media_query.MediaQueryData.__proto__),
    copyWith: dart.fnType(media_query.MediaQueryData, [], {accessibleNavigation: dart.nullable(core.bool), alwaysUse24HourFormat: dart.nullable(core.bool), boldText: dart.nullable(core.bool), devicePixelRatio: dart.nullable(core.double), disableAnimations: dart.nullable(core.bool), highContrast: dart.nullable(core.bool), invertColors: dart.nullable(core.bool), navigationMode: dart.nullable(media_query.NavigationMode), padding: dart.nullable(edge_insets.EdgeInsets), platformBrightness: dart.nullable(ui.Brightness), size: dart.nullable(ui.Size), systemGestureInsets: dart.nullable(edge_insets.EdgeInsets), textScaleFactor: dart.nullable(core.double), viewInsets: dart.nullable(edge_insets.EdgeInsets), viewPadding: dart.nullable(edge_insets.EdgeInsets)}, {}),
    removePadding: dart.fnType(media_query.MediaQueryData, [], {removeBottom: core.bool, removeLeft: core.bool, removeRight: core.bool, removeTop: core.bool}, {}),
    removeViewInsets: dart.fnType(media_query.MediaQueryData, [], {removeBottom: core.bool, removeLeft: core.bool, removeRight: core.bool, removeTop: core.bool}, {}),
    removeViewPadding: dart.fnType(media_query.MediaQueryData, [], {removeBottom: core.bool, removeLeft: core.bool, removeRight: core.bool, removeTop: core.bool}, {})
  }));
  dart.setGetterSignature(media_query.MediaQueryData, () => ({
    __proto__: dart.getGetters(media_query.MediaQueryData.__proto__),
    orientation: media_query.Orientation
  }));
  dart.setLibraryUri(media_query.MediaQueryData, L88);
  dart.setFieldSignature(media_query.MediaQueryData, () => ({
    __proto__: dart.getFields(media_query.MediaQueryData.__proto__),
    size: dart.finalFieldType(ui.Size),
    devicePixelRatio: dart.finalFieldType(core.double),
    textScaleFactor: dart.finalFieldType(core.double),
    platformBrightness: dart.finalFieldType(ui.Brightness),
    viewInsets: dart.finalFieldType(edge_insets.EdgeInsets),
    padding: dart.finalFieldType(edge_insets.EdgeInsets),
    viewPadding: dart.finalFieldType(edge_insets.EdgeInsets),
    systemGestureInsets: dart.finalFieldType(edge_insets.EdgeInsets),
    alwaysUse24HourFormat: dart.finalFieldType(core.bool),
    accessibleNavigation: dart.finalFieldType(core.bool),
    invertColors: dart.finalFieldType(core.bool),
    highContrast: dart.finalFieldType(core.bool),
    disableAnimations: dart.finalFieldType(core.bool),
    boldText: dart.finalFieldType(core.bool),
    navigationMode: dart.finalFieldType(media_query.NavigationMode)
  }));
  dart.defineExtensionMethods(media_query.MediaQueryData, ['_equals', 'toString']);
  dart.defineExtensionAccessors(media_query.MediaQueryData, ['hashCode']);
  var data$0 = dart.privateName(media_query, "MediaQuery.data");
  media_query.MediaQuery = class MediaQuery extends framework.InheritedWidget {
    get data() {
      return this[data$0];
    }
    set data(value) {
      super.data = value;
    }
    static removePadding(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let context = opts && 'context' in opts ? opts.context : null;
      if (context == null) dart.nullFailed(L87, 682, 27, "context");
      let removeLeft = opts && 'removeLeft' in opts ? opts.removeLeft : false;
      if (removeLeft == null) dart.nullFailed(L87, 683, 10, "removeLeft");
      let removeTop = opts && 'removeTop' in opts ? opts.removeTop : false;
      if (removeTop == null) dart.nullFailed(L87, 684, 10, "removeTop");
      let removeRight = opts && 'removeRight' in opts ? opts.removeRight : false;
      if (removeRight == null) dart.nullFailed(L87, 685, 10, "removeRight");
      let removeBottom = opts && 'removeBottom' in opts ? opts.removeBottom : false;
      if (removeBottom == null) dart.nullFailed(L87, 686, 10, "removeBottom");
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(L87, 687, 21, "child");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      return new media_query.MediaQuery.new({key: key, data: media_query.MediaQuery.of(context).removePadding({removeLeft: removeLeft, removeTop: removeTop, removeRight: removeRight, removeBottom: removeBottom}), child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }
    static removeViewInsets(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let context = opts && 'context' in opts ? opts.context : null;
      if (context == null) dart.nullFailed(L87, 727, 27, "context");
      let removeLeft = opts && 'removeLeft' in opts ? opts.removeLeft : false;
      if (removeLeft == null) dart.nullFailed(L87, 728, 10, "removeLeft");
      let removeTop = opts && 'removeTop' in opts ? opts.removeTop : false;
      if (removeTop == null) dart.nullFailed(L87, 729, 10, "removeTop");
      let removeRight = opts && 'removeRight' in opts ? opts.removeRight : false;
      if (removeRight == null) dart.nullFailed(L87, 730, 10, "removeRight");
      let removeBottom = opts && 'removeBottom' in opts ? opts.removeBottom : false;
      if (removeBottom == null) dart.nullFailed(L87, 731, 10, "removeBottom");
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(L87, 732, 21, "child");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      return new media_query.MediaQuery.new({key: key, data: media_query.MediaQuery.of(context).removeViewInsets({removeLeft: removeLeft, removeTop: removeTop, removeRight: removeRight, removeBottom: removeBottom}), child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }
    static removeViewPadding(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let context = opts && 'context' in opts ? opts.context : null;
      if (context == null) dart.nullFailed(L87, 771, 27, "context");
      let removeLeft = opts && 'removeLeft' in opts ? opts.removeLeft : false;
      if (removeLeft == null) dart.nullFailed(L87, 772, 10, "removeLeft");
      let removeTop = opts && 'removeTop' in opts ? opts.removeTop : false;
      if (removeTop == null) dart.nullFailed(L87, 773, 10, "removeTop");
      let removeRight = opts && 'removeRight' in opts ? opts.removeRight : false;
      if (removeRight == null) dart.nullFailed(L87, 774, 10, "removeRight");
      let removeBottom = opts && 'removeBottom' in opts ? opts.removeBottom : false;
      if (removeBottom == null) dart.nullFailed(L87, 775, 10, "removeBottom");
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(L87, 776, 21, "child");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      return new media_query.MediaQuery.new({key: key, data: media_query.MediaQuery.of(context).removeViewPadding({removeLeft: removeLeft, removeTop: removeTop, removeRight: removeRight, removeBottom: removeBottom}), child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }
    static of(context) {
      if (context == null) dart.nullFailed(L87, 818, 41, "context");
      if (!(context != null)) dart.assertFailed(null, L87, 819, 12, "context != null");
      if (!dart.test(debug$0.debugCheckHasMediaQuery(context))) dart.assertFailed(null, L87, 820, 12, "debugCheckHasMediaQuery(context)");
      return dart.nullCheck(context.dependOnInheritedWidgetOfExactType(media_query.MediaQuery)).data;
    }
    static maybeOf(context) {
      let t62;
      if (context == null) dart.nullFailed(L87, 851, 47, "context");
      if (!(context != null)) dart.assertFailed(null, L87, 852, 12, "context != null");
      t62 = context.dependOnInheritedWidgetOfExactType(media_query.MediaQuery);
      return t62 == null ? null : t62.data;
    }
    static textScaleFactorOf(context) {
      let t62, t62$;
      if (context == null) dart.nullFailed(L87, 858, 48, "context");
      t62$ = (t62 = media_query.MediaQuery.maybeOf(context), t62 == null ? null : t62.textScaleFactor);
      return t62$ == null ? 1.0 : t62$;
    }
    static platformBrightnessOf(context) {
      let t62, t62$;
      if (context == null) dart.nullFailed(L87, 867, 55, "context");
      t62$ = (t62 = media_query.MediaQuery.maybeOf(context), t62 == null ? null : t62.platformBrightness);
      return t62$ == null ? ui.Brightness.light : t62$;
    }
    static highContrastOf(context) {
      let t62, t62$;
      if (context == null) dart.nullFailed(L87, 878, 43, "context");
      t62$ = (t62 = media_query.MediaQuery.maybeOf(context), t62 == null ? null : t62.highContrast);
      return t62$ == null ? false : t62$;
    }
    static boldTextOverride(context) {
      let t62, t62$;
      if (context == null) dart.nullFailed(L87, 884, 45, "context");
      t62$ = (t62 = media_query.MediaQuery.maybeOf(context), t62 == null ? null : t62.boldText);
      return t62$ == null ? false : t62$;
    }
    updateShouldNotify(oldWidget) {
      media_query.MediaQuery.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L87, 889, 38, "oldWidget");
      return !dart.equals(this.data, oldWidget.data);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L87, 892, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfMediaQueryData()).new("data", this.data, {showName: false}));
    }
  };
  (media_query.MediaQuery.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    if (data == null) dart.nullFailed(L87, 648, 19, "data");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L87, 649, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$0] = data;
    if (!(child != null)) dart.assertFailed(null, L87, 650, 15, "child != null");
    if (!(data != null)) dart.assertFailed(null, L87, 651, 15, "data != null");
    media_query.MediaQuery.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = media_query.MediaQuery.prototype;
  dart.addTypeTests(media_query.MediaQuery);
  dart.addTypeCaches(media_query.MediaQuery);
  dart.setMethodSignature(media_query.MediaQuery, () => ({
    __proto__: dart.getMethods(media_query.MediaQuery.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(media_query.MediaQuery, L88);
  dart.setFieldSignature(media_query.MediaQuery, () => ({
    __proto__: dart.getFields(media_query.MediaQuery.__proto__),
    data: dart.finalFieldType(media_query.MediaQueryData)
  }));
  var C776;
  var C777;
  media_query.NavigationMode = class NavigationMode extends core.Object {
    toString() {
      return this[_name$16];
    }
  };
  (media_query.NavigationMode.new = function(index, _name) {
    if (index == null) dart.nullFailed(L87, 906, 6, "index");
    if (_name == null) dart.nullFailed(L87, 906, 6, "_name");
    this.index = index;
    this[_name$16] = _name;
    ;
  }).prototype = media_query.NavigationMode.prototype;
  dart.addTypeTests(media_query.NavigationMode);
  dart.addTypeCaches(media_query.NavigationMode);
  dart.setLibraryUri(media_query.NavigationMode, L88);
  dart.setFieldSignature(media_query.NavigationMode, () => ({
    __proto__: dart.getFields(media_query.NavigationMode.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$16]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(media_query.NavigationMode, ['toString']);
  media_query.NavigationMode.traditional = C775 || CT.C775;
  media_query.NavigationMode.directional = C776 || CT.C776;
  media_query.NavigationMode.values = C777 || CT.C777;
  var _state$ = dart.privateName(disposable_build_context, "_state");
  var _debugValidate = dart.privateName(disposable_build_context, "_debugValidate");
  const _is_DisposableBuildContext_default = Symbol('_is_DisposableBuildContext_default');
  disposable_build_context.DisposableBuildContext$ = dart.generic(T => {
    class DisposableBuildContext extends core.Object {
      get context() {
        if (!dart.test(this[_debugValidate]())) dart.assertFailed(null, L89, 42, 12, "_debugValidate()");
        if (this[_state$] == null) {
          return null;
        }
        return dart.nullCheck(this[_state$]).context;
      }
      [_debugValidate]() {
        if (!(this[_state$] == null || dart.test(dart.nullCheck(this[_state$]).mounted))) dart.assertFailed("A DisposableBuildContext tried to access the BuildContext of a disposed " + "State object. This can happen when the creator of this " + "DisposableBuildContext fails to call dispose when it is disposed.", L89, 56, 7, "_state == null || _state!.mounted");
        return true;
      }
      dispose() {
        this[_state$] = null;
      }
    }
    (DisposableBuildContext.new = function(_state) {
      if (_state == null) dart.nullFailed(L89, 30, 33, "_state");
      this[_state$] = _state;
      if (!(_state != null)) dart.assertFailed(null, L89, 31, 16, "_state != null");
      if (!dart.test(_state.mounted)) dart.assertFailed("A DisposableBuildContext was given a BuildContext for an Element that is not mounted.", L89, 32, 16, "_state.mounted");
      ;
    }).prototype = DisposableBuildContext.prototype;
    dart.addTypeTests(DisposableBuildContext);
    DisposableBuildContext.prototype[_is_DisposableBuildContext_default] = true;
    dart.addTypeCaches(DisposableBuildContext);
    dart.setMethodSignature(DisposableBuildContext, () => ({
      __proto__: dart.getMethods(DisposableBuildContext.__proto__),
      [_debugValidate]: dart.fnType(core.bool, []),
      dispose: dart.fnType(dart.void, [])
    }));
    dart.setGetterSignature(DisposableBuildContext, () => ({
      __proto__: dart.getGetters(DisposableBuildContext.__proto__),
      context: dart.nullable(framework.BuildContext)
    }));
    dart.setLibraryUri(DisposableBuildContext, L90);
    dart.setFieldSignature(DisposableBuildContext, () => ({
      __proto__: dart.getFields(DisposableBuildContext.__proto__),
      [_state$]: dart.fieldType(dart.nullable(T))
    }));
    return DisposableBuildContext;
  });
  disposable_build_context.DisposableBuildContext = disposable_build_context.DisposableBuildContext$();
  dart.addTypeTests(disposable_build_context.DisposableBuildContext, _is_DisposableBuildContext_default);
  var _name$17 = dart.privateName(decoration_image, "_name");
  var C778;
  var C779;
  var image$0 = dart.privateName(image$, "Image.image");
  var frameBuilder$ = dart.privateName(image$, "Image.frameBuilder");
  var loadingBuilder$ = dart.privateName(image$, "Image.loadingBuilder");
  var errorBuilder$ = dart.privateName(image$, "Image.errorBuilder");
  var width$ = dart.privateName(image$, "Image.width");
  var height$ = dart.privateName(image$, "Image.height");
  var color$2 = dart.privateName(image$, "Image.color");
  var filterQuality$ = dart.privateName(image$, "Image.filterQuality");
  var colorBlendMode$ = dart.privateName(image$, "Image.colorBlendMode");
  var fit$ = dart.privateName(image$, "Image.fit");
  var alignment$2 = dart.privateName(image$, "Image.alignment");
  var repeat$ = dart.privateName(image$, "Image.repeat");
  var centerSlice$ = dart.privateName(image$, "Image.centerSlice");
  var matchTextDirection$ = dart.privateName(image$, "Image.matchTextDirection");
  var gaplessPlayback$ = dart.privateName(image$, "Image.gaplessPlayback");
  var semanticLabel$ = dart.privateName(image$, "Image.semanticLabel");
  var excludeFromSemantics$2 = dart.privateName(image$, "Image.excludeFromSemantics");
  var isAntiAlias$ = dart.privateName(image$, "Image.isAntiAlias");
  image$.Image = class Image extends framework.StatefulWidget {
    get image() {
      return this[image$0];
    }
    set image(value) {
      super.image = value;
    }
    get frameBuilder() {
      return this[frameBuilder$];
    }
    set frameBuilder(value) {
      super.frameBuilder = value;
    }
    get loadingBuilder() {
      return this[loadingBuilder$];
    }
    set loadingBuilder(value) {
      super.loadingBuilder = value;
    }
    get errorBuilder() {
      return this[errorBuilder$];
    }
    set errorBuilder(value) {
      super.errorBuilder = value;
    }
    get width() {
      return this[width$];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$];
    }
    set height(value) {
      super.height = value;
    }
    get color() {
      return this[color$2];
    }
    set color(value) {
      super.color = value;
    }
    get filterQuality() {
      return this[filterQuality$];
    }
    set filterQuality(value) {
      super.filterQuality = value;
    }
    get colorBlendMode() {
      return this[colorBlendMode$];
    }
    set colorBlendMode(value) {
      super.colorBlendMode = value;
    }
    get fit() {
      return this[fit$];
    }
    set fit(value) {
      super.fit = value;
    }
    get alignment() {
      return this[alignment$2];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get repeat() {
      return this[repeat$];
    }
    set repeat(value) {
      super.repeat = value;
    }
    get centerSlice() {
      return this[centerSlice$];
    }
    set centerSlice(value) {
      super.centerSlice = value;
    }
    get matchTextDirection() {
      return this[matchTextDirection$];
    }
    set matchTextDirection(value) {
      super.matchTextDirection = value;
    }
    get gaplessPlayback() {
      return this[gaplessPlayback$];
    }
    set gaplessPlayback(value) {
      super.gaplessPlayback = value;
    }
    get semanticLabel() {
      return this[semanticLabel$];
    }
    set semanticLabel(value) {
      super.semanticLabel = value;
    }
    get excludeFromSemantics() {
      return this[excludeFromSemantics$2];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get isAntiAlias() {
      return this[isAntiAlias$];
    }
    set isAntiAlias(value) {
      super.isAntiAlias = value;
    }
    createState() {
      return new image$._ImageState.new();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L91, 1056, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfImageProviderOfObject()).new("image", this.image));
      properties.add(new (DiagnosticsPropertyOfFunction()).new("frameBuilder", this.frameBuilder));
      properties.add(new (DiagnosticsPropertyOfFunction()).new("loadingBuilder", this.loadingBuilder));
      properties.add(new diagnostics$.DoubleProperty.new("width", this.width, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("height", this.height, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new (EnumPropertyOfBlendMode()).new("colorBlendMode", this.colorBlendMode, {defaultValue: null}));
      properties.add(new (EnumPropertyOfBoxFit()).new("fit", this.fit, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment, {defaultValue: null}));
      properties.add(new (EnumPropertyOfImageRepeat()).new("repeat", this.repeat, {defaultValue: decoration_image.ImageRepeat.noRepeat}));
      properties.add(new (DiagnosticsPropertyOfRect()).new("centerSlice", this.centerSlice, {defaultValue: null}));
      properties.add(new diagnostics$.FlagProperty.new("matchTextDirection", {value: this.matchTextDirection, ifTrue: "match text direction"}));
      properties.add(new diagnostics$.StringProperty.new("semanticLabel", this.semanticLabel, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfbool()).new("this.excludeFromSemantics", this.excludeFromSemantics));
      properties.add(new (EnumPropertyOfFilterQuality()).new("filterQuality", this.filterQuality));
    }
  };
  (image$.Image.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let image = opts && 'image' in opts ? opts.image : null;
    if (image == null) dart.nullFailed(L91, 324, 19, "image");
    let frameBuilder = opts && 'frameBuilder' in opts ? opts.frameBuilder : null;
    let loadingBuilder = opts && 'loadingBuilder' in opts ? opts.loadingBuilder : null;
    let errorBuilder = opts && 'errorBuilder' in opts ? opts.errorBuilder : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    if (excludeFromSemantics == null) dart.nullFailed(L91, 329, 10, "excludeFromSemantics");
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C413 || CT.C413;
    if (alignment == null) dart.nullFailed(L91, 335, 10, "alignment");
    let repeat = opts && 'repeat' in opts ? opts.repeat : C778 || CT.C778;
    if (repeat == null) dart.nullFailed(L91, 336, 10, "repeat");
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    if (matchTextDirection == null) dart.nullFailed(L91, 338, 10, "matchTextDirection");
    let gaplessPlayback = opts && 'gaplessPlayback' in opts ? opts.gaplessPlayback : false;
    if (gaplessPlayback == null) dart.nullFailed(L91, 339, 10, "gaplessPlayback");
    let isAntiAlias = opts && 'isAntiAlias' in opts ? opts.isAntiAlias : false;
    if (isAntiAlias == null) dart.nullFailed(L91, 340, 10, "isAntiAlias");
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C779 || CT.C779;
    if (filterQuality == null) dart.nullFailed(L91, 341, 10, "filterQuality");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[image$0] = image;
    this[frameBuilder$] = frameBuilder;
    this[loadingBuilder$] = loadingBuilder;
    this[errorBuilder$] = errorBuilder;
    this[semanticLabel$] = semanticLabel;
    this[excludeFromSemantics$2] = excludeFromSemantics;
    this[width$] = width;
    this[height$] = height;
    this[color$2] = color;
    this[colorBlendMode$] = colorBlendMode;
    this[fit$] = fit;
    this[alignment$2] = alignment;
    this[repeat$] = repeat;
    this[centerSlice$] = centerSlice;
    this[matchTextDirection$] = matchTextDirection;
    this[gaplessPlayback$] = gaplessPlayback;
    this[isAntiAlias$] = isAntiAlias;
    this[filterQuality$] = filterQuality;
    if (!(image != null)) dart.assertFailed(null, L91, 342, 15, "image != null");
    if (!(alignment != null)) dart.assertFailed(null, L91, 343, 15, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, L91, 344, 15, "repeat != null");
    if (!(filterQuality != null)) dart.assertFailed(null, L91, 345, 15, "filterQuality != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, L91, 346, 15, "matchTextDirection != null");
    if (!(isAntiAlias != null)) dart.assertFailed(null, L91, 347, 15, "isAntiAlias != null");
    image$.Image.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = image$.Image.prototype;
  (image$.Image.network = function(src, opts) {
    if (src == null) dart.nullFailed(L91, 384, 12, "src");
    let key = opts && 'key' in opts ? opts.key : null;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    if (scale == null) dart.nullFailed(L91, 386, 12, "scale");
    let frameBuilder = opts && 'frameBuilder' in opts ? opts.frameBuilder : null;
    let loadingBuilder = opts && 'loadingBuilder' in opts ? opts.loadingBuilder : null;
    let errorBuilder = opts && 'errorBuilder' in opts ? opts.errorBuilder : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    if (excludeFromSemantics == null) dart.nullFailed(L91, 391, 10, "excludeFromSemantics");
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C413 || CT.C413;
    if (alignment == null) dart.nullFailed(L91, 397, 10, "alignment");
    let repeat = opts && 'repeat' in opts ? opts.repeat : C778 || CT.C778;
    if (repeat == null) dart.nullFailed(L91, 398, 10, "repeat");
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    if (matchTextDirection == null) dart.nullFailed(L91, 400, 10, "matchTextDirection");
    let gaplessPlayback = opts && 'gaplessPlayback' in opts ? opts.gaplessPlayback : false;
    if (gaplessPlayback == null) dart.nullFailed(L91, 401, 10, "gaplessPlayback");
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C779 || CT.C779;
    if (filterQuality == null) dart.nullFailed(L91, 402, 10, "filterQuality");
    let isAntiAlias = opts && 'isAntiAlias' in opts ? opts.isAntiAlias : false;
    if (isAntiAlias == null) dart.nullFailed(L91, 403, 10, "isAntiAlias");
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let cacheWidth = opts && 'cacheWidth' in opts ? opts.cacheWidth : null;
    let cacheHeight = opts && 'cacheHeight' in opts ? opts.cacheHeight : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[frameBuilder$] = frameBuilder;
    this[loadingBuilder$] = loadingBuilder;
    this[errorBuilder$] = errorBuilder;
    this[semanticLabel$] = semanticLabel;
    this[excludeFromSemantics$2] = excludeFromSemantics;
    this[width$] = width;
    this[height$] = height;
    this[color$2] = color;
    this[colorBlendMode$] = colorBlendMode;
    this[fit$] = fit;
    this[alignment$2] = alignment;
    this[repeat$] = repeat;
    this[centerSlice$] = centerSlice;
    this[matchTextDirection$] = matchTextDirection;
    this[gaplessPlayback$] = gaplessPlayback;
    this[filterQuality$] = filterQuality;
    this[isAntiAlias$] = isAntiAlias;
    this[image$0] = image_provider.ResizeImage.resizeIfNeeded(cacheWidth, cacheHeight, new _network_image_web.NetworkImage.new(src, {scale: scale, headers: headers}));
    if (!(alignment != null)) dart.assertFailed(null, L91, 408, 15, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, L91, 409, 15, "repeat != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, L91, 410, 15, "matchTextDirection != null");
    if (!(cacheWidth == null || dart.notNull(cacheWidth) > 0)) dart.assertFailed(null, L91, 411, 15, "cacheWidth == null || cacheWidth > 0");
    if (!(cacheHeight == null || dart.notNull(cacheHeight) > 0)) dart.assertFailed(null, L91, 412, 15, "cacheHeight == null || cacheHeight > 0");
    if (!(isAntiAlias != null)) dart.assertFailed(null, L91, 413, 15, "isAntiAlias != null");
    image$.Image.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = image$.Image.prototype;
  (image$.Image.file = function(file, opts) {
    if (file == null) dart.nullFailed(L91, 450, 10, "file");
    let key = opts && 'key' in opts ? opts.key : null;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    if (scale == null) dart.nullFailed(L91, 452, 12, "scale");
    let frameBuilder = opts && 'frameBuilder' in opts ? opts.frameBuilder : null;
    let errorBuilder = opts && 'errorBuilder' in opts ? opts.errorBuilder : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    if (excludeFromSemantics == null) dart.nullFailed(L91, 456, 10, "excludeFromSemantics");
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C413 || CT.C413;
    if (alignment == null) dart.nullFailed(L91, 462, 10, "alignment");
    let repeat = opts && 'repeat' in opts ? opts.repeat : C778 || CT.C778;
    if (repeat == null) dart.nullFailed(L91, 463, 10, "repeat");
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    if (matchTextDirection == null) dart.nullFailed(L91, 465, 10, "matchTextDirection");
    let gaplessPlayback = opts && 'gaplessPlayback' in opts ? opts.gaplessPlayback : false;
    if (gaplessPlayback == null) dart.nullFailed(L91, 466, 10, "gaplessPlayback");
    let isAntiAlias = opts && 'isAntiAlias' in opts ? opts.isAntiAlias : false;
    if (isAntiAlias == null) dart.nullFailed(L91, 467, 10, "isAntiAlias");
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C779 || CT.C779;
    if (filterQuality == null) dart.nullFailed(L91, 468, 10, "filterQuality");
    let cacheWidth = opts && 'cacheWidth' in opts ? opts.cacheWidth : null;
    let cacheHeight = opts && 'cacheHeight' in opts ? opts.cacheHeight : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[frameBuilder$] = frameBuilder;
    this[errorBuilder$] = errorBuilder;
    this[semanticLabel$] = semanticLabel;
    this[excludeFromSemantics$2] = excludeFromSemantics;
    this[width$] = width;
    this[height$] = height;
    this[color$2] = color;
    this[colorBlendMode$] = colorBlendMode;
    this[fit$] = fit;
    this[alignment$2] = alignment;
    this[repeat$] = repeat;
    this[centerSlice$] = centerSlice;
    this[matchTextDirection$] = matchTextDirection;
    this[gaplessPlayback$] = gaplessPlayback;
    this[isAntiAlias$] = isAntiAlias;
    this[filterQuality$] = filterQuality;
    this[image$0] = image_provider.ResizeImage.resizeIfNeeded(cacheWidth, cacheHeight, new image_provider.FileImage.new(file, {scale: scale}));
    this[loadingBuilder$] = null;
    if (!(alignment != null)) dart.assertFailed(null, L91, 473, 15, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, L91, 474, 15, "repeat != null");
    if (!(filterQuality != null)) dart.assertFailed(null, L91, 475, 15, "filterQuality != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, L91, 476, 15, "matchTextDirection != null");
    if (!(cacheWidth == null || dart.notNull(cacheWidth) > 0)) dart.assertFailed(null, L91, 477, 15, "cacheWidth == null || cacheWidth > 0");
    if (!(cacheHeight == null || dart.notNull(cacheHeight) > 0)) dart.assertFailed(null, L91, 478, 15, "cacheHeight == null || cacheHeight > 0");
    if (!(isAntiAlias != null)) dart.assertFailed(null, L91, 479, 15, "isAntiAlias != null");
    image$.Image.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = image$.Image.prototype;
  (image$.Image.asset = function(name, opts) {
    if (name == null) dart.nullFailed(L91, 614, 12, "name");
    let key = opts && 'key' in opts ? opts.key : null;
    let bundle = opts && 'bundle' in opts ? opts.bundle : null;
    let frameBuilder = opts && 'frameBuilder' in opts ? opts.frameBuilder : null;
    let errorBuilder = opts && 'errorBuilder' in opts ? opts.errorBuilder : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    if (excludeFromSemantics == null) dart.nullFailed(L91, 620, 10, "excludeFromSemantics");
    let scale = opts && 'scale' in opts ? opts.scale : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C413 || CT.C413;
    if (alignment == null) dart.nullFailed(L91, 627, 10, "alignment");
    let repeat = opts && 'repeat' in opts ? opts.repeat : C778 || CT.C778;
    if (repeat == null) dart.nullFailed(L91, 628, 10, "repeat");
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    if (matchTextDirection == null) dart.nullFailed(L91, 630, 10, "matchTextDirection");
    let gaplessPlayback = opts && 'gaplessPlayback' in opts ? opts.gaplessPlayback : false;
    if (gaplessPlayback == null) dart.nullFailed(L91, 631, 10, "gaplessPlayback");
    let isAntiAlias = opts && 'isAntiAlias' in opts ? opts.isAntiAlias : false;
    if (isAntiAlias == null) dart.nullFailed(L91, 632, 10, "isAntiAlias");
    let $package = opts && 'package' in opts ? opts.package : null;
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C779 || CT.C779;
    if (filterQuality == null) dart.nullFailed(L91, 634, 10, "filterQuality");
    let cacheWidth = opts && 'cacheWidth' in opts ? opts.cacheWidth : null;
    let cacheHeight = opts && 'cacheHeight' in opts ? opts.cacheHeight : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[frameBuilder$] = frameBuilder;
    this[errorBuilder$] = errorBuilder;
    this[semanticLabel$] = semanticLabel;
    this[excludeFromSemantics$2] = excludeFromSemantics;
    this[width$] = width;
    this[height$] = height;
    this[color$2] = color;
    this[colorBlendMode$] = colorBlendMode;
    this[fit$] = fit;
    this[alignment$2] = alignment;
    this[repeat$] = repeat;
    this[centerSlice$] = centerSlice;
    this[matchTextDirection$] = matchTextDirection;
    this[gaplessPlayback$] = gaplessPlayback;
    this[isAntiAlias$] = isAntiAlias;
    this[filterQuality$] = filterQuality;
    this[image$0] = image_provider.ResizeImage.resizeIfNeeded(cacheWidth, cacheHeight, scale != null ? new image_provider.ExactAssetImage.new(name, {bundle: bundle, scale: scale, package: $package}) : new image_resolution.AssetImage.new(name, {bundle: bundle, package: $package}));
    this[loadingBuilder$] = null;
    if (!(alignment != null)) dart.assertFailed(null, L91, 642, 15, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, L91, 643, 15, "repeat != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, L91, 644, 15, "matchTextDirection != null");
    if (!(cacheWidth == null || dart.notNull(cacheWidth) > 0)) dart.assertFailed(null, L91, 645, 15, "cacheWidth == null || cacheWidth > 0");
    if (!(cacheHeight == null || dart.notNull(cacheHeight) > 0)) dart.assertFailed(null, L91, 646, 15, "cacheHeight == null || cacheHeight > 0");
    if (!(isAntiAlias != null)) dart.assertFailed(null, L91, 647, 15, "isAntiAlias != null");
    image$.Image.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = image$.Image.prototype;
  (image$.Image.memory = function(bytes, opts) {
    if (bytes == null) dart.nullFailed(L91, 676, 15, "bytes");
    let key = opts && 'key' in opts ? opts.key : null;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    if (scale == null) dart.nullFailed(L91, 678, 12, "scale");
    let frameBuilder = opts && 'frameBuilder' in opts ? opts.frameBuilder : null;
    let errorBuilder = opts && 'errorBuilder' in opts ? opts.errorBuilder : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    if (excludeFromSemantics == null) dart.nullFailed(L91, 682, 10, "excludeFromSemantics");
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C413 || CT.C413;
    if (alignment == null) dart.nullFailed(L91, 688, 10, "alignment");
    let repeat = opts && 'repeat' in opts ? opts.repeat : C778 || CT.C778;
    if (repeat == null) dart.nullFailed(L91, 689, 10, "repeat");
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    if (matchTextDirection == null) dart.nullFailed(L91, 691, 10, "matchTextDirection");
    let gaplessPlayback = opts && 'gaplessPlayback' in opts ? opts.gaplessPlayback : false;
    if (gaplessPlayback == null) dart.nullFailed(L91, 692, 10, "gaplessPlayback");
    let isAntiAlias = opts && 'isAntiAlias' in opts ? opts.isAntiAlias : false;
    if (isAntiAlias == null) dart.nullFailed(L91, 693, 10, "isAntiAlias");
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C779 || CT.C779;
    if (filterQuality == null) dart.nullFailed(L91, 694, 10, "filterQuality");
    let cacheWidth = opts && 'cacheWidth' in opts ? opts.cacheWidth : null;
    let cacheHeight = opts && 'cacheHeight' in opts ? opts.cacheHeight : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[frameBuilder$] = frameBuilder;
    this[errorBuilder$] = errorBuilder;
    this[semanticLabel$] = semanticLabel;
    this[excludeFromSemantics$2] = excludeFromSemantics;
    this[width$] = width;
    this[height$] = height;
    this[color$2] = color;
    this[colorBlendMode$] = colorBlendMode;
    this[fit$] = fit;
    this[alignment$2] = alignment;
    this[repeat$] = repeat;
    this[centerSlice$] = centerSlice;
    this[matchTextDirection$] = matchTextDirection;
    this[gaplessPlayback$] = gaplessPlayback;
    this[isAntiAlias$] = isAntiAlias;
    this[filterQuality$] = filterQuality;
    this[image$0] = image_provider.ResizeImage.resizeIfNeeded(cacheWidth, cacheHeight, new image_provider.MemoryImage.new(bytes, {scale: scale}));
    this[loadingBuilder$] = null;
    if (!(alignment != null)) dart.assertFailed(null, L91, 699, 15, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, L91, 700, 15, "repeat != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, L91, 701, 15, "matchTextDirection != null");
    if (!(cacheWidth == null || dart.notNull(cacheWidth) > 0)) dart.assertFailed(null, L91, 702, 15, "cacheWidth == null || cacheWidth > 0");
    if (!(cacheHeight == null || dart.notNull(cacheHeight) > 0)) dart.assertFailed(null, L91, 703, 15, "cacheHeight == null || cacheHeight > 0");
    if (!(isAntiAlias != null)) dart.assertFailed(null, L91, 704, 15, "isAntiAlias != null");
    image$.Image.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = image$.Image.prototype;
  dart.addTypeTests(image$.Image);
  dart.addTypeCaches(image$.Image);
  dart.setMethodSignature(image$.Image, () => ({
    __proto__: dart.getMethods(image$.Image.__proto__),
    createState: dart.fnType(image$._ImageState, [])
  }));
  dart.setLibraryUri(image$.Image, L92);
  dart.setFieldSignature(image$.Image, () => ({
    __proto__: dart.getFields(image$.Image.__proto__),
    image: dart.finalFieldType(image_provider.ImageProvider$(core.Object)),
    frameBuilder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget, dart.nullable(core.int), core.bool]))),
    loadingBuilder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget, dart.nullable(image_stream.ImageChunkEvent)]))),
    errorBuilder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, core.Object, dart.nullable(core.StackTrace)]))),
    width: dart.finalFieldType(dart.nullable(core.double)),
    height: dart.finalFieldType(dart.nullable(core.double)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    filterQuality: dart.finalFieldType(ui.FilterQuality),
    colorBlendMode: dart.finalFieldType(dart.nullable(ui.BlendMode)),
    fit: dart.finalFieldType(dart.nullable(box_fit.BoxFit)),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    repeat: dart.finalFieldType(decoration_image.ImageRepeat),
    centerSlice: dart.finalFieldType(dart.nullable(ui.Rect)),
    matchTextDirection: dart.finalFieldType(core.bool),
    gaplessPlayback: dart.finalFieldType(core.bool),
    semanticLabel: dart.finalFieldType(dart.nullable(core.String)),
    excludeFromSemantics: dart.finalFieldType(core.bool),
    isAntiAlias: dart.finalFieldType(core.bool)
  }));
  var _imageStream = dart.privateName(image$, "_imageStream");
  var _imageInfo = dart.privateName(image$, "_imageInfo");
  var _loadingProgress = dart.privateName(image$, "_loadingProgress");
  var _isListeningToStream = dart.privateName(image$, "_isListeningToStream");
  var ___ImageState__invertColors = dart.privateName(image$, "_#_ImageState#_invertColors");
  var ___ImageState__invertColors_isSet = dart.privateName(image$, "_#_ImageState#_invertColors#isSet");
  var _frameNumber = dart.privateName(image$, "_frameNumber");
  var _wasSynchronouslyLoaded = dart.privateName(image$, "_wasSynchronouslyLoaded");
  var ___ImageState__scrollAwareContext = dart.privateName(image$, "_#_ImageState#_scrollAwareContext");
  var ___ImageState__scrollAwareContext_isSet = dart.privateName(image$, "_#_ImageState#_scrollAwareContext#isSet");
  var _lastException = dart.privateName(image$, "_lastException");
  var _lastStack = dart.privateName(image$, "_lastStack");
  var _completerHandle = dart.privateName(image$, "_completerHandle");
  var _imageStreamListener = dart.privateName(image$, "_imageStreamListener");
  var _invertColors = dart.privateName(image$, "_invertColors");
  var _scrollAwareContext = dart.privateName(image$, "_scrollAwareContext");
  var _stopListeningToStream = dart.privateName(image$, "_stopListeningToStream");
  var _replaceImage = dart.privateName(image$, "_replaceImage");
  var _updateInvertColors = dart.privateName(image$, "_updateInvertColors");
  var _resolveImage = dart.privateName(image$, "_resolveImage");
  var _listenToStream = dart.privateName(image$, "_listenToStream");
  var _getListener = dart.privateName(image$, "_getListener");
  var _updateSourceStream = dart.privateName(image$, "_updateSourceStream");
  var _handleImageFrame = dart.privateName(image$, "_handleImageFrame");
  var _handleImageChunk = dart.privateName(image$, "_handleImageChunk");
  var C782;
  var C783;
  var C784;
  var C785;
  var C786;
  var C787;
  var C788;
  var C789;
  var C790;
  var C791;
  var C792;
  var C793;
  var C794;
  var C795;
  var C796;
  var C781;
  var C780;
  var C799;
  var C800;
  var C801;
  var C802;
  var C798;
  var C797;
  const State_WidgetsBindingObserver$36$0 = class State_WidgetsBindingObserver extends framework.State$(image$.Image) {};
  (State_WidgetsBindingObserver$36$0.new = function() {
    State_WidgetsBindingObserver$36$0.__proto__.new.call(this);
  }).prototype = State_WidgetsBindingObserver$36$0.prototype;
  dart.applyMixin(State_WidgetsBindingObserver$36$0, binding$5.WidgetsBindingObserver);
  image$._ImageState = class _ImageState extends State_WidgetsBindingObserver$36$0 {
    get [_invertColors]() {
      let t62;
      return dart.test(this[___ImageState__invertColors_isSet]) ? (t62 = this[___ImageState__invertColors], t62) : dart.throw(new _internal.LateError.fieldNI("_invertColors"));
    }
    set [_invertColors](t62) {
      if (t62 == null) dart.nullFailed(L91, 1081, 13, "null");
      this[___ImageState__invertColors_isSet] = true;
      this[___ImageState__invertColors] = t62;
    }
    get [_scrollAwareContext]() {
      let t63;
      return dart.test(this[___ImageState__scrollAwareContext_isSet]) ? (t63 = this[___ImageState__scrollAwareContext], t63) : dart.throw(new _internal.LateError.fieldNI("_scrollAwareContext"));
    }
    set [_scrollAwareContext](t63) {
      if (t63 == null) dart.nullFailed(L91, 1084, 45, "null");
      this[___ImageState__scrollAwareContext_isSet] = true;
      this[___ImageState__scrollAwareContext] = t63;
    }
    initState() {
      super.initState();
      dart.nullCheck(binding$5.WidgetsBinding.instance).addObserver(this);
      this[_scrollAwareContext] = new (DisposableBuildContextOfStateOfImage()).new(this);
    }
    dispose() {
      let t64;
      if (!(this[_imageStream] != null)) dart.assertFailed(null, L91, 1098, 12, "_imageStream != null");
      dart.nullCheck(binding$5.WidgetsBinding.instance).removeObserver(this);
      this[_stopListeningToStream]();
      t64 = this[_completerHandle];
      t64 == null ? null : t64.dispose();
      this[_scrollAwareContext].dispose();
      this[_replaceImage]({info: null});
      super.dispose();
    }
    didChangeDependencies() {
      this[_updateInvertColors]();
      this[_resolveImage]();
      if (dart.test(ticker_provider.TickerMode.of(this.context)))
        this[_listenToStream]();
      else
        this[_stopListeningToStream]({keepStreamAlive: true});
      super.didChangeDependencies();
    }
    didUpdateWidget(oldWidget) {
      image$.Image.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L91, 1121, 30, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (dart.test(this[_isListeningToStream]) && !(this.widget.loadingBuilder == null)[$_equals](oldWidget.loadingBuilder == null)) {
        let oldListener = this[_getListener]();
        dart.nullCheck(this[_imageStream]).addListener(this[_getListener]({recreateListener: true}));
        dart.nullCheck(this[_imageStream]).removeListener(oldListener);
      }
      if (!dart.equals(this.widget.image, oldWidget.image)) this[_resolveImage]();
    }
    didChangeAccessibilityFeatures() {
      super.didChangeAccessibilityFeatures();
      this.setState(dart.fn(() => {
        this[_updateInvertColors]();
      }, VoidTovoid()));
    }
    reassemble() {
      this[_resolveImage]();
      super.reassemble();
    }
    [_updateInvertColors]() {
      let t64, t64$;
      this[_invertColors] = (t64$ = (t64 = media_query.MediaQuery.maybeOf(this.context), t64 == null ? null : t64.invertColors), t64$ == null ? dart.nullCheck(binding$3.SemanticsBinding.instance).accessibilityFeatures.invertColors : t64$);
    }
    [_resolveImage]() {
      let provider = new (ScrollAwareImageProviderOfObject()).new({context: this[_scrollAwareContext], imageProvider: this.widget.image});
      let newStream = provider.resolve(image$.createLocalImageConfiguration(this.context, {size: this.widget.width != null && this.widget.height != null ? new ui.Size.new(dart.nullCheck(this.widget.width), dart.nullCheck(this.widget.height)) : null}));
      if (!(newStream != null)) dart.assertFailed(null, L91, 1162, 12, "newStream != null");
      this[_updateSourceStream](newStream);
    }
    [_getListener](opts) {
      let recreateListener = opts && 'recreateListener' in opts ? opts.recreateListener : false;
      if (recreateListener == null) dart.nullFailed(L91, 1167, 42, "recreateListener");
      if (this[_imageStreamListener] == null || dart.test(recreateListener)) {
        this[_lastException] = null;
        this[_lastStack] = null;
        this[_imageStreamListener] = new image_stream.ImageStreamListener.new(dart.bind(this, _handleImageFrame), {onChunk: this.widget.loadingBuilder == null ? null : dart.bind(this, _handleImageChunk), onError: this.widget.errorBuilder != null ? dart.fn((error, stackTrace) => {
            this.setState(dart.fn(() => {
              this[_lastException] = error;
              this[_lastStack] = stackTrace;
            }, VoidTovoid()));
          }, dynamicAndStackTraceNTovoid()) : null});
      }
      return dart.nullCheck(this[_imageStreamListener]);
    }
    [_handleImageFrame](imageInfo, synchronousCall) {
      if (imageInfo == null) dart.nullFailed(L91, 1187, 36, "imageInfo");
      if (synchronousCall == null) dart.nullFailed(L91, 1187, 52, "synchronousCall");
      this.setState(dart.fn(() => {
        this[_replaceImage]({info: imageInfo});
        this[_loadingProgress] = null;
        this[_lastException] = null;
        this[_lastStack] = null;
        this[_frameNumber] = this[_frameNumber] == null ? 0 : dart.nullCheck(this[_frameNumber]) + 1;
        this[_wasSynchronouslyLoaded] = !!(dart.notNull(this[_wasSynchronouslyLoaded]) | dart.test(synchronousCall));
      }, VoidTovoid()));
    }
    [_handleImageChunk](event) {
      if (event == null) dart.nullFailed(L91, 1198, 42, "event");
      if (!(this.widget.loadingBuilder != null)) dart.assertFailed(null, L91, 1199, 12, "widget.loadingBuilder != null");
      this.setState(dart.fn(() => {
        this[_loadingProgress] = event;
        this[_lastException] = null;
        this[_lastStack] = null;
      }, VoidTovoid()));
    }
    [_replaceImage](opts) {
      let t64;
      let info = opts && 'info' in opts ? opts.info : null;
      t64 = this[_imageInfo];
      t64 == null ? null : t64.dispose();
      this[_imageInfo] = info;
    }
    [_updateSourceStream](newStream) {
      let t64;
      if (newStream == null) dart.nullFailed(L91, 1215, 40, "newStream");
      if (dart.equals((t64 = this[_imageStream], t64 == null ? null : t64.key), newStream.key)) return;
      if (dart.test(this[_isListeningToStream])) dart.nullCheck(this[_imageStream]).removeListener(this[_getListener]());
      if (!dart.test(this.widget.gaplessPlayback)) this.setState(dart.fn(() => {
        this[_replaceImage]({info: null});
      }, VoidTovoid()));
      this.setState(dart.fn(() => {
        this[_loadingProgress] = null;
        this[_frameNumber] = null;
        this[_wasSynchronouslyLoaded] = false;
      }, VoidTovoid()));
      this[_imageStream] = newStream;
      if (dart.test(this[_isListeningToStream])) dart.nullCheck(this[_imageStream]).addListener(this[_getListener]());
    }
    [_listenToStream]() {
      let t64;
      if (dart.test(this[_isListeningToStream])) return;
      dart.nullCheck(this[_imageStream]).addListener(this[_getListener]());
      t64 = this[_completerHandle];
      t64 == null ? null : t64.dispose();
      this[_completerHandle] = null;
      this[_isListeningToStream] = true;
    }
    [_stopListeningToStream](opts) {
      let t64;
      let keepStreamAlive = opts && 'keepStreamAlive' in opts ? opts.keepStreamAlive : false;
      if (keepStreamAlive == null) dart.nullFailed(L91, 1254, 37, "keepStreamAlive");
      if (!dart.test(this[_isListeningToStream])) return;
      if (dart.test(keepStreamAlive) && this[_completerHandle] == null && (t64 = this[_imageStream], t64 == null ? null : t64.completer) != null) {
        this[_completerHandle] = dart.nullCheck(dart.nullCheck(this[_imageStream]).completer).keepAlive();
      }
      dart.nullCheck(this[_imageStream]).removeListener(this[_getListener]());
      this[_isListeningToStream] = false;
    }
    build(context) {
      let t64, t64$, t64$0, t64$1, t64$2;
      if (context == null) dart.nullFailed(L91, 1267, 29, "context");
      if (this[_lastException] != null) {
        if (!(this.widget.errorBuilder != null)) dart.assertFailed(null, L91, 1269, 14, "widget.errorBuilder != null");
        return dart.nullCheck(this.widget.errorBuilder)(context, dart.nullCheck(this[_lastException]), this[_lastStack]);
      }
      let result = new basic.RawImage.new({image: (t64 = this[_imageInfo], t64 == null ? null : t64.image), debugImageLabel: (t64$ = this[_imageInfo], t64$ == null ? null : t64$.debugLabel), width: this.widget.width, height: this.widget.height, scale: (t64$1 = (t64$0 = this[_imageInfo], t64$0 == null ? null : t64$0.scale), t64$1 == null ? 1.0 : t64$1), color: this.widget.color, colorBlendMode: this.widget.colorBlendMode, fit: this.widget.fit, alignment: this.widget.alignment, repeat: this.widget.repeat, centerSlice: this.widget.centerSlice, matchTextDirection: this.widget.matchTextDirection, invertColors: this[_invertColors], isAntiAlias: this.widget.isAntiAlias, filterQuality: this.widget.filterQuality, $creationLocationd_0dea112b090073317d4: C780 || CT.C780});
      if (!dart.test(this.widget.excludeFromSemantics)) {
        result = new basic.Semantics.new({container: this.widget.semanticLabel != null, image: true, label: (t64$2 = this.widget.semanticLabel, t64$2 == null ? "" : t64$2), child: result, $creationLocationd_0dea112b090073317d4: C797 || CT.C797});
      }
      if (this.widget.frameBuilder != null) result = dart.nullCheck(this.widget.frameBuilder)(context, result, this[_frameNumber], this[_wasSynchronouslyLoaded]);
      if (this.widget.loadingBuilder != null) result = dart.nullCheck(this.widget.loadingBuilder)(context, result, this[_loadingProgress]);
      return result;
    }
    debugFillProperties(description) {
      if (description == null) dart.nullFailed(L91, 1314, 56, "description");
      super.debugFillProperties(description);
      description.add(new (DiagnosticsPropertyOfImageStream()).new("stream", this[_imageStream]));
      description.add(new (DiagnosticsPropertyOfImageInfo()).new("pixels", this[_imageInfo]));
      description.add(new (DiagnosticsPropertyOfImageChunkEvent()).new("loadingProgress", this[_loadingProgress]));
      description.add(new (DiagnosticsPropertyOfint()).new("frameNumber", this[_frameNumber]));
      description.add(new (DiagnosticsPropertyOfbool()).new("wasSynchronouslyLoaded", this[_wasSynchronouslyLoaded]));
    }
  };
  (image$._ImageState.new = function() {
    this[_imageStream] = null;
    this[_imageInfo] = null;
    this[_loadingProgress] = null;
    this[_isListeningToStream] = false;
    this[___ImageState__invertColors] = null;
    this[___ImageState__invertColors_isSet] = false;
    this[_frameNumber] = null;
    this[_wasSynchronouslyLoaded] = false;
    this[___ImageState__scrollAwareContext] = null;
    this[___ImageState__scrollAwareContext_isSet] = false;
    this[_lastException] = null;
    this[_lastStack] = null;
    this[_completerHandle] = null;
    this[_imageStreamListener] = null;
    image$._ImageState.__proto__.new.call(this);
    ;
  }).prototype = image$._ImageState.prototype;
  dart.addTypeTests(image$._ImageState);
  dart.addTypeCaches(image$._ImageState);
  dart.setMethodSignature(image$._ImageState, () => ({
    __proto__: dart.getMethods(image$._ImageState.__proto__),
    [_updateInvertColors]: dart.fnType(dart.void, []),
    [_resolveImage]: dart.fnType(dart.void, []),
    [_getListener]: dart.fnType(image_stream.ImageStreamListener, [], {recreateListener: core.bool}, {}),
    [_handleImageFrame]: dart.fnType(dart.void, [image_stream.ImageInfo, core.bool]),
    [_handleImageChunk]: dart.fnType(dart.void, [image_stream.ImageChunkEvent]),
    [_replaceImage]: dart.fnType(dart.void, [], {}, {info: dart.nullable(image_stream.ImageInfo)}),
    [_updateSourceStream]: dart.fnType(dart.void, [image_stream.ImageStream]),
    [_listenToStream]: dart.fnType(dart.void, []),
    [_stopListeningToStream]: dart.fnType(dart.void, [], {keepStreamAlive: core.bool}, {}),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(image$._ImageState, () => ({
    __proto__: dart.getGetters(image$._ImageState.__proto__),
    [_invertColors]: core.bool,
    [_scrollAwareContext]: disposable_build_context.DisposableBuildContext$(framework.State$(image$.Image))
  }));
  dart.setSetterSignature(image$._ImageState, () => ({
    __proto__: dart.getSetters(image$._ImageState.__proto__),
    [_invertColors]: core.bool,
    [_scrollAwareContext]: disposable_build_context.DisposableBuildContext$(framework.State$(image$.Image))
  }));
  dart.setLibraryUri(image$._ImageState, L92);
  dart.setFieldSignature(image$._ImageState, () => ({
    __proto__: dart.getFields(image$._ImageState.__proto__),
    [_imageStream]: dart.fieldType(dart.nullable(image_stream.ImageStream)),
    [_imageInfo]: dart.fieldType(dart.nullable(image_stream.ImageInfo)),
    [_loadingProgress]: dart.fieldType(dart.nullable(image_stream.ImageChunkEvent)),
    [_isListeningToStream]: dart.fieldType(core.bool),
    [___ImageState__invertColors]: dart.fieldType(dart.nullable(core.bool)),
    [___ImageState__invertColors_isSet]: dart.fieldType(core.bool),
    [_frameNumber]: dart.fieldType(dart.nullable(core.int)),
    [_wasSynchronouslyLoaded]: dart.fieldType(core.bool),
    [___ImageState__scrollAwareContext]: dart.fieldType(dart.nullable(disposable_build_context.DisposableBuildContext$(framework.State$(image$.Image)))),
    [___ImageState__scrollAwareContext_isSet]: dart.fieldType(core.bool),
    [_lastException]: dart.fieldType(dart.nullable(core.Object)),
    [_lastStack]: dart.fieldType(dart.nullable(core.StackTrace)),
    [_completerHandle]: dart.fieldType(dart.nullable(image_stream.ImageStreamCompleterHandle)),
    [_imageStreamListener]: dart.fieldType(dart.nullable(image_stream.ImageStreamListener))
  }));
  image$.createLocalImageConfiguration = function createLocalImageConfiguration(context, opts) {
    let t64, t64$;
    if (context == null) dart.nullFailed(L91, 50, 63, "context");
    let size = opts && 'size' in opts ? opts.size : null;
    return new image_provider.ImageConfiguration.new({bundle: basic.DefaultAssetBundle.of(context), devicePixelRatio: (t64$ = (t64 = media_query.MediaQuery.maybeOf(context), t64 == null ? null : t64.devicePixelRatio), t64$ == null ? 1.0 : t64$), locale: localizations.Localizations.maybeLocaleOf(context), textDirection: basic.Directionality.maybeOf(context), size: size, platform: platform.defaultTargetPlatform});
  };
  image$.precacheImage = function precacheImage(provider, context, opts) {
    if (provider == null) dart.nullFailed(L91, 105, 17, "provider");
    if (context == null) dart.nullFailed(L91, 106, 16, "context");
    let size = opts && 'size' in opts ? opts.size : null;
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let config = image$.createLocalImageConfiguration(context, {size: size});
    let completer = CompleterOfvoid().new();
    let stream = provider.resolve(config);
    let listener = null;
    listener = new image_stream.ImageStreamListener.new(dart.fn((image, sync) => {
      if (sync == null) dart.nullFailed(L91, 115, 29, "sync");
      if (!dart.test(completer.isCompleted)) {
        completer.complete();
      }
      dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.fn(timeStamp => {
        if (timeStamp == null) dart.nullFailed(L91, 122, 65, "timeStamp");
        stream.removeListener(dart.nullCheck(listener));
      }, DurationTovoid()));
    }, ImageInfoNAndboolTovoid()), {onError: dart.fn((exception, stackTrace) => {
        if (exception == null) dart.nullFailed(L91, 126, 22, "exception");
        if (!dart.test(completer.isCompleted)) {
          completer.complete();
        }
        stream.removeListener(dart.nullCheck(listener));
        if (onError != null) {
          onError(exception, stackTrace);
        } else {
          assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({context: new assertions.ErrorDescription.new("image failed to precache"), library: "image resource service", exception: exception, stack: stackTrace, silent: true}));
        }
      }, ObjectAndStackTraceNTovoid())});
    stream.addListener(listener);
    return completer.future;
  };
  var C803;
  var decoration$1 = dart.privateName(container, "DecoratedBox.decoration");
  var position$3 = dart.privateName(container, "DecoratedBox.position");
  container.DecoratedBox = class DecoratedBox extends framework.SingleChildRenderObjectWidget {
    get decoration() {
      return this[decoration$1];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get position() {
      return this[position$3];
    }
    set position(value) {
      super.position = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L93, 79, 54, "context");
      return new proxy_box.RenderDecoratedBox.new({decoration: this.decoration, position: this.position, configuration: image$.createLocalImageConfiguration(context)});
    }
    updateRenderObject(context, renderObject) {
      let t64;
      if (context == null) dart.nullFailed(L93, 88, 40, "context");
      proxy_box.RenderDecoratedBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(L93, 88, 68, "renderObject");
      t64 = renderObject;
      (() => {
        t64.decoration = this.decoration;
        t64.configuration = image$.createLocalImageConfiguration(context);
        t64.position = this.position;
        return t64;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L93, 96, 56, "properties");
      super.debugFillProperties(properties);
      let label = null;
      switch (this.position) {
        case C445 || CT.C445:
        {
          label = "bg";
          break;
        }
        case C803 || CT.C803:
        {
          label = "fg";
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      properties.add(new (EnumPropertyOfDecorationPosition()).new("position", this.position, {level: diagnostics$.DiagnosticLevel.hidden}));
      properties.add(new (DiagnosticsPropertyOfDecoration()).new(label, this.decoration));
    }
  };
  (container.DecoratedBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    if (decoration == null) dart.nullFailed(L93, 63, 19, "decoration");
    let position = opts && 'position' in opts ? opts.position : C445 || CT.C445;
    if (position == null) dart.nullFailed(L93, 64, 10, "position");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[decoration$1] = decoration;
    this[position$3] = position;
    if (!(decoration != null)) dart.assertFailed(null, L93, 66, 15, "decoration != null");
    if (!(position != null)) dart.assertFailed(null, L93, 67, 15, "position != null");
    container.DecoratedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = container.DecoratedBox.prototype;
  dart.addTypeTests(container.DecoratedBox);
  dart.addTypeCaches(container.DecoratedBox);
  dart.setMethodSignature(container.DecoratedBox, () => ({
    __proto__: dart.getMethods(container.DecoratedBox.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderDecoratedBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(container.DecoratedBox, L94);
  dart.setFieldSignature(container.DecoratedBox, () => ({
    __proto__: dart.getFields(container.DecoratedBox.__proto__),
    decoration: dart.finalFieldType(decoration.Decoration),
    position: dart.finalFieldType(proxy_box.DecorationPosition)
  }));
  var C804;
  var _paddingIncludingDecoration = dart.privateName(container, "_paddingIncludingDecoration");
  var C807;
  var C806;
  var C805;
  var C810;
  var C811;
  var C812;
  var C809;
  var C808;
  var C815;
  var C816;
  var C814;
  var C813;
  var C819;
  var C820;
  var C818;
  var C817;
  var C823;
  var C824;
  var C822;
  var C821;
  var C827;
  var C828;
  var C829;
  var C826;
  var C825;
  var C832;
  var C833;
  var C831;
  var C830;
  var C836;
  var C837;
  var C838;
  var C835;
  var C834;
  var C841;
  var C842;
  var C840;
  var C839;
  var C845;
  var C846;
  var C844;
  var C843;
  var C849;
  var C850;
  var C851;
  var C848;
  var C847;
  var child$29 = dart.privateName(container, "Container.child");
  var alignment$3 = dart.privateName(container, "Container.alignment");
  var padding$0 = dart.privateName(container, "Container.padding");
  var color$3 = dart.privateName(container, "Container.color");
  var decoration$2 = dart.privateName(container, "Container.decoration");
  var foregroundDecoration$ = dart.privateName(container, "Container.foregroundDecoration");
  var constraints$ = dart.privateName(container, "Container.constraints");
  var margin$ = dart.privateName(container, "Container.margin");
  var transform$ = dart.privateName(container, "Container.transform");
  var transformAlignment$ = dart.privateName(container, "Container.transformAlignment");
  var clipBehavior$2 = dart.privateName(container, "Container.clipBehavior");
  container.Container = class Container extends framework.StatelessWidget {
    get child() {
      return this[child$29];
    }
    set child(value) {
      super.child = value;
    }
    get alignment() {
      return this[alignment$3];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get padding() {
      return this[padding$0];
    }
    set padding(value) {
      super.padding = value;
    }
    get color() {
      return this[color$3];
    }
    set color(value) {
      super.color = value;
    }
    get decoration() {
      return this[decoration$2];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get foregroundDecoration() {
      return this[foregroundDecoration$];
    }
    set foregroundDecoration(value) {
      super.foregroundDecoration = value;
    }
    get constraints() {
      return this[constraints$];
    }
    set constraints(value) {
      super.constraints = value;
    }
    get margin() {
      return this[margin$];
    }
    set margin(value) {
      super.margin = value;
    }
    get transform() {
      return this[transform$];
    }
    set transform(value) {
      super.transform = value;
    }
    get transformAlignment() {
      return this[transformAlignment$];
    }
    set transformAlignment(value) {
      super.transformAlignment = value;
    }
    get clipBehavior() {
      return this[clipBehavior$2];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get [_paddingIncludingDecoration]() {
      if (this.decoration == null || dart.nullCheck(this.decoration).padding == null) return this.padding;
      let decorationPadding = dart.nullCheck(this.decoration).padding;
      if (this.padding == null) return decorationPadding;
      return dart.nullCheck(this.padding).add(dart.nullCheck(decorationPadding));
    }
    build(context) {
      if (context == null) dart.nullFailed(L93, 384, 29, "context");
      let current = this.child;
      if (this.child == null && (this.constraints == null || !dart.test(dart.nullCheck(this.constraints).isTight))) {
        current = new basic.LimitedBox.new({maxWidth: 0.0, maxHeight: 0.0, child: new basic.ConstrainedBox.new({constraints: C105 || CT.C105, $creationLocationd_0dea112b090073317d4: C805 || CT.C805}), $creationLocationd_0dea112b090073317d4: C808 || CT.C808});
      }
      if (this.alignment != null) current = new basic.Align.new({alignment: dart.nullCheck(this.alignment), child: current, $creationLocationd_0dea112b090073317d4: C813 || CT.C813});
      let effectivePadding = this[_paddingIncludingDecoration];
      if (effectivePadding != null) current = new basic.Padding.new({padding: effectivePadding, child: current, $creationLocationd_0dea112b090073317d4: C817 || CT.C817});
      if (this.color != null) current = new basic.ColoredBox.new({color: dart.nullCheck(this.color), child: current, $creationLocationd_0dea112b090073317d4: C821 || CT.C821});
      if (!dart.equals(this.clipBehavior, ui.Clip.none)) {
        if (!(this.decoration != null)) dart.assertFailed(null, L93, 406, 14, "decoration != null");
        current = new basic.ClipPath.new({clipper: new container._DecorationClipper.new({textDirection: basic.Directionality.maybeOf(context), decoration: dart.nullCheck(this.decoration)}), clipBehavior: this.clipBehavior, child: current, $creationLocationd_0dea112b090073317d4: C825 || CT.C825});
      }
      if (this.decoration != null) current = new container.DecoratedBox.new({decoration: dart.nullCheck(this.decoration), child: current, $creationLocationd_0dea112b090073317d4: C830 || CT.C830});
      if (this.foregroundDecoration != null) {
        current = new container.DecoratedBox.new({decoration: dart.nullCheck(this.foregroundDecoration), position: proxy_box.DecorationPosition.foreground, child: current, $creationLocationd_0dea112b090073317d4: C834 || CT.C834});
      }
      if (this.constraints != null) current = new basic.ConstrainedBox.new({constraints: dart.nullCheck(this.constraints), child: current, $creationLocationd_0dea112b090073317d4: C839 || CT.C839});
      if (this.margin != null) current = new basic.Padding.new({padding: dart.nullCheck(this.margin), child: current, $creationLocationd_0dea112b090073317d4: C843 || CT.C843});
      if (this.transform != null) current = new basic.Transform.new({transform: dart.nullCheck(this.transform), child: current, alignment: this.transformAlignment, $creationLocationd_0dea112b090073317d4: C847 || CT.C847});
      return dart.nullCheck(current);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L93, 441, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment, {showName: false, defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfClip()).new("clipBehavior", this.clipBehavior, {defaultValue: ui.Clip.none}));
      if (this.color != null)
        properties.add(new (DiagnosticsPropertyOfColor()).new("bg", this.color));
      else
        properties.add(new (DiagnosticsPropertyOfDecoration()).new("bg", this.decoration, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfDecoration()).new("fg", this.foregroundDecoration, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfBoxConstraints()).new("constraints", this.constraints, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometry()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new (ObjectFlagPropertyOfMatrix4()).has("transform", this.transform));
    }
  };
  (container.Container.new = function(opts) {
    let t64, t64$;
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let foregroundDecoration = opts && 'foregroundDecoration' in opts ? opts.foregroundDecoration : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let transform = opts && 'transform' in opts ? opts.transform : null;
    let transformAlignment = opts && 'transformAlignment' in opts ? opts.transformAlignment : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C804 || CT.C804;
    if (clipBehavior == null) dart.nullFailed(L93, 268, 10, "clipBehavior");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$3] = alignment;
    this[padding$0] = padding;
    this[color$3] = color;
    this[decoration$2] = decoration;
    this[foregroundDecoration$] = foregroundDecoration;
    this[margin$] = margin;
    this[transform$] = transform;
    this[transformAlignment$] = transformAlignment;
    this[child$29] = child;
    this[clipBehavior$2] = clipBehavior;
    if (!(margin == null || dart.test(margin.isNonNegative))) dart.assertFailed(null, L93, 269, 15, "margin == null || margin.isNonNegative");
    if (!(padding == null || dart.test(padding.isNonNegative))) dart.assertFailed(null, L93, 270, 15, "padding == null || padding.isNonNegative");
    if (!(decoration == null || dart.test(decoration.debugAssertIsValid()))) dart.assertFailed(null, L93, 271, 15, "decoration == null || decoration.debugAssertIsValid()");
    if (!(constraints == null || dart.test(constraints.debugAssertIsValid()))) dart.assertFailed(null, L93, 272, 15, "constraints == null || constraints.debugAssertIsValid()");
    if (!(clipBehavior != null)) dart.assertFailed(null, L93, 273, 15, "clipBehavior != null");
    if (!(decoration != null || dart.equals(clipBehavior, ui.Clip.none))) dart.assertFailed(null, L93, 274, 15, "decoration != null || clipBehavior == Clip.none");
    if (!(color == null || decoration == null)) dart.assertFailed("Cannot provide both a color and a decoration\n" + "To provide both, use \"decoration: BoxDecoration(color: color)\".", L93, 275, 15, "color == null || decoration == null");
    this[constraints$] = width != null || height != null ? (t64$ = (t64 = constraints, t64 == null ? null : t64.tighten({width: width, height: height})), t64$ == null ? new box$.BoxConstraints.tightFor({width: width, height: height}) : t64$) : constraints;
    container.Container.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = container.Container.prototype;
  dart.addTypeTests(container.Container);
  dart.addTypeCaches(container.Container);
  dart.setMethodSignature(container.Container, () => ({
    __proto__: dart.getMethods(container.Container.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(container.Container, () => ({
    __proto__: dart.getGetters(container.Container.__proto__),
    [_paddingIncludingDecoration]: dart.nullable(edge_insets.EdgeInsetsGeometry)
  }));
  dart.setLibraryUri(container.Container, L94);
  dart.setFieldSignature(container.Container, () => ({
    __proto__: dart.getFields(container.Container.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    alignment: dart.finalFieldType(dart.nullable(alignment$.AlignmentGeometry)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    decoration: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    foregroundDecoration: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    transform: dart.finalFieldType(dart.nullable(vector_math_64.Matrix4)),
    transformAlignment: dart.finalFieldType(dart.nullable(alignment$.AlignmentGeometry)),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  container._DecorationClipper = class _DecorationClipper extends proxy_box.CustomClipper$(ui.Path) {
    getClip(size) {
      if (size == null) dart.nullFailed(L93, 469, 21, "size");
      return this.decoration.getClipPath(ui.Offset.zero['&'](size), this.textDirection);
    }
    shouldReclip(oldClipper) {
      container._DecorationClipper.as(oldClipper);
      if (oldClipper == null) dart.nullFailed(L93, 474, 40, "oldClipper");
      return !dart.equals(oldClipper.decoration, this.decoration) || !dart.equals(oldClipper.textDirection, this.textDirection);
    }
  };
  (container._DecorationClipper.new = function(opts) {
    let t64;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    if (decoration == null) dart.nullFailed(L93, 461, 19, "decoration");
    this.decoration = decoration;
    if (!(decoration != null)) dart.assertFailed(null, L93, 462, 15, "decoration != null");
    this.textDirection = (t64 = textDirection, t64 == null ? ui.TextDirection.ltr : t64);
    container._DecorationClipper.__proto__.new.call(this);
    ;
  }).prototype = container._DecorationClipper.prototype;
  dart.addTypeTests(container._DecorationClipper);
  dart.addTypeCaches(container._DecorationClipper);
  dart.setMethodSignature(container._DecorationClipper, () => ({
    __proto__: dart.getMethods(container._DecorationClipper.__proto__),
    getClip: dart.fnType(ui.Path, [ui.Size]),
    shouldReclip: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(container._DecorationClipper, L94);
  dart.setFieldSignature(container._DecorationClipper, () => ({
    __proto__: dart.getFields(container._DecorationClipper.__proto__),
    textDirection: dart.finalFieldType(ui.TextDirection),
    decoration: dart.finalFieldType(decoration.Decoration)
  }));
  localizations._Pending = class _Pending extends core.Object {};
  (localizations._Pending.new = function(delegate, futureValue) {
    if (delegate == null) dart.nullFailed(L95, 23, 17, "delegate");
    if (futureValue == null) dart.nullFailed(L95, 23, 32, "futureValue");
    this.delegate = delegate;
    this.futureValue = futureValue;
    ;
  }).prototype = localizations._Pending.prototype;
  dart.addTypeTests(localizations._Pending);
  dart.addTypeCaches(localizations._Pending);
  dart.setLibraryUri(localizations._Pending, L96);
  dart.setFieldSignature(localizations._Pending, () => ({
    __proto__: dart.getFields(localizations._Pending.__proto__),
    delegate: dart.finalFieldType(localizations.LocalizationsDelegate),
    futureValue: dart.finalFieldType(async.Future)
  }));
  const _is_LocalizationsDelegate_default = Symbol('_is_LocalizationsDelegate_default');
  localizations.LocalizationsDelegate$ = dart.generic(T => {
    class LocalizationsDelegate extends core.Object {
      get type() {
        return dart.wrapType(T);
      }
      toString() {
        return dart.str(object.objectRuntimeType(this, "LocalizationsDelegate")) + "[" + dart.str(this.type) + "]";
      }
    }
    (LocalizationsDelegate.new = function() {
      ;
    }).prototype = LocalizationsDelegate.prototype;
    dart.addTypeTests(LocalizationsDelegate);
    LocalizationsDelegate.prototype[_is_LocalizationsDelegate_default] = true;
    dart.addTypeCaches(LocalizationsDelegate);
    dart.setGetterSignature(LocalizationsDelegate, () => ({
      __proto__: dart.getGetters(LocalizationsDelegate.__proto__),
      type: core.Type
    }));
    dart.setLibraryUri(LocalizationsDelegate, L96);
    dart.defineExtensionMethods(LocalizationsDelegate, ['toString']);
    return LocalizationsDelegate;
  });
  localizations.LocalizationsDelegate = localizations.LocalizationsDelegate$();
  dart.addTypeTests(localizations.LocalizationsDelegate, _is_LocalizationsDelegate_default);
  localizations.WidgetsLocalizations = class WidgetsLocalizations extends core.Object {
    static of(context) {
      if (context == null) dart.nullFailed(L95, 167, 47, "context");
      if (!dart.test(debug$0.debugCheckHasWidgetsLocalizations(context))) dart.assertFailed(null, L95, 168, 12, "debugCheckHasWidgetsLocalizations(context)");
      return dart.nullCheck(localizations.Localizations.of(localizations.WidgetsLocalizations, context, dart.wrapType(localizations.WidgetsLocalizations)));
    }
  };
  (localizations.WidgetsLocalizations.new = function() {
    ;
  }).prototype = localizations.WidgetsLocalizations.prototype;
  dart.addTypeTests(localizations.WidgetsLocalizations);
  dart.addTypeCaches(localizations.WidgetsLocalizations);
  dart.setLibraryUri(localizations.WidgetsLocalizations, L96);
  localizations._WidgetsLocalizationsDelegate = class _WidgetsLocalizationsDelegate extends localizations.LocalizationsDelegate$(localizations.WidgetsLocalizations) {
    isSupported(locale) {
      if (locale == null) dart.nullFailed(L95, 179, 27, "locale");
      return true;
    }
    load(locale) {
      if (locale == null) dart.nullFailed(L95, 182, 44, "locale");
      return localizations.DefaultWidgetsLocalizations.load(locale);
    }
    shouldReload(old) {
      localizations._WidgetsLocalizationsDelegate.as(old);
      if (old == null) dart.nullFailed(L95, 185, 51, "old");
      return false;
    }
    toString() {
      return "DefaultWidgetsLocalizations.delegate(en_US)";
    }
  };
  (localizations._WidgetsLocalizationsDelegate.new = function() {
    localizations._WidgetsLocalizationsDelegate.__proto__.new.call(this);
    ;
  }).prototype = localizations._WidgetsLocalizationsDelegate.prototype;
  dart.addTypeTests(localizations._WidgetsLocalizationsDelegate);
  dart.addTypeCaches(localizations._WidgetsLocalizationsDelegate);
  dart.setMethodSignature(localizations._WidgetsLocalizationsDelegate, () => ({
    __proto__: dart.getMethods(localizations._WidgetsLocalizationsDelegate.__proto__),
    isSupported: dart.fnType(core.bool, [ui.Locale]),
    load: dart.fnType(async.Future$(localizations.WidgetsLocalizations), [ui.Locale]),
    shouldReload: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(localizations._WidgetsLocalizationsDelegate, L96);
  dart.defineExtensionMethods(localizations._WidgetsLocalizationsDelegate, ['toString']);
  var C852;
  var C853;
  localizations.DefaultWidgetsLocalizations = class DefaultWidgetsLocalizations extends core.Object {
    get textDirection() {
      return ui.TextDirection.ltr;
    }
    static load(locale) {
      if (locale == null) dart.nullFailed(L95, 216, 51, "locale");
      return new (SynchronousFutureOfWidgetsLocalizations()).new(C852 || CT.C852);
    }
  };
  (localizations.DefaultWidgetsLocalizations.new = function() {
    ;
  }).prototype = localizations.DefaultWidgetsLocalizations.prototype;
  dart.addTypeTests(localizations.DefaultWidgetsLocalizations);
  dart.addTypeCaches(localizations.DefaultWidgetsLocalizations);
  localizations.DefaultWidgetsLocalizations[dart.implements] = () => [localizations.WidgetsLocalizations];
  dart.setGetterSignature(localizations.DefaultWidgetsLocalizations, () => ({
    __proto__: dart.getGetters(localizations.DefaultWidgetsLocalizations.__proto__),
    textDirection: ui.TextDirection
  }));
  dart.setLibraryUri(localizations.DefaultWidgetsLocalizations, L96);
  dart.defineLazy(localizations.DefaultWidgetsLocalizations, {
    /*localizations.DefaultWidgetsLocalizations.delegate*/get delegate() {
      return C853 || CT.C853;
    }
  }, false);
  var locale$0 = dart.privateName(localizations, "_LocalizationsScope.locale");
  var localizationsState$ = dart.privateName(localizations, "_LocalizationsScope.localizationsState");
  var typeToResources$ = dart.privateName(localizations, "_LocalizationsScope.typeToResources");
  localizations._LocalizationsScope = class _LocalizationsScope extends framework.InheritedWidget {
    get locale() {
      return this[locale$0];
    }
    set locale(value) {
      super.locale = value;
    }
    get localizationsState() {
      return this[localizationsState$];
    }
    set localizationsState(value) {
      super.localizationsState = value;
    }
    get typeToResources() {
      return this[typeToResources$];
    }
    set typeToResources(value) {
      super.typeToResources = value;
    }
    updateShouldNotify(old) {
      localizations._LocalizationsScope.as(old);
      if (old == null) dart.nullFailed(L95, 243, 47, "old");
      return !dart.equals(this.typeToResources, old.typeToResources);
    }
  };
  (localizations._LocalizationsScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    if (locale == null) dart.nullFailed(L95, 230, 19, "locale");
    let localizationsState = opts && 'localizationsState' in opts ? opts.localizationsState : null;
    if (localizationsState == null) dart.nullFailed(L95, 231, 19, "localizationsState");
    let typeToResources = opts && 'typeToResources' in opts ? opts.typeToResources : null;
    if (typeToResources == null) dart.nullFailed(L95, 232, 19, "typeToResources");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L95, 233, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[locale$0] = locale;
    this[localizationsState$] = localizationsState;
    this[typeToResources$] = typeToResources;
    if (!(localizationsState != null)) dart.assertFailed(null, L95, 234, 15, "localizationsState != null");
    if (!(typeToResources != null)) dart.assertFailed(null, L95, 235, 15, "typeToResources != null");
    localizations._LocalizationsScope.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = localizations._LocalizationsScope.prototype;
  dart.addTypeTests(localizations._LocalizationsScope);
  dart.addTypeCaches(localizations._LocalizationsScope);
  dart.setMethodSignature(localizations._LocalizationsScope, () => ({
    __proto__: dart.getMethods(localizations._LocalizationsScope.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(localizations._LocalizationsScope, L96);
  dart.setFieldSignature(localizations._LocalizationsScope, () => ({
    __proto__: dart.getFields(localizations._LocalizationsScope.__proto__),
    locale: dart.finalFieldType(ui.Locale),
    localizationsState: dart.finalFieldType(localizations._LocalizationsState),
    typeToResources: dart.finalFieldType(core.Map$(core.Type, dart.dynamic))
  }));
  var locale$1 = dart.privateName(localizations, "Localizations.locale");
  var delegates$ = dart.privateName(localizations, "Localizations.delegates");
  var child$30 = dart.privateName(localizations, "Localizations.child");
  localizations.Localizations = class Localizations extends framework.StatefulWidget {
    get locale() {
      return this[locale$1];
    }
    set locale(value) {
      super.locale = value;
    }
    get delegates() {
      return this[delegates$];
    }
    set delegates(value) {
      super.delegates = value;
    }
    get child() {
      return this[child$30];
    }
    set child(value) {
      super.child = value;
    }
    static override(opts) {
      let t64;
      let key = opts && 'key' in opts ? opts.key : null;
      let context = opts && 'context' in opts ? opts.context : null;
      if (context == null) dart.nullFailed(L95, 383, 27, "context");
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let delegates = opts && 'delegates' in opts ? opts.delegates : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      let mergedDelegates = localizations.Localizations._delegatesOf(context);
      if (delegates != null) mergedDelegates[$insertAll](0, delegates);
      return new localizations.Localizations.new({key: key, locale: (t64 = locale, t64 == null ? dart.nullCheck(localizations.Localizations.localeOf(context)) : t64), delegates: mergedDelegates, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }
    static localeOf(context, opts) {
      if (context == null) dart.nullFailed(L95, 417, 40, "context");
      let nullOk = opts && 'nullOk' in opts ? opts.nullOk : false;
      if (nullOk == null) dart.nullFailed(L95, 417, 56, "nullOk");
      if (!(context != null)) dart.assertFailed(null, L95, 418, 12, "context != null");
      let scope = context.dependOnInheritedWidgetOfExactType(localizations._LocalizationsScope);
      if (dart.test(nullOk) && scope == null) return null;
      if (!dart.test(dart.fn(() => {
        if (scope == null) {
          dart.throw(assertions.FlutterError.new("Requested the Locale of a context that does not include a Localizations ancestor.\n" + "To request the Locale, the context used to retrieve the Localizations widget must " + "be that of a widget that is a descendant of a Localizations widget."));
        }
        if (!dart.test(nullOk) && scope.localizationsState.locale == null) {
          dart.throw(assertions.FlutterError.new("Localizations.localeOf found a Localizations widget that had a unexpected null locale.\n"));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L95, 422, 12, "() {\r\n      if (scope == null) {\r\n        throw FlutterError(\r\n          'Requested the Locale of a context that does not include a Localizations ancestor.\\n'\r\n          'To request the Locale, the context used to retrieve the Localizations widget must '\r\n          'be that of a widget that is a descendant of a Localizations widget.'\r\n        );\r\n      }\r\n      if (!nullOk && scope.localizationsState.locale == null) {\r\n        throw FlutterError(\r\n          'Localizations.localeOf found a Localizations widget that had a unexpected null locale.\\n'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      return dart.nullCheck(scope).localizationsState.locale;
    }
    static maybeLocaleOf(context) {
      let t64;
      if (context == null) dart.nullFailed(L95, 445, 45, "context");
      if (!(context != null)) dart.assertFailed(null, L95, 446, 12, "context != null");
      let scope = context.dependOnInheritedWidgetOfExactType(localizations._LocalizationsScope);
      t64 = scope;
      return t64 == null ? null : t64.localizationsState.locale;
    }
    static _delegatesOf(context) {
      if (context == null) dart.nullFailed(L95, 453, 73, "context");
      if (!(context != null)) dart.assertFailed(null, L95, 454, 12, "context != null");
      let scope = context.dependOnInheritedWidgetOfExactType(localizations._LocalizationsScope);
      if (!(scope != null)) dart.assertFailed("a Localizations ancestor was not found", L95, 456, 12, "scope != null");
      return ListOfLocalizationsDelegate().from(dart.nullCheck(scope).localizationsState.widget.delegates);
    }
    static of(T, context, type) {
      let t64;
      if (context == null) dart.nullFailed(L95, 475, 32, "context");
      if (type == null) dart.nullFailed(L95, 475, 46, "type");
      if (!(context != null)) dart.assertFailed(null, L95, 476, 12, "context != null");
      if (!(type != null)) dart.assertFailed(null, L95, 477, 12, "type != null");
      let scope = context.dependOnInheritedWidgetOfExactType(localizations._LocalizationsScope);
      t64 = scope;
      return t64 == null ? null : t64.localizationsState.resourcesFor(dart.nullable(T), type);
    }
    createState() {
      return new localizations._LocalizationsState.new();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L95, 486, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfLocale()).new("locale", this.locale));
      properties.add(new (IterablePropertyOfLocalizationsDelegate()).new("delegates", this.delegates));
    }
  };
  (localizations.Localizations.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    if (locale == null) dart.nullFailed(L95, 346, 19, "locale");
    let delegates = opts && 'delegates' in opts ? opts.delegates : null;
    if (delegates == null) dart.nullFailed(L95, 347, 19, "delegates");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[locale$1] = locale;
    this[delegates$] = delegates;
    this[child$30] = child;
    if (!(locale != null)) dart.assertFailed(null, L95, 349, 15, "locale != null");
    if (!(delegates != null)) dart.assertFailed(null, L95, 350, 15, "delegates != null");
    if (!dart.test(delegates[$any](dart.fn(delegate => {
      if (delegate == null) dart.nullFailed(L95, 351, 61, "delegate");
      return LocalizationsDelegateOfWidgetsLocalizations().is(delegate);
    }, LocalizationsDelegateTobool())))) dart.assertFailed(null, L95, 351, 15, "delegates.any((LocalizationsDelegate<dynamic> delegate) => delegate is LocalizationsDelegate<WidgetsLocalizations>)");
    localizations.Localizations.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = localizations.Localizations.prototype;
  dart.addTypeTests(localizations.Localizations);
  dart.addTypeCaches(localizations.Localizations);
  dart.setMethodSignature(localizations.Localizations, () => ({
    __proto__: dart.getMethods(localizations.Localizations.__proto__),
    createState: dart.fnType(localizations._LocalizationsState, [])
  }));
  dart.setLibraryUri(localizations.Localizations, L96);
  dart.setFieldSignature(localizations.Localizations, () => ({
    __proto__: dart.getFields(localizations.Localizations.__proto__),
    locale: dart.finalFieldType(ui.Locale),
    delegates: dart.finalFieldType(core.List$(localizations.LocalizationsDelegate)),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  var _localizedResourcesScopeKey = dart.privateName(localizations, "_localizedResourcesScopeKey");
  var _typeToResources = dart.privateName(localizations, "_typeToResources");
  var _locale = dart.privateName(localizations, "_locale");
  var _anyDelegatesShouldReload = dart.privateName(localizations, "_anyDelegatesShouldReload");
  var _textDirection$ = dart.privateName(localizations, "_textDirection");
  var C854;
  var C857;
  var C858;
  var C856;
  var C855;
  var C861;
  var C862;
  var C863;
  var C864;
  var C865;
  var C860;
  var C859;
  var C868;
  var C869;
  var C867;
  var C866;
  localizations._LocalizationsState = class _LocalizationsState extends framework.State$(localizations.Localizations) {
    get locale() {
      return this[_locale];
    }
    initState() {
      super.initState();
      this.load(this.widget.locale);
    }
    [_anyDelegatesShouldReload](old) {
      if (old == null) dart.nullFailed(L95, 506, 48, "old");
      if (this.widget.delegates[$length] != old.delegates[$length]) return true;
      let delegates = this.widget.delegates[$toList]();
      let oldDelegates = old.delegates[$toList]();
      for (let i = 0; i < dart.notNull(delegates[$length]); i = i + 1) {
        let delegate = delegates[$_get](i);
        let oldDelegate = oldDelegates[$_get](i);
        if (!dart.equals(dart.runtimeType(delegate), dart.runtimeType(oldDelegate)) || dart.test(delegate.shouldReload(oldDelegate))) return true;
      }
      return false;
    }
    didUpdateWidget(old) {
      localizations.Localizations.as(old);
      if (old == null) dart.nullFailed(L95, 521, 38, "old");
      super.didUpdateWidget(old);
      if (!dart.equals(this.widget.locale, old.locale) || this.widget.delegates == null || this.widget.delegates != null && old.delegates == null || this.widget.delegates != null && dart.test(this[_anyDelegatesShouldReload](old))) this.load(this.widget.locale);
    }
    load(locale) {
      if (locale == null) dart.nullFailed(L95, 530, 20, "locale");
      let delegates = this.widget.delegates;
      if (delegates == null || dart.test(delegates[$isEmpty])) {
        this[_locale] = locale;
        return;
      }
      let typeToResources = null;
      let typeToResourcesFuture = localizations._loadAll(locale, delegates).then(MapOfType$dynamic(), dart.fn(value => {
        if (value == null) dart.nullFailed(L95, 539, 53, "value");
        return typeToResources = value;
      }, MapOfType$dynamicToMapOfType$dynamic()));
      if (typeToResources != null) {
        this[_typeToResources] = dart.nullCheck(typeToResources);
        this[_locale] = locale;
      } else {
        dart.nullCheck(binding.RendererBinding.instance).deferFirstFrame();
        typeToResourcesFuture.then(dart.void, dart.fn(value => {
          if (value == null) dart.nullFailed(L95, 553, 60, "value");
          if (dart.test(this.mounted)) {
            this.setState(dart.fn(() => {
              this[_typeToResources] = value;
              this[_locale] = locale;
            }, VoidTovoid()));
          }
          dart.nullCheck(binding.RendererBinding.instance).allowFirstFrame();
        }, MapOfType$dynamicToNull()));
      }
    }
    resourcesFor(T, type) {
      if (type == null) dart.nullFailed(L95, 565, 26, "type");
      if (!(type != null)) dart.assertFailed(null, L95, 566, 12, "type != null");
      let resources = T.as(this[_typeToResources][$_get](type));
      return resources;
    }
    get [_textDirection$]() {
      let resources = localizations.WidgetsLocalizations.as(this[_typeToResources][$_get](dart.wrapType(localizations.WidgetsLocalizations)));
      if (!(resources != null)) dart.assertFailed(null, L95, 573, 12, "resources != null");
      return resources.textDirection;
    }
    build(context) {
      if (context == null) dart.nullFailed(L95, 578, 29, "context");
      if (this[_locale] == null) return new container.Container.new({$creationLocationd_0dea112b090073317d4: C854 || CT.C854});
      return new basic.Semantics.new({textDirection: this[_textDirection$], child: new localizations._LocalizationsScope.new({key: this[_localizedResourcesScopeKey], locale: dart.nullCheck(this[_locale]), localizationsState: this, typeToResources: this[_typeToResources], child: new basic.Directionality.new({textDirection: this[_textDirection$], child: dart.nullCheck(this.widget.child), $creationLocationd_0dea112b090073317d4: C855 || CT.C855}), $creationLocationd_0dea112b090073317d4: C859 || CT.C859}), $creationLocationd_0dea112b090073317d4: C866 || CT.C866});
    }
  };
  (localizations._LocalizationsState.new = function() {
    this[_localizedResourcesScopeKey] = GlobalKeyOfStateOfStatefulWidget().new();
    this[_typeToResources] = new (LinkedMapOfType$dynamic()).new();
    this[_locale] = null;
    localizations._LocalizationsState.__proto__.new.call(this);
    ;
  }).prototype = localizations._LocalizationsState.prototype;
  dart.addTypeTests(localizations._LocalizationsState);
  dart.addTypeCaches(localizations._LocalizationsState);
  dart.setMethodSignature(localizations._LocalizationsState, () => ({
    __proto__: dart.getMethods(localizations._LocalizationsState.__proto__),
    [_anyDelegatesShouldReload]: dart.fnType(core.bool, [localizations.Localizations]),
    load: dart.fnType(dart.void, [ui.Locale]),
    resourcesFor: dart.gFnType(T => [T, [core.Type]], T => [dart.nullable(core.Object)]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(localizations._LocalizationsState, () => ({
    __proto__: dart.getGetters(localizations._LocalizationsState.__proto__),
    locale: dart.nullable(ui.Locale),
    [_textDirection$]: ui.TextDirection
  }));
  dart.setLibraryUri(localizations._LocalizationsState, L96);
  dart.setFieldSignature(localizations._LocalizationsState, () => ({
    __proto__: dart.getFields(localizations._LocalizationsState.__proto__),
    [_localizedResourcesScopeKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_typeToResources]: dart.fieldType(core.Map$(core.Type, dart.dynamic)),
    [_locale]: dart.fieldType(dart.nullable(ui.Locale))
  }));
  localizations._loadAll = function _loadAll(locale, allDelegates) {
    if (locale == null) dart.nullFailed(L95, 42, 44, "locale");
    if (allDelegates == null) dart.nullFailed(L95, 42, 93, "allDelegates");
    let output = new (LinkedMapOfType$dynamic()).new();
    let pendingList = null;
    let types = LinkedHashSetOfType().new();
    let delegates = JSArrayOfLocalizationsDelegate().of([]);
    for (let delegate of allDelegates) {
      if (!dart.test(types.contains(delegate.type)) && dart.test(delegate.isSupported(locale))) {
        types.add(delegate.type);
        delegates[$add](delegate);
      }
    }
    for (let delegate of delegates) {
      let inputValue = delegate.load(locale);
      let completedValue = null;
      let futureValue = inputValue.then(dart.dynamic, dart.fn(value => completedValue = value, dynamicTodynamic()));
      if (completedValue != null) {
        let type = delegate.type;
        if (!!dart.test(output[$containsKey](type))) dart.assertFailed(null, L95, 65, 14, "!output.containsKey(type)");
        output[$_set](type, completedValue);
      } else {
        pendingList == null ? pendingList = JSArrayOf_Pending().of([]) : null;
        pendingList[$add](new localizations._Pending.new(delegate, futureValue));
      }
    }
    if (pendingList == null) return new (SynchronousFutureOfMapOfType$dynamic()).new(output);
    return async.Future.wait(dart.dynamic, pendingList[$map](async.Future, dart.fn(p => {
      if (p == null) dart.nullFailed(L95, 78, 74, "p");
      return p.futureValue;
    }, _PendingToFuture()))).then(MapOfType$dynamic(), dart.fn(values => {
      if (values == null) dart.nullFailed(L95, 79, 46, "values");
      if (!(values[$length] == dart.nullCheck(pendingList)[$length])) dart.assertFailed(null, L95, 80, 14, "values.length == pendingList!.length");
      for (let i = 0; i < dart.notNull(values[$length]); i = i + 1) {
        let type = dart.nullCheck(pendingList)[$_get](i).delegate.type;
        if (!!dart.test(output[$containsKey](type))) dart.assertFailed(null, L95, 83, 16, "!output.containsKey(type)");
        output[$_set](type, values[$_get](i));
      }
      return output;
    }, ListToMapOfType$dynamic()));
  };
  sliver$.SliverChildDelegate = class SliverChildDelegate extends core.Object {
    get estimatedChildCount() {
      return null;
    }
    estimateMaxScrollOffset(firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset) {
      if (firstIndex == null) dart.nullFailed(L97, 157, 9, "firstIndex");
      if (lastIndex == null) dart.nullFailed(L97, 158, 9, "lastIndex");
      if (leadingScrollOffset == null) dart.nullFailed(L97, 159, 12, "leadingScrollOffset");
      if (trailingScrollOffset == null) dart.nullFailed(L97, 160, 12, "trailingScrollOffset");
      return null;
    }
    didFinishLayout(firstIndex, lastIndex) {
      if (firstIndex == null) dart.nullFailed(L97, 171, 28, "firstIndex");
      if (lastIndex == null) dart.nullFailed(L97, 171, 44, "lastIndex");
    }
    findIndexByKey(key) {
      if (key == null) dart.nullFailed(L97, 189, 27, "key");
      return null;
    }
    toString() {
      let description = JSArrayOfString().of([]);
      this.debugFillDescription(description);
      return dart.str(diagnostics$.describeIdentity(this)) + "(" + dart.str(description[$join](", ")) + ")";
    }
    debugFillDescription(description) {
      if (description == null) dart.nullFailed(L97, 201, 42, "description");
      try {
        let children = this.estimatedChildCount;
        if (children != null) description[$add]("estimated child count: " + dart.str(children));
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
          description[$add]("estimated child count: EXCEPTION (" + dart.str(dart.runtimeType(e)) + ")");
        } else
          throw e$;
      }
    }
  };
  (sliver$.SliverChildDelegate.new = function() {
    ;
  }).prototype = sliver$.SliverChildDelegate.prototype;
  dart.addTypeTests(sliver$.SliverChildDelegate);
  dart.addTypeCaches(sliver$.SliverChildDelegate);
  dart.setMethodSignature(sliver$.SliverChildDelegate, () => ({
    __proto__: dart.getMethods(sliver$.SliverChildDelegate.__proto__),
    estimateMaxScrollOffset: dart.fnType(dart.nullable(core.double), [core.int, core.int, core.double, core.double]),
    didFinishLayout: dart.fnType(dart.void, [core.int, core.int]),
    findIndexByKey: dart.fnType(dart.nullable(core.int), [key.Key]),
    debugFillDescription: dart.fnType(dart.void, [core.List$(core.String)])
  }));
  dart.setGetterSignature(sliver$.SliverChildDelegate, () => ({
    __proto__: dart.getGetters(sliver$.SliverChildDelegate.__proto__),
    estimatedChildCount: dart.nullable(core.int)
  }));
  dart.setLibraryUri(sliver$.SliverChildDelegate, L98);
  dart.defineExtensionMethods(sliver$.SliverChildDelegate, ['toString']);
  sliver$._SaltedValueKey = class _SaltedValueKey extends key.ValueKey$(key.Key) {};
  (sliver$._SaltedValueKey.new = function(key) {
    if (key == null) dart.nullFailed(L97, 213, 29, "key");
    if (!(key != null)) dart.assertFailed(null, L97, 213, 42, "key != null");
    sliver$._SaltedValueKey.__proto__.new.call(this, key);
    ;
  }).prototype = sliver$._SaltedValueKey.prototype;
  dart.addTypeTests(sliver$._SaltedValueKey);
  dart.addTypeCaches(sliver$._SaltedValueKey);
  dart.setLibraryUri(sliver$._SaltedValueKey, L98);
  var C870;
  var C873;
  var C872;
  var C871;
  var C876;
  var C877;
  var C875;
  var C874;
  var C880;
  var C879;
  var C878;
  var C883;
  var C884;
  var C882;
  var C881;
  var builder$1 = dart.privateName(sliver$, "SliverChildBuilderDelegate.builder");
  var childCount$ = dart.privateName(sliver$, "SliverChildBuilderDelegate.childCount");
  var addAutomaticKeepAlives$ = dart.privateName(sliver$, "SliverChildBuilderDelegate.addAutomaticKeepAlives");
  var addRepaintBoundaries$ = dart.privateName(sliver$, "SliverChildBuilderDelegate.addRepaintBoundaries");
  var addSemanticIndexes$ = dart.privateName(sliver$, "SliverChildBuilderDelegate.addSemanticIndexes");
  var semanticIndexOffset$ = dart.privateName(sliver$, "SliverChildBuilderDelegate.semanticIndexOffset");
  var semanticIndexCallback$ = dart.privateName(sliver$, "SliverChildBuilderDelegate.semanticIndexCallback");
  var findChildIndexCallback$ = dart.privateName(sliver$, "SliverChildBuilderDelegate.findChildIndexCallback");
  sliver$.SliverChildBuilderDelegate = class SliverChildBuilderDelegate extends sliver$.SliverChildDelegate {
    get builder() {
      return this[builder$1];
    }
    set builder(value) {
      super.builder = value;
    }
    get childCount() {
      return this[childCount$];
    }
    set childCount(value) {
      super.childCount = value;
    }
    get addAutomaticKeepAlives() {
      return this[addAutomaticKeepAlives$];
    }
    set addAutomaticKeepAlives(value) {
      super.addAutomaticKeepAlives = value;
    }
    get addRepaintBoundaries() {
      return this[addRepaintBoundaries$];
    }
    set addRepaintBoundaries(value) {
      super.addRepaintBoundaries = value;
    }
    get addSemanticIndexes() {
      return this[addSemanticIndexes$];
    }
    set addSemanticIndexes(value) {
      super.addSemanticIndexes = value;
    }
    get semanticIndexOffset() {
      return this[semanticIndexOffset$];
    }
    set semanticIndexOffset(value) {
      super.semanticIndexOffset = value;
    }
    get semanticIndexCallback() {
      return this[semanticIndexCallback$];
    }
    set semanticIndexCallback(value) {
      super.semanticIndexCallback = value;
    }
    get findChildIndexCallback() {
      return this[findChildIndexCallback$];
    }
    set findChildIndexCallback(value) {
      super.findChildIndexCallback = value;
    }
    findIndexByKey(key) {
      if (key == null) dart.nullFailed(L97, 434, 27, "key");
      if (this.findChildIndexCallback == null) return null;
      if (!(key != null)) dart.assertFailed(null, L97, 437, 12, "key != null");
      let childKey = null;
      if (sliver$._SaltedValueKey.is(key)) {
        let saltedValueKey = key;
        childKey = saltedValueKey.value;
      } else {
        childKey = key;
      }
      return dart.nullCheck(this.findChildIndexCallback)(childKey);
    }
    build(context, index) {
      let t66, t65, t67, t66$;
      if (context == null) dart.nullFailed(L97, 449, 30, "context");
      if (index == null) dart.nullFailed(L97, 449, 43, "index");
      if (!(this.builder != null)) dart.assertFailed(null, L97, 450, 12, "builder != null");
      if (dart.notNull(index) < 0 || this.childCount != null && dart.notNull(index) >= dart.nullCheck(this.childCount)) return null;
      let child = null;
      try {
        child = (t65 = context, t66 = index, this.builder(t65, t66));
      } catch (e) {
        let exception = dart.getThrown(e);
        let stackTrace = dart.stackTrace(e);
        if (core.Object.is(exception)) {
          child = sliver$._createErrorWidget(exception, stackTrace);
        } else
          throw e;
      }
      if (child == null) {
        return null;
      }
      let key = child.key != null ? new sliver$._SaltedValueKey.new(dart.nullCheck(child.key)) : null;
      if (dart.test(this.addRepaintBoundaries)) child = new basic.RepaintBoundary.new({child: child, $creationLocationd_0dea112b090073317d4: C871 || CT.C871});
      if (dart.test(this.addSemanticIndexes)) {
        let semanticIndex = (t66$ = child, t67 = index, this.semanticIndexCallback(t66$, t67));
        if (semanticIndex != null) child = new basic.IndexedSemantics.new({index: dart.notNull(semanticIndex) + dart.notNull(this.semanticIndexOffset), child: child, $creationLocationd_0dea112b090073317d4: C874 || CT.C874});
      }
      if (dart.test(this.addAutomaticKeepAlives)) child = new automatic_keep_alive.AutomaticKeepAlive.new({child: child, $creationLocationd_0dea112b090073317d4: C878 || CT.C878});
      return new basic.KeyedSubtree.new({child: child, key: key, $creationLocationd_0dea112b090073317d4: C881 || CT.C881});
    }
    get estimatedChildCount() {
      return this.childCount;
    }
    shouldRebuild(oldDelegate) {
      sliver$.SliverChildBuilderDelegate.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(L97, 479, 59, "oldDelegate");
      return true;
    }
  };
  (sliver$.SliverChildBuilderDelegate.new = function(builder, opts) {
    if (builder == null) dart.nullFailed(L97, 341, 10, "builder");
    let findChildIndexCallback = opts && 'findChildIndexCallback' in opts ? opts.findChildIndexCallback : null;
    let childCount = opts && 'childCount' in opts ? opts.childCount : null;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    if (addAutomaticKeepAlives == null) dart.nullFailed(L97, 344, 10, "addAutomaticKeepAlives");
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    if (addRepaintBoundaries == null) dart.nullFailed(L97, 345, 10, "addRepaintBoundaries");
    let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
    if (addSemanticIndexes == null) dart.nullFailed(L97, 346, 10, "addSemanticIndexes");
    let semanticIndexCallback = opts && 'semanticIndexCallback' in opts ? opts.semanticIndexCallback : C870 || CT.C870;
    if (semanticIndexCallback == null) dart.nullFailed(L97, 347, 10, "semanticIndexCallback");
    let semanticIndexOffset = opts && 'semanticIndexOffset' in opts ? opts.semanticIndexOffset : 0;
    if (semanticIndexOffset == null) dart.nullFailed(L97, 348, 10, "semanticIndexOffset");
    this[builder$1] = builder;
    this[findChildIndexCallback$] = findChildIndexCallback;
    this[childCount$] = childCount;
    this[addAutomaticKeepAlives$] = addAutomaticKeepAlives;
    this[addRepaintBoundaries$] = addRepaintBoundaries;
    this[addSemanticIndexes$] = addSemanticIndexes;
    this[semanticIndexCallback$] = semanticIndexCallback;
    this[semanticIndexOffset$] = semanticIndexOffset;
    if (!(builder != null)) dart.assertFailed(null, L97, 349, 15, "builder != null");
    if (!(addAutomaticKeepAlives != null)) dart.assertFailed(null, L97, 350, 15, "addAutomaticKeepAlives != null");
    if (!(addRepaintBoundaries != null)) dart.assertFailed(null, L97, 351, 15, "addRepaintBoundaries != null");
    if (!(addSemanticIndexes != null)) dart.assertFailed(null, L97, 352, 15, "addSemanticIndexes != null");
    if (!(semanticIndexCallback != null)) dart.assertFailed(null, L97, 353, 15, "semanticIndexCallback != null");
    sliver$.SliverChildBuilderDelegate.__proto__.new.call(this);
    ;
  }).prototype = sliver$.SliverChildBuilderDelegate.prototype;
  dart.addTypeTests(sliver$.SliverChildBuilderDelegate);
  dart.addTypeCaches(sliver$.SliverChildBuilderDelegate);
  dart.setMethodSignature(sliver$.SliverChildBuilderDelegate, () => ({
    __proto__: dart.getMethods(sliver$.SliverChildBuilderDelegate.__proto__),
    build: dart.fnType(dart.nullable(framework.Widget), [framework.BuildContext, core.int]),
    shouldRebuild: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(sliver$.SliverChildBuilderDelegate, L98);
  dart.setFieldSignature(sliver$.SliverChildBuilderDelegate, () => ({
    __proto__: dart.getFields(sliver$.SliverChildBuilderDelegate.__proto__),
    builder: dart.finalFieldType(dart.fnType(dart.nullable(framework.Widget), [framework.BuildContext, core.int])),
    childCount: dart.finalFieldType(dart.nullable(core.int)),
    addAutomaticKeepAlives: dart.finalFieldType(core.bool),
    addRepaintBoundaries: dart.finalFieldType(core.bool),
    addSemanticIndexes: dart.finalFieldType(core.bool),
    semanticIndexOffset: dart.finalFieldType(core.int),
    semanticIndexCallback: dart.finalFieldType(dart.fnType(dart.nullable(core.int), [framework.Widget, core.int])),
    findChildIndexCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(core.int), [key.Key])))
  }));
  var _keyToIndex = dart.privateName(sliver$, "_keyToIndex");
  var _isConstantInstance = dart.privateName(sliver$, "_isConstantInstance");
  var _findChildIndex = dart.privateName(sliver$, "_findChildIndex");
  var C887;
  var C886;
  var C885;
  var C890;
  var C891;
  var C889;
  var C888;
  var C894;
  var C893;
  var C892;
  var C897;
  var C898;
  var C896;
  var C895;
  var addAutomaticKeepAlives$0 = dart.privateName(sliver$, "SliverChildListDelegate.addAutomaticKeepAlives");
  var addRepaintBoundaries$0 = dart.privateName(sliver$, "SliverChildListDelegate.addRepaintBoundaries");
  var addSemanticIndexes$0 = dart.privateName(sliver$, "SliverChildListDelegate.addSemanticIndexes");
  var semanticIndexOffset$0 = dart.privateName(sliver$, "SliverChildListDelegate.semanticIndexOffset");
  var semanticIndexCallback$0 = dart.privateName(sliver$, "SliverChildListDelegate.semanticIndexCallback");
  var children$3 = dart.privateName(sliver$, "SliverChildListDelegate.children");
  var _keyToIndex$ = dart.privateName(sliver$, "SliverChildListDelegate._keyToIndex");
  sliver$.SliverChildListDelegate = class SliverChildListDelegate extends sliver$.SliverChildDelegate {
    get addAutomaticKeepAlives() {
      return this[addAutomaticKeepAlives$0];
    }
    set addAutomaticKeepAlives(value) {
      super.addAutomaticKeepAlives = value;
    }
    get addRepaintBoundaries() {
      return this[addRepaintBoundaries$0];
    }
    set addRepaintBoundaries(value) {
      super.addRepaintBoundaries = value;
    }
    get addSemanticIndexes() {
      return this[addSemanticIndexes$0];
    }
    set addSemanticIndexes(value) {
      super.addSemanticIndexes = value;
    }
    get semanticIndexOffset() {
      return this[semanticIndexOffset$0];
    }
    set semanticIndexOffset(value) {
      super.semanticIndexOffset = value;
    }
    get semanticIndexCallback() {
      return this[semanticIndexCallback$0];
    }
    set semanticIndexCallback(value) {
      super.semanticIndexCallback = value;
    }
    get children() {
      return this[children$3];
    }
    set children(value) {
      super.children = value;
    }
    get [_keyToIndex]() {
      return this[_keyToIndex$];
    }
    set [_keyToIndex](value) {
      super[_keyToIndex] = value;
    }
    get [_isConstantInstance]() {
      return this[_keyToIndex] == null;
    }
    [_findChildIndex](key) {
      if (key == null) dart.nullFailed(L97, 677, 28, "key");
      if (dart.test(this[_isConstantInstance])) {
        return null;
      }
      if (!dart.test(dart.nullCheck(this[_keyToIndex])[$containsKey](key))) {
        let index = dart.nullCheck(dart.nullCheck(this[_keyToIndex])[$_get](null));
        while (index < dart.notNull(this.children[$length])) {
          let child = this.children[$_get](index);
          if (child.key != null) {
            dart.nullCheck(this[_keyToIndex])[$_set](child.key, index);
          }
          if (dart.equals(child.key, key)) {
            dart.nullCheck(this[_keyToIndex])[$_set](null, index + 1);
            return index;
          }
          index = index + 1;
        }
        dart.nullCheck(this[_keyToIndex])[$_set](null, index);
      } else {
        return dart.nullCheck(this[_keyToIndex])[$_get](key);
      }
      return null;
    }
    findIndexByKey(key) {
      if (key == null) dart.nullFailed(L97, 704, 27, "key");
      if (!(key != null)) dart.assertFailed(null, L97, 705, 12, "key != null");
      let childKey = null;
      if (sliver$._SaltedValueKey.is(key)) {
        let saltedValueKey = key;
        childKey = saltedValueKey.value;
      } else {
        childKey = key;
      }
      return this[_findChildIndex](childKey);
    }
    build(context, index) {
      let t67, t66;
      if (context == null) dart.nullFailed(L97, 717, 30, "context");
      if (index == null) dart.nullFailed(L97, 717, 43, "index");
      if (!(this.children != null)) dart.assertFailed(null, L97, 718, 12, "children != null");
      if (dart.notNull(index) < 0 || dart.notNull(index) >= dart.notNull(this.children[$length])) return null;
      let child = this.children[$_get](index);
      let key = child.key != null ? new sliver$._SaltedValueKey.new(dart.nullCheck(child.key)) : null;
      if (!(child != null)) dart.assertFailed("The sliver's children must not contain null values, but a null value was found at index " + dart.str(index), L97, 724, 7, "child != null");
      if (dart.test(this.addRepaintBoundaries)) child = new basic.RepaintBoundary.new({child: child, $creationLocationd_0dea112b090073317d4: C885 || CT.C885});
      if (dart.test(this.addSemanticIndexes)) {
        let semanticIndex = (t66 = child, t67 = index, this.semanticIndexCallback(t66, t67));
        if (semanticIndex != null) child = new basic.IndexedSemantics.new({index: dart.notNull(semanticIndex) + dart.notNull(this.semanticIndexOffset), child: child, $creationLocationd_0dea112b090073317d4: C888 || CT.C888});
      }
      if (dart.test(this.addAutomaticKeepAlives)) child = new automatic_keep_alive.AutomaticKeepAlive.new({child: child, $creationLocationd_0dea112b090073317d4: C892 || CT.C892});
      return new basic.KeyedSubtree.new({child: child, key: key, $creationLocationd_0dea112b090073317d4: C895 || CT.C895});
    }
    get estimatedChildCount() {
      return this.children[$length];
    }
    shouldRebuild(oldDelegate) {
      sliver$.SliverChildListDelegate.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(L97, 743, 56, "oldDelegate");
      return !dart.equals(this.children, oldDelegate.children);
    }
  };
  (sliver$.SliverChildListDelegate.new = function(children, opts) {
    if (children == null) dart.nullFailed(L97, 544, 10, "children");
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    if (addAutomaticKeepAlives == null) dart.nullFailed(L97, 545, 10, "addAutomaticKeepAlives");
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    if (addRepaintBoundaries == null) dart.nullFailed(L97, 546, 10, "addRepaintBoundaries");
    let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
    if (addSemanticIndexes == null) dart.nullFailed(L97, 547, 10, "addSemanticIndexes");
    let semanticIndexCallback = opts && 'semanticIndexCallback' in opts ? opts.semanticIndexCallback : C870 || CT.C870;
    if (semanticIndexCallback == null) dart.nullFailed(L97, 548, 10, "semanticIndexCallback");
    let semanticIndexOffset = opts && 'semanticIndexOffset' in opts ? opts.semanticIndexOffset : 0;
    if (semanticIndexOffset == null) dart.nullFailed(L97, 549, 10, "semanticIndexOffset");
    this[children$3] = children;
    this[addAutomaticKeepAlives$0] = addAutomaticKeepAlives;
    this[addRepaintBoundaries$0] = addRepaintBoundaries;
    this[addSemanticIndexes$0] = addSemanticIndexes;
    this[semanticIndexCallback$0] = semanticIndexCallback;
    this[semanticIndexOffset$0] = semanticIndexOffset;
    if (!(children != null)) dart.assertFailed(null, L97, 550, 15, "children != null");
    if (!(addAutomaticKeepAlives != null)) dart.assertFailed(null, L97, 551, 15, "addAutomaticKeepAlives != null");
    if (!(addRepaintBoundaries != null)) dart.assertFailed(null, L97, 552, 15, "addRepaintBoundaries != null");
    if (!(addSemanticIndexes != null)) dart.assertFailed(null, L97, 553, 15, "addSemanticIndexes != null");
    if (!(semanticIndexCallback != null)) dart.assertFailed(null, L97, 554, 15, "semanticIndexCallback != null");
    this[_keyToIndex$] = new (LinkedMapOfKeyN$int()).from([null, 0]);
    sliver$.SliverChildListDelegate.__proto__.new.call(this);
    ;
  }).prototype = sliver$.SliverChildListDelegate.prototype;
  (sliver$.SliverChildListDelegate.fixed = function(children, opts) {
    if (children == null) dart.nullFailed(L97, 567, 10, "children");
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    if (addAutomaticKeepAlives == null) dart.nullFailed(L97, 568, 10, "addAutomaticKeepAlives");
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    if (addRepaintBoundaries == null) dart.nullFailed(L97, 569, 10, "addRepaintBoundaries");
    let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
    if (addSemanticIndexes == null) dart.nullFailed(L97, 570, 10, "addSemanticIndexes");
    let semanticIndexCallback = opts && 'semanticIndexCallback' in opts ? opts.semanticIndexCallback : C870 || CT.C870;
    if (semanticIndexCallback == null) dart.nullFailed(L97, 571, 10, "semanticIndexCallback");
    let semanticIndexOffset = opts && 'semanticIndexOffset' in opts ? opts.semanticIndexOffset : 0;
    if (semanticIndexOffset == null) dart.nullFailed(L97, 572, 10, "semanticIndexOffset");
    this[children$3] = children;
    this[addAutomaticKeepAlives$0] = addAutomaticKeepAlives;
    this[addRepaintBoundaries$0] = addRepaintBoundaries;
    this[addSemanticIndexes$0] = addSemanticIndexes;
    this[semanticIndexCallback$0] = semanticIndexCallback;
    this[semanticIndexOffset$0] = semanticIndexOffset;
    if (!(children != null)) dart.assertFailed(null, L97, 573, 15, "children != null");
    if (!(addAutomaticKeepAlives != null)) dart.assertFailed(null, L97, 574, 15, "addAutomaticKeepAlives != null");
    if (!(addRepaintBoundaries != null)) dart.assertFailed(null, L97, 575, 15, "addRepaintBoundaries != null");
    if (!(addSemanticIndexes != null)) dart.assertFailed(null, L97, 576, 15, "addSemanticIndexes != null");
    if (!(semanticIndexCallback != null)) dart.assertFailed(null, L97, 577, 15, "semanticIndexCallback != null");
    this[_keyToIndex$] = null;
    sliver$.SliverChildListDelegate.__proto__.new.call(this);
    ;
  }).prototype = sliver$.SliverChildListDelegate.prototype;
  dart.addTypeTests(sliver$.SliverChildListDelegate);
  dart.addTypeCaches(sliver$.SliverChildListDelegate);
  dart.setMethodSignature(sliver$.SliverChildListDelegate, () => ({
    __proto__: dart.getMethods(sliver$.SliverChildListDelegate.__proto__),
    [_findChildIndex]: dart.fnType(dart.nullable(core.int), [key.Key]),
    build: dart.fnType(dart.nullable(framework.Widget), [framework.BuildContext, core.int]),
    shouldRebuild: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(sliver$.SliverChildListDelegate, () => ({
    __proto__: dart.getGetters(sliver$.SliverChildListDelegate.__proto__),
    [_isConstantInstance]: core.bool
  }));
  dart.setLibraryUri(sliver$.SliverChildListDelegate, L98);
  dart.setFieldSignature(sliver$.SliverChildListDelegate, () => ({
    __proto__: dart.getFields(sliver$.SliverChildListDelegate.__proto__),
    addAutomaticKeepAlives: dart.finalFieldType(core.bool),
    addRepaintBoundaries: dart.finalFieldType(core.bool),
    addSemanticIndexes: dart.finalFieldType(core.bool),
    semanticIndexOffset: dart.finalFieldType(core.int),
    semanticIndexCallback: dart.finalFieldType(dart.fnType(dart.nullable(core.int), [framework.Widget, core.int])),
    children: dart.finalFieldType(core.List$(framework.Widget)),
    [_keyToIndex]: dart.finalFieldType(dart.nullable(core.Map$(dart.nullable(key.Key), core.int)))
  }));
  sliver$.SliverWithKeepAliveWidget = class SliverWithKeepAliveWidget extends framework.RenderObjectWidget {};
  (sliver$.SliverWithKeepAliveWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    sliver$.SliverWithKeepAliveWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverWithKeepAliveWidget.prototype;
  dart.addTypeTests(sliver$.SliverWithKeepAliveWidget);
  dart.addTypeCaches(sliver$.SliverWithKeepAliveWidget);
  dart.setLibraryUri(sliver$.SliverWithKeepAliveWidget, L98);
  var delegate$0 = dart.privateName(sliver$, "SliverMultiBoxAdaptorWidget.delegate");
  sliver$.SliverMultiBoxAdaptorWidget = class SliverMultiBoxAdaptorWidget extends sliver$.SliverWithKeepAliveWidget {
    get delegate() {
      return this[delegate$0];
    }
    set delegate(value) {
      super.delegate = value;
    }
    createElement() {
      return new sliver$.SliverMultiBoxAdaptorElement.new(this);
    }
    estimateMaxScrollOffset(constraints, firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset) {
      if (firstIndex == null) dart.nullFailed(L97, 815, 9, "firstIndex");
      if (lastIndex == null) dart.nullFailed(L97, 816, 9, "lastIndex");
      if (leadingScrollOffset == null) dart.nullFailed(L97, 817, 12, "leadingScrollOffset");
      if (trailingScrollOffset == null) dart.nullFailed(L97, 818, 12, "trailingScrollOffset");
      if (!(dart.notNull(lastIndex) >= dart.notNull(firstIndex))) dart.assertFailed(null, L97, 820, 12, "lastIndex >= firstIndex");
      return this.delegate.estimateMaxScrollOffset(firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L97, 830, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfSliverChildDelegate()).new("delegate", this.delegate));
    }
  };
  (sliver$.SliverMultiBoxAdaptorWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    if (delegate == null) dart.nullFailed(L97, 779, 19, "delegate");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[delegate$0] = delegate;
    if (!(delegate != null)) dart.assertFailed(null, L97, 780, 15, "delegate != null");
    sliver$.SliverMultiBoxAdaptorWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverMultiBoxAdaptorWidget.prototype;
  dart.addTypeTests(sliver$.SliverMultiBoxAdaptorWidget);
  dart.addTypeCaches(sliver$.SliverMultiBoxAdaptorWidget);
  dart.setMethodSignature(sliver$.SliverMultiBoxAdaptorWidget, () => ({
    __proto__: dart.getMethods(sliver$.SliverMultiBoxAdaptorWidget.__proto__),
    createElement: dart.fnType(sliver$.SliverMultiBoxAdaptorElement, []),
    estimateMaxScrollOffset: dart.fnType(dart.nullable(core.double), [dart.nullable(sliver.SliverConstraints), core.int, core.int, core.double, core.double])
  }));
  dart.setLibraryUri(sliver$.SliverMultiBoxAdaptorWidget, L98);
  dart.setFieldSignature(sliver$.SliverMultiBoxAdaptorWidget, () => ({
    __proto__: dart.getFields(sliver$.SliverMultiBoxAdaptorWidget.__proto__),
    delegate: dart.finalFieldType(sliver$.SliverChildDelegate)
  }));
  sliver$.SliverList = class SliverList extends sliver$.SliverMultiBoxAdaptorWidget {
    createElement() {
      return new sliver$.SliverMultiBoxAdaptorElement.new(this, {replaceMovedChildren: true});
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L97, 877, 52, "context");
      let element = sliver$.SliverMultiBoxAdaptorElement.as(context);
      return new sliver_list.RenderSliverList.new({childManager: element});
    }
  };
  (sliver$.SliverList.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    if (delegate == null) dart.nullFailed(L97, 870, 34, "delegate");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    sliver$.SliverList.__proto__.new.call(this, {key: key, delegate: delegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverList.prototype;
  dart.addTypeTests(sliver$.SliverList);
  dart.addTypeCaches(sliver$.SliverList);
  dart.setMethodSignature(sliver$.SliverList, () => ({
    __proto__: dart.getMethods(sliver$.SliverList.__proto__),
    createRenderObject: dart.fnType(sliver_list.RenderSliverList, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver$.SliverList, L98);
  var itemExtent$ = dart.privateName(sliver$, "SliverFixedExtentList.itemExtent");
  sliver$.SliverFixedExtentList = class SliverFixedExtentList extends sliver$.SliverMultiBoxAdaptorWidget {
    get itemExtent() {
      return this[itemExtent$];
    }
    set itemExtent(value) {
      super.itemExtent = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L97, 940, 63, "context");
      let element = sliver$.SliverMultiBoxAdaptorElement.as(context);
      return new sliver_fixed_extent_list.RenderSliverFixedExtentList.new({childManager: element, itemExtent: this.itemExtent});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L97, 946, 40, "context");
      sliver_fixed_extent_list.RenderSliverFixedExtentList.as(renderObject);
      if (renderObject == null) dart.nullFailed(L97, 946, 77, "renderObject");
      renderObject.itemExtent = this.itemExtent;
    }
  };
  (sliver$.SliverFixedExtentList.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    if (delegate == null) dart.nullFailed(L97, 932, 34, "delegate");
    let itemExtent = opts && 'itemExtent' in opts ? opts.itemExtent : null;
    if (itemExtent == null) dart.nullFailed(L97, 933, 19, "itemExtent");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[itemExtent$] = itemExtent;
    sliver$.SliverFixedExtentList.__proto__.new.call(this, {key: key, delegate: delegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverFixedExtentList.prototype;
  dart.addTypeTests(sliver$.SliverFixedExtentList);
  dart.addTypeCaches(sliver$.SliverFixedExtentList);
  dart.setMethodSignature(sliver$.SliverFixedExtentList, () => ({
    __proto__: dart.getMethods(sliver$.SliverFixedExtentList.__proto__),
    createRenderObject: dart.fnType(sliver_fixed_extent_list.RenderSliverFixedExtentList, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver$.SliverFixedExtentList, L98);
  dart.setFieldSignature(sliver$.SliverFixedExtentList, () => ({
    __proto__: dart.getFields(sliver$.SliverFixedExtentList.__proto__),
    itemExtent: dart.finalFieldType(core.double)
  }));
  var gridDelegate$ = dart.privateName(sliver$, "SliverGrid.gridDelegate");
  sliver$.SliverGrid = class SliverGrid extends sliver$.SliverMultiBoxAdaptorWidget {
    get gridDelegate() {
      return this[gridDelegate$];
    }
    set gridDelegate(value) {
      super.gridDelegate = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L97, 1060, 52, "context");
      let element = sliver$.SliverMultiBoxAdaptorElement.as(context);
      return new sliver_grid.RenderSliverGrid.new({childManager: element, gridDelegate: this.gridDelegate});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L97, 1066, 40, "context");
      sliver_grid.RenderSliverGrid.as(renderObject);
      if (renderObject == null) dart.nullFailed(L97, 1066, 66, "renderObject");
      renderObject.gridDelegate = this.gridDelegate;
    }
    estimateMaxScrollOffset(constraints, firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset) {
      let t66;
      if (firstIndex == null) dart.nullFailed(L97, 1073, 9, "firstIndex");
      if (lastIndex == null) dart.nullFailed(L97, 1074, 9, "lastIndex");
      if (leadingScrollOffset == null) dart.nullFailed(L97, 1075, 12, "leadingScrollOffset");
      if (trailingScrollOffset == null) dart.nullFailed(L97, 1076, 12, "trailingScrollOffset");
      t66 = super.estimateMaxScrollOffset(constraints, firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset);
      return t66 == null ? this.gridDelegate.getLayout(dart.nullCheck(constraints)).computeMaxScrollOffset(dart.nullCheck(this.delegate.estimatedChildCount)) : t66;
    }
  };
  (sliver$.SliverGrid.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    if (delegate == null) dart.nullFailed(L97, 1004, 34, "delegate");
    let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
    if (gridDelegate == null) dart.nullFailed(L97, 1005, 19, "gridDelegate");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[gridDelegate$] = gridDelegate;
    sliver$.SliverGrid.__proto__.new.call(this, {key: key, delegate: delegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverGrid.prototype;
  (sliver$.SliverGrid.count = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
    if (crossAxisCount == null) dart.nullFailed(L97, 1019, 18, "crossAxisCount");
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    if (mainAxisSpacing == null) dart.nullFailed(L97, 1020, 12, "mainAxisSpacing");
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    if (crossAxisSpacing == null) dart.nullFailed(L97, 1021, 12, "crossAxisSpacing");
    let childAspectRatio = opts && 'childAspectRatio' in opts ? opts.childAspectRatio : 1;
    if (childAspectRatio == null) dart.nullFailed(L97, 1022, 12, "childAspectRatio");
    let children = opts && 'children' in opts ? opts.children : C365 || CT.C365;
    if (children == null) dart.nullFailed(L97, 1023, 18, "children");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[gridDelegate$] = new sliver_grid.SliverGridDelegateWithFixedCrossAxisCount.new({crossAxisCount: crossAxisCount, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, childAspectRatio: childAspectRatio});
    sliver$.SliverGrid.__proto__.new.call(this, {key: key, delegate: new sliver$.SliverChildListDelegate.new(children), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverGrid.prototype;
  (sliver$.SliverGrid.extent = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
    if (maxCrossAxisExtent == null) dart.nullFailed(L97, 1043, 21, "maxCrossAxisExtent");
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    if (mainAxisSpacing == null) dart.nullFailed(L97, 1044, 12, "mainAxisSpacing");
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    if (crossAxisSpacing == null) dart.nullFailed(L97, 1045, 12, "crossAxisSpacing");
    let childAspectRatio = opts && 'childAspectRatio' in opts ? opts.childAspectRatio : 1;
    if (childAspectRatio == null) dart.nullFailed(L97, 1046, 12, "childAspectRatio");
    let children = opts && 'children' in opts ? opts.children : C365 || CT.C365;
    if (children == null) dart.nullFailed(L97, 1047, 18, "children");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[gridDelegate$] = new sliver_grid.SliverGridDelegateWithMaxCrossAxisExtent.new({maxCrossAxisExtent: maxCrossAxisExtent, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, childAspectRatio: childAspectRatio});
    sliver$.SliverGrid.__proto__.new.call(this, {key: key, delegate: new sliver$.SliverChildListDelegate.new(children), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverGrid.prototype;
  dart.addTypeTests(sliver$.SliverGrid);
  dart.addTypeCaches(sliver$.SliverGrid);
  dart.setMethodSignature(sliver$.SliverGrid, () => ({
    __proto__: dart.getMethods(sliver$.SliverGrid.__proto__),
    createRenderObject: dart.fnType(sliver_grid.RenderSliverGrid, [framework.BuildContext]),
    estimateMaxScrollOffset: dart.fnType(core.double, [dart.nullable(sliver.SliverConstraints), core.int, core.int, core.double, core.double])
  }));
  dart.setLibraryUri(sliver$.SliverGrid, L98);
  dart.setFieldSignature(sliver$.SliverGrid, () => ({
    __proto__: dart.getFields(sliver$.SliverGrid.__proto__),
    gridDelegate: dart.finalFieldType(sliver_grid.SliverGridDelegate)
  }));
  var _childElements = dart.privateName(sliver$, "_childElements");
  var _currentBeforeChild = dart.privateName(sliver$, "_currentBeforeChild");
  var _currentlyUpdatingChildIndex = dart.privateName(sliver$, "_currentlyUpdatingChildIndex");
  var _didUnderflow = dart.privateName(sliver$, "_didUnderflow");
  var _replaceMovedChildren = dart.privateName(sliver$, "_replaceMovedChildren");
  var _build = dart.privateName(sliver$, "_build");
  sliver$.SliverMultiBoxAdaptorElement = class SliverMultiBoxAdaptorElement extends framework.RenderObjectElement {
    get widget() {
      return sliver$.SliverMultiBoxAdaptorWidget.as(super.widget);
    }
    get renderObject() {
      return sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor.as(super.renderObject);
    }
    update(newWidget) {
      sliver$.SliverMultiBoxAdaptorWidget.as(newWidget);
      if (newWidget == null) dart.nullFailed(L97, 1117, 53, "newWidget");
      let oldWidget = this.widget;
      super.update(newWidget);
      let newDelegate = newWidget.delegate;
      let oldDelegate = oldWidget.delegate;
      if (!dart.equals(newDelegate, oldDelegate) && (!dart.equals(dart.runtimeType(newDelegate), dart.runtimeType(oldDelegate)) || dart.test(newDelegate.shouldRebuild(oldDelegate)))) this.performRebuild();
    }
    performRebuild() {
      let t66, t66$;
      super.performRebuild();
      this[_currentBeforeChild] = null;
      if (!(this[_currentlyUpdatingChildIndex] == null)) dart.assertFailed(null, L97, 1134, 12, "_currentlyUpdatingChildIndex == null");
      try {
        let newChildren = new (SplayTreeMapOfint$ElementN()).new();
        let indexToLayoutOffset = new (IdentityMapOfint$double()).new();
        const processElement = index => {
          if (index == null) dart.nullFailed(L97, 1139, 31, "index");
          this[_currentlyUpdatingChildIndex] = index;
          if (this[_childElements]._get(index) != null && !dart.equals(this[_childElements]._get(index), newChildren._get(index))) {
            this[_childElements]._set(index, this.updateChild(this[_childElements]._get(index), null, index));
          }
          let newChild = this.updateChild(newChildren._get(index), this[_build](index), index);
          if (newChild != null) {
            this[_childElements]._set(index, newChild);
            let parentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(dart.nullCheck(dart.nullCheck(newChild.renderObject).parentData));
            if (index === 0) {
              parentData.layoutOffset = 0.0;
            } else if (dart.test(indexToLayoutOffset[$containsKey](index))) {
              parentData.layoutOffset = indexToLayoutOffset[$_get](index);
            }
            if (!dart.test(parentData.keptAlive)) this[_currentBeforeChild] = RenderBoxN().as(newChild.renderObject);
          } else {
            this[_childElements].remove(index);
          }
        };
        dart.fn(processElement, intTovoid());
        for (let index of this[_childElements].keys[$toList]()) {
          let key = dart.nullCheck(this[_childElements]._get(index)).widget.key;
          let newIndex = key == null ? null : this.widget.delegate.findIndexByKey(key);
          let childParentData = SliverMultiBoxAdaptorParentDataN().as((t66 = dart.nullCheck(this[_childElements]._get(index)).renderObject, t66 == null ? null : t66.parentData));
          if (childParentData != null && childParentData.layoutOffset != null) indexToLayoutOffset[$_set](index, dart.nullCheck(childParentData.layoutOffset));
          if (newIndex != null && newIndex != index) {
            if (childParentData != null) childParentData.layoutOffset = null;
            newChildren._set(newIndex, this[_childElements]._get(index));
            if (dart.test(this[_replaceMovedChildren])) {
              newChildren.putIfAbsent(index, dart.fn(() => null, VoidToNull()));
            }
            this[_childElements].remove(index);
          } else {
            newChildren.putIfAbsent(index, dart.fn(() => this[_childElements]._get(index), VoidToElementN()));
          }
        }
        this.renderObject.debugChildIntegrityEnabled = false;
        newChildren.keys[$forEach](processElement);
        if (dart.test(this[_didUnderflow])) {
          let lastKey = (t66$ = this[_childElements].lastKey(), t66$ == null ? -1 : t66$);
          let rightBoundary = dart.notNull(lastKey) + 1;
          newChildren._set(rightBoundary, this[_childElements]._get(rightBoundary));
          processElement(rightBoundary);
        }
      } finally {
        this[_currentlyUpdatingChildIndex] = null;
        this.renderObject.debugChildIntegrityEnabled = true;
      }
    }
    [_build](index) {
      if (index == null) dart.nullFailed(L97, 1200, 22, "index");
      return this.widget.delegate.build(this, index);
    }
    createChild(index, opts) {
      if (index == null) dart.nullFailed(L97, 1205, 24, "index");
      let after = opts && 'after' in opts ? opts.after : null;
      if (!(this[_currentlyUpdatingChildIndex] == null)) dart.assertFailed(null, L97, 1206, 12, "_currentlyUpdatingChildIndex == null");
      dart.nullCheck(this.owner).buildScope(this, dart.fn(() => {
        let insertFirst = after == null;
        if (!(insertFirst || this[_childElements]._get(dart.notNull(index) - 1) != null)) dart.assertFailed(null, L97, 1209, 14, "insertFirst || _childElements[index-1] != null");
        this[_currentBeforeChild] = insertFirst ? null : RenderBoxN().as(dart.nullCheck(this[_childElements]._get(dart.notNull(index) - 1)).renderObject);
        let newChild = null;
        try {
          this[_currentlyUpdatingChildIndex] = index;
          newChild = this.updateChild(this[_childElements]._get(index), this[_build](index), index);
        } finally {
          this[_currentlyUpdatingChildIndex] = null;
        }
        if (newChild != null) {
          this[_childElements]._set(index, newChild);
        } else {
          this[_childElements].remove(index);
        }
      }, VoidTovoid()));
    }
    updateChild(child, newWidget, newSlot) {
      let t67, t66, t67$, t66$;
      let oldParentData = SliverMultiBoxAdaptorParentDataN().as((t66 = child, t66 == null ? null : (t67 = t66.renderObject, t67 == null ? null : t67.parentData)));
      let newChild = super.updateChild(child, newWidget, newSlot);
      let newParentData = SliverMultiBoxAdaptorParentDataN().as((t66$ = newChild, t66$ == null ? null : (t67$ = t66$.renderObject, t67$ == null ? null : t67$.parentData)));
      if (!dart.equals(oldParentData, newParentData) && oldParentData != null && newParentData != null) {
        newParentData.layoutOffset = oldParentData.layoutOffset;
      }
      return newChild;
    }
    forgetChild(child) {
      if (child == null) dart.nullFailed(L97, 1240, 28, "child");
      if (!(child != null)) dart.assertFailed(null, L97, 1241, 12, "child != null");
      if (!(child.slot != null)) dart.assertFailed(null, L97, 1242, 12, "child.slot != null");
      if (!dart.test(this[_childElements].containsKey(child.slot))) dart.assertFailed(null, L97, 1243, 12, "_childElements.containsKey(child.slot)");
      this[_childElements].remove(child.slot);
      super.forgetChild(child);
    }
    removeChild(child) {
      if (child == null) dart.nullFailed(L97, 1249, 30, "child");
      let index = this.renderObject.indexOf(child);
      if (!(this[_currentlyUpdatingChildIndex] == null)) dart.assertFailed(null, L97, 1251, 12, "_currentlyUpdatingChildIndex == null");
      if (!(dart.notNull(index) >= 0)) dart.assertFailed(null, L97, 1252, 12, "index >= 0");
      dart.nullCheck(this.owner).buildScope(this, dart.fn(() => {
        if (!dart.test(this[_childElements].containsKey(index))) dart.assertFailed(null, L97, 1254, 14, "_childElements.containsKey(index)");
        try {
          this[_currentlyUpdatingChildIndex] = index;
          let result = this.updateChild(this[_childElements]._get(index), null, index);
          if (!(result == null)) dart.assertFailed(null, L97, 1258, 16, "result == null");
        } finally {
          this[_currentlyUpdatingChildIndex] = null;
        }
        this[_childElements].remove(index);
        if (!!dart.test(this[_childElements].containsKey(index))) dart.assertFailed(null, L97, 1263, 14, "!_childElements.containsKey(index)");
      }, VoidTovoid()));
    }
    static _extrapolateMaxScrollOffset(firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset, childCount) {
      if (firstIndex == null) dart.nullFailed(L97, 1268, 9, "firstIndex");
      if (lastIndex == null) dart.nullFailed(L97, 1269, 9, "lastIndex");
      if (leadingScrollOffset == null) dart.nullFailed(L97, 1270, 12, "leadingScrollOffset");
      if (trailingScrollOffset == null) dart.nullFailed(L97, 1271, 12, "trailingScrollOffset");
      if (childCount == null) dart.nullFailed(L97, 1272, 9, "childCount");
      if (lastIndex === dart.notNull(childCount) - 1) return trailingScrollOffset;
      let reifiedCount = dart.notNull(lastIndex) - dart.notNull(firstIndex) + 1;
      let averageExtent = (dart.notNull(trailingScrollOffset) - dart.notNull(leadingScrollOffset)) / reifiedCount;
      let remainingCount = dart.notNull(childCount) - dart.notNull(lastIndex) - 1;
      return dart.notNull(trailingScrollOffset) + averageExtent * remainingCount;
    }
    estimateMaxScrollOffset(constraints, opts) {
      let t66;
      let firstIndex = opts && 'firstIndex' in opts ? opts.firstIndex : null;
      let lastIndex = opts && 'lastIndex' in opts ? opts.lastIndex : null;
      let leadingScrollOffset = opts && 'leadingScrollOffset' in opts ? opts.leadingScrollOffset : null;
      let trailingScrollOffset = opts && 'trailingScrollOffset' in opts ? opts.trailingScrollOffset : null;
      let childCount = this.estimatedChildCount;
      if (childCount == null) return 1 / 0;
      t66 = this.widget.estimateMaxScrollOffset(constraints, dart.nullCheck(firstIndex), dart.nullCheck(lastIndex), dart.nullCheck(leadingScrollOffset), dart.nullCheck(trailingScrollOffset));
      return t66 == null ? sliver$.SliverMultiBoxAdaptorElement._extrapolateMaxScrollOffset(firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset, childCount) : t66;
    }
    get estimatedChildCount() {
      return this.widget.delegate.estimatedChildCount;
    }
    get childCount() {
      let result = this.estimatedChildCount;
      if (result == null) {
        let lo = 0;
        let hi = 1;
        while (this[_build](hi - 1) != null) {
          lo = hi - 1;
          if (hi < (9007199254740992.0 / 2)[$truncate]()) {
            hi = hi * 2;
          } else if (hi < 9007199254740992.0) {
            hi = 9007199254740992.0;
          } else {
            dart.throw(assertions.FlutterError.new("Could not find the number of children in " + dart.str(this.widget.delegate) + ".\n" + "The childCount getter was called (implying that the delegate's builder returned null " + "for a positive index), but even building the child with index " + dart.str(hi) + " (the maximum " + "possible integer) did not return null. Consider implementing childCount to avoid " + "the cost of searching for the final child."));
          }
        }
        while (hi - lo > 1) {
          let mid = ((hi - lo) / 2)[$truncate]() + lo;
          if (this[_build](mid - 1) == null) {
            hi = mid;
          } else {
            lo = mid;
          }
        }
        result = lo;
      }
      return result;
    }
    didStartLayout() {
      if (!dart.test(this.debugAssertChildListLocked())) dart.assertFailed(null, L97, 1364, 12, "debugAssertChildListLocked()");
    }
    didFinishLayout() {
      let t66, t66$;
      if (!dart.test(this.debugAssertChildListLocked())) dart.assertFailed(null, L97, 1369, 12, "debugAssertChildListLocked()");
      let firstIndex = (t66 = this[_childElements].firstKey(), t66 == null ? 0 : t66);
      let lastIndex = (t66$ = this[_childElements].lastKey(), t66$ == null ? 0 : t66$);
      this.widget.delegate.didFinishLayout(firstIndex, lastIndex);
    }
    debugAssertChildListLocked() {
      if (!(this[_currentlyUpdatingChildIndex] == null)) dart.assertFailed(null, L97, 1379, 12, "_currentlyUpdatingChildIndex == null");
      return true;
    }
    didAdoptChild(child) {
      if (child == null) dart.nullFailed(L97, 1384, 32, "child");
      if (!(this[_currentlyUpdatingChildIndex] != null)) dart.assertFailed(null, L97, 1385, 12, "_currentlyUpdatingChildIndex != null");
      let childParentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(dart.nullCheck(child.parentData));
      childParentData.index = this[_currentlyUpdatingChildIndex];
    }
    setDidUnderflow(value) {
      if (value == null) dart.nullFailed(L97, 1393, 29, "value");
      this[_didUnderflow] = value;
    }
    insertRenderObjectChild(child, slot) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L97, 1398, 55, "child");
      core.int.as(slot);
      if (slot == null) dart.nullFailed(L97, 1398, 66, "slot");
      if (!(slot != null)) dart.assertFailed(null, L97, 1399, 12, "slot != null");
      if (!(this[_currentlyUpdatingChildIndex] == slot)) dart.assertFailed(null, L97, 1400, 12, "_currentlyUpdatingChildIndex == slot");
      if (!dart.test(this.renderObject.debugValidateChild(child))) dart.assertFailed(null, L97, 1401, 12, "renderObject.debugValidateChild(child)");
      this.renderObject.insert(box$.RenderBox.as(child), {after: this[_currentBeforeChild]});
      if (!dart.test(dart.fn(() => {
        let childParentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(dart.nullCheck(child.parentData));
        if (!(slot == childParentData.index)) dart.assertFailed(null, L97, 1405, 14, "slot == childParentData.index");
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L97, 1403, 12, "() {\r\n      final SliverMultiBoxAdaptorParentData childParentData = child.parentData! as SliverMultiBoxAdaptorParentData;\r\n      assert(slot == childParentData.index);\r\n      return true;\r\n    }()");
    }
    moveRenderObjectChild(child, oldSlot, newSlot) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L97, 1411, 53, "child");
      core.int.as(oldSlot);
      if (oldSlot == null) dart.nullFailed(L97, 1411, 64, "oldSlot");
      core.int.as(newSlot);
      if (newSlot == null) dart.nullFailed(L97, 1411, 77, "newSlot");
      if (!(newSlot != null)) dart.assertFailed(null, L97, 1412, 12, "newSlot != null");
      if (!(this[_currentlyUpdatingChildIndex] == newSlot)) dart.assertFailed(null, L97, 1413, 12, "_currentlyUpdatingChildIndex == newSlot");
      this.renderObject.move(box$.RenderBox.as(child), {after: this[_currentBeforeChild]});
    }
    removeRenderObjectChild(child, slot) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L97, 1418, 55, "child");
      core.int.as(slot);
      if (slot == null) dart.nullFailed(L97, 1418, 66, "slot");
      if (!(this[_currentlyUpdatingChildIndex] != null)) dart.assertFailed(null, L97, 1419, 12, "_currentlyUpdatingChildIndex != null");
      this.renderObject.remove(box$.RenderBox.as(child));
    }
    visitChildren(visitor) {
      if (visitor == null) dart.nullFailed(L97, 1424, 37, "visitor");
      if (!!dart.test(this[_childElements].values[$any](dart.fn(child => child == null, ElementNTobool())))) dart.assertFailed(null, L97, 1427, 12, "!_childElements.values.any((Element? child) => child == null)");
      this[_childElements].values[$cast](framework.Element)[$toList]()[$forEach](visitor);
    }
    debugVisitOnstageChildren(visitor) {
      if (visitor == null) dart.nullFailed(L97, 1432, 49, "visitor");
      this[_childElements].values[$cast](framework.Element)[$where](dart.fn(child => {
        if (child == null) dart.nullFailed(L97, 1433, 58, "child");
        let parentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(dart.nullCheck(dart.nullCheck(child.renderObject).parentData));
        let itemExtent = null;
        switch (this.renderObject.constraints.axis) {
          case C685 || CT.C685:
          {
            itemExtent = dart.nullCheck(child.renderObject).paintBounds.width;
            break;
          }
          case C424 || CT.C424:
          {
            itemExtent = dart.nullCheck(child.renderObject).paintBounds.height;
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        return parentData.layoutOffset != null && dart.nullCheck(parentData.layoutOffset) < dart.notNull(this.renderObject.constraints.scrollOffset) + dart.notNull(this.renderObject.constraints.remainingPaintExtent) && dart.nullCheck(parentData.layoutOffset) + dart.notNull(itemExtent) > dart.notNull(this.renderObject.constraints.scrollOffset);
      }, ElementTobool()))[$forEach](visitor);
    }
  };
  (sliver$.SliverMultiBoxAdaptorElement.new = function(widget, opts) {
    if (widget == null) dart.nullFailed(L97, 1104, 60, "widget");
    let replaceMovedChildren = opts && 'replaceMovedChildren' in opts ? opts.replaceMovedChildren : false;
    if (replaceMovedChildren == null) dart.nullFailed(L97, 1104, 74, "replaceMovedChildren");
    this[_childElements] = new (SplayTreeMapOfint$ElementN()).new();
    this[_currentBeforeChild] = null;
    this[_currentlyUpdatingChildIndex] = null;
    this[_didUnderflow] = false;
    this[_replaceMovedChildren] = replaceMovedChildren;
    sliver$.SliverMultiBoxAdaptorElement.__proto__.new.call(this, widget);
    ;
  }).prototype = sliver$.SliverMultiBoxAdaptorElement.prototype;
  dart.addTypeTests(sliver$.SliverMultiBoxAdaptorElement);
  dart.addTypeCaches(sliver$.SliverMultiBoxAdaptorElement);
  sliver$.SliverMultiBoxAdaptorElement[dart.implements] = () => [sliver_multi_box_adaptor.RenderSliverBoxChildManager];
  dart.setMethodSignature(sliver$.SliverMultiBoxAdaptorElement, () => ({
    __proto__: dart.getMethods(sliver$.SliverMultiBoxAdaptorElement.__proto__),
    [_build]: dart.fnType(dart.nullable(framework.Widget), [core.int]),
    createChild: dart.fnType(dart.void, [core.int], {}, {after: dart.nullable(box$.RenderBox)}),
    removeChild: dart.fnType(dart.void, [box$.RenderBox]),
    estimateMaxScrollOffset: dart.fnType(core.double, [dart.nullable(sliver.SliverConstraints)], {firstIndex: dart.nullable(core.int), lastIndex: dart.nullable(core.int), leadingScrollOffset: dart.nullable(core.double), trailingScrollOffset: dart.nullable(core.double)}, {}),
    didStartLayout: dart.fnType(dart.void, []),
    didFinishLayout: dart.fnType(dart.void, []),
    debugAssertChildListLocked: dart.fnType(core.bool, []),
    didAdoptChild: dart.fnType(dart.void, [box$.RenderBox]),
    setDidUnderflow: dart.fnType(dart.void, [core.bool])
  }));
  dart.setGetterSignature(sliver$.SliverMultiBoxAdaptorElement, () => ({
    __proto__: dart.getGetters(sliver$.SliverMultiBoxAdaptorElement.__proto__),
    widget: sliver$.SliverMultiBoxAdaptorWidget,
    renderObject: sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor,
    estimatedChildCount: dart.nullable(core.int),
    childCount: core.int
  }));
  dart.setLibraryUri(sliver$.SliverMultiBoxAdaptorElement, L98);
  dart.setFieldSignature(sliver$.SliverMultiBoxAdaptorElement, () => ({
    __proto__: dart.getFields(sliver$.SliverMultiBoxAdaptorElement.__proto__),
    [_replaceMovedChildren]: dart.finalFieldType(core.bool),
    [_childElements]: dart.finalFieldType(collection.SplayTreeMap$(core.int, dart.nullable(framework.Element))),
    [_currentBeforeChild]: dart.fieldType(dart.nullable(box$.RenderBox)),
    [_currentlyUpdatingChildIndex]: dart.fieldType(dart.nullable(core.int)),
    [_didUnderflow]: dart.fieldType(core.bool)
  }));
  var opacity$1 = dart.privateName(sliver$, "SliverOpacity.opacity");
  var alwaysIncludeSemantics$1 = dart.privateName(sliver$, "SliverOpacity.alwaysIncludeSemantics");
  sliver$.SliverOpacity = class SliverOpacity extends framework.SingleChildRenderObjectWidget {
    get opacity() {
      return this[opacity$1];
    }
    set opacity(value) {
      super.opacity = value;
    }
    get alwaysIncludeSemantics() {
      return this[alwaysIncludeSemantics$1];
    }
    set alwaysIncludeSemantics(value) {
      super.alwaysIncludeSemantics = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L97, 1530, 55, "context");
      return new proxy_sliver.RenderSliverOpacity.new({opacity: this.opacity, alwaysIncludeSemantics: this.alwaysIncludeSemantics});
    }
    updateRenderObject(context, renderObject) {
      let t66;
      if (context == null) dart.nullFailed(L97, 1538, 40, "context");
      proxy_sliver.RenderSliverOpacity.as(renderObject);
      if (renderObject == null) dart.nullFailed(L97, 1538, 69, "renderObject");
      t66 = renderObject;
      (() => {
        t66.opacity = this.opacity;
        t66.alwaysIncludeSemantics = this.alwaysIncludeSemantics;
        return t66;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L97, 1545, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfdouble()).new("opacity", this.opacity));
      properties.add(new diagnostics$.FlagProperty.new("alwaysIncludeSemantics", {value: this.alwaysIncludeSemantics, ifTrue: "alwaysIncludeSemantics"}));
    }
  };
  (sliver$.SliverOpacity.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let opacity = opts && 'opacity' in opts ? opts.opacity : null;
    if (opacity == null) dart.nullFailed(L97, 1500, 19, "opacity");
    let alwaysIncludeSemantics = opts && 'alwaysIncludeSemantics' in opts ? opts.alwaysIncludeSemantics : false;
    if (alwaysIncludeSemantics == null) dart.nullFailed(L97, 1501, 10, "alwaysIncludeSemantics");
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[opacity$1] = opacity;
    this[alwaysIncludeSemantics$1] = alwaysIncludeSemantics;
    if (!(opacity != null && dart.notNull(opacity) >= 0.0 && dart.notNull(opacity) <= 1.0)) dart.assertFailed(null, L97, 1503, 15, "opacity != null && opacity >= 0.0 && opacity <= 1.0");
    if (!(alwaysIncludeSemantics != null)) dart.assertFailed(null, L97, 1504, 15, "alwaysIncludeSemantics != null");
    sliver$.SliverOpacity.__proto__.new.call(this, {key: key, child: sliver, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverOpacity.prototype;
  dart.addTypeTests(sliver$.SliverOpacity);
  dart.addTypeCaches(sliver$.SliverOpacity);
  dart.setMethodSignature(sliver$.SliverOpacity, () => ({
    __proto__: dart.getMethods(sliver$.SliverOpacity.__proto__),
    createRenderObject: dart.fnType(proxy_sliver.RenderSliverOpacity, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver$.SliverOpacity, L98);
  dart.setFieldSignature(sliver$.SliverOpacity, () => ({
    __proto__: dart.getFields(sliver$.SliverOpacity.__proto__),
    opacity: dart.finalFieldType(core.double),
    alwaysIncludeSemantics: dart.finalFieldType(core.bool)
  }));
  var ignoring$ = dart.privateName(sliver$, "SliverIgnorePointer.ignoring");
  var ignoringSemantics$ = dart.privateName(sliver$, "SliverIgnorePointer.ignoringSemantics");
  sliver$.SliverIgnorePointer = class SliverIgnorePointer extends framework.SingleChildRenderObjectWidget {
    get ignoring() {
      return this[ignoring$];
    }
    set ignoring(value) {
      super.ignoring = value;
    }
    get ignoringSemantics() {
      return this[ignoringSemantics$];
    }
    set ignoringSemantics(value) {
      super.ignoringSemantics = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L97, 1590, 61, "context");
      return new proxy_sliver.RenderSliverIgnorePointer.new({ignoring: this.ignoring, ignoringSemantics: this.ignoringSemantics});
    }
    updateRenderObject(context, renderObject) {
      let t66;
      if (context == null) dart.nullFailed(L97, 1598, 40, "context");
      proxy_sliver.RenderSliverIgnorePointer.as(renderObject);
      if (renderObject == null) dart.nullFailed(L97, 1598, 75, "renderObject");
      t66 = renderObject;
      (() => {
        t66.ignoring = this.ignoring;
        t66.ignoringSemantics = this.ignoringSemantics;
        return t66;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L97, 1605, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfbool()).new("ignoring", this.ignoring));
      properties.add(new (DiagnosticsPropertyOfbool()).new("ignoringSemantics", this.ignoringSemantics, {defaultValue: null}));
    }
  };
  (sliver$.SliverIgnorePointer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let ignoring = opts && 'ignoring' in opts ? opts.ignoring : true;
    if (ignoring == null) dart.nullFailed(L97, 1569, 10, "ignoring");
    let ignoringSemantics = opts && 'ignoringSemantics' in opts ? opts.ignoringSemantics : null;
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[ignoring$] = ignoring;
    this[ignoringSemantics$] = ignoringSemantics;
    if (!(ignoring != null)) dart.assertFailed(null, L97, 1572, 15, "ignoring != null");
    sliver$.SliverIgnorePointer.__proto__.new.call(this, {key: key, child: sliver, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverIgnorePointer.prototype;
  dart.addTypeTests(sliver$.SliverIgnorePointer);
  dart.addTypeCaches(sliver$.SliverIgnorePointer);
  dart.setMethodSignature(sliver$.SliverIgnorePointer, () => ({
    __proto__: dart.getMethods(sliver$.SliverIgnorePointer.__proto__),
    createRenderObject: dart.fnType(proxy_sliver.RenderSliverIgnorePointer, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver$.SliverIgnorePointer, L98);
  dart.setFieldSignature(sliver$.SliverIgnorePointer, () => ({
    __proto__: dart.getFields(sliver$.SliverIgnorePointer.__proto__),
    ignoring: dart.finalFieldType(core.bool),
    ignoringSemantics: dart.finalFieldType(dart.nullable(core.bool))
  }));
  var offstage$ = dart.privateName(sliver$, "SliverOffstage.offstage");
  sliver$.SliverOffstage = class SliverOffstage extends framework.SingleChildRenderObjectWidget {
    get offstage() {
      return this[offstage$];
    }
    set offstage(value) {
      super.offstage = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L97, 1642, 56, "context");
      return new proxy_sliver.RenderSliverOffstage.new({offstage: this.offstage});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L97, 1645, 40, "context");
      proxy_sliver.RenderSliverOffstage.as(renderObject);
      if (renderObject == null) dart.nullFailed(L97, 1645, 70, "renderObject");
      renderObject.offstage = this.offstage;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L97, 1650, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfbool()).new("offstage", this.offstage));
    }
    createElement() {
      return new sliver$._SliverOffstageElement.new(this);
    }
  };
  (sliver$.SliverOffstage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let offstage = opts && 'offstage' in opts ? opts.offstage : true;
    if (offstage == null) dart.nullFailed(L97, 1627, 10, "offstage");
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[offstage$] = offstage;
    if (!(offstage != null)) dart.assertFailed(null, L97, 1629, 15, "offstage != null");
    sliver$.SliverOffstage.__proto__.new.call(this, {key: key, child: sliver, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverOffstage.prototype;
  dart.addTypeTests(sliver$.SliverOffstage);
  dart.addTypeCaches(sliver$.SliverOffstage);
  dart.setMethodSignature(sliver$.SliverOffstage, () => ({
    __proto__: dart.getMethods(sliver$.SliverOffstage.__proto__),
    createRenderObject: dart.fnType(proxy_sliver.RenderSliverOffstage, [framework.BuildContext]),
    createElement: dart.fnType(sliver$._SliverOffstageElement, [])
  }));
  dart.setLibraryUri(sliver$.SliverOffstage, L98);
  dart.setFieldSignature(sliver$.SliverOffstage, () => ({
    __proto__: dart.getFields(sliver$.SliverOffstage.__proto__),
    offstage: dart.finalFieldType(core.bool)
  }));
  framework.SingleChildRenderObjectElement = class SingleChildRenderObjectElement extends framework.RenderObjectElement {
    get widget() {
      return framework.SingleChildRenderObjectWidget.as(super.widget);
    }
    visitChildren(visitor) {
      if (visitor == null) dart.nullFailed(L4, 6158, 37, "visitor");
      if (this[_child] != null) visitor(dart.nullCheck(this[_child]));
    }
    forgetChild(child) {
      if (child == null) dart.nullFailed(L4, 6164, 28, "child");
      if (!dart.equals(child, this[_child])) dart.assertFailed(null, L4, 6165, 12, "child == _child");
      this[_child] = null;
      super.forgetChild(child);
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      this[_child] = this.updateChild(this[_child], this.widget.child, null);
    }
    update(newWidget) {
      framework.SingleChildRenderObjectWidget.as(newWidget);
      if (newWidget == null) dart.nullFailed(L4, 6177, 45, "newWidget");
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, L4, 6179, 12, "widget == newWidget");
      this[_child] = this.updateChild(this[_child], this.widget.child, null);
    }
    insertRenderObjectChild(child, slot) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L4, 6184, 45, "child");
      let renderObject = RenderObjectWithChildMixinOfRenderObject().as(this.renderObject);
      if (!(slot == null)) dart.assertFailed(null, L4, 6186, 12, "slot == null");
      if (!dart.test(renderObject.debugValidateChild(child))) dart.assertFailed(null, L4, 6187, 12, "renderObject.debugValidateChild(child)");
      renderObject.child = child;
      if (!dart.equals(renderObject, this.renderObject)) dart.assertFailed(null, L4, 6189, 12, "renderObject == this.renderObject");
    }
    moveRenderObjectChild(child, oldSlot, newSlot) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L4, 6193, 43, "child");
      if (!false) dart.assertFailed(null, L4, 6194, 12, "false");
    }
    removeRenderObjectChild(child, slot) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L4, 6198, 45, "child");
      let renderObject = RenderObjectWithChildMixinOfRenderObject().as(this.renderObject);
      if (!(slot == null)) dart.assertFailed(null, L4, 6200, 12, "slot == null");
      if (!dart.equals(renderObject.child, child)) dart.assertFailed(null, L4, 6201, 12, "renderObject.child == child");
      renderObject.child = null;
      if (!dart.equals(renderObject, this.renderObject)) dart.assertFailed(null, L4, 6203, 12, "renderObject == this.renderObject");
    }
  };
  (framework.SingleChildRenderObjectElement.new = function(widget) {
    if (widget == null) dart.nullFailed(L4, 6150, 64, "widget");
    this[_child] = null;
    framework.SingleChildRenderObjectElement.__proto__.new.call(this, widget);
    ;
  }).prototype = framework.SingleChildRenderObjectElement.prototype;
  dart.addTypeTests(framework.SingleChildRenderObjectElement);
  dart.addTypeCaches(framework.SingleChildRenderObjectElement);
  dart.setGetterSignature(framework.SingleChildRenderObjectElement, () => ({
    __proto__: dart.getGetters(framework.SingleChildRenderObjectElement.__proto__),
    widget: framework.SingleChildRenderObjectWidget
  }));
  dart.setLibraryUri(framework.SingleChildRenderObjectElement, L5);
  dart.setFieldSignature(framework.SingleChildRenderObjectElement, () => ({
    __proto__: dart.getFields(framework.SingleChildRenderObjectElement.__proto__),
    [_child]: dart.fieldType(dart.nullable(framework.Element))
  }));
  sliver$._SliverOffstageElement = class _SliverOffstageElement extends framework.SingleChildRenderObjectElement {
    get widget() {
      return sliver$.SliverOffstage.as(super.widget);
    }
    debugVisitOnstageChildren(visitor) {
      if (visitor == null) dart.nullFailed(L97, 1666, 49, "visitor");
      if (!dart.test(this.widget.offstage)) super.debugVisitOnstageChildren(visitor);
    }
  };
  (sliver$._SliverOffstageElement.new = function(widget) {
    if (widget == null) dart.nullFailed(L97, 1660, 41, "widget");
    sliver$._SliverOffstageElement.__proto__.new.call(this, widget);
    ;
  }).prototype = sliver$._SliverOffstageElement.prototype;
  dart.addTypeTests(sliver$._SliverOffstageElement);
  dart.addTypeCaches(sliver$._SliverOffstageElement);
  dart.setGetterSignature(sliver$._SliverOffstageElement, () => ({
    __proto__: dart.getGetters(sliver$._SliverOffstageElement.__proto__),
    widget: sliver$.SliverOffstage
  }));
  dart.setLibraryUri(sliver$._SliverOffstageElement, L98);
  var keepAlive$ = dart.privateName(sliver$, "KeepAlive.keepAlive");
  sliver$.KeepAlive = class KeepAlive extends framework.ParentDataWidget$(sliver_multi_box_adaptor.KeepAliveParentDataMixin) {
    get keepAlive() {
      return this[keepAlive$];
    }
    set keepAlive(value) {
      super.keepAlive = value;
    }
    applyParentData(renderObject) {
      if (renderObject == null) dart.nullFailed(L97, 1710, 37, "renderObject");
      if (!sliver_multi_box_adaptor.KeepAliveParentDataMixin.is(renderObject.parentData)) dart.assertFailed(null, L97, 1711, 12, "renderObject.parentData is KeepAliveParentDataMixin");
      let parentData = sliver_multi_box_adaptor.KeepAliveParentDataMixin.as(dart.nullCheck(renderObject.parentData));
      if (!dart.equals(parentData.keepAlive, this.keepAlive)) {
        parentData.keepAlive = this.keepAlive;
        let targetParent = renderObject.parent;
        if (object$.RenderObject.is(targetParent) && !dart.test(this.keepAlive)) targetParent.markNeedsLayout();
      }
    }
    debugCanApplyOutOfTurn() {
      return this.keepAlive;
    }
    get debugTypicalAncestorWidgetClass() {
      return dart.wrapType(sliver$.SliverWithKeepAliveWidget);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L97, 1732, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfbool()).new("keepAlive", this.keepAlive));
    }
  };
  (sliver$.KeepAlive.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let keepAlive = opts && 'keepAlive' in opts ? opts.keepAlive : null;
    if (keepAlive == null) dart.nullFailed(L97, 1698, 19, "keepAlive");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L97, 1699, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[keepAlive$] = keepAlive;
    if (!(child != null)) dart.assertFailed(null, L97, 1700, 15, "child != null");
    if (!(keepAlive != null)) dart.assertFailed(null, L97, 1701, 15, "keepAlive != null");
    sliver$.KeepAlive.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.KeepAlive.prototype;
  dart.addTypeTests(sliver$.KeepAlive);
  dart.addTypeCaches(sliver$.KeepAlive);
  dart.setMethodSignature(sliver$.KeepAlive, () => ({
    __proto__: dart.getMethods(sliver$.KeepAlive.__proto__),
    applyParentData: dart.fnType(dart.void, [object$.RenderObject])
  }));
  dart.setGetterSignature(sliver$.KeepAlive, () => ({
    __proto__: dart.getGetters(sliver$.KeepAlive.__proto__),
    debugTypicalAncestorWidgetClass: core.Type
  }));
  dart.setLibraryUri(sliver$.KeepAlive, L98);
  dart.setFieldSignature(sliver$.KeepAlive, () => ({
    __proto__: dart.getFields(sliver$.KeepAlive.__proto__),
    keepAlive: dart.finalFieldType(core.bool)
  }));
  sliver$._kDefaultSemanticIndexCallback = function _kDefaultSemanticIndexCallback(_, localIndex) {
    if (_ == null) dart.nullFailed(L97, 36, 43, "_");
    if (localIndex == null) dart.nullFailed(L97, 36, 50, "localIndex");
    return localIndex;
  };
  sliver$._createErrorWidget = function _createErrorWidget(exception, stackTrace) {
    if (exception == null) dart.nullFailed(L97, 1739, 34, "exception");
    if (stackTrace == null) dart.nullFailed(L97, 1739, 56, "stackTrace");
    let details = new assertions.FlutterErrorDetails.new({exception: exception, stack: stackTrace, library: "widgets library", context: new assertions.ErrorDescription.new("building")});
    assertions.FlutterError.reportError(details);
    return framework.ErrorWidget.builder(details);
  };
  const _is_NotificationListener_default = Symbol('_is_NotificationListener_default');
  var child$31 = dart.privateName(notification_listener, "NotificationListener.child");
  var onNotification$ = dart.privateName(notification_listener, "NotificationListener.onNotification");
  notification_listener.NotificationListener$ = dart.generic(T => {
    class NotificationListener extends framework.StatelessWidget {
      get child() {
        return this[child$31];
      }
      set child(value) {
        super.child = value;
      }
      get onNotification() {
        return this[onNotification$];
      }
      set onNotification(value) {
        super.onNotification = value;
      }
      [_dispatch](notification, element) {
        if (notification == null) dart.nullFailed(L71, 204, 31, "notification");
        if (element == null) dart.nullFailed(L71, 204, 53, "element");
        if (this.onNotification != null && T.is(notification)) {
          let result = dart.nullCheck(this.onNotification)(notification);
          return dart.equals(result, true);
        }
        return false;
      }
      build(context) {
        if (context == null) dart.nullFailed(L71, 213, 29, "context");
        return this.child;
      }
    }
    (NotificationListener.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(L71, 174, 19, "child");
      let onNotification = opts && 'onNotification' in opts ? opts.onNotification : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[child$31] = child;
      this[onNotification$] = onNotification;
      NotificationListener.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = NotificationListener.prototype;
    dart.addTypeTests(NotificationListener);
    NotificationListener.prototype[_is_NotificationListener_default] = true;
    dart.addTypeCaches(NotificationListener);
    dart.setMethodSignature(NotificationListener, () => ({
      __proto__: dart.getMethods(NotificationListener.__proto__),
      [_dispatch]: dart.fnType(core.bool, [notification_listener.Notification, framework.Element]),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(NotificationListener, L72);
    dart.setFieldSignature(NotificationListener, () => ({
      __proto__: dart.getFields(NotificationListener.__proto__),
      child: dart.finalFieldType(framework.Widget),
      onNotification: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T])))
    }));
    return NotificationListener;
  });
  notification_listener.NotificationListener = notification_listener.NotificationListener$();
  dart.addTypeTests(notification_listener.NotificationListener, _is_NotificationListener_default);
  var child$32 = dart.privateName(automatic_keep_alive, "AutomaticKeepAlive.child");
  automatic_keep_alive.AutomaticKeepAlive = class AutomaticKeepAlive extends framework.StatefulWidget {
    get child() {
      return this[child$32];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new automatic_keep_alive._AutomaticKeepAliveState.new();
    }
  };
  (automatic_keep_alive.AutomaticKeepAlive.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$32] = child;
    automatic_keep_alive.AutomaticKeepAlive.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = automatic_keep_alive.AutomaticKeepAlive.prototype;
  dart.addTypeTests(automatic_keep_alive.AutomaticKeepAlive);
  dart.addTypeCaches(automatic_keep_alive.AutomaticKeepAlive);
  dart.setMethodSignature(automatic_keep_alive.AutomaticKeepAlive, () => ({
    __proto__: dart.getMethods(automatic_keep_alive.AutomaticKeepAlive.__proto__),
    createState: dart.fnType(automatic_keep_alive._AutomaticKeepAliveState, [])
  }));
  dart.setLibraryUri(automatic_keep_alive.AutomaticKeepAlive, L99);
  dart.setFieldSignature(automatic_keep_alive.AutomaticKeepAlive, () => ({
    __proto__: dart.getFields(automatic_keep_alive.AutomaticKeepAlive.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  var _handles$ = dart.privateName(automatic_keep_alive, "_handles");
  var _child$ = dart.privateName(automatic_keep_alive, "_child");
  var _keepingAlive = dart.privateName(automatic_keep_alive, "_keepingAlive");
  var _updateChild = dart.privateName(automatic_keep_alive, "_updateChild");
  var _addClient = dart.privateName(automatic_keep_alive, "_addClient");
  var C901;
  var C902;
  var C900;
  var C899;
  var _createCallback = dart.privateName(automatic_keep_alive, "_createCallback");
  var _getChildElement = dart.privateName(automatic_keep_alive, "_getChildElement");
  var _updateParentDataOfChild = dart.privateName(automatic_keep_alive, "_updateParentDataOfChild");
  var C905;
  var C906;
  var C904;
  var C903;
  automatic_keep_alive._AutomaticKeepAliveState = class _AutomaticKeepAliveState extends framework.State$(automatic_keep_alive.AutomaticKeepAlive) {
    initState() {
      super.initState();
      this[_updateChild]();
    }
    didUpdateWidget(oldWidget) {
      automatic_keep_alive.AutomaticKeepAlive.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L100, 55, 43, "oldWidget");
      super.didUpdateWidget(oldWidget);
      this[_updateChild]();
    }
    [_updateChild]() {
      this[_child$] = new (NotificationListenerOfKeepAliveNotification()).new({onNotification: dart.bind(this, _addClient), child: dart.nullCheck(this.widget.child), $creationLocationd_0dea112b090073317d4: C899 || CT.C899});
    }
    dispose() {
      if (this[_handles$] != null) {
        for (let handle of dart.nullCheck(this[_handles$])[$keys])
          handle.removeListener(dart.nullCheck(dart.nullCheck(this[_handles$])[$_get](handle)));
      }
      super.dispose();
    }
    [_addClient](notification) {
      if (notification == null) dart.nullFailed(L100, 76, 41, "notification");
      let handle = notification.handle;
      this[_handles$] == null ? this[_handles$] = new (LinkedMapOfListenable$VoidTovoid()).new() : null;
      if (!!dart.test(dart.nullCheck(this[_handles$])[$containsKey](handle))) dart.assertFailed(null, L100, 79, 12, "!_handles!.containsKey(handle)");
      dart.nullCheck(this[_handles$])[$_set](handle, this[_createCallback](handle));
      handle.addListener(dart.nullCheck(dart.nullCheck(this[_handles$])[$_get](handle)));
      if (!dart.test(this[_keepingAlive])) {
        this[_keepingAlive] = true;
        let childElement = this[_getChildElement]();
        if (childElement != null) {
          this[_updateParentDataOfChild](childElement);
        } else {
          dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.fn(timeStamp => {
            if (timeStamp == null) dart.nullFailed(L100, 92, 67, "timeStamp");
            if (!dart.test(this.mounted)) {
              return;
            }
            let childElement = this[_getChildElement]();
            if (!(childElement != null)) dart.assertFailed(null, L100, 97, 18, "childElement != null");
            this[_updateParentDataOfChild](dart.nullCheck(childElement));
          }, DurationTovoid()));
        }
      }
      return false;
    }
    [_getChildElement]() {
      if (!dart.test(this.mounted)) dart.assertFailed(null, L100, 110, 12, "mounted");
      let element = framework.Element.as(this.context);
      let childElement = null;
      element.visitChildren(dart.fn(child => {
        if (child == null) dart.nullFailed(L100, 132, 36, "child");
        childElement = child;
      }, ElementTovoid()));
      if (!(childElement == null || ParentDataElementOfKeepAliveParentDataMixin().is(childElement))) dart.assertFailed(null, L100, 135, 12, "childElement == null || childElement is ParentDataElement<KeepAliveParentDataMixin>");
      return ParentDataElementNOfKeepAliveParentDataMixin().as(childElement);
    }
    [_updateParentDataOfChild](childElement) {
      if (childElement == null) dart.nullFailed(L100, 139, 77, "childElement");
      childElement.applyWidgetOutOfTurn(ParentDataWidgetOfKeepAliveParentDataMixin().as(this.build(this.context)));
    }
    [_createCallback](handle) {
      if (handle == null) dart.nullFailed(L100, 143, 43, "handle");
      return dart.fn(() => {
        if (!dart.test(dart.fn(() => {
          if (!dart.test(this.mounted)) {
            dart.throw(assertions.FlutterError.new("AutomaticKeepAlive handle triggered after AutomaticKeepAlive was disposed.\n" + "Widgets should always trigger their KeepAliveNotification handle when they are " + "deactivated, so that they (or their handle) do not send spurious events later " + "when they are no longer in the tree."));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L100, 145, 14, "() {\r\n        if (!mounted) {\r\n          throw FlutterError(\r\n            'AutomaticKeepAlive handle triggered after AutomaticKeepAlive was disposed.\\n'\r\n            'Widgets should always trigger their KeepAliveNotification handle when they are '\r\n            'deactivated, so that they (or their handle) do not send spurious events later '\r\n            'when they are no longer in the tree.'\r\n          );\r\n        }\r\n        return true;\r\n      }()");
        dart.nullCheck(this[_handles$])[$remove](handle);
        if (dart.test(dart.nullCheck(this[_handles$])[$isEmpty])) {
          if (dart.notNull(dart.nullCheck(binding$.SchedulerBinding.instance).schedulerPhase.index) < dart.notNull(binding$.SchedulerPhase.persistentCallbacks.index)) {
            this.setState(dart.fn(() => {
              this[_keepingAlive] = false;
            }, VoidTovoid()));
          } else {
            this[_keepingAlive] = false;
            async.scheduleMicrotask(dart.fn(() => {
              if (dart.test(this.mounted) && dart.test(dart.nullCheck(this[_handles$])[$isEmpty])) {
                this.setState(dart.fn(() => {
                  if (!!dart.test(this[_keepingAlive])) dart.assertFailed(null, L100, 220, 24, "!_keepingAlive");
                }, VoidTovoid()));
              }
            }, VoidTovoid()));
          }
        }
      }, VoidTovoid());
    }
    build(context) {
      if (context == null) dart.nullFailed(L100, 230, 29, "context");
      if (!(this[_child$] != null)) dart.assertFailed(null, L100, 231, 12, "_child != null");
      return new sliver$.KeepAlive.new({keepAlive: this[_keepingAlive], child: dart.nullCheck(this[_child$]), $creationLocationd_0dea112b090073317d4: C903 || CT.C903});
    }
    debugFillProperties(description) {
      if (description == null) dart.nullFailed(L100, 240, 56, "description");
      super.debugFillProperties(description);
      description.add(new diagnostics$.FlagProperty.new("_keepingAlive", {value: this[_keepingAlive], ifTrue: "keeping subtree alive"}));
      description.add(new (DiagnosticsPropertyOfMapOfListenable$VoidTovoid()).new("handles", this[_handles$], {description: this[_handles$] != null ? dart.str(dart.nullCheck(this[_handles$])[$length]) + " active client" + (dart.nullCheck(this[_handles$])[$length] === 1 ? "" : "s") : null, ifNull: "no notifications ever received"}));
    }
  };
  (automatic_keep_alive._AutomaticKeepAliveState.new = function() {
    this[_handles$] = null;
    this[_child$] = null;
    this[_keepingAlive] = false;
    automatic_keep_alive._AutomaticKeepAliveState.__proto__.new.call(this);
    ;
  }).prototype = automatic_keep_alive._AutomaticKeepAliveState.prototype;
  dart.addTypeTests(automatic_keep_alive._AutomaticKeepAliveState);
  dart.addTypeCaches(automatic_keep_alive._AutomaticKeepAliveState);
  dart.setMethodSignature(automatic_keep_alive._AutomaticKeepAliveState, () => ({
    __proto__: dart.getMethods(automatic_keep_alive._AutomaticKeepAliveState.__proto__),
    [_updateChild]: dart.fnType(dart.void, []),
    [_addClient]: dart.fnType(core.bool, [automatic_keep_alive.KeepAliveNotification]),
    [_getChildElement]: dart.fnType(dart.nullable(framework.ParentDataElement$(sliver_multi_box_adaptor.KeepAliveParentDataMixin)), []),
    [_updateParentDataOfChild]: dart.fnType(dart.void, [framework.ParentDataElement$(sliver_multi_box_adaptor.KeepAliveParentDataMixin)]),
    [_createCallback]: dart.fnType(dart.fnType(dart.void, []), [change_notifier.Listenable]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(automatic_keep_alive._AutomaticKeepAliveState, L99);
  dart.setFieldSignature(automatic_keep_alive._AutomaticKeepAliveState, () => ({
    __proto__: dart.getFields(automatic_keep_alive._AutomaticKeepAliveState.__proto__),
    [_handles$]: dart.fieldType(dart.nullable(core.Map$(change_notifier.Listenable, dart.fnType(dart.void, [])))),
    [_child$]: dart.fieldType(dart.nullable(framework.Widget)),
    [_keepingAlive]: dart.fieldType(core.bool)
  }));
  var handle$ = dart.privateName(automatic_keep_alive, "KeepAliveNotification.handle");
  automatic_keep_alive.KeepAliveNotification = class KeepAliveNotification extends notification_listener.Notification {
    get handle() {
      return this[handle$];
    }
    set handle(value) {
      super.handle = value;
    }
  };
  (automatic_keep_alive.KeepAliveNotification.new = function(handle) {
    if (handle == null) dart.nullFailed(L100, 295, 36, "handle");
    this[handle$] = handle;
    if (!(handle != null)) dart.assertFailed(null, L100, 295, 53, "handle != null");
    automatic_keep_alive.KeepAliveNotification.__proto__.new.call(this);
    ;
  }).prototype = automatic_keep_alive.KeepAliveNotification.prototype;
  dart.addTypeTests(automatic_keep_alive.KeepAliveNotification);
  dart.addTypeCaches(automatic_keep_alive.KeepAliveNotification);
  dart.setLibraryUri(automatic_keep_alive.KeepAliveNotification, L99);
  dart.setFieldSignature(automatic_keep_alive.KeepAliveNotification, () => ({
    __proto__: dart.getFields(automatic_keep_alive.KeepAliveNotification.__proto__),
    handle: dart.finalFieldType(change_notifier.Listenable)
  }));
  automatic_keep_alive.KeepAliveHandle = class KeepAliveHandle extends change_notifier.ChangeNotifier {
    release() {
      this.notifyListeners();
    }
  };
  (automatic_keep_alive.KeepAliveHandle.new = function() {
    automatic_keep_alive.KeepAliveHandle.__proto__.new.call(this);
    ;
  }).prototype = automatic_keep_alive.KeepAliveHandle.prototype;
  dart.addTypeTests(automatic_keep_alive.KeepAliveHandle);
  dart.addTypeCaches(automatic_keep_alive.KeepAliveHandle);
  dart.setMethodSignature(automatic_keep_alive.KeepAliveHandle, () => ({
    __proto__: dart.getMethods(automatic_keep_alive.KeepAliveHandle.__proto__),
    release: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(automatic_keep_alive.KeepAliveHandle, L99);
  var _keepAliveHandle = dart.privateName(automatic_keep_alive, "_keepAliveHandle");
  var _ensureKeepAlive = dart.privateName(automatic_keep_alive, "_ensureKeepAlive");
  var _releaseKeepAlive = dart.privateName(automatic_keep_alive, "_releaseKeepAlive");
  var C908;
  var C907;
  const _is_AutomaticKeepAliveClientMixin_default = Symbol('_is_AutomaticKeepAliveClientMixin_default');
  automatic_keep_alive.AutomaticKeepAliveClientMixin$ = dart.generic(T => {
    class AutomaticKeepAliveClientMixin extends framework.State$(T) {}
    AutomaticKeepAliveClientMixin[dart.mixinOn] = State => class AutomaticKeepAliveClientMixin extends State {
      [_ensureKeepAlive]() {
        if (!(this[_keepAliveHandle] == null)) dart.assertFailed(null, L100, 348, 12, "_keepAliveHandle == null");
        this[_keepAliveHandle] = new automatic_keep_alive.KeepAliveHandle.new();
        new automatic_keep_alive.KeepAliveNotification.new(dart.nullCheck(this[_keepAliveHandle])).dispatch(this.context);
      }
      [_releaseKeepAlive]() {
        dart.nullCheck(this[_keepAliveHandle]).release();
        this[_keepAliveHandle] = null;
      }
      updateKeepAlive() {
        if (dart.test(this.wantKeepAlive)) {
          if (this[_keepAliveHandle] == null) this[_ensureKeepAlive]();
        } else {
          if (this[_keepAliveHandle] != null) this[_releaseKeepAlive]();
        }
      }
      initState() {
        super.initState();
        if (dart.test(this.wantKeepAlive)) this[_ensureKeepAlive]();
      }
      deactivate() {
        if (this[_keepAliveHandle] != null) this[_releaseKeepAlive]();
        super.deactivate();
      }
      build(context) {
        if (context == null) dart.nullFailed(L100, 394, 29, "context");
        if (dart.test(this.wantKeepAlive) && this[_keepAliveHandle] == null) this[_ensureKeepAlive]();
        return C907 || CT.C907;
      }
    };
    (AutomaticKeepAliveClientMixin[dart.mixinNew] = function() {
      this[_keepAliveHandle] = null;
    }).prototype = AutomaticKeepAliveClientMixin.prototype;
    dart.addTypeTests(AutomaticKeepAliveClientMixin);
    AutomaticKeepAliveClientMixin.prototype[_is_AutomaticKeepAliveClientMixin_default] = true;
    dart.addTypeCaches(AutomaticKeepAliveClientMixin);
    AutomaticKeepAliveClientMixin[dart.implements] = () => [framework.State$(T)];
    dart.setMethodSignature(AutomaticKeepAliveClientMixin, () => ({
      __proto__: dart.getMethods(AutomaticKeepAliveClientMixin.__proto__),
      [_ensureKeepAlive]: dart.fnType(dart.void, []),
      [_releaseKeepAlive]: dart.fnType(dart.void, []),
      updateKeepAlive: dart.fnType(dart.void, []),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(AutomaticKeepAliveClientMixin, L99);
    dart.setFieldSignature(AutomaticKeepAliveClientMixin, () => ({
      __proto__: dart.getFields(AutomaticKeepAliveClientMixin.__proto__),
      [_keepAliveHandle]: dart.fieldType(dart.nullable(automatic_keep_alive.KeepAliveHandle))
    }));
    return AutomaticKeepAliveClientMixin;
  });
  automatic_keep_alive.AutomaticKeepAliveClientMixin = automatic_keep_alive.AutomaticKeepAliveClientMixin$();
  dart.addTypeTests(automatic_keep_alive.AutomaticKeepAliveClientMixin, _is_AutomaticKeepAliveClientMixin_default);
  automatic_keep_alive._NullWidget = class _NullWidget extends framework.StatelessWidget {
    build(context) {
      if (context == null) dart.nullFailed(L100, 405, 29, "context");
      dart.throw(assertions.FlutterError.new("Widgets that mix AutomaticKeepAliveClientMixin into their State must " + "call super.build() but must ignore the return value of the superclass."));
    }
  };
  (automatic_keep_alive._NullWidget.new = function(opts) {
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    automatic_keep_alive._NullWidget.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = automatic_keep_alive._NullWidget.prototype;
  dart.addTypeTests(automatic_keep_alive._NullWidget);
  dart.addTypeCaches(automatic_keep_alive._NullWidget);
  dart.setMethodSignature(automatic_keep_alive._NullWidget, () => ({
    __proto__: dart.getMethods(automatic_keep_alive._NullWidget.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(automatic_keep_alive._NullWidget, L99);
  var _name$18 = dart.privateName(autofill$, "_name");
  var C909;
  var C910;
  var C911;
  autofill$.AutofillContextAction = class AutofillContextAction extends core.Object {
    toString() {
      return this[_name$18];
    }
  };
  (autofill$.AutofillContextAction.new = function(index, _name) {
    if (index == null) dart.nullFailed(L101, 11, 6, "index");
    if (_name == null) dart.nullFailed(L101, 11, 6, "_name");
    this.index = index;
    this[_name$18] = _name;
    ;
  }).prototype = autofill$.AutofillContextAction.prototype;
  dart.addTypeTests(autofill$.AutofillContextAction);
  dart.addTypeCaches(autofill$.AutofillContextAction);
  dart.setLibraryUri(autofill$.AutofillContextAction, L102);
  dart.setFieldSignature(autofill$.AutofillContextAction, () => ({
    __proto__: dart.getFields(autofill$.AutofillContextAction.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$18]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(autofill$.AutofillContextAction, ['toString']);
  autofill$.AutofillContextAction.commit = C909 || CT.C909;
  autofill$.AutofillContextAction.cancel = C910 || CT.C910;
  autofill$.AutofillContextAction.values = C911 || CT.C911;
  var _scope = dart.privateName(autofill$, "_scope");
  var child$33 = dart.privateName(autofill$, "AutofillGroup.child");
  var onDisposeAction$ = dart.privateName(autofill$, "AutofillGroup.onDisposeAction");
  autofill$.AutofillGroup = class AutofillGroup extends framework.StatefulWidget {
    get child() {
      return this[child$33];
    }
    set child(value) {
      super.child = value;
    }
    get onDisposeAction() {
      return this[onDisposeAction$];
    }
    set onDisposeAction(value) {
      super.onDisposeAction = value;
    }
    static of(context) {
      let t66;
      if (context == null) dart.nullFailed(L101, 167, 46, "context");
      let scope = context.dependOnInheritedWidgetOfExactType(autofill$._AutofillScope);
      t66 = scope;
      return t66 == null ? null : t66[_scope];
    }
    createState() {
      return new autofill$.AutofillGroupState.new();
    }
  };
  (autofill$.AutofillGroup.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L101, 154, 19, "child");
    let onDisposeAction = opts && 'onDisposeAction' in opts ? opts.onDisposeAction : C909 || CT.C909;
    if (onDisposeAction == null) dart.nullFailed(L101, 155, 10, "onDisposeAction");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$33] = child;
    this[onDisposeAction$] = onDisposeAction;
    if (!(child != null)) dart.assertFailed(null, L101, 156, 15, "child != null");
    autofill$.AutofillGroup.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = autofill$.AutofillGroup.prototype;
  dart.addTypeTests(autofill$.AutofillGroup);
  dart.addTypeCaches(autofill$.AutofillGroup);
  dart.setMethodSignature(autofill$.AutofillGroup, () => ({
    __proto__: dart.getMethods(autofill$.AutofillGroup.__proto__),
    createState: dart.fnType(autofill$.AutofillGroupState, [])
  }));
  dart.setLibraryUri(autofill$.AutofillGroup, L102);
  dart.setFieldSignature(autofill$.AutofillGroup, () => ({
    __proto__: dart.getFields(autofill$.AutofillGroup.__proto__),
    child: dart.finalFieldType(framework.Widget),
    onDisposeAction: dart.finalFieldType(autofill$.AutofillContextAction)
  }));
  var _clients = dart.privateName(autofill$, "_clients");
  var _isTopmostAutofillGroup = dart.privateName(autofill$, "_isTopmostAutofillGroup");
  var C914;
  var C915;
  var C913;
  var C912;
  const State_AutofillScopeMixin$36 = class State_AutofillScopeMixin extends framework.State$(autofill$.AutofillGroup) {};
  (State_AutofillScopeMixin$36.new = function() {
    State_AutofillScopeMixin$36.__proto__.new.call(this);
  }).prototype = State_AutofillScopeMixin$36.prototype;
  dart.applyMixin(State_AutofillScopeMixin$36, autofill.AutofillScopeMixin);
  autofill$.AutofillGroupState = class AutofillGroupState extends State_AutofillScopeMixin$36 {
    getAutofillClient(tag) {
      if (tag == null) dart.nullFailed(L101, 215, 44, "tag");
      return this[_clients][$_get](tag);
    }
    get autofillClients() {
      return this[_clients][$values][$where](dart.fn(client => {
        if (client == null) dart.nullFailed(L101, 220, 30, "client");
        return client.textInputConfiguration.autofillConfiguration != null;
      }, AutofillClientTobool()));
    }
    register(client) {
      if (client == null) dart.nullFailed(L101, 233, 32, "client");
      if (!(client != null)) dart.assertFailed(null, L101, 234, 12, "client != null");
      this[_clients][$putIfAbsent](client.autofillId, dart.fn(() => client, VoidToAutofillClient()));
    }
    unregister(autofillId) {
      if (autofillId == null) dart.nullFailed(L101, 252, 26, "autofillId");
      if (!(autofillId != null && dart.test(this[_clients][$containsKey](autofillId)))) dart.assertFailed(null, L101, 253, 12, "autofillId != null && _clients.containsKey(autofillId)");
      this[_clients][$remove](autofillId);
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this[_isTopmostAutofillGroup] = autofill$.AutofillGroup.of(this.context) == null;
    }
    build(context) {
      if (context == null) dart.nullFailed(L101, 264, 29, "context");
      return new autofill$._AutofillScope.new({autofillScopeState: this, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C912 || CT.C912});
    }
    dispose() {
      super.dispose();
      if (!dart.test(this[_isTopmostAutofillGroup]) || this.widget.onDisposeAction == null) return;
      switch (this.widget.onDisposeAction) {
        case C910 || CT.C910:
        {
          text_input.TextInput.finishAutofillContext({shouldSave: false});
          break;
        }
        case C909 || CT.C909:
        {
          text_input.TextInput.finishAutofillContext({shouldSave: true});
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
  };
  (autofill$.AutofillGroupState.new = function() {
    this[_clients] = new (IdentityMapOfString$AutofillClient()).new();
    this[_isTopmostAutofillGroup] = false;
    autofill$.AutofillGroupState.__proto__.new.call(this);
    ;
  }).prototype = autofill$.AutofillGroupState.prototype;
  dart.addTypeTests(autofill$.AutofillGroupState);
  dart.addTypeCaches(autofill$.AutofillGroupState);
  dart.setMethodSignature(autofill$.AutofillGroupState, () => ({
    __proto__: dart.getMethods(autofill$.AutofillGroupState.__proto__),
    getAutofillClient: dart.fnType(dart.nullable(autofill.AutofillClient), [core.String]),
    register: dart.fnType(dart.void, [autofill.AutofillClient]),
    unregister: dart.fnType(dart.void, [core.String]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(autofill$.AutofillGroupState, () => ({
    __proto__: dart.getGetters(autofill$.AutofillGroupState.__proto__),
    autofillClients: core.Iterable$(autofill.AutofillClient)
  }));
  dart.setLibraryUri(autofill$.AutofillGroupState, L102);
  dart.setFieldSignature(autofill$.AutofillGroupState, () => ({
    __proto__: dart.getFields(autofill$.AutofillGroupState.__proto__),
    [_clients]: dart.finalFieldType(core.Map$(core.String, autofill.AutofillClient)),
    [_isTopmostAutofillGroup]: dart.fieldType(core.bool)
  }));
  var _scope$ = dart.privateName(autofill$, "_AutofillScope._scope");
  autofill$._AutofillScope = class _AutofillScope extends framework.InheritedWidget {
    get [_scope]() {
      return this[_scope$];
    }
    set [_scope](value) {
      super[_scope] = value;
    }
    get client() {
      return dart.nullCheck(this[_scope]).widget;
    }
    updateShouldNotify(old) {
      autofill$._AutofillScope.as(old);
      if (old == null) dart.nullFailed(L101, 301, 42, "old");
      return !dart.equals(this[_scope], old[_scope]);
    }
  };
  (autofill$._AutofillScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L101, 291, 21, "child");
    let autofillScopeState = opts && 'autofillScopeState' in opts ? opts.autofillScopeState : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[_scope$] = autofillScopeState;
    autofill$._AutofillScope.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = autofill$._AutofillScope.prototype;
  dart.addTypeTests(autofill$._AutofillScope);
  dart.addTypeCaches(autofill$._AutofillScope);
  dart.setMethodSignature(autofill$._AutofillScope, () => ({
    __proto__: dart.getMethods(autofill$._AutofillScope.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(autofill$._AutofillScope, () => ({
    __proto__: dart.getGetters(autofill$._AutofillScope.__proto__),
    client: autofill$.AutofillGroup
  }));
  dart.setLibraryUri(autofill$._AutofillScope, L102);
  dart.setFieldSignature(autofill$._AutofillScope, () => ({
    __proto__: dart.getFields(autofill$._AutofillScope.__proto__),
    [_scope]: dart.finalFieldType(dart.nullable(autofill$.AutofillGroupState))
  }));
  var copy$ = dart.privateName(editable_text, "ToolbarOptions.copy");
  var cut$ = dart.privateName(editable_text, "ToolbarOptions.cut");
  var paste$ = dart.privateName(editable_text, "ToolbarOptions.paste");
  var selectAll$ = dart.privateName(editable_text, "ToolbarOptions.selectAll");
  editable_text.ToolbarOptions = class ToolbarOptions extends core.Object {
    get copy() {
      return this[copy$];
    }
    set copy(value) {
      super.copy = value;
    }
    get cut() {
      return this[cut$];
    }
    set cut(value) {
      super.cut = value;
    }
    get paste() {
      return this[paste$];
    }
    set paste(value) {
      super.paste = value;
    }
    get selectAll() {
      return this[selectAll$];
    }
    set selectAll(value) {
      super.selectAll = value;
    }
  };
  (editable_text.ToolbarOptions.new = function(opts) {
    let copy = opts && 'copy' in opts ? opts.copy : false;
    if (copy == null) dart.nullFailed(L60, 282, 10, "copy");
    let cut = opts && 'cut' in opts ? opts.cut : false;
    if (cut == null) dart.nullFailed(L60, 283, 10, "cut");
    let paste = opts && 'paste' in opts ? opts.paste : false;
    if (paste == null) dart.nullFailed(L60, 284, 10, "paste");
    let selectAll = opts && 'selectAll' in opts ? opts.selectAll : false;
    if (selectAll == null) dart.nullFailed(L60, 285, 10, "selectAll");
    this[copy$] = copy;
    this[cut$] = cut;
    this[paste$] = paste;
    this[selectAll$] = selectAll;
    if (!(copy != null)) dart.assertFailed(null, L60, 286, 15, "copy != null");
    if (!(cut != null)) dart.assertFailed(null, L60, 287, 15, "cut != null");
    if (!(paste != null)) dart.assertFailed(null, L60, 288, 15, "paste != null");
    if (!(selectAll != null)) dart.assertFailed(null, L60, 289, 15, "selectAll != null");
    ;
  }).prototype = editable_text.ToolbarOptions.prototype;
  dart.addTypeTests(editable_text.ToolbarOptions);
  dart.addTypeCaches(editable_text.ToolbarOptions);
  dart.setLibraryUri(editable_text.ToolbarOptions, L61);
  dart.setFieldSignature(editable_text.ToolbarOptions, () => ({
    __proto__: dart.getFields(editable_text.ToolbarOptions.__proto__),
    copy: dart.finalFieldType(core.bool),
    cut: dart.finalFieldType(core.bool),
    paste: dart.finalFieldType(core.bool),
    selectAll: dart.finalFieldType(core.bool)
  }));
  var C916;
  var _name$19 = dart.privateName(text_input, "_name");
  var C917;
  var C918;
  var C919;
  var C920;
  var C921;
  var _strutStyle = dart.privateName(editable_text, "_strutStyle");
  var C922;
  var TextInputType_decimal = dart.privateName(text_input, "TextInputType.decimal");
  var TextInputType_signed = dart.privateName(text_input, "TextInputType.signed");
  var TextInputType_index = dart.privateName(text_input, "TextInputType.index");
  var C924;
  var C925;
  var C926;
  var C927;
  var C928;
  var C923;
  var C930;
  var C931;
  var C932;
  var C933;
  var C929;
  var controller$2 = dart.privateName(editable_text, "EditableText.controller");
  var focusNode$ = dart.privateName(editable_text, "EditableText.focusNode");
  var obscuringCharacter$ = dart.privateName(editable_text, "EditableText.obscuringCharacter");
  var obscureText$ = dart.privateName(editable_text, "EditableText.obscureText");
  var textHeightBehavior$2 = dart.privateName(editable_text, "EditableText.textHeightBehavior");
  var textWidthBasis$1 = dart.privateName(editable_text, "EditableText.textWidthBasis");
  var readOnly$ = dart.privateName(editable_text, "EditableText.readOnly");
  var forceLine$ = dart.privateName(editable_text, "EditableText.forceLine");
  var toolbarOptions$ = dart.privateName(editable_text, "EditableText.toolbarOptions");
  var showSelectionHandles$ = dart.privateName(editable_text, "EditableText.showSelectionHandles");
  var showCursor$ = dart.privateName(editable_text, "EditableText.showCursor");
  var autocorrect$ = dart.privateName(editable_text, "EditableText.autocorrect");
  var smartDashesType$ = dart.privateName(editable_text, "EditableText.smartDashesType");
  var smartQuotesType$ = dart.privateName(editable_text, "EditableText.smartQuotesType");
  var enableSuggestions$ = dart.privateName(editable_text, "EditableText.enableSuggestions");
  var style$1 = dart.privateName(editable_text, "EditableText.style");
  var textAlign$2 = dart.privateName(editable_text, "EditableText.textAlign");
  var textDirection$3 = dart.privateName(editable_text, "EditableText.textDirection");
  var textCapitalization$ = dart.privateName(editable_text, "EditableText.textCapitalization");
  var locale$2 = dart.privateName(editable_text, "EditableText.locale");
  var textScaleFactor$1 = dart.privateName(editable_text, "EditableText.textScaleFactor");
  var cursorColor$ = dart.privateName(editable_text, "EditableText.cursorColor");
  var autocorrectionTextRectColor$ = dart.privateName(editable_text, "EditableText.autocorrectionTextRectColor");
  var backgroundCursorColor$ = dart.privateName(editable_text, "EditableText.backgroundCursorColor");
  var maxLines$2 = dart.privateName(editable_text, "EditableText.maxLines");
  var minLines$ = dart.privateName(editable_text, "EditableText.minLines");
  var expands$ = dart.privateName(editable_text, "EditableText.expands");
  var autofocus$ = dart.privateName(editable_text, "EditableText.autofocus");
  var selectionColor$ = dart.privateName(editable_text, "EditableText.selectionColor");
  var selectionControls$1 = dart.privateName(editable_text, "EditableText.selectionControls");
  var keyboardType$ = dart.privateName(editable_text, "EditableText.keyboardType");
  var textInputAction$ = dart.privateName(editable_text, "EditableText.textInputAction");
  var onChanged$ = dart.privateName(editable_text, "EditableText.onChanged");
  var onEditingComplete$ = dart.privateName(editable_text, "EditableText.onEditingComplete");
  var onSubmitted$ = dart.privateName(editable_text, "EditableText.onSubmitted");
  var onAppPrivateCommand$ = dart.privateName(editable_text, "EditableText.onAppPrivateCommand");
  var onSelectionChanged$ = dart.privateName(editable_text, "EditableText.onSelectionChanged");
  var onSelectionHandleTapped$1 = dart.privateName(editable_text, "EditableText.onSelectionHandleTapped");
  var inputFormatters$ = dart.privateName(editable_text, "EditableText.inputFormatters");
  var mouseCursor$ = dart.privateName(editable_text, "EditableText.mouseCursor");
  var rendererIgnoresPointer$ = dart.privateName(editable_text, "EditableText.rendererIgnoresPointer");
  var cursorWidth$ = dart.privateName(editable_text, "EditableText.cursorWidth");
  var cursorHeight$ = dart.privateName(editable_text, "EditableText.cursorHeight");
  var cursorRadius$ = dart.privateName(editable_text, "EditableText.cursorRadius");
  var cursorOpacityAnimates$ = dart.privateName(editable_text, "EditableText.cursorOpacityAnimates");
  var cursorOffset$ = dart.privateName(editable_text, "EditableText.cursorOffset");
  var paintCursorAboveText$ = dart.privateName(editable_text, "EditableText.paintCursorAboveText");
  var selectionHeightStyle$ = dart.privateName(editable_text, "EditableText.selectionHeightStyle");
  var selectionWidthStyle$ = dart.privateName(editable_text, "EditableText.selectionWidthStyle");
  var keyboardAppearance$ = dart.privateName(editable_text, "EditableText.keyboardAppearance");
  var scrollPadding$ = dart.privateName(editable_text, "EditableText.scrollPadding");
  var enableInteractiveSelection$ = dart.privateName(editable_text, "EditableText.enableInteractiveSelection");
  var dragStartBehavior$3 = dart.privateName(editable_text, "EditableText.dragStartBehavior");
  var scrollController$ = dart.privateName(editable_text, "EditableText.scrollController");
  var scrollPhysics$ = dart.privateName(editable_text, "EditableText.scrollPhysics");
  var autofillHints$ = dart.privateName(editable_text, "EditableText.autofillHints");
  var clipBehavior$3 = dart.privateName(editable_text, "EditableText.clipBehavior");
  var restorationId$3 = dart.privateName(editable_text, "EditableText.restorationId");
  editable_text.EditableText = class EditableText extends framework.StatefulWidget {
    get controller() {
      return this[controller$2];
    }
    set controller(value) {
      super.controller = value;
    }
    get focusNode() {
      return this[focusNode$];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get obscuringCharacter() {
      return this[obscuringCharacter$];
    }
    set obscuringCharacter(value) {
      super.obscuringCharacter = value;
    }
    get obscureText() {
      return this[obscureText$];
    }
    set obscureText(value) {
      super.obscureText = value;
    }
    get textHeightBehavior() {
      return this[textHeightBehavior$2];
    }
    set textHeightBehavior(value) {
      super.textHeightBehavior = value;
    }
    get textWidthBasis() {
      return this[textWidthBasis$1];
    }
    set textWidthBasis(value) {
      super.textWidthBasis = value;
    }
    get readOnly() {
      return this[readOnly$];
    }
    set readOnly(value) {
      super.readOnly = value;
    }
    get forceLine() {
      return this[forceLine$];
    }
    set forceLine(value) {
      super.forceLine = value;
    }
    get toolbarOptions() {
      return this[toolbarOptions$];
    }
    set toolbarOptions(value) {
      super.toolbarOptions = value;
    }
    get showSelectionHandles() {
      return this[showSelectionHandles$];
    }
    set showSelectionHandles(value) {
      super.showSelectionHandles = value;
    }
    get showCursor() {
      return this[showCursor$];
    }
    set showCursor(value) {
      super.showCursor = value;
    }
    get autocorrect() {
      return this[autocorrect$];
    }
    set autocorrect(value) {
      super.autocorrect = value;
    }
    get smartDashesType() {
      return this[smartDashesType$];
    }
    set smartDashesType(value) {
      super.smartDashesType = value;
    }
    get smartQuotesType() {
      return this[smartQuotesType$];
    }
    set smartQuotesType(value) {
      super.smartQuotesType = value;
    }
    get enableSuggestions() {
      return this[enableSuggestions$];
    }
    set enableSuggestions(value) {
      super.enableSuggestions = value;
    }
    get style() {
      return this[style$1];
    }
    set style(value) {
      super.style = value;
    }
    get textAlign() {
      return this[textAlign$2];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get textDirection() {
      return this[textDirection$3];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get textCapitalization() {
      return this[textCapitalization$];
    }
    set textCapitalization(value) {
      super.textCapitalization = value;
    }
    get locale() {
      return this[locale$2];
    }
    set locale(value) {
      super.locale = value;
    }
    get textScaleFactor() {
      return this[textScaleFactor$1];
    }
    set textScaleFactor(value) {
      super.textScaleFactor = value;
    }
    get cursorColor() {
      return this[cursorColor$];
    }
    set cursorColor(value) {
      super.cursorColor = value;
    }
    get autocorrectionTextRectColor() {
      return this[autocorrectionTextRectColor$];
    }
    set autocorrectionTextRectColor(value) {
      super.autocorrectionTextRectColor = value;
    }
    get backgroundCursorColor() {
      return this[backgroundCursorColor$];
    }
    set backgroundCursorColor(value) {
      super.backgroundCursorColor = value;
    }
    get maxLines() {
      return this[maxLines$2];
    }
    set maxLines(value) {
      super.maxLines = value;
    }
    get minLines() {
      return this[minLines$];
    }
    set minLines(value) {
      super.minLines = value;
    }
    get expands() {
      return this[expands$];
    }
    set expands(value) {
      super.expands = value;
    }
    get autofocus() {
      return this[autofocus$];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get selectionColor() {
      return this[selectionColor$];
    }
    set selectionColor(value) {
      super.selectionColor = value;
    }
    get selectionControls() {
      return this[selectionControls$1];
    }
    set selectionControls(value) {
      super.selectionControls = value;
    }
    get keyboardType() {
      return this[keyboardType$];
    }
    set keyboardType(value) {
      super.keyboardType = value;
    }
    get textInputAction() {
      return this[textInputAction$];
    }
    set textInputAction(value) {
      super.textInputAction = value;
    }
    get onChanged() {
      return this[onChanged$];
    }
    set onChanged(value) {
      super.onChanged = value;
    }
    get onEditingComplete() {
      return this[onEditingComplete$];
    }
    set onEditingComplete(value) {
      super.onEditingComplete = value;
    }
    get onSubmitted() {
      return this[onSubmitted$];
    }
    set onSubmitted(value) {
      super.onSubmitted = value;
    }
    get onAppPrivateCommand() {
      return this[onAppPrivateCommand$];
    }
    set onAppPrivateCommand(value) {
      super.onAppPrivateCommand = value;
    }
    get onSelectionChanged() {
      return this[onSelectionChanged$];
    }
    set onSelectionChanged(value) {
      super.onSelectionChanged = value;
    }
    get onSelectionHandleTapped() {
      return this[onSelectionHandleTapped$1];
    }
    set onSelectionHandleTapped(value) {
      super.onSelectionHandleTapped = value;
    }
    get inputFormatters() {
      return this[inputFormatters$];
    }
    set inputFormatters(value) {
      super.inputFormatters = value;
    }
    get mouseCursor() {
      return this[mouseCursor$];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get rendererIgnoresPointer() {
      return this[rendererIgnoresPointer$];
    }
    set rendererIgnoresPointer(value) {
      super.rendererIgnoresPointer = value;
    }
    get cursorWidth() {
      return this[cursorWidth$];
    }
    set cursorWidth(value) {
      super.cursorWidth = value;
    }
    get cursorHeight() {
      return this[cursorHeight$];
    }
    set cursorHeight(value) {
      super.cursorHeight = value;
    }
    get cursorRadius() {
      return this[cursorRadius$];
    }
    set cursorRadius(value) {
      super.cursorRadius = value;
    }
    get cursorOpacityAnimates() {
      return this[cursorOpacityAnimates$];
    }
    set cursorOpacityAnimates(value) {
      super.cursorOpacityAnimates = value;
    }
    get cursorOffset() {
      return this[cursorOffset$];
    }
    set cursorOffset(value) {
      super.cursorOffset = value;
    }
    get paintCursorAboveText() {
      return this[paintCursorAboveText$];
    }
    set paintCursorAboveText(value) {
      super.paintCursorAboveText = value;
    }
    get selectionHeightStyle() {
      return this[selectionHeightStyle$];
    }
    set selectionHeightStyle(value) {
      super.selectionHeightStyle = value;
    }
    get selectionWidthStyle() {
      return this[selectionWidthStyle$];
    }
    set selectionWidthStyle(value) {
      super.selectionWidthStyle = value;
    }
    get keyboardAppearance() {
      return this[keyboardAppearance$];
    }
    set keyboardAppearance(value) {
      super.keyboardAppearance = value;
    }
    get scrollPadding() {
      return this[scrollPadding$];
    }
    set scrollPadding(value) {
      super.scrollPadding = value;
    }
    get enableInteractiveSelection() {
      return this[enableInteractiveSelection$];
    }
    set enableInteractiveSelection(value) {
      super.enableInteractiveSelection = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$3];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get scrollController() {
      return this[scrollController$];
    }
    set scrollController(value) {
      super.scrollController = value;
    }
    get scrollPhysics() {
      return this[scrollPhysics$];
    }
    set scrollPhysics(value) {
      super.scrollPhysics = value;
    }
    get autofillHints() {
      return this[autofillHints$];
    }
    set autofillHints(value) {
      super.autofillHints = value;
    }
    get clipBehavior() {
      return this[clipBehavior$3];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get restorationId() {
      return this[restorationId$3];
    }
    set restorationId(value) {
      super.restorationId = value;
    }
    get strutStyle() {
      if (this[_strutStyle] == null) {
        return new strut_style.StrutStyle.fromTextStyle(this.style, {forceStrutHeight: true});
      }
      return dart.nullCheck(this[_strutStyle]).inheritFromTextStyle(this.style);
    }
    get selectionEnabled() {
      return this.enableInteractiveSelection;
    }
    static _inferKeyboardType(opts) {
      let t68, t68$, t68$0, t68$1;
      let autofillHints = opts && 'autofillHints' in opts ? opts.autofillHints : null;
      let maxLines = opts && 'maxLines' in opts ? opts.maxLines : null;
      if (dart.test((t68$ = (t68 = autofillHints, t68 == null ? null : t68[$isEmpty]), t68$ == null ? true : t68$))) {
        return maxLines === 1 ? text_input.TextInputType.text : text_input.TextInputType.multiline;
      }
      let returnValue = null;
      let effectiveHint = dart.nullCheck(autofillHints)[$first];
      if (!true) {
        switch (platform.defaultTargetPlatform) {
          case C103 || CT.C103:
          case C104 || CT.C104:
          {
            let iOSKeyboardType = C923 || CT.C923;
            returnValue = iOSKeyboardType[$_get](effectiveHint);
            break;
          }
          case C99 || CT.C99:
          case C100 || CT.C100:
          case C101 || CT.C101:
          case C102 || CT.C102:
          {
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      if (returnValue != null || maxLines !== 1) {
        t68$0 = returnValue;
        return t68$0 == null ? text_input.TextInputType.multiline : t68$0;
      }
      let inferKeyboardType = C929 || CT.C929;
      t68$1 = inferKeyboardType[$_get](effectiveHint);
      return t68$1 == null ? text_input.TextInputType.text : t68$1;
    }
    createState() {
      return new editable_text.EditableTextState.new();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L60, 1399, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfTextEditingController()).new("controller", this.controller));
      properties.add(new (DiagnosticsPropertyOfFocusNode()).new("focusNode", this.focusNode));
      properties.add(new (DiagnosticsPropertyOfbool()).new("obscureText", this.obscureText, {defaultValue: false}));
      properties.add(new (DiagnosticsPropertyOfbool()).new("autocorrect", this.autocorrect, {defaultValue: true}));
      properties.add(new (EnumPropertyOfSmartDashesType()).new("smartDashesType", this.smartDashesType, {defaultValue: dart.test(this.obscureText) ? text_input.SmartDashesType.disabled : text_input.SmartDashesType.enabled}));
      properties.add(new (EnumPropertyOfSmartQuotesType()).new("smartQuotesType", this.smartQuotesType, {defaultValue: dart.test(this.obscureText) ? text_input.SmartQuotesType.disabled : text_input.SmartQuotesType.enabled}));
      properties.add(new (DiagnosticsPropertyOfbool()).new("enableSuggestions", this.enableSuggestions, {defaultValue: true}));
      this.style.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfTextAlign()).new("textAlign", this.textAlign, {defaultValue: null}));
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfLocale()).new("locale", this.locale, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("textScaleFactor", this.textScaleFactor, {defaultValue: null}));
      properties.add(new diagnostics$.IntProperty.new("maxLines", this.maxLines, {defaultValue: 1}));
      properties.add(new diagnostics$.IntProperty.new("minLines", this.minLines, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfbool()).new("expands", this.expands, {defaultValue: false}));
      properties.add(new (DiagnosticsPropertyOfbool()).new("autofocus", this.autofocus, {defaultValue: false}));
      properties.add(new (DiagnosticsPropertyOfTextInputType()).new("keyboardType", this.keyboardType, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfScrollController()).new("scrollController", this.scrollController, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfScrollPhysics()).new("scrollPhysics", this.scrollPhysics, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfIterableOfString()).new("autofillHints", this.autofillHints, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfTextHeightBehavior()).new("textHeightBehavior", this.textHeightBehavior, {defaultValue: null}));
    }
  };
  (editable_text.EditableText.new = function(opts) {
    let t66, t66$, t66$0, t67, t68;
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    if (controller == null) dart.nullFailed(L60, 408, 19, "controller");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    if (focusNode == null) dart.nullFailed(L60, 409, 19, "focusNode");
    let readOnly = opts && 'readOnly' in opts ? opts.readOnly : false;
    if (readOnly == null) dart.nullFailed(L60, 410, 10, "readOnly");
    let obscuringCharacter = opts && 'obscuringCharacter' in opts ? opts.obscuringCharacter : "•";
    if (obscuringCharacter == null) dart.nullFailed(L60, 411, 10, "obscuringCharacter");
    let obscureText = opts && 'obscureText' in opts ? opts.obscureText : false;
    if (obscureText == null) dart.nullFailed(L60, 412, 10, "obscureText");
    let autocorrect = opts && 'autocorrect' in opts ? opts.autocorrect : true;
    if (autocorrect == null) dart.nullFailed(L60, 413, 10, "autocorrect");
    let smartDashesType = opts && 'smartDashesType' in opts ? opts.smartDashesType : null;
    let smartQuotesType = opts && 'smartQuotesType' in opts ? opts.smartQuotesType : null;
    let enableSuggestions = opts && 'enableSuggestions' in opts ? opts.enableSuggestions : true;
    if (enableSuggestions == null) dart.nullFailed(L60, 416, 10, "enableSuggestions");
    let style = opts && 'style' in opts ? opts.style : null;
    if (style == null) dart.nullFailed(L60, 417, 19, "style");
    let strutStyle = opts && 'strutStyle' in opts ? opts.strutStyle : null;
    let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
    if (cursorColor == null) dart.nullFailed(L60, 419, 19, "cursorColor");
    let backgroundCursorColor = opts && 'backgroundCursorColor' in opts ? opts.backgroundCursorColor : null;
    if (backgroundCursorColor == null) dart.nullFailed(L60, 420, 19, "backgroundCursorColor");
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : C916 || CT.C916;
    if (textAlign == null) dart.nullFailed(L60, 421, 10, "textAlign");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
    let maxLines = opts && 'maxLines' in opts ? opts.maxLines : 1;
    let minLines = opts && 'minLines' in opts ? opts.minLines : null;
    let expands = opts && 'expands' in opts ? opts.expands : false;
    if (expands == null) dart.nullFailed(L60, 427, 10, "expands");
    let forceLine = opts && 'forceLine' in opts ? opts.forceLine : true;
    if (forceLine == null) dart.nullFailed(L60, 428, 10, "forceLine");
    let textHeightBehavior = opts && 'textHeightBehavior' in opts ? opts.textHeightBehavior : null;
    let textWidthBasis = opts && 'textWidthBasis' in opts ? opts.textWidthBasis : C586 || CT.C586;
    if (textWidthBasis == null) dart.nullFailed(L60, 430, 10, "textWidthBasis");
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(L60, 431, 10, "autofocus");
    let showCursor = opts && 'showCursor' in opts ? opts.showCursor : null;
    let showSelectionHandles = opts && 'showSelectionHandles' in opts ? opts.showSelectionHandles : false;
    if (showSelectionHandles == null) dart.nullFailed(L60, 433, 10, "showSelectionHandles");
    let selectionColor = opts && 'selectionColor' in opts ? opts.selectionColor : null;
    let selectionControls = opts && 'selectionControls' in opts ? opts.selectionControls : null;
    let keyboardType = opts && 'keyboardType' in opts ? opts.keyboardType : null;
    let textInputAction = opts && 'textInputAction' in opts ? opts.textInputAction : null;
    let textCapitalization = opts && 'textCapitalization' in opts ? opts.textCapitalization : C917 || CT.C917;
    if (textCapitalization == null) dart.nullFailed(L60, 438, 10, "textCapitalization");
    let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
    let onEditingComplete = opts && 'onEditingComplete' in opts ? opts.onEditingComplete : null;
    let onSubmitted = opts && 'onSubmitted' in opts ? opts.onSubmitted : null;
    let onAppPrivateCommand = opts && 'onAppPrivateCommand' in opts ? opts.onAppPrivateCommand : null;
    let onSelectionChanged = opts && 'onSelectionChanged' in opts ? opts.onSelectionChanged : null;
    let onSelectionHandleTapped = opts && 'onSelectionHandleTapped' in opts ? opts.onSelectionHandleTapped : null;
    let inputFormatters = opts && 'inputFormatters' in opts ? opts.inputFormatters : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let rendererIgnoresPointer = opts && 'rendererIgnoresPointer' in opts ? opts.rendererIgnoresPointer : false;
    if (rendererIgnoresPointer == null) dart.nullFailed(L60, 447, 10, "rendererIgnoresPointer");
    let cursorWidth = opts && 'cursorWidth' in opts ? opts.cursorWidth : 2;
    if (cursorWidth == null) dart.nullFailed(L60, 448, 10, "cursorWidth");
    let cursorHeight = opts && 'cursorHeight' in opts ? opts.cursorHeight : null;
    let cursorRadius = opts && 'cursorRadius' in opts ? opts.cursorRadius : null;
    let cursorOpacityAnimates = opts && 'cursorOpacityAnimates' in opts ? opts.cursorOpacityAnimates : false;
    if (cursorOpacityAnimates == null) dart.nullFailed(L60, 451, 10, "cursorOpacityAnimates");
    let cursorOffset = opts && 'cursorOffset' in opts ? opts.cursorOffset : null;
    let paintCursorAboveText = opts && 'paintCursorAboveText' in opts ? opts.paintCursorAboveText : false;
    if (paintCursorAboveText == null) dart.nullFailed(L60, 453, 10, "paintCursorAboveText");
    let selectionHeightStyle = opts && 'selectionHeightStyle' in opts ? opts.selectionHeightStyle : C918 || CT.C918;
    if (selectionHeightStyle == null) dart.nullFailed(L60, 454, 10, "selectionHeightStyle");
    let selectionWidthStyle = opts && 'selectionWidthStyle' in opts ? opts.selectionWidthStyle : C919 || CT.C919;
    if (selectionWidthStyle == null) dart.nullFailed(L60, 455, 10, "selectionWidthStyle");
    let scrollPadding = opts && 'scrollPadding' in opts ? opts.scrollPadding : C920 || CT.C920;
    if (scrollPadding == null) dart.nullFailed(L60, 456, 10, "scrollPadding");
    let keyboardAppearance = opts && 'keyboardAppearance' in opts ? opts.keyboardAppearance : C773 || CT.C773;
    if (keyboardAppearance == null) dart.nullFailed(L60, 457, 10, "keyboardAppearance");
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C492 || CT.C492;
    if (dragStartBehavior == null) dart.nullFailed(L60, 458, 10, "dragStartBehavior");
    let enableInteractiveSelection = opts && 'enableInteractiveSelection' in opts ? opts.enableInteractiveSelection : true;
    if (enableInteractiveSelection == null) dart.nullFailed(L60, 459, 10, "enableInteractiveSelection");
    let scrollController = opts && 'scrollController' in opts ? opts.scrollController : null;
    let scrollPhysics = opts && 'scrollPhysics' in opts ? opts.scrollPhysics : null;
    let autocorrectionTextRectColor = opts && 'autocorrectionTextRectColor' in opts ? opts.autocorrectionTextRectColor : null;
    let toolbarOptions = opts && 'toolbarOptions' in opts ? opts.toolbarOptions : C921 || CT.C921;
    if (toolbarOptions == null) dart.nullFailed(L60, 463, 10, "toolbarOptions");
    let autofillHints = opts && 'autofillHints' in opts ? opts.autofillHints : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C470 || CT.C470;
    if (clipBehavior == null) dart.nullFailed(L60, 470, 10, "clipBehavior");
    let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$2] = controller;
    this[focusNode$] = focusNode;
    this[readOnly$] = readOnly;
    this[obscuringCharacter$] = obscuringCharacter;
    this[obscureText$] = obscureText;
    this[autocorrect$] = autocorrect;
    this[enableSuggestions$] = enableSuggestions;
    this[style$1] = style;
    this[cursorColor$] = cursorColor;
    this[backgroundCursorColor$] = backgroundCursorColor;
    this[textAlign$2] = textAlign;
    this[textDirection$3] = textDirection;
    this[locale$2] = locale;
    this[textScaleFactor$1] = textScaleFactor;
    this[maxLines$2] = maxLines;
    this[minLines$] = minLines;
    this[expands$] = expands;
    this[forceLine$] = forceLine;
    this[textHeightBehavior$2] = textHeightBehavior;
    this[textWidthBasis$1] = textWidthBasis;
    this[autofocus$] = autofocus;
    this[showSelectionHandles$] = showSelectionHandles;
    this[selectionColor$] = selectionColor;
    this[selectionControls$1] = selectionControls;
    this[textInputAction$] = textInputAction;
    this[textCapitalization$] = textCapitalization;
    this[onChanged$] = onChanged;
    this[onEditingComplete$] = onEditingComplete;
    this[onSubmitted$] = onSubmitted;
    this[onAppPrivateCommand$] = onAppPrivateCommand;
    this[onSelectionChanged$] = onSelectionChanged;
    this[onSelectionHandleTapped$1] = onSelectionHandleTapped;
    this[mouseCursor$] = mouseCursor;
    this[rendererIgnoresPointer$] = rendererIgnoresPointer;
    this[cursorWidth$] = cursorWidth;
    this[cursorHeight$] = cursorHeight;
    this[cursorRadius$] = cursorRadius;
    this[cursorOpacityAnimates$] = cursorOpacityAnimates;
    this[cursorOffset$] = cursorOffset;
    this[paintCursorAboveText$] = paintCursorAboveText;
    this[selectionHeightStyle$] = selectionHeightStyle;
    this[selectionWidthStyle$] = selectionWidthStyle;
    this[scrollPadding$] = scrollPadding;
    this[keyboardAppearance$] = keyboardAppearance;
    this[dragStartBehavior$3] = dragStartBehavior;
    this[enableInteractiveSelection$] = enableInteractiveSelection;
    this[scrollController$] = scrollController;
    this[scrollPhysics$] = scrollPhysics;
    this[autocorrectionTextRectColor$] = autocorrectionTextRectColor;
    this[toolbarOptions$] = toolbarOptions;
    this[autofillHints$] = autofillHints;
    this[clipBehavior$3] = clipBehavior;
    this[restorationId$3] = restorationId;
    if (!(controller != null)) dart.assertFailed(null, L60, 472, 15, "controller != null");
    if (!(focusNode != null)) dart.assertFailed(null, L60, 473, 15, "focusNode != null");
    if (!(obscuringCharacter != null && obscuringCharacter.length === 1)) dart.assertFailed(null, L60, 474, 15, "obscuringCharacter != null && obscuringCharacter.length == 1");
    if (!(obscureText != null)) dart.assertFailed(null, L60, 475, 15, "obscureText != null");
    if (!(autocorrect != null)) dart.assertFailed(null, L60, 476, 15, "autocorrect != null");
    this[smartDashesType$] = (t66 = smartDashesType, t66 == null ? dart.test(obscureText) ? text_input.SmartDashesType.disabled : text_input.SmartDashesType.enabled : t66);
    this[smartQuotesType$] = (t66$ = smartQuotesType, t66$ == null ? dart.test(obscureText) ? text_input.SmartQuotesType.disabled : text_input.SmartQuotesType.enabled : t66$);
    if (!(enableSuggestions != null)) dart.assertFailed(null, L60, 479, 15, "enableSuggestions != null");
    if (!(showSelectionHandles != null)) dart.assertFailed(null, L60, 480, 15, "showSelectionHandles != null");
    if (!(enableInteractiveSelection != null)) dart.assertFailed(null, L60, 481, 15, "enableInteractiveSelection != null");
    if (!(readOnly != null)) dart.assertFailed(null, L60, 482, 15, "readOnly != null");
    if (!(forceLine != null)) dart.assertFailed(null, L60, 483, 15, "forceLine != null");
    if (!(style != null)) dart.assertFailed(null, L60, 484, 15, "style != null");
    if (!(cursorColor != null)) dart.assertFailed(null, L60, 485, 15, "cursorColor != null");
    if (!(cursorOpacityAnimates != null)) dart.assertFailed(null, L60, 486, 15, "cursorOpacityAnimates != null");
    if (!(paintCursorAboveText != null)) dart.assertFailed(null, L60, 487, 15, "paintCursorAboveText != null");
    if (!(backgroundCursorColor != null)) dart.assertFailed(null, L60, 488, 15, "backgroundCursorColor != null");
    if (!(selectionHeightStyle != null)) dart.assertFailed(null, L60, 489, 15, "selectionHeightStyle != null");
    if (!(selectionWidthStyle != null)) dart.assertFailed(null, L60, 490, 15, "selectionWidthStyle != null");
    if (!(textAlign != null)) dart.assertFailed(null, L60, 491, 15, "textAlign != null");
    if (!(maxLines == null || dart.notNull(maxLines) > 0)) dart.assertFailed(null, L60, 492, 15, "maxLines == null || maxLines > 0");
    if (!(minLines == null || dart.notNull(minLines) > 0)) dart.assertFailed(null, L60, 493, 15, "minLines == null || minLines > 0");
    if (!(maxLines == null || minLines == null || dart.notNull(maxLines) >= dart.notNull(minLines))) dart.assertFailed("minLines can't be greater than maxLines", L60, 495, 10, "(maxLines == null) || (minLines == null) || (maxLines >= minLines)");
    if (!(expands != null)) dart.assertFailed(null, L60, 498, 15, "expands != null");
    if (!(!dart.test(expands) || maxLines == null && minLines == null)) dart.assertFailed("minLines and maxLines must be null when expands is true.", L60, 500, 10, "!expands || (maxLines == null && minLines == null)");
    if (!(!dart.test(obscureText) || maxLines === 1)) dart.assertFailed("Obscured fields cannot be multiline.", L60, 503, 15, "!obscureText || maxLines == 1");
    if (!(autofocus != null)) dart.assertFailed(null, L60, 504, 15, "autofocus != null");
    if (!(rendererIgnoresPointer != null)) dart.assertFailed(null, L60, 505, 15, "rendererIgnoresPointer != null");
    if (!(scrollPadding != null)) dart.assertFailed(null, L60, 506, 15, "scrollPadding != null");
    if (!(dragStartBehavior != null)) dart.assertFailed(null, L60, 507, 15, "dragStartBehavior != null");
    if (!(toolbarOptions != null)) dart.assertFailed(null, L60, 508, 15, "toolbarOptions != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L60, 509, 15, "clipBehavior != null");
    if (!(!dart.test(readOnly) || autofillHints == null)) dart.assertFailed("Read-only fields can't have autofill hints.", L60, 511, 10, "!readOnly || autofillHints == null");
    this[_strutStyle] = strutStyle;
    this[keyboardType$] = (t66$0 = keyboardType, t66$0 == null ? editable_text.EditableText._inferKeyboardType({autofillHints: autofillHints, maxLines: maxLines}) : t66$0);
    this[inputFormatters$] = maxLines === 1 ? (() => {
      let t66 = JSArrayOfTextInputFormatter().of([]);
      t66.push(text_formatter.FilteringTextInputFormatter.singleLineFormatter);
      for (let t67$ of (t67 = inputFormatters, t67 == null ? C922 || CT.C922 : t67))
        t66.push(t67$);
      return t66;
    })() : inputFormatters;
    this[showCursor$] = (t68 = showCursor, t68 == null ? !dart.test(readOnly) : t68);
    editable_text.EditableText.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = editable_text.EditableText.prototype;
  dart.addTypeTests(editable_text.EditableText);
  dart.addTypeCaches(editable_text.EditableText);
  dart.setMethodSignature(editable_text.EditableText, () => ({
    __proto__: dart.getMethods(editable_text.EditableText.__proto__),
    createState: dart.fnType(editable_text.EditableTextState, [])
  }));
  dart.setGetterSignature(editable_text.EditableText, () => ({
    __proto__: dart.getGetters(editable_text.EditableText.__proto__),
    strutStyle: strut_style.StrutStyle,
    selectionEnabled: core.bool
  }));
  dart.setLibraryUri(editable_text.EditableText, L61);
  dart.setFieldSignature(editable_text.EditableText, () => ({
    __proto__: dart.getFields(editable_text.EditableText.__proto__),
    controller: dart.finalFieldType(editable_text.TextEditingController),
    focusNode: dart.finalFieldType(focus_manager.FocusNode),
    obscuringCharacter: dart.finalFieldType(core.String),
    obscureText: dart.finalFieldType(core.bool),
    textHeightBehavior: dart.finalFieldType(dart.nullable(ui.TextHeightBehavior)),
    textWidthBasis: dart.finalFieldType(text_painter.TextWidthBasis),
    readOnly: dart.finalFieldType(core.bool),
    forceLine: dart.finalFieldType(core.bool),
    toolbarOptions: dart.finalFieldType(editable_text.ToolbarOptions),
    showSelectionHandles: dart.finalFieldType(core.bool),
    showCursor: dart.finalFieldType(core.bool),
    autocorrect: dart.finalFieldType(core.bool),
    smartDashesType: dart.finalFieldType(text_input.SmartDashesType),
    smartQuotesType: dart.finalFieldType(text_input.SmartQuotesType),
    enableSuggestions: dart.finalFieldType(core.bool),
    style: dart.finalFieldType(text_style.TextStyle),
    [_strutStyle]: dart.finalFieldType(dart.nullable(strut_style.StrutStyle)),
    textAlign: dart.finalFieldType(ui.TextAlign),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    textCapitalization: dart.finalFieldType(text_input.TextCapitalization),
    locale: dart.finalFieldType(dart.nullable(ui.Locale)),
    textScaleFactor: dart.finalFieldType(dart.nullable(core.double)),
    cursorColor: dart.finalFieldType(ui.Color),
    autocorrectionTextRectColor: dart.finalFieldType(dart.nullable(ui.Color)),
    backgroundCursorColor: dart.finalFieldType(ui.Color),
    maxLines: dart.finalFieldType(dart.nullable(core.int)),
    minLines: dart.finalFieldType(dart.nullable(core.int)),
    expands: dart.finalFieldType(core.bool),
    autofocus: dart.finalFieldType(core.bool),
    selectionColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectionControls: dart.finalFieldType(dart.nullable(text_selection.TextSelectionControls)),
    keyboardType: dart.finalFieldType(text_input.TextInputType),
    textInputAction: dart.finalFieldType(dart.nullable(text_input.TextInputAction)),
    onChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.String]))),
    onEditingComplete: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onSubmitted: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.String]))),
    onAppPrivateCommand: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.String, core.Map$(core.String, dart.dynamic)]))),
    onSelectionChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [text_editing.TextSelection, dart.nullable(editable.SelectionChangedCause)]))),
    onSelectionHandleTapped: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    inputFormatters: dart.finalFieldType(dart.nullable(core.List$(text_formatter.TextInputFormatter))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    rendererIgnoresPointer: dart.finalFieldType(core.bool),
    cursorWidth: dart.finalFieldType(core.double),
    cursorHeight: dart.finalFieldType(dart.nullable(core.double)),
    cursorRadius: dart.finalFieldType(dart.nullable(ui.Radius)),
    cursorOpacityAnimates: dart.finalFieldType(core.bool),
    cursorOffset: dart.finalFieldType(dart.nullable(ui.Offset)),
    paintCursorAboveText: dart.finalFieldType(core.bool),
    selectionHeightStyle: dart.finalFieldType(ui.BoxHeightStyle),
    selectionWidthStyle: dart.finalFieldType(ui.BoxWidthStyle),
    keyboardAppearance: dart.finalFieldType(ui.Brightness),
    scrollPadding: dart.finalFieldType(edge_insets.EdgeInsets),
    enableInteractiveSelection: dart.finalFieldType(core.bool),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    scrollController: dart.finalFieldType(dart.nullable(scroll_controller.ScrollController)),
    scrollPhysics: dart.finalFieldType(dart.nullable(scroll_physics.ScrollPhysics)),
    autofillHints: dart.finalFieldType(dart.nullable(core.Iterable$(core.String))),
    clipBehavior: dart.finalFieldType(ui.Clip),
    restorationId: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineLazy(editable_text.EditableText, {
    /*editable_text.EditableText.debugDeterministicCursor*/get debugDeterministicCursor() {
      return false;
    },
    set debugDeterministicCursor(_) {}
  }, false);
  var _cursorTimer = dart.privateName(editable_text, "_cursorTimer");
  var _targetCursorVisibility = dart.privateName(editable_text, "_targetCursorVisibility");
  var _cursorVisibilityNotifier = dart.privateName(editable_text, "_cursorVisibilityNotifier");
  var _editableKey = dart.privateName(editable_text, "_editableKey");
  var _clipboardStatus = dart.privateName(editable_text, "_clipboardStatus");
  var _textInputConnection = dart.privateName(editable_text, "_textInputConnection");
  var _selectionOverlay = dart.privateName(editable_text, "_selectionOverlay");
  var _scrollController = dart.privateName(editable_text, "_scrollController");
  var __EditableTextState__cursorBlinkOpacityController = dart.privateName(editable_text, "_#EditableTextState#_cursorBlinkOpacityController");
  var __EditableTextState__cursorBlinkOpacityController_isSet = dart.privateName(editable_text, "_#EditableTextState#_cursorBlinkOpacityController#isSet");
  var _toolbarLayerLink = dart.privateName(editable_text, "_toolbarLayerLink");
  var _startHandleLayerLink = dart.privateName(editable_text, "_startHandleLayerLink");
  var _endHandleLayerLink = dart.privateName(editable_text, "_endHandleLayerLink");
  var _didAutoFocus = dart.privateName(editable_text, "_didAutoFocus");
  var _focusAttachment = dart.privateName(editable_text, "_focusAttachment");
  var _currentAutofillScope = dart.privateName(editable_text, "_currentAutofillScope");
  var _isInAutofillContext = dart.privateName(editable_text, "_isInAutofillContext");
  var __EditableTextState__floatingCursorResetController = dart.privateName(editable_text, "_#EditableTextState#_floatingCursorResetController");
  var __EditableTextState__floatingCursorResetController_isSet = dart.privateName(editable_text, "_#EditableTextState#_floatingCursorResetController#isSet");
  var _lastKnownRemoteTextEditingValue = dart.privateName(editable_text, "_lastKnownRemoteTextEditingValue");
  var _startCaretRect = dart.privateName(editable_text, "_startCaretRect");
  var _lastTextPosition = dart.privateName(editable_text, "_lastTextPosition");
  var _pointOffsetOrigin = dart.privateName(editable_text, "_pointOffsetOrigin");
  var _lastBoundedOffset = dart.privateName(editable_text, "_lastBoundedOffset");
  var _batchEditDepth = dart.privateName(editable_text, "_batchEditDepth");
  var _textChangedSinceLastCaretUpdate = dart.privateName(editable_text, "_textChangedSinceLastCaretUpdate");
  var _currentCaretRect = dart.privateName(editable_text, "_currentCaretRect");
  var _showCaretOnScreenScheduled = dart.privateName(editable_text, "_showCaretOnScreenScheduled");
  var __EditableTextState__lastBottomViewInset = dart.privateName(editable_text, "_#EditableTextState#_lastBottomViewInset");
  var __EditableTextState__lastBottomViewInset_isSet = dart.privateName(editable_text, "_#EditableTextState#_lastBottomViewInset#isSet");
  var __EditableTextState__whitespaceFormatter = dart.privateName(editable_text, "_#EditableTextState#_whitespaceFormatter");
  var __EditableTextState__whitespaceFormatter_isSet = dart.privateName(editable_text, "_#EditableTextState#_whitespaceFormatter#isSet");
  var _obscureShowCharTicksPending = dart.privateName(editable_text, "_obscureShowCharTicksPending");
  var _obscureLatestCharIndex = dart.privateName(editable_text, "_obscureLatestCharIndex");
  var _currentPromptRectRange = dart.privateName(editable_text, "_currentPromptRectRange");
  var _cursorBlinkOpacityController = dart.privateName(editable_text, "_cursorBlinkOpacityController");
  var _shouldCreateInputConnection = dart.privateName(editable_text, "_shouldCreateInputConnection");
  var _floatingCursorResetController = dart.privateName(editable_text, "_floatingCursorResetController");
  var _cursorColor = dart.privateName(editable_text, "_cursorColor");
  var _onChangedClipboardStatus = dart.privateName(editable_text, "_onChangedClipboardStatus");
  var _didChangeTextEditingValue = dart.privateName(editable_text, "_didChangeTextEditingValue");
  var _handleFocusChanged = dart.privateName(editable_text, "_handleFocusChanged");
  var _onCursorColorTick = dart.privateName(editable_text, "_onCursorColorTick");
  var _onFloatingCursorResetTick = dart.privateName(editable_text, "_onFloatingCursorResetTick");
  var _shouldBeInAutofillContext = dart.privateName(editable_text, "_shouldBeInAutofillContext");
  var _updateRemoteEditingValueIfNeeded = dart.privateName(editable_text, "_updateRemoteEditingValueIfNeeded");
  var _value$1 = dart.privateName(editable_text, "_value");
  var _closeInputConnectionIfNeeded = dart.privateName(editable_text, "_closeInputConnectionIfNeeded");
  var _hasFocus = dart.privateName(editable_text, "_hasFocus");
  var _openInputConnection = dart.privateName(editable_text, "_openInputConnection");
  var _hasInputConnection = dart.privateName(editable_text, "_hasInputConnection");
  var _textDirection$0 = dart.privateName(editable_text, "_textDirection");
  var _stopCursorTimer = dart.privateName(editable_text, "_stopCursorTimer");
  var _handleSelectionChanged = dart.privateName(editable_text, "_handleSelectionChanged");
  var _showCaretOnScreen = dart.privateName(editable_text, "_showCaretOnScreen");
  var _formatAndSetValue = dart.privateName(editable_text, "_formatAndSetValue");
  var _startCursorTimer = dart.privateName(editable_text, "_startCursorTimer");
  var _isMultiline = dart.privateName(editable_text, "_isMultiline");
  var _finalizeEditing = dart.privateName(editable_text, "_finalizeEditing");
  var C934;
  var C935;
  var C936;
  var C937;
  var C938;
  var C939;
  var C940;
  var C941;
  var C942;
  var C943;
  var C944;
  var C945;
  var C946;
  var _floatingCursorOffset = dart.privateName(editable_text, "_floatingCursorOffset");
  var C947;
  var C948;
  var C949;
  var C950;
  var C951;
  var _getOffsetToRevealCaret = dart.privateName(editable_text, "_getOffsetToRevealCaret");
  var _needsAutofill = dart.privateName(editable_text, "_needsAutofill");
  var _createTextInputConfiguration = dart.privateName(editable_text, "_createTextInputConfiguration");
  var _updateSizeAndTransform = dart.privateName(editable_text, "_updateSizeAndTransform");
  var _updateComposingRectIfNeeded = dart.privateName(editable_text, "_updateComposingRectIfNeeded");
  var _openOrCloseInputConnectionIfNeeded = dart.privateName(editable_text, "_openOrCloseInputConnectionIfNeeded");
  var _updateOrDisposeSelectionOverlayIfNeeded = dart.privateName(editable_text, "_updateOrDisposeSelectionOverlayIfNeeded");
  var _handleCaretChanged = dart.privateName(editable_text, "_handleCaretChanged");
  var _lastBottomViewInset = dart.privateName(editable_text, "_lastBottomViewInset");
  var _whitespaceFormatter = dart.privateName(editable_text, "_whitespaceFormatter");
  var _cursorTick = dart.privateName(editable_text, "_cursorTick");
  var _cursorWaitForStart = dart.privateName(editable_text, "_cursorWaitForStart");
  var _startOrStopCursorTimerIfNeeded = dart.privateName(editable_text, "_startOrStopCursorTimerIfNeeded");
  var _devicePixelRatio = dart.privateName(editable_text, "_devicePixelRatio");
  var _semanticsOnCopy = dart.privateName(editable_text, "_semanticsOnCopy");
  var _semanticsOnCut = dart.privateName(editable_text, "_semanticsOnCut");
  var _semanticsOnPaste = dart.privateName(editable_text, "_semanticsOnPaste");
  var C954;
  var C955;
  var C956;
  var C957;
  var C958;
  var C959;
  var C960;
  var C961;
  var C962;
  var C963;
  var C964;
  var C965;
  var C966;
  var C967;
  var C968;
  var C969;
  var C970;
  var C971;
  var C972;
  var C973;
  var C974;
  var C975;
  var C976;
  var C977;
  var C978;
  var C979;
  var C980;
  var C981;
  var C982;
  var C983;
  var C984;
  var C985;
  var C986;
  var C987;
  var C988;
  var C989;
  var C990;
  var C991;
  var C992;
  var C993;
  var C994;
  var C995;
  var C996;
  var C997;
  var C998;
  var C953;
  var C952;
  var C1001;
  var C1002;
  var C1003;
  var C1004;
  var C1000;
  var C999;
  var C1007;
  var C1008;
  var C1006;
  var C1005;
  var C1011;
  var C1012;
  var C1013;
  var C1014;
  var C1015;
  var C1016;
  var C1017;
  var C1010;
  var C1009;
  var C1020;
  var C1021;
  var C1019;
  var C1018;
  var C1022;
  var C1023;
  var C1024;
  const State_AutomaticKeepAliveClientMixin$36 = class State_AutomaticKeepAliveClientMixin extends framework.State$(editable_text.EditableText) {};
  (State_AutomaticKeepAliveClientMixin$36.new = function() {
    automatic_keep_alive.AutomaticKeepAliveClientMixin$(editable_text.EditableText)[dart.mixinNew].call(this);
    State_AutomaticKeepAliveClientMixin$36.__proto__.new.call(this);
  }).prototype = State_AutomaticKeepAliveClientMixin$36.prototype;
  dart.applyMixin(State_AutomaticKeepAliveClientMixin$36, automatic_keep_alive.AutomaticKeepAliveClientMixin$(editable_text.EditableText));
  const State_WidgetsBindingObserver$36$1 = class State_WidgetsBindingObserver extends State_AutomaticKeepAliveClientMixin$36 {};
  (State_WidgetsBindingObserver$36$1.new = function() {
    State_WidgetsBindingObserver$36$1.__proto__.new.call(this);
  }).prototype = State_WidgetsBindingObserver$36$1.prototype;
  dart.applyMixin(State_WidgetsBindingObserver$36$1, binding$5.WidgetsBindingObserver);
  const State_TickerProviderStateMixin$36$2 = class State_TickerProviderStateMixin extends State_WidgetsBindingObserver$36$1 {};
  (State_TickerProviderStateMixin$36$2.new = function() {
    ticker_provider.TickerProviderStateMixin$(editable_text.EditableText)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$2.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$2.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$2, ticker_provider.TickerProviderStateMixin$(editable_text.EditableText));
  editable_text.EditableTextState = class EditableTextState extends State_TickerProviderStateMixin$36$2 {
    get [_cursorBlinkOpacityController]() {
      let t68;
      return dart.test(this[__EditableTextState__cursorBlinkOpacityController_isSet]) ? (t68 = this[__EditableTextState__cursorBlinkOpacityController], t68) : dart.throw(new _internal.LateError.fieldNI("_cursorBlinkOpacityController"));
    }
    set [_cursorBlinkOpacityController](t68) {
      if (t68 == null) dart.nullFailed(L60, 1438, 28, "null");
      this[__EditableTextState__cursorBlinkOpacityController_isSet] = true;
      this[__EditableTextState__cursorBlinkOpacityController] = t68;
    }
    get currentAutofillScope() {
      return this[_currentAutofillScope];
    }
    get [_shouldCreateInputConnection]() {
      return true || !dart.test(this.widget.readOnly);
    }
    get [_floatingCursorResetController]() {
      let t69;
      return dart.test(this[__EditableTextState__floatingCursorResetController_isSet]) ? (t69 = this[__EditableTextState__floatingCursorResetController], t69) : dart.throw(new _internal.LateError.fieldNI("_floatingCursorResetController"));
    }
    set [_floatingCursorResetController](t69) {
      if (t69 == null) dart.nullFailed(L60, 1477, 28, "null");
      this[__EditableTextState__floatingCursorResetController_isSet] = true;
      this[__EditableTextState__floatingCursorResetController] = t69;
    }
    get wantKeepAlive() {
      return this.widget.focusNode.hasFocus;
    }
    get [_cursorColor]() {
      return this.widget.cursorColor.withOpacity(this[_cursorBlinkOpacityController].value);
    }
    get cutEnabled() {
      return dart.test(this.widget.toolbarOptions.cut) && !dart.test(this.widget.readOnly);
    }
    get copyEnabled() {
      return this.widget.toolbarOptions.copy;
    }
    get pasteEnabled() {
      return dart.test(this.widget.toolbarOptions.paste) && !dart.test(this.widget.readOnly);
    }
    get selectAllEnabled() {
      return this.widget.toolbarOptions.selectAll;
    }
    [_onChangedClipboardStatus]() {
      this.setState(dart.fn(() => {
      }, VoidTovoid()));
    }
    initState() {
      let t70, t70$;
      super.initState();
      t70 = this[_clipboardStatus];
      t70 == null ? null : t70.addListener(dart.bind(this, _onChangedClipboardStatus));
      this.widget.controller.addListener(dart.bind(this, _didChangeTextEditingValue));
      this[_focusAttachment] = this.widget.focusNode.attach(this.context);
      this.widget.focusNode.addListener(dart.bind(this, _handleFocusChanged));
      this[_scrollController] = (t70$ = this.widget.scrollController, t70$ == null ? new scroll_controller.ScrollController.new() : t70$);
      dart.nullCheck(this[_scrollController]).addListener(dart.fn(() => {
        let t70;
        t70 = this[_selectionOverlay];
        t70 == null ? null : t70.updateForScroll();
      }, VoidTovoid()));
      this[_cursorBlinkOpacityController] = new animation_controller.AnimationController.new({vsync: this, duration: editable_text.EditableTextState._fadeDuration});
      this[_cursorBlinkOpacityController].addListener(dart.bind(this, _onCursorColorTick));
      this[_floatingCursorResetController] = new animation_controller.AnimationController.new({vsync: this});
      this[_floatingCursorResetController].addListener(dart.bind(this, _onFloatingCursorResetTick));
      this[_cursorVisibilityNotifier].value = this.widget.showCursor;
    }
    didChangeDependencies() {
      let t70, t70$;
      super.didChangeDependencies();
      let newAutofillGroup = autofill$.AutofillGroup.of(this.context);
      if (!dart.equals(this.currentAutofillScope, newAutofillGroup)) {
        t70 = this[_currentAutofillScope];
        t70 == null ? null : t70.unregister(this.autofillId);
        this[_currentAutofillScope] = newAutofillGroup;
        t70$ = newAutofillGroup;
        t70$ == null ? null : t70$.register(this);
        this[_isInAutofillContext] = dart.test(this[_isInAutofillContext]) || dart.test(this[_shouldBeInAutofillContext]);
      }
      if (!dart.test(this[_didAutoFocus]) && dart.test(this.widget.autofocus)) {
        this[_didAutoFocus] = true;
        dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.fn(_ => {
          if (_ == null) dart.nullFailed(L60, 1534, 56, "_");
          if (dart.test(this.mounted)) {
            focus_scope.FocusScope.of(this.context).autofocus(this.widget.focusNode);
          }
        }, DurationTovoid()));
      }
    }
    didUpdateWidget(oldWidget) {
      let t70, t70$, t70$0, t70$1, t70$2;
      editable_text.EditableText.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L60, 1543, 37, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.controller, oldWidget.controller)) {
        oldWidget.controller.removeListener(dart.bind(this, _didChangeTextEditingValue));
        this.widget.controller.addListener(dart.bind(this, _didChangeTextEditingValue));
        this[_updateRemoteEditingValueIfNeeded]();
      }
      if (!dart.equals(this.widget.controller.selection, oldWidget.controller.selection)) {
        t70 = this[_selectionOverlay];
        t70 == null ? null : t70.update(this[_value$1]);
      }
      t70$ = this[_selectionOverlay];
      t70$ == null ? null : t70$.handlesVisible = this.widget.showSelectionHandles;
      this[_isInAutofillContext] = dart.test(this[_isInAutofillContext]) || dart.test(this[_shouldBeInAutofillContext]);
      if (!dart.equals(this.widget.focusNode, oldWidget.focusNode)) {
        oldWidget.focusNode.removeListener(dart.bind(this, _handleFocusChanged));
        t70$0 = this[_focusAttachment];
        t70$0 == null ? null : t70$0.detach();
        this[_focusAttachment] = this.widget.focusNode.attach(this.context);
        this.widget.focusNode.addListener(dart.bind(this, _handleFocusChanged));
        this.updateKeepAlive();
      }
      if (!dart.test(this[_shouldCreateInputConnection])) {
        this[_closeInputConnectionIfNeeded]();
      } else {
        if (dart.test(oldWidget.readOnly) && dart.test(this[_hasFocus])) {
          this[_openInputConnection]();
        }
      }
      if (true && dart.test(this[_hasInputConnection])) {
        if (!dart.equals(oldWidget.readOnly, this.widget.readOnly)) {
          dart.nullCheck(this[_textInputConnection]).updateConfig(this.textInputConfiguration);
        }
      }
      if (!dart.equals(this.widget.style, oldWidget.style)) {
        let style = this.widget.style;
        if (dart.test(this[_hasInputConnection])) {
          dart.nullCheck(this[_textInputConnection]).setStyle({fontFamily: style.fontFamily, fontSize: style.fontSize, fontWeight: style.fontWeight, textDirection: this[_textDirection$0], textAlign: this.widget.textAlign});
        }
      }
      if (dart.test(this.widget.selectionEnabled) && dart.test(this.pasteEnabled) && dart.equals((t70$1 = this.widget.selectionControls, t70$1 == null ? null : t70$1.canPaste(this)), true)) {
        t70$2 = this[_clipboardStatus];
        t70$2 == null ? null : t70$2.update();
      }
    }
    dispose() {
      let t70, t70$, t70$0, t70$1;
      t70 = this[_currentAutofillScope];
      t70 == null ? null : t70.unregister(this.autofillId);
      this.widget.controller.removeListener(dart.bind(this, _didChangeTextEditingValue));
      this[_cursorBlinkOpacityController].removeListener(dart.bind(this, _onCursorColorTick));
      this[_floatingCursorResetController].removeListener(dart.bind(this, _onFloatingCursorResetTick));
      this[_closeInputConnectionIfNeeded]();
      if (!!dart.test(this[_hasInputConnection])) dart.assertFailed(null, L60, 1603, 12, "!_hasInputConnection");
      this[_stopCursorTimer]();
      if (!(this[_cursorTimer] == null)) dart.assertFailed(null, L60, 1605, 12, "_cursorTimer == null");
      t70$ = this[_selectionOverlay];
      t70$ == null ? null : t70$.dispose();
      this[_selectionOverlay] = null;
      dart.nullCheck(this[_focusAttachment]).detach();
      this.widget.focusNode.removeListener(dart.bind(this, _handleFocusChanged));
      dart.nullCheck(binding$5.WidgetsBinding.instance).removeObserver(this);
      t70$0 = this[_clipboardStatus];
      t70$0 == null ? null : t70$0.removeListener(dart.bind(this, _onChangedClipboardStatus));
      t70$1 = this[_clipboardStatus];
      t70$1 == null ? null : t70$1.dispose();
      super.dispose();
      if (!(dart.notNull(this[_batchEditDepth]) <= 0)) dart.assertFailed("unfinished batch edits: " + dart.str(this[_batchEditDepth]), L60, 1614, 12, "_batchEditDepth <= 0");
    }
    get currentTextEditingValue() {
      return this[_value$1];
    }
    updateEditingValue(value) {
      if (value == null) dart.nullFailed(L60, 1634, 44, "value");
      if (!dart.test(this[_shouldCreateInputConnection])) {
        return;
      }
      if (dart.test(this.widget.readOnly)) {
        value = this[_value$1].copyWith({selection: value.selection});
      }
      this[_lastKnownRemoteTextEditingValue] = value;
      if (dart.equals(value, this[_value$1])) {
        return;
      }
      if (value.text == this[_value$1].text && dart.equals(value.composing, this[_value$1].composing)) {
        this[_handleSelectionChanged](value.selection, this.renderEditable, editable.SelectionChangedCause.keyboard);
      } else {
        this.hideToolbar();
        this[_currentPromptRectRange] = null;
        if (dart.test(this[_hasInputConnection])) {
          this[_showCaretOnScreen]();
          if (dart.test(this.widget.obscureText) && value.text.length === this[_value$1].text.length + 1) {
            this[_obscureShowCharTicksPending] = 3;
            this[_obscureLatestCharIndex] = this[_value$1].selection.baseOffset;
          }
        }
        this[_formatAndSetValue](value);
      }
      if (dart.test(this[_hasInputConnection])) {
        this[_stopCursorTimer]({resetCharTicks: false});
        this[_startCursorTimer]();
      }
    }
    performAction(action) {
      if (action == null) dart.nullFailed(L60, 1686, 38, "action");
      switch (action) {
        case C934 || CT.C934:
        {
          if (!dart.test(this[_isMultiline])) this[_finalizeEditing](action, {shouldUnfocus: true});
          break;
        }
        case C935 || CT.C935:
        case C936 || CT.C936:
        case C937 || CT.C937:
        case C938 || CT.C938:
        case C939 || CT.C939:
        case C940 || CT.C940:
        {
          this[_finalizeEditing](action, {shouldUnfocus: true});
          break;
        }
        case C941 || CT.C941:
        case C942 || CT.C942:
        case C943 || CT.C943:
        case C944 || CT.C944:
        case C945 || CT.C945:
        case C946 || CT.C946:
        {
          this[_finalizeEditing](action, {shouldUnfocus: false});
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    performPrivateCommand(action, data) {
      if (action == null) dart.nullFailed(L60, 1717, 37, "action");
      if (data == null) dart.nullFailed(L60, 1717, 66, "data");
      dart.nullCheck(this.widget.onAppPrivateCommand)(action, data);
    }
    get [_floatingCursorOffset]() {
      return new ui.Offset.new(0.0, dart.notNull(this.renderEditable.preferredLineHeight) / 2);
    }
    updateFloatingCursor(point) {
      if (point == null) dart.nullFailed(L60, 1740, 52, "point");
      switch (point.state) {
        case C947 || CT.C947:
        {
          if (dart.test(this[_floatingCursorResetController].isAnimating)) {
            this[_floatingCursorResetController].stop();
            this[_onFloatingCursorResetTick]();
          }
          this[_pointOffsetOrigin] = point.offset;
          let currentTextPosition = new ui.TextPosition.new({offset: dart.nullCheck(this.renderEditable.selection).baseOffset});
          this[_startCaretRect] = this.renderEditable.getLocalRectForCaret(currentTextPosition);
          this[_lastBoundedOffset] = dart.nullCheck(this[_startCaretRect]).center['-'](this[_floatingCursorOffset]);
          this[_lastTextPosition] = currentTextPosition;
          this.renderEditable.setFloatingCursor(point.state, dart.nullCheck(this[_lastBoundedOffset]), dart.nullCheck(this[_lastTextPosition]));
          break;
        }
        case C948 || CT.C948:
        {
          let centeredPoint = dart.nullCheck(point.offset)['-'](dart.nullCheck(this[_pointOffsetOrigin]));
          let rawCursorOffset = dart.nullCheck(this[_startCaretRect]).center['+'](centeredPoint)['-'](this[_floatingCursorOffset]);
          this[_lastBoundedOffset] = this.renderEditable.calculateBoundedFloatingCursorOffset(rawCursorOffset);
          this[_lastTextPosition] = this.renderEditable.getPositionForPoint(this.renderEditable.localToGlobal(dart.nullCheck(this[_lastBoundedOffset])['+'](this[_floatingCursorOffset])));
          this.renderEditable.setFloatingCursor(point.state, dart.nullCheck(this[_lastBoundedOffset]), dart.nullCheck(this[_lastTextPosition]));
          break;
        }
        case C949 || CT.C949:
        {
          if (this[_lastTextPosition] != null && this[_lastBoundedOffset] != null) {
            this[_floatingCursorResetController].value = 0.0;
            this[_floatingCursorResetController].animateTo(1.0, {duration: editable_text.EditableTextState._floatingCursorResetTime, curve: curves.Curves.decelerate});
          }
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [_onFloatingCursorResetTick]() {
      let finalPosition = this.renderEditable.getLocalRectForCaret(dart.nullCheck(this[_lastTextPosition])).centerLeft['-'](this[_floatingCursorOffset]);
      if (dart.test(this[_floatingCursorResetController].isCompleted)) {
        this.renderEditable.setFloatingCursor(text_input.FloatingCursorDragState.End, finalPosition, dart.nullCheck(this[_lastTextPosition]));
        if (dart.nullCheck(this[_lastTextPosition]).offset != dart.nullCheck(this.renderEditable.selection).baseOffset) this[_handleSelectionChanged](new text_editing.TextSelection.collapsed({offset: dart.nullCheck(this[_lastTextPosition]).offset}), this.renderEditable, editable.SelectionChangedCause.forcePress);
        this[_startCaretRect] = null;
        this[_lastTextPosition] = null;
        this[_pointOffsetOrigin] = null;
        this[_lastBoundedOffset] = null;
      } else {
        let lerpValue = this[_floatingCursorResetController].value;
        let lerpX = dart.nullCheck(ui.lerpDouble(dart.nullCheck(this[_lastBoundedOffset]).dx, finalPosition.dx, lerpValue));
        let lerpY = dart.nullCheck(ui.lerpDouble(dart.nullCheck(this[_lastBoundedOffset]).dy, finalPosition.dy, lerpValue));
        this.renderEditable.setFloatingCursor(text_input.FloatingCursorDragState.Update, new ui.Offset.new(lerpX, lerpY), dart.nullCheck(this[_lastTextPosition]), {resetLerpValue: lerpValue});
      }
    }
    [_finalizeEditing](action, opts) {
      let t71;
      if (action == null) dart.nullFailed(L60, 1796, 41, "action");
      let shouldUnfocus = opts && 'shouldUnfocus' in opts ? opts.shouldUnfocus : null;
      if (shouldUnfocus == null) dart.nullFailed(L60, 1796, 64, "shouldUnfocus");
      if (this.widget.onEditingComplete != null) {
        try {
          dart.nullCheck(this.widget.onEditingComplete)();
        } catch (e) {
          let exception = dart.getThrown(e);
          let stack = dart.stackTrace(e);
          if (core.Object.is(exception)) {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({exception: exception, stack: stack, library: "widgets", context: new assertions.ErrorDescription.new("while calling onEditingComplete for " + dart.str(action))}));
          } else
            throw e;
        }
      } else {
        this.widget.controller.clearComposing();
        if (dart.test(shouldUnfocus)) {
          switch (action) {
            case C944 || CT.C944:
            case C946 || CT.C946:
            case C935 || CT.C935:
            case C936 || CT.C936:
            case C939 || CT.C939:
            case C940 || CT.C940:
            case C941 || CT.C941:
            case C943 || CT.C943:
            case C945 || CT.C945:
            case C942 || CT.C942:
            case C934 || CT.C934:
            {
              this.widget.focusNode.unfocus();
              break;
            }
            case C937 || CT.C937:
            {
              this.widget.focusNode.nextFocus();
              break;
            }
            case C938 || CT.C938:
            {
              this.widget.focusNode.previousFocus();
              break;
            }
            default:
            {
              dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
            }
          }
        }
      }
      try {
        t71 = this.widget.onSubmitted;
        t71 == null ? null : t71(this[_value$1].text);
      } catch (e$) {
        let exception = dart.getThrown(e$);
        let stack = dart.stackTrace(e$);
        if (core.Object.is(exception)) {
          assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({exception: exception, stack: stack, library: "widgets", context: new assertions.ErrorDescription.new("while calling onSubmitted for " + dart.str(action))}));
        } else
          throw e$;
      }
    }
    beginBatchEdit() {
      this[_batchEditDepth] = dart.notNull(this[_batchEditDepth]) + 1;
    }
    endBatchEdit() {
      this[_batchEditDepth] = dart.notNull(this[_batchEditDepth]) - 1;
      if (!(dart.notNull(this[_batchEditDepth]) >= 0)) dart.assertFailed("Unbalanced call to endBatchEdit: beginBatchEdit must be called first.", L60, 1872, 7, "_batchEditDepth >= 0");
      this[_updateRemoteEditingValueIfNeeded]();
    }
    [_updateRemoteEditingValueIfNeeded]() {
      if (dart.notNull(this[_batchEditDepth]) > 0 || !dart.test(this[_hasInputConnection])) return;
      let localValue = this[_value$1];
      if (dart.equals(localValue, this[_lastKnownRemoteTextEditingValue])) return;
      dart.nullCheck(this[_textInputConnection]).setEditingState(localValue);
      this[_lastKnownRemoteTextEditingValue] = localValue;
    }
    get [_value$1]() {
      return this.widget.controller.value;
    }
    set [_value$1](value) {
      if (value == null) dart.nullFailed(L60, 1889, 31, "value");
      this.widget.controller.value = value;
    }
    get [_hasFocus]() {
      return this.widget.focusNode.hasFocus;
    }
    get [_isMultiline]() {
      return this.widget.maxLines !== 1;
    }
    [_getOffsetToRevealCaret](rect) {
      if (rect == null) dart.nullFailed(L60, 1905, 47, "rect");
      if (!dart.test(dart.nullCheck(this[_scrollController]).position.allowImplicitScrolling)) return new viewport$.RevealedOffset.new({offset: dart.nullCheck(this[_scrollController]).offset, rect: rect});
      let editableSize = this.renderEditable.size;
      let additionalOffset = null;
      let unitOffset = null;
      if (!dart.test(this[_isMultiline])) {
        additionalOffset = dart.notNull(rect.width) >= dart.notNull(editableSize.width) ? dart.notNull(editableSize.width) / 2 - dart.notNull(rect.center.dx) : 0.0[$clamp](dart.notNull(rect.right) - dart.notNull(editableSize.width), rect.left);
        unitOffset = C950 || CT.C950;
      } else {
        let expandedRect = new ui.Rect.fromCenter({center: rect.center, width: rect.width, height: math.max(core.double, rect.height, this.renderEditable.preferredLineHeight)});
        additionalOffset = dart.notNull(expandedRect.height) >= dart.notNull(editableSize.height) ? dart.notNull(editableSize.height) / 2 - dart.notNull(expandedRect.center.dy) : 0.0[$clamp](dart.notNull(expandedRect.bottom) - dart.notNull(editableSize.height), expandedRect.top);
        unitOffset = C951 || CT.C951;
      }
      let targetOffset = (dart.notNull(additionalOffset) + dart.notNull(dart.nullCheck(this[_scrollController]).offset))[$clamp](dart.nullCheck(this[_scrollController]).position.minScrollExtent, dart.nullCheck(this[_scrollController]).position.maxScrollExtent);
      let offsetDelta = dart.notNull(dart.nullCheck(this[_scrollController]).offset) - targetOffset;
      return new viewport$.RevealedOffset.new({rect: rect.shift(unitOffset['*'](offsetDelta)), offset: targetOffset});
    }
    get [_hasInputConnection]() {
      let t72, t72$;
      t72$ = (t72 = this[_textInputConnection], t72 == null ? null : t72.attached);
      return t72$ == null ? false : t72$;
    }
    get [_needsAutofill]() {
      let t72, t72$;
      t72$ = (t72 = this.widget.autofillHints, t72 == null ? null : t72[$isNotEmpty]);
      return t72$ == null ? false : t72$;
    }
    get [_shouldBeInAutofillContext]() {
      return dart.test(this[_needsAutofill]) && this.currentAutofillScope != null;
    }
    [_openInputConnection]() {
      let t72;
      if (!dart.test(this[_shouldCreateInputConnection])) {
        return;
      }
      if (!dart.test(this[_hasInputConnection])) {
        let localValue = this[_value$1];
        this[_textInputConnection] = dart.test(this[_needsAutofill]) && this.currentAutofillScope != null ? dart.nullCheck(this.currentAutofillScope).attach(this, this.textInputConfiguration) : text_input.TextInput.attach(this, this[_createTextInputConfiguration](dart.test(this[_isInAutofillContext]) || dart.test(this[_needsAutofill])));
        dart.nullCheck(this[_textInputConnection]).show();
        this[_updateSizeAndTransform]();
        this[_updateComposingRectIfNeeded]();
        if (dart.test(this[_needsAutofill])) {
          dart.nullCheck(this[_textInputConnection]).requestAutofill();
        }
        let style = this.widget.style;
        t72 = dart.nullCheck(this[_textInputConnection]);
        (() => {
          t72.setStyle({fontFamily: style.fontFamily, fontSize: style.fontSize, fontWeight: style.fontWeight, textDirection: this[_textDirection$0], textAlign: this.widget.textAlign});
          t72.setEditingState(localValue);
          return t72;
        })();
      } else {
        dart.nullCheck(this[_textInputConnection]).show();
      }
    }
    [_closeInputConnectionIfNeeded]() {
      if (dart.test(this[_hasInputConnection])) {
        dart.nullCheck(this[_textInputConnection]).close();
        this[_textInputConnection] = null;
        this[_lastKnownRemoteTextEditingValue] = null;
      }
    }
    [_openOrCloseInputConnectionIfNeeded]() {
      if (dart.test(this[_hasFocus]) && dart.test(this.widget.focusNode.consumeKeyboardToken())) {
        this[_openInputConnection]();
      } else if (!dart.test(this[_hasFocus])) {
        this[_closeInputConnectionIfNeeded]();
        this.widget.controller.clearComposing();
      }
    }
    connectionClosed() {
      if (dart.test(this[_hasInputConnection])) {
        dart.nullCheck(this[_textInputConnection]).connectionClosedReceived();
        this[_textInputConnection] = null;
        this[_lastKnownRemoteTextEditingValue] = null;
        this[_finalizeEditing](text_input.TextInputAction.done, {shouldUnfocus: true});
      }
    }
    requestKeyboard() {
      if (dart.test(this[_hasFocus])) {
        this[_openInputConnection]();
      } else {
        this.widget.focusNode.requestFocus();
      }
    }
    [_updateOrDisposeSelectionOverlayIfNeeded]() {
      if (this[_selectionOverlay] != null) {
        if (dart.test(this[_hasFocus])) {
          dart.nullCheck(this[_selectionOverlay]).update(this[_value$1]);
        } else {
          dart.nullCheck(this[_selectionOverlay]).dispose();
          this[_selectionOverlay] = null;
        }
      }
    }
    [_handleSelectionChanged](selection, renderObject, cause) {
      let t72, t72$;
      if (selection == null) dart.nullFailed(L60, 2048, 46, "selection");
      if (renderObject == null) dart.nullFailed(L60, 2048, 72, "renderObject");
      if (!dart.test(this.widget.controller.isSelectionWithinTextBounds(selection))) return;
      this.widget.controller.selection = selection;
      this.requestKeyboard();
      t72 = this[_selectionOverlay];
      t72 == null ? null : t72.hide();
      this[_selectionOverlay] = null;
      if (this.widget.selectionControls != null) {
        this[_selectionOverlay] = new text_selection.TextSelectionOverlay.new({clipboardStatus: this[_clipboardStatus], context: this.context, value: this[_value$1], debugRequiredFor: this.widget, toolbarLayerLink: this[_toolbarLayerLink], startHandleLayerLink: this[_startHandleLayerLink], endHandleLayerLink: this[_endHandleLayerLink], renderObject: renderObject, selectionControls: this.widget.selectionControls, selectionDelegate: this, dragStartBehavior: this.widget.dragStartBehavior, onSelectionHandleTapped: this.widget.onSelectionHandleTapped});
        dart.nullCheck(this[_selectionOverlay]).handlesVisible = this.widget.showSelectionHandles;
        dart.nullCheck(this[_selectionOverlay]).showHandles();
        try {
          t72$ = this.widget.onSelectionChanged;
          t72$ == null ? null : t72$(selection, cause);
        } catch (e) {
          let exception = dart.getThrown(e);
          let stack = dart.stackTrace(e);
          if (core.Object.is(exception)) {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({exception: exception, stack: stack, library: "widgets", context: new assertions.ErrorDescription.new("while calling onSelectionChanged for " + dart.str(cause))}));
          } else
            throw e;
        }
      }
    }
    [_handleCaretChanged](caretRect) {
      if (caretRect == null) dart.nullFailed(L60, 2097, 33, "caretRect");
      this[_currentCaretRect] = caretRect;
      if (dart.test(this[_textChangedSinceLastCaretUpdate])) {
        this[_textChangedSinceLastCaretUpdate] = false;
        this[_showCaretOnScreen]();
      }
    }
    [_showCaretOnScreen]() {
      if (dart.test(this[_showCaretOnScreenScheduled])) {
        return;
      }
      this[_showCaretOnScreenScheduled] = true;
      dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.fn(_ => {
        let t73;
        if (_ == null) dart.nullFailed(L60, 2118, 63, "_");
        this[_showCaretOnScreenScheduled] = false;
        if (this[_currentCaretRect] == null || !dart.test(dart.nullCheck(this[_scrollController]).hasClients)) {
          return;
        }
        let lineHeight = this.renderEditable.preferredLineHeight;
        let bottomSpacing = this.widget.scrollPadding.bottom;
        if ((t73 = this[_selectionOverlay], t73 == null ? null : t73.selectionControls) != null) {
          let handleHeight = dart.nullCheck(dart.nullCheck(this[_selectionOverlay]).selectionControls).getHandleSize(lineHeight).height;
          let interactiveHandleHeight = math.max(core.double, handleHeight, 48);
          let anchor = dart.nullCheck(dart.nullCheck(this[_selectionOverlay]).selectionControls).getHandleAnchor(text_selection.TextSelectionHandleType.collapsed, lineHeight);
          let handleCenter = dart.notNull(handleHeight) / 2 - dart.notNull(anchor.dy);
          bottomSpacing = math.max(core.double, handleCenter + interactiveHandleHeight / 2, bottomSpacing);
        }
        let caretPadding = this.widget.scrollPadding.copyWith({bottom: bottomSpacing});
        let targetOffset = this[_getOffsetToRevealCaret](dart.nullCheck(this[_currentCaretRect]));
        dart.nullCheck(this[_scrollController]).animateTo(targetOffset.offset, {duration: editable_text.EditableTextState._caretAnimationDuration, curve: editable_text.EditableTextState._caretAnimationCurve});
        this.renderEditable.showOnScreen({rect: caretPadding.inflateRect(targetOffset.rect), duration: editable_text.EditableTextState._caretAnimationDuration, curve: editable_text.EditableTextState._caretAnimationCurve});
      }, DurationTovoid()));
    }
    get [_lastBottomViewInset]() {
      let t73;
      return dart.test(this[__EditableTextState__lastBottomViewInset_isSet]) ? (t73 = this[__EditableTextState__lastBottomViewInset], t73) : dart.throw(new _internal.LateError.fieldNI("_lastBottomViewInset"));
    }
    set [_lastBottomViewInset](t73) {
      if (t73 == null) dart.nullFailed(L60, 2167, 15, "null");
      this[__EditableTextState__lastBottomViewInset_isSet] = true;
      this[__EditableTextState__lastBottomViewInset] = t73;
    }
    didChangeMetrics() {
      if (dart.notNull(this[_lastBottomViewInset]) < dart.notNull(dart.nullCheck(binding$5.WidgetsBinding.instance).window.viewInsets.bottom)) {
        this[_showCaretOnScreen]();
      }
      this[_lastBottomViewInset] = dart.nullCheck(binding$5.WidgetsBinding.instance).window.viewInsets.bottom;
    }
    get [_whitespaceFormatter]() {
      let t75;
      if (!dart.test(this[__EditableTextState__whitespaceFormatter_isSet])) {
        let t74 = new editable_text._WhitespaceDirectionalityFormatter.new({textDirection: this[_textDirection$0]});
        if (dart.test(this[__EditableTextState__whitespaceFormatter_isSet])) dart.throw(new _internal.LateError.fieldADI("_whitespaceFormatter"));
        this[__EditableTextState__whitespaceFormatter] = t74;
        this[__EditableTextState__whitespaceFormatter_isSet] = true;
      }
      t75 = this[__EditableTextState__whitespaceFormatter];
      return t75;
    }
    [_formatAndSetValue](value) {
      let t75, t75$, t75$0, t75$1, t75$2;
      if (value == null) dart.nullFailed(L60, 2179, 44, "value");
      let textChanged = this[_value$1].text != value.text || !dart.equals(this[_value$1].composing, value.composing);
      if (textChanged) {
        value = (t75$ = (t75 = this.widget.inputFormatters, t75 == null ? null : t75[$fold](text_input.TextEditingValue, value, dart.fn((newValue, formatter) => {
          if (newValue == null) dart.nullFailed(L60, 2190, 27, "newValue");
          if (formatter == null) dart.nullFailed(L60, 2190, 56, "formatter");
          return formatter.formatEditUpdate(this[_value$1], newValue);
        }, TextEditingValueAndTextInputFormatterToTextEditingValue()))), t75$ == null ? value : t75$);
        if (dart.test((t75$1 = (t75$0 = this.widget.inputFormatters, t75$0 == null ? null : t75$0[$isNotEmpty]), t75$1 == null ? false : t75$1))) value = this[_whitespaceFormatter].formatEditUpdate(this[_value$1], value);
      }
      this.beginBatchEdit();
      this[_value$1] = value;
      if (textChanged) {
        try {
          t75$2 = this.widget.onChanged;
          t75$2 == null ? null : t75$2(value.text);
        } catch (e) {
          let exception = dart.getThrown(e);
          let stack = dart.stackTrace(e);
          if (core.Object.is(exception)) {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({exception: exception, stack: stack, library: "widgets", context: new assertions.ErrorDescription.new("while calling onChanged")}));
          } else
            throw e;
        }
      }
      this.endBatchEdit();
    }
    [_onCursorColorTick]() {
      this.renderEditable.cursorColor = this.widget.cursorColor.withOpacity(this[_cursorBlinkOpacityController].value);
      this[_cursorVisibilityNotifier].value = dart.test(this.widget.showCursor) && dart.notNull(this[_cursorBlinkOpacityController].value) > 0;
    }
    get cursorCurrentlyVisible() {
      return dart.notNull(this[_cursorBlinkOpacityController].value) > 0;
    }
    get cursorBlinkInterval() {
      return editable_text._kCursorBlinkHalfPeriod;
    }
    get selectionOverlay() {
      return this[_selectionOverlay];
    }
    [_cursorTick](timer) {
      if (timer == null) dart.nullFailed(L60, 2246, 26, "timer");
      this[_targetCursorVisibility] = !dart.test(this[_targetCursorVisibility]);
      let targetOpacity = dart.test(this[_targetCursorVisibility]) ? 1.0 : 0.0;
      if (dart.test(this.widget.cursorOpacityAnimates)) {
        this[_cursorBlinkOpacityController].animateTo(targetOpacity, {curve: curves.Curves.easeOut});
      } else {
        this[_cursorBlinkOpacityController].value = targetOpacity;
      }
      if (dart.notNull(this[_obscureShowCharTicksPending]) > 0) {
        this.setState(dart.fn(() => {
          this[_obscureShowCharTicksPending] = dart.notNull(this[_obscureShowCharTicksPending]) - 1;
        }, VoidTovoid()));
      }
    }
    [_cursorWaitForStart](timer) {
      let t76;
      if (timer == null) dart.nullFailed(L60, 2269, 34, "timer");
      if (!dart.test(editable_text._kCursorBlinkHalfPeriod['>'](editable_text.EditableTextState._fadeDuration))) dart.assertFailed(null, L60, 2270, 12, "_kCursorBlinkHalfPeriod > _fadeDuration");
      t76 = this[_cursorTimer];
      t76 == null ? null : t76.cancel();
      this[_cursorTimer] = async.Timer.periodic(editable_text._kCursorBlinkHalfPeriod, dart.bind(this, _cursorTick));
    }
    [_startCursorTimer]() {
      this[_targetCursorVisibility] = true;
      this[_cursorBlinkOpacityController].value = 1.0;
      if (dart.test(editable_text.EditableText.debugDeterministicCursor)) return;
      if (dart.test(this.widget.cursorOpacityAnimates)) {
        this[_cursorTimer] = async.Timer.periodic(editable_text._kCursorBlinkWaitForStart, dart.bind(this, _cursorWaitForStart));
      } else {
        this[_cursorTimer] = async.Timer.periodic(editable_text._kCursorBlinkHalfPeriod, dart.bind(this, _cursorTick));
      }
    }
    [_stopCursorTimer](opts) {
      let t76;
      let resetCharTicks = opts && 'resetCharTicks' in opts ? opts.resetCharTicks : true;
      if (resetCharTicks == null) dart.nullFailed(L60, 2287, 32, "resetCharTicks");
      t76 = this[_cursorTimer];
      t76 == null ? null : t76.cancel();
      this[_cursorTimer] = null;
      this[_targetCursorVisibility] = false;
      this[_cursorBlinkOpacityController].value = 0.0;
      if (dart.test(editable_text.EditableText.debugDeterministicCursor)) return;
      if (dart.test(resetCharTicks)) this[_obscureShowCharTicksPending] = 0;
      if (dart.test(this.widget.cursorOpacityAnimates)) {
        this[_cursorBlinkOpacityController].stop();
        this[_cursorBlinkOpacityController].value = 0.0;
      }
    }
    [_startOrStopCursorTimerIfNeeded]() {
      if (this[_cursorTimer] == null && dart.test(this[_hasFocus]) && dart.test(this[_value$1].selection.isCollapsed))
        this[_startCursorTimer]();
      else if (this[_cursorTimer] != null && (!dart.test(this[_hasFocus]) || !dart.test(this[_value$1].selection.isCollapsed))) this[_stopCursorTimer]();
    }
    [_didChangeTextEditingValue]() {
      this[_updateRemoteEditingValueIfNeeded]();
      this[_startOrStopCursorTimerIfNeeded]();
      this[_updateOrDisposeSelectionOverlayIfNeeded]();
      this[_textChangedSinceLastCaretUpdate] = true;
      this.setState(dart.fn(() => {
      }, VoidTovoid()));
    }
    [_handleFocusChanged]() {
      this[_openOrCloseInputConnectionIfNeeded]();
      this[_startOrStopCursorTimerIfNeeded]();
      this[_updateOrDisposeSelectionOverlayIfNeeded]();
      if (dart.test(this[_hasFocus])) {
        dart.nullCheck(binding$5.WidgetsBinding.instance).addObserver(this);
        this[_lastBottomViewInset] = dart.nullCheck(binding$5.WidgetsBinding.instance).window.viewInsets.bottom;
        this[_showCaretOnScreen]();
        if (!dart.test(this[_value$1].selection.isValid)) {
          this[_handleSelectionChanged](new text_editing.TextSelection.collapsed({offset: this[_value$1].text.length}), this.renderEditable, null);
        }
      } else {
        dart.nullCheck(binding$5.WidgetsBinding.instance).removeObserver(this);
        this[_value$1] = new text_input.TextEditingValue.new({text: this[_value$1].text});
        this[_currentPromptRectRange] = null;
      }
      this.updateKeepAlive();
    }
    [_updateSizeAndTransform]() {
      if (dart.test(this[_hasInputConnection])) {
        let size = this.renderEditable.size;
        let transform = this.renderEditable.getTransformTo(null);
        dart.nullCheck(this[_textInputConnection]).setEditableSizeAndTransform(size, transform);
        dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.fn(_ => {
          if (_ == null) dart.nullFailed(L60, 2347, 43, "_");
          return this[_updateSizeAndTransform]();
        }, DurationTovoid()));
      }
    }
    [_updateComposingRectIfNeeded]() {
      let composingRange = this[_value$1].composing;
      if (dart.test(this[_hasInputConnection])) {
        if (!dart.test(this.mounted)) dart.assertFailed(null, L60, 2359, 14, "mounted");
        let composingRect = this.renderEditable.getRectForComposingRange(composingRange);
        if (composingRect == null) {
          if (!(!dart.test(composingRange.isValid) || dart.test(composingRange.isCollapsed))) dart.assertFailed(null, L60, 2363, 16, "!composingRange.isValid || composingRange.isCollapsed");
          let offset = dart.test(composingRange.isValid) ? composingRange.start : 0;
          composingRect = this.renderEditable.getLocalRectForCaret(new ui.TextPosition.new({offset: offset}));
        }
        if (!(composingRect != null)) dart.assertFailed(null, L60, 2367, 14, "composingRect != null");
        dart.nullCheck(this[_textInputConnection]).setComposingRect(composingRect);
        dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.fn(_ => {
          if (_ == null) dart.nullFailed(L60, 2370, 43, "_");
          return this[_updateComposingRectIfNeeded]();
        }, DurationTovoid()));
      }
    }
    get [_textDirection$0]() {
      let t76;
      let result = (t76 = this.widget.textDirection, t76 == null ? basic.Directionality.of(this.context) : t76);
      if (!(result != null)) dart.assertFailed(dart.str(this[$runtimeType]) + " created without a textDirection and with no ambient Directionality.", L60, 2376, 12, "result != null");
      return result;
    }
    get renderEditable() {
      return editable.RenderEditable.as(dart.nullCheck(dart.nullCheck(this[_editableKey].currentContext).findRenderObject()));
    }
    get textEditingValue() {
      return this[_value$1];
    }
    get [_devicePixelRatio]() {
      return media_query.MediaQuery.of(this.context).devicePixelRatio;
    }
    set textEditingValue(value) {
      let t76;
      if (value == null) dart.nullFailed(L60, 2392, 41, "value");
      t76 = this[_selectionOverlay];
      t76 == null ? null : t76.update(value);
      this[_formatAndSetValue](value);
    }
    bringIntoView(position) {
      if (position == null) dart.nullFailed(L60, 2398, 35, "position");
      let localRect = this.renderEditable.getLocalRectForCaret(position);
      let targetOffset = this[_getOffsetToRevealCaret](localRect);
      dart.nullCheck(this[_scrollController]).jumpTo(targetOffset.offset);
      this.renderEditable.showOnScreen({rect: targetOffset.rect});
    }
    showToolbar() {
      if (true) {
        return false;
      }
      if (this[_selectionOverlay] == null || dart.test(dart.nullCheck(this[_selectionOverlay]).toolbarIsVisible)) {
        return false;
      }
      dart.nullCheck(this[_selectionOverlay]).showToolbar();
      return true;
    }
    hideToolbar() {
      let t76;
      t76 = this[_selectionOverlay];
      t76 == null ? null : t76.hide();
    }
    toggleToolbar() {
      if (!(this[_selectionOverlay] != null)) dart.assertFailed(null, L60, 2434, 12, "_selectionOverlay != null");
      if (dart.test(dart.nullCheck(this[_selectionOverlay]).toolbarIsVisible)) {
        this.hideToolbar();
      } else {
        this.showToolbar();
      }
    }
    get autofillId() {
      return "EditableText-" + dart.str(this[$hashCode]);
    }
    [_createTextInputConfiguration](needsAutofillConfiguration) {
      let t76, t76$, t76$0;
      if (needsAutofillConfiguration == null) dart.nullFailed(L60, 2445, 61, "needsAutofillConfiguration");
      if (!(needsAutofillConfiguration != null)) dart.assertFailed(null, L60, 2446, 12, "needsAutofillConfiguration != null");
      return new text_input.TextInputConfiguration.new({inputType: this.widget.keyboardType, readOnly: this.widget.readOnly, obscureText: this.widget.obscureText, autocorrect: this.widget.autocorrect, smartDashesType: this.widget.smartDashesType, smartQuotesType: this.widget.smartQuotesType, enableSuggestions: this.widget.enableSuggestions, inputAction: (t76 = this.widget.textInputAction, t76 == null ? dart.equals(this.widget.keyboardType, text_input.TextInputType.multiline) ? text_input.TextInputAction.newline : text_input.TextInputAction.done : t76), textCapitalization: this.widget.textCapitalization, keyboardAppearance: this.widget.keyboardAppearance, autofillConfiguration: !dart.test(needsAutofillConfiguration) ? null : new autofill.AutofillConfiguration.new({uniqueIdentifier: this.autofillId, autofillHints: (t76$0 = (t76$ = this.widget.autofillHints, t76$ == null ? null : t76$[$toList]({growable: false})), t76$0 == null ? JSArrayOfString().of([]) : t76$0), currentEditingValue: this.currentTextEditingValue})});
    }
    get textInputConfiguration() {
      return this[_createTextInputConfiguration](this[_needsAutofill]);
    }
    showAutocorrectionPromptRect(start, end) {
      if (start == null) dart.nullFailed(L60, 2478, 41, "start");
      if (end == null) dart.nullFailed(L60, 2478, 52, "end");
      this.setState(dart.fn(() => {
        this[_currentPromptRectRange] = new ui.TextRange.new({start: start, end: end});
      }, VoidTovoid()));
    }
    [_semanticsOnCopy](controls) {
      let t76;
      return dart.test(this.widget.selectionEnabled) && dart.test(this.copyEnabled) && dart.test(this[_hasFocus]) && dart.equals((t76 = controls, t76 == null ? null : t76.canCopy(this)), true) ? dart.fn(() => dart.nullCheck(controls).handleCopy(this, this[_clipboardStatus]), VoidTovoid()) : null;
    }
    [_semanticsOnCut](controls) {
      let t76;
      return dart.test(this.widget.selectionEnabled) && dart.test(this.cutEnabled) && dart.test(this[_hasFocus]) && dart.equals((t76 = controls, t76 == null ? null : t76.canCut(this)), true) ? dart.fn(() => dart.nullCheck(controls).handleCut(this), VoidTovoid()) : null;
    }
    [_semanticsOnPaste](controls) {
      let t76;
      return dart.test(this.widget.selectionEnabled) && dart.test(this.pasteEnabled) && dart.test(this[_hasFocus]) && dart.equals((t76 = controls, t76 == null ? null : t76.canPaste(this)), true) && (this[_clipboardStatus] == null || dart.equals(dart.nullCheck(this[_clipboardStatus]).value, text_selection.ClipboardStatus.pasteable)) ? dart.fn(() => dart.nullCheck(controls).handlePaste(this), VoidTovoid()) : null;
    }
    build(context) {
      let t76;
      if (context == null) dart.nullFailed(L60, 2503, 29, "context");
      if (!dart.test(debug$0.debugCheckHasMediaQuery(context))) dart.assertFailed(null, L60, 2504, 12, "debugCheckHasMediaQuery(context)");
      dart.nullCheck(this[_focusAttachment]).reparent();
      super.build(context);
      let controls = this.widget.selectionControls;
      return new basic.MouseRegion.new({cursor: (t76 = this.widget.mouseCursor, t76 == null ? mouse_cursor.SystemMouseCursors.text : t76), child: new scrollable$.Scrollable.new({excludeFromSemantics: true, axisDirection: dart.test(this[_isMultiline]) ? basic_types.AxisDirection.down : basic_types.AxisDirection.right, controller: this[_scrollController], physics: this.widget.scrollPhysics, dragStartBehavior: this.widget.dragStartBehavior, restorationId: this.widget.restorationId, viewportBuilder: dart.fn((context, offset) => {
            let t76, t76$;
            if (context == null) dart.nullFailed(L60, 2518, 40, "context");
            if (offset == null) dart.nullFailed(L60, 2518, 64, "offset");
            return new basic.CompositedTransformTarget.new({link: this[_toolbarLayerLink], child: new basic.Semantics.new({onCopy: this[_semanticsOnCopy](controls), onCut: this[_semanticsOnCut](controls), onPaste: this[_semanticsOnPaste](controls), child: new editable_text._Editable.new({key: this[_editableKey], startHandleLayerLink: this[_startHandleLayerLink], endHandleLayerLink: this[_endHandleLayerLink], textSpan: this.buildTextSpan(), value: this[_value$1], cursorColor: this[_cursorColor], backgroundCursorColor: this.widget.backgroundCursorColor, showCursor: dart.test(editable_text.EditableText.debugDeterministicCursor) ? new (ValueNotifierOfbool()).new(this.widget.showCursor) : this[_cursorVisibilityNotifier], forceLine: this.widget.forceLine, readOnly: this.widget.readOnly, hasFocus: this[_hasFocus], maxLines: this.widget.maxLines, minLines: this.widget.minLines, expands: this.widget.expands, strutStyle: this.widget.strutStyle, selectionColor: this.widget.selectionColor, textScaleFactor: (t76 = this.widget.textScaleFactor, t76 == null ? media_query.MediaQuery.textScaleFactorOf(context) : t76), textAlign: this.widget.textAlign, textDirection: this[_textDirection$0], locale: this.widget.locale, textHeightBehavior: (t76$ = this.widget.textHeightBehavior, t76$ == null ? text.DefaultTextHeightBehavior.of(context) : t76$), textWidthBasis: this.widget.textWidthBasis, obscuringCharacter: this.widget.obscuringCharacter, obscureText: this.widget.obscureText, autocorrect: this.widget.autocorrect, smartDashesType: this.widget.smartDashesType, smartQuotesType: this.widget.smartQuotesType, enableSuggestions: this.widget.enableSuggestions, offset: offset, onSelectionChanged: dart.bind(this, _handleSelectionChanged), onCaretChanged: dart.bind(this, _handleCaretChanged), rendererIgnoresPointer: this.widget.rendererIgnoresPointer, cursorWidth: this.widget.cursorWidth, cursorHeight: this.widget.cursorHeight, cursorRadius: this.widget.cursorRadius, cursorOffset: this.widget.cursorOffset, selectionHeightStyle: this.widget.selectionHeightStyle, selectionWidthStyle: this.widget.selectionWidthStyle, paintCursorAboveText: this.widget.paintCursorAboveText, enableInteractiveSelection: this.widget.enableInteractiveSelection, textSelectionDelegate: this, devicePixelRatio: this[_devicePixelRatio], promptRectRange: this[_currentPromptRectRange], promptRectColor: this.widget.autocorrectionTextRectColor, clipBehavior: this.widget.clipBehavior, $creationLocationd_0dea112b090073317d4: C952 || CT.C952}), $creationLocationd_0dea112b090073317d4: C999 || CT.C999}), $creationLocationd_0dea112b090073317d4: C1005 || CT.C1005});
          }, BuildContextAndViewportOffsetToCompositedTransformTarget()), $creationLocationd_0dea112b090073317d4: C1009 || CT.C1009}), $creationLocationd_0dea112b090073317d4: C1018 || CT.C1018});
    }
    buildTextSpan() {
      if (dart.test(this.widget.obscureText)) {
        let text = this[_value$1].text;
        text = this.widget.obscuringCharacter[$times](text.length);
        if ((dart.equals(platform.defaultTargetPlatform, platform.TargetPlatform.android) || dart.equals(platform.defaultTargetPlatform, platform.TargetPlatform.iOS) || dart.equals(platform.defaultTargetPlatform, platform.TargetPlatform.fuchsia)) && !true) {
          let o = dart.notNull(this[_obscureShowCharTicksPending]) > 0 ? this[_obscureLatestCharIndex] : null;
          if (o != null && dart.notNull(o) >= 0 && dart.notNull(o) < text.length) text = text[$replaceRange](o, dart.notNull(o) + 1, this[_value$1].text[$substring](o, dart.notNull(o) + 1));
        }
        return new text_span.TextSpan.new({style: this.widget.style, text: text});
      }
      return this.widget.controller.buildTextSpan({style: this.widget.style, withComposing: !dart.test(this.widget.readOnly)});
    }
  };
  (editable_text.EditableTextState.new = function() {
    this[_cursorTimer] = null;
    this[_targetCursorVisibility] = false;
    this[_cursorVisibilityNotifier] = new (ValueNotifierOfbool()).new(true);
    this[_editableKey] = GlobalKeyOfStateOfStatefulWidget().new();
    this[_clipboardStatus] = true ? null : new text_selection.ClipboardStatusNotifier.new();
    this[_textInputConnection] = null;
    this[_selectionOverlay] = null;
    this[_scrollController] = null;
    this[__EditableTextState__cursorBlinkOpacityController] = null;
    this[__EditableTextState__cursorBlinkOpacityController_isSet] = false;
    this[_toolbarLayerLink] = new layer.LayerLink.new();
    this[_startHandleLayerLink] = new layer.LayerLink.new();
    this[_endHandleLayerLink] = new layer.LayerLink.new();
    this[_didAutoFocus] = false;
    this[_focusAttachment] = null;
    this[_currentAutofillScope] = null;
    this[_isInAutofillContext] = false;
    this[__EditableTextState__floatingCursorResetController] = null;
    this[__EditableTextState__floatingCursorResetController_isSet] = false;
    this[_lastKnownRemoteTextEditingValue] = null;
    this[_startCaretRect] = null;
    this[_lastTextPosition] = null;
    this[_pointOffsetOrigin] = null;
    this[_lastBoundedOffset] = null;
    this[_batchEditDepth] = 0;
    this[_textChangedSinceLastCaretUpdate] = false;
    this[_currentCaretRect] = null;
    this[_showCaretOnScreenScheduled] = false;
    this[__EditableTextState__lastBottomViewInset] = null;
    this[__EditableTextState__lastBottomViewInset_isSet] = false;
    this[__EditableTextState__whitespaceFormatter] = null;
    this[__EditableTextState__whitespaceFormatter_isSet] = false;
    this[_obscureShowCharTicksPending] = 0;
    this[_obscureLatestCharIndex] = null;
    this[_currentPromptRectRange] = null;
    editable_text.EditableTextState.__proto__.new.call(this);
    ;
  }).prototype = editable_text.EditableTextState.prototype;
  dart.addTypeTests(editable_text.EditableTextState);
  dart.addTypeCaches(editable_text.EditableTextState);
  editable_text.EditableTextState[dart.implements] = () => [text_input.TextSelectionDelegate, text_input.TextInputClient, autofill.AutofillClient];
  dart.setMethodSignature(editable_text.EditableTextState, () => ({
    __proto__: dart.getMethods(editable_text.EditableTextState.__proto__),
    [_onChangedClipboardStatus]: dart.fnType(dart.void, []),
    updateEditingValue: dart.fnType(dart.void, [text_input.TextEditingValue]),
    performAction: dart.fnType(dart.void, [text_input.TextInputAction]),
    performPrivateCommand: dart.fnType(dart.void, [core.String, core.Map$(core.String, dart.dynamic)]),
    updateFloatingCursor: dart.fnType(dart.void, [text_input.RawFloatingCursorPoint]),
    [_onFloatingCursorResetTick]: dart.fnType(dart.void, []),
    [_finalizeEditing]: dart.fnType(dart.void, [text_input.TextInputAction], {}, {shouldUnfocus: core.bool}),
    beginBatchEdit: dart.fnType(dart.void, []),
    endBatchEdit: dart.fnType(dart.void, []),
    [_updateRemoteEditingValueIfNeeded]: dart.fnType(dart.void, []),
    [_getOffsetToRevealCaret]: dart.fnType(viewport$.RevealedOffset, [ui.Rect]),
    [_openInputConnection]: dart.fnType(dart.void, []),
    [_closeInputConnectionIfNeeded]: dart.fnType(dart.void, []),
    [_openOrCloseInputConnectionIfNeeded]: dart.fnType(dart.void, []),
    connectionClosed: dart.fnType(dart.void, []),
    requestKeyboard: dart.fnType(dart.void, []),
    [_updateOrDisposeSelectionOverlayIfNeeded]: dart.fnType(dart.void, []),
    [_handleSelectionChanged]: dart.fnType(dart.void, [text_editing.TextSelection, editable.RenderEditable, dart.nullable(editable.SelectionChangedCause)]),
    [_handleCaretChanged]: dart.fnType(dart.void, [ui.Rect]),
    [_showCaretOnScreen]: dart.fnType(dart.void, []),
    [_formatAndSetValue]: dart.fnType(dart.void, [text_input.TextEditingValue]),
    [_onCursorColorTick]: dart.fnType(dart.void, []),
    [_cursorTick]: dart.fnType(dart.void, [async.Timer]),
    [_cursorWaitForStart]: dart.fnType(dart.void, [async.Timer]),
    [_startCursorTimer]: dart.fnType(dart.void, []),
    [_stopCursorTimer]: dart.fnType(dart.void, [], {resetCharTicks: core.bool}, {}),
    [_startOrStopCursorTimerIfNeeded]: dart.fnType(dart.void, []),
    [_didChangeTextEditingValue]: dart.fnType(dart.void, []),
    [_handleFocusChanged]: dart.fnType(dart.void, []),
    [_updateSizeAndTransform]: dart.fnType(dart.void, []),
    [_updateComposingRectIfNeeded]: dart.fnType(dart.void, []),
    bringIntoView: dart.fnType(dart.void, [ui.TextPosition]),
    showToolbar: dart.fnType(core.bool, []),
    hideToolbar: dart.fnType(dart.void, []),
    toggleToolbar: dart.fnType(dart.void, []),
    [_createTextInputConfiguration]: dart.fnType(text_input.TextInputConfiguration, [core.bool]),
    showAutocorrectionPromptRect: dart.fnType(dart.void, [core.int, core.int]),
    [_semanticsOnCopy]: dart.fnType(dart.nullable(dart.fnType(dart.void, [])), [dart.nullable(text_selection.TextSelectionControls)]),
    [_semanticsOnCut]: dart.fnType(dart.nullable(dart.fnType(dart.void, [])), [dart.nullable(text_selection.TextSelectionControls)]),
    [_semanticsOnPaste]: dart.fnType(dart.nullable(dart.fnType(dart.void, [])), [dart.nullable(text_selection.TextSelectionControls)]),
    buildTextSpan: dart.fnType(text_span.TextSpan, [])
  }));
  dart.setGetterSignature(editable_text.EditableTextState, () => ({
    __proto__: dart.getGetters(editable_text.EditableTextState.__proto__),
    [_cursorBlinkOpacityController]: animation_controller.AnimationController,
    currentAutofillScope: dart.nullable(autofill.AutofillScope),
    [_shouldCreateInputConnection]: core.bool,
    [_floatingCursorResetController]: animation_controller.AnimationController,
    wantKeepAlive: core.bool,
    [_cursorColor]: ui.Color,
    cutEnabled: core.bool,
    copyEnabled: core.bool,
    pasteEnabled: core.bool,
    selectAllEnabled: core.bool,
    currentTextEditingValue: text_input.TextEditingValue,
    [_floatingCursorOffset]: ui.Offset,
    [_value$1]: text_input.TextEditingValue,
    [_hasFocus]: core.bool,
    [_isMultiline]: core.bool,
    [_hasInputConnection]: core.bool,
    [_needsAutofill]: core.bool,
    [_shouldBeInAutofillContext]: core.bool,
    [_lastBottomViewInset]: core.double,
    [_whitespaceFormatter]: editable_text._WhitespaceDirectionalityFormatter,
    cursorCurrentlyVisible: core.bool,
    cursorBlinkInterval: core.Duration,
    selectionOverlay: dart.nullable(text_selection.TextSelectionOverlay),
    [_textDirection$0]: ui.TextDirection,
    renderEditable: editable.RenderEditable,
    textEditingValue: text_input.TextEditingValue,
    [_devicePixelRatio]: core.double,
    autofillId: core.String,
    textInputConfiguration: text_input.TextInputConfiguration
  }));
  dart.setSetterSignature(editable_text.EditableTextState, () => ({
    __proto__: dart.getSetters(editable_text.EditableTextState.__proto__),
    [_cursorBlinkOpacityController]: animation_controller.AnimationController,
    [_floatingCursorResetController]: animation_controller.AnimationController,
    [_value$1]: text_input.TextEditingValue,
    [_lastBottomViewInset]: core.double,
    textEditingValue: text_input.TextEditingValue
  }));
  dart.setLibraryUri(editable_text.EditableTextState, L61);
  dart.setFieldSignature(editable_text.EditableTextState, () => ({
    __proto__: dart.getFields(editable_text.EditableTextState.__proto__),
    [_cursorTimer]: dart.fieldType(dart.nullable(async.Timer)),
    [_targetCursorVisibility]: dart.fieldType(core.bool),
    [_cursorVisibilityNotifier]: dart.finalFieldType(change_notifier.ValueNotifier$(core.bool)),
    [_editableKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_clipboardStatus]: dart.finalFieldType(dart.nullable(text_selection.ClipboardStatusNotifier)),
    [_textInputConnection]: dart.fieldType(dart.nullable(text_input.TextInputConnection)),
    [_selectionOverlay]: dart.fieldType(dart.nullable(text_selection.TextSelectionOverlay)),
    [_scrollController]: dart.fieldType(dart.nullable(scroll_controller.ScrollController)),
    [__EditableTextState__cursorBlinkOpacityController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [__EditableTextState__cursorBlinkOpacityController_isSet]: dart.fieldType(core.bool),
    [_toolbarLayerLink]: dart.finalFieldType(layer.LayerLink),
    [_startHandleLayerLink]: dart.finalFieldType(layer.LayerLink),
    [_endHandleLayerLink]: dart.finalFieldType(layer.LayerLink),
    [_didAutoFocus]: dart.fieldType(core.bool),
    [_focusAttachment]: dart.fieldType(dart.nullable(focus_manager.FocusAttachment)),
    [_currentAutofillScope]: dart.fieldType(dart.nullable(autofill$.AutofillGroupState)),
    [_isInAutofillContext]: dart.fieldType(core.bool),
    [__EditableTextState__floatingCursorResetController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [__EditableTextState__floatingCursorResetController_isSet]: dart.fieldType(core.bool),
    [_lastKnownRemoteTextEditingValue]: dart.fieldType(dart.nullable(text_input.TextEditingValue)),
    [_startCaretRect]: dart.fieldType(dart.nullable(ui.Rect)),
    [_lastTextPosition]: dart.fieldType(dart.nullable(ui.TextPosition)),
    [_pointOffsetOrigin]: dart.fieldType(dart.nullable(ui.Offset)),
    [_lastBoundedOffset]: dart.fieldType(dart.nullable(ui.Offset)),
    [_batchEditDepth]: dart.fieldType(core.int),
    [_textChangedSinceLastCaretUpdate]: dart.fieldType(core.bool),
    [_currentCaretRect]: dart.fieldType(dart.nullable(ui.Rect)),
    [_showCaretOnScreenScheduled]: dart.fieldType(core.bool),
    [__EditableTextState__lastBottomViewInset]: dart.fieldType(dart.nullable(core.double)),
    [__EditableTextState__lastBottomViewInset_isSet]: dart.fieldType(core.bool),
    [__EditableTextState__whitespaceFormatter]: dart.fieldType(dart.nullable(editable_text._WhitespaceDirectionalityFormatter)),
    [__EditableTextState__whitespaceFormatter_isSet]: dart.fieldType(core.bool),
    [_obscureShowCharTicksPending]: dart.fieldType(core.int),
    [_obscureLatestCharIndex]: dart.fieldType(dart.nullable(core.int)),
    [_currentPromptRectRange]: dart.fieldType(dart.nullable(ui.TextRange))
  }));
  dart.defineLazy(editable_text.EditableTextState, {
    /*editable_text.EditableTextState._fadeDuration*/get _fadeDuration() {
      return C1022 || CT.C1022;
    },
    /*editable_text.EditableTextState._floatingCursorResetTime*/get _floatingCursorResetTime() {
      return C1023 || CT.C1023;
    },
    /*editable_text.EditableTextState._caretAnimationDuration*/get _caretAnimationDuration() {
      return C768 || CT.C768;
    },
    /*editable_text.EditableTextState._caretAnimationCurve*/get _caretAnimationCurve() {
      return C1024 || CT.C1024;
    }
  }, false);
  var textSpan$0 = dart.privateName(editable_text, "_Editable.textSpan");
  var value$ = dart.privateName(editable_text, "_Editable.value");
  var cursorColor$0 = dart.privateName(editable_text, "_Editable.cursorColor");
  var startHandleLayerLink$1 = dart.privateName(editable_text, "_Editable.startHandleLayerLink");
  var endHandleLayerLink$1 = dart.privateName(editable_text, "_Editable.endHandleLayerLink");
  var backgroundCursorColor$0 = dart.privateName(editable_text, "_Editable.backgroundCursorColor");
  var showCursor$0 = dart.privateName(editable_text, "_Editable.showCursor");
  var forceLine$0 = dart.privateName(editable_text, "_Editable.forceLine");
  var readOnly$0 = dart.privateName(editable_text, "_Editable.readOnly");
  var hasFocus$ = dart.privateName(editable_text, "_Editable.hasFocus");
  var maxLines$3 = dart.privateName(editable_text, "_Editable.maxLines");
  var minLines$0 = dart.privateName(editable_text, "_Editable.minLines");
  var expands$0 = dart.privateName(editable_text, "_Editable.expands");
  var strutStyle$0 = dart.privateName(editable_text, "_Editable.strutStyle");
  var selectionColor$0 = dart.privateName(editable_text, "_Editable.selectionColor");
  var textScaleFactor$2 = dart.privateName(editable_text, "_Editable.textScaleFactor");
  var textAlign$3 = dart.privateName(editable_text, "_Editable.textAlign");
  var textDirection$4 = dart.privateName(editable_text, "_Editable.textDirection");
  var locale$3 = dart.privateName(editable_text, "_Editable.locale");
  var obscuringCharacter$0 = dart.privateName(editable_text, "_Editable.obscuringCharacter");
  var obscureText$0 = dart.privateName(editable_text, "_Editable.obscureText");
  var textHeightBehavior$3 = dart.privateName(editable_text, "_Editable.textHeightBehavior");
  var textWidthBasis$2 = dart.privateName(editable_text, "_Editable.textWidthBasis");
  var autocorrect$0 = dart.privateName(editable_text, "_Editable.autocorrect");
  var smartDashesType$0 = dart.privateName(editable_text, "_Editable.smartDashesType");
  var smartQuotesType$0 = dart.privateName(editable_text, "_Editable.smartQuotesType");
  var enableSuggestions$0 = dart.privateName(editable_text, "_Editable.enableSuggestions");
  var offset$1 = dart.privateName(editable_text, "_Editable.offset");
  var onSelectionChanged$0 = dart.privateName(editable_text, "_Editable.onSelectionChanged");
  var onCaretChanged$ = dart.privateName(editable_text, "_Editable.onCaretChanged");
  var rendererIgnoresPointer$0 = dart.privateName(editable_text, "_Editable.rendererIgnoresPointer");
  var cursorWidth$0 = dart.privateName(editable_text, "_Editable.cursorWidth");
  var cursorHeight$0 = dart.privateName(editable_text, "_Editable.cursorHeight");
  var cursorRadius$0 = dart.privateName(editable_text, "_Editable.cursorRadius");
  var cursorOffset$0 = dart.privateName(editable_text, "_Editable.cursorOffset");
  var paintCursorAboveText$0 = dart.privateName(editable_text, "_Editable.paintCursorAboveText");
  var selectionHeightStyle$0 = dart.privateName(editable_text, "_Editable.selectionHeightStyle");
  var selectionWidthStyle$0 = dart.privateName(editable_text, "_Editable.selectionWidthStyle");
  var enableInteractiveSelection$0 = dart.privateName(editable_text, "_Editable.enableInteractiveSelection");
  var textSelectionDelegate$ = dart.privateName(editable_text, "_Editable.textSelectionDelegate");
  var devicePixelRatio$1 = dart.privateName(editable_text, "_Editable.devicePixelRatio");
  var promptRectRange$ = dart.privateName(editable_text, "_Editable.promptRectRange");
  var promptRectColor$ = dart.privateName(editable_text, "_Editable.promptRectColor");
  var clipBehavior$4 = dart.privateName(editable_text, "_Editable.clipBehavior");
  editable_text._Editable = class _Editable extends framework.LeafRenderObjectWidget {
    get textSpan() {
      return this[textSpan$0];
    }
    set textSpan(value) {
      super.textSpan = value;
    }
    get value() {
      return this[value$];
    }
    set value(value) {
      super.value = value;
    }
    get cursorColor() {
      return this[cursorColor$0];
    }
    set cursorColor(value) {
      super.cursorColor = value;
    }
    get startHandleLayerLink() {
      return this[startHandleLayerLink$1];
    }
    set startHandleLayerLink(value) {
      super.startHandleLayerLink = value;
    }
    get endHandleLayerLink() {
      return this[endHandleLayerLink$1];
    }
    set endHandleLayerLink(value) {
      super.endHandleLayerLink = value;
    }
    get backgroundCursorColor() {
      return this[backgroundCursorColor$0];
    }
    set backgroundCursorColor(value) {
      super.backgroundCursorColor = value;
    }
    get showCursor() {
      return this[showCursor$0];
    }
    set showCursor(value) {
      super.showCursor = value;
    }
    get forceLine() {
      return this[forceLine$0];
    }
    set forceLine(value) {
      super.forceLine = value;
    }
    get readOnly() {
      return this[readOnly$0];
    }
    set readOnly(value) {
      super.readOnly = value;
    }
    get hasFocus() {
      return this[hasFocus$];
    }
    set hasFocus(value) {
      super.hasFocus = value;
    }
    get maxLines() {
      return this[maxLines$3];
    }
    set maxLines(value) {
      super.maxLines = value;
    }
    get minLines() {
      return this[minLines$0];
    }
    set minLines(value) {
      super.minLines = value;
    }
    get expands() {
      return this[expands$0];
    }
    set expands(value) {
      super.expands = value;
    }
    get strutStyle() {
      return this[strutStyle$0];
    }
    set strutStyle(value) {
      super.strutStyle = value;
    }
    get selectionColor() {
      return this[selectionColor$0];
    }
    set selectionColor(value) {
      super.selectionColor = value;
    }
    get textScaleFactor() {
      return this[textScaleFactor$2];
    }
    set textScaleFactor(value) {
      super.textScaleFactor = value;
    }
    get textAlign() {
      return this[textAlign$3];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get textDirection() {
      return this[textDirection$4];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get locale() {
      return this[locale$3];
    }
    set locale(value) {
      super.locale = value;
    }
    get obscuringCharacter() {
      return this[obscuringCharacter$0];
    }
    set obscuringCharacter(value) {
      super.obscuringCharacter = value;
    }
    get obscureText() {
      return this[obscureText$0];
    }
    set obscureText(value) {
      super.obscureText = value;
    }
    get textHeightBehavior() {
      return this[textHeightBehavior$3];
    }
    set textHeightBehavior(value) {
      super.textHeightBehavior = value;
    }
    get textWidthBasis() {
      return this[textWidthBasis$2];
    }
    set textWidthBasis(value) {
      super.textWidthBasis = value;
    }
    get autocorrect() {
      return this[autocorrect$0];
    }
    set autocorrect(value) {
      super.autocorrect = value;
    }
    get smartDashesType() {
      return this[smartDashesType$0];
    }
    set smartDashesType(value) {
      super.smartDashesType = value;
    }
    get smartQuotesType() {
      return this[smartQuotesType$0];
    }
    set smartQuotesType(value) {
      super.smartQuotesType = value;
    }
    get enableSuggestions() {
      return this[enableSuggestions$0];
    }
    set enableSuggestions(value) {
      super.enableSuggestions = value;
    }
    get offset() {
      return this[offset$1];
    }
    set offset(value) {
      super.offset = value;
    }
    get onSelectionChanged() {
      return this[onSelectionChanged$0];
    }
    set onSelectionChanged(value) {
      super.onSelectionChanged = value;
    }
    get onCaretChanged() {
      return this[onCaretChanged$];
    }
    set onCaretChanged(value) {
      super.onCaretChanged = value;
    }
    get rendererIgnoresPointer() {
      return this[rendererIgnoresPointer$0];
    }
    set rendererIgnoresPointer(value) {
      super.rendererIgnoresPointer = value;
    }
    get cursorWidth() {
      return this[cursorWidth$0];
    }
    set cursorWidth(value) {
      super.cursorWidth = value;
    }
    get cursorHeight() {
      return this[cursorHeight$0];
    }
    set cursorHeight(value) {
      super.cursorHeight = value;
    }
    get cursorRadius() {
      return this[cursorRadius$0];
    }
    set cursorRadius(value) {
      super.cursorRadius = value;
    }
    get cursorOffset() {
      return this[cursorOffset$0];
    }
    set cursorOffset(value) {
      super.cursorOffset = value;
    }
    get paintCursorAboveText() {
      return this[paintCursorAboveText$0];
    }
    set paintCursorAboveText(value) {
      super.paintCursorAboveText = value;
    }
    get selectionHeightStyle() {
      return this[selectionHeightStyle$0];
    }
    set selectionHeightStyle(value) {
      super.selectionHeightStyle = value;
    }
    get selectionWidthStyle() {
      return this[selectionWidthStyle$0];
    }
    set selectionWidthStyle(value) {
      super.selectionWidthStyle = value;
    }
    get enableInteractiveSelection() {
      return this[enableInteractiveSelection$0];
    }
    set enableInteractiveSelection(value) {
      super.enableInteractiveSelection = value;
    }
    get textSelectionDelegate() {
      return this[textSelectionDelegate$];
    }
    set textSelectionDelegate(value) {
      super.textSelectionDelegate = value;
    }
    get devicePixelRatio() {
      return this[devicePixelRatio$1];
    }
    set devicePixelRatio(value) {
      super.devicePixelRatio = value;
    }
    get promptRectRange() {
      return this[promptRectRange$];
    }
    set promptRectRange(value) {
      super.promptRectRange = value;
    }
    get promptRectColor() {
      return this[promptRectColor$];
    }
    set promptRectColor(value) {
      super.promptRectColor = value;
    }
    get clipBehavior() {
      return this[clipBehavior$4];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    createRenderObject(context) {
      let t76;
      if (context == null) dart.nullFailed(L60, 2706, 50, "context");
      return new editable.RenderEditable.new({text: this.textSpan, cursorColor: this.cursorColor, startHandleLayerLink: this.startHandleLayerLink, endHandleLayerLink: this.endHandleLayerLink, backgroundCursorColor: this.backgroundCursorColor, showCursor: this.showCursor, forceLine: this.forceLine, readOnly: this.readOnly, hasFocus: this.hasFocus, maxLines: this.maxLines, minLines: this.minLines, expands: this.expands, strutStyle: this.strutStyle, selectionColor: this.selectionColor, textScaleFactor: this.textScaleFactor, textAlign: this.textAlign, textDirection: this.textDirection, locale: (t76 = this.locale, t76 == null ? localizations.Localizations.maybeLocaleOf(context) : t76), selection: this.value.selection, offset: this.offset, onSelectionChanged: this.onSelectionChanged, onCaretChanged: this.onCaretChanged, ignorePointer: this.rendererIgnoresPointer, obscuringCharacter: this.obscuringCharacter, obscureText: this.obscureText, textHeightBehavior: this.textHeightBehavior, textWidthBasis: this.textWidthBasis, cursorWidth: this.cursorWidth, cursorHeight: this.cursorHeight, cursorRadius: this.cursorRadius, cursorOffset: this.cursorOffset, paintCursorAboveText: this.paintCursorAboveText, selectionHeightStyle: this.selectionHeightStyle, selectionWidthStyle: this.selectionWidthStyle, enableInteractiveSelection: this.enableInteractiveSelection, textSelectionDelegate: this.textSelectionDelegate, devicePixelRatio: this.devicePixelRatio, promptRectRange: this.promptRectRange, promptRectColor: this.promptRectColor, clipBehavior: this.clipBehavior});
    }
    updateRenderObject(context, renderObject) {
      let t77, t76;
      if (context == null) dart.nullFailed(L60, 2752, 40, "context");
      editable.RenderEditable.as(renderObject);
      if (renderObject == null) dart.nullFailed(L60, 2752, 64, "renderObject");
      t76 = renderObject;
      (() => {
        t76.text = this.textSpan;
        t76.cursorColor = this.cursorColor;
        t76.startHandleLayerLink = this.startHandleLayerLink;
        t76.endHandleLayerLink = this.endHandleLayerLink;
        t76.showCursor = this.showCursor;
        t76.forceLine = this.forceLine;
        t76.readOnly = this.readOnly;
        t76.hasFocus = this.hasFocus;
        t76.maxLines = this.maxLines;
        t76.minLines = this.minLines;
        t76.expands = this.expands;
        t76.strutStyle = this.strutStyle;
        t76.selectionColor = this.selectionColor;
        t76.textScaleFactor = this.textScaleFactor;
        t76.textAlign = this.textAlign;
        t76.textDirection = this.textDirection;
        t76.locale = (t77 = this.locale, t77 == null ? localizations.Localizations.maybeLocaleOf(context) : t77);
        t76.selection = this.value.selection;
        t76.offset = this.offset;
        t76.onSelectionChanged = this.onSelectionChanged;
        t76.onCaretChanged = this.onCaretChanged;
        t76.ignorePointer = this.rendererIgnoresPointer;
        t76.textHeightBehavior = this.textHeightBehavior;
        t76.textWidthBasis = this.textWidthBasis;
        t76.obscuringCharacter = this.obscuringCharacter;
        t76.obscureText = this.obscureText;
        t76.cursorWidth = this.cursorWidth;
        t76.cursorHeight = this.cursorHeight;
        t76.cursorRadius = this.cursorRadius;
        t76.cursorOffset = this.cursorOffset;
        t76.selectionHeightStyle = this.selectionHeightStyle;
        t76.selectionWidthStyle = this.selectionWidthStyle;
        t76.textSelectionDelegate = this.textSelectionDelegate;
        t76.devicePixelRatio = this.devicePixelRatio;
        t76.paintCursorAboveText = this.paintCursorAboveText;
        t76.promptRectColor = this.promptRectColor;
        t76.clipBehavior = this.clipBehavior;
        t76.setPromptRectRange(this.promptRectRange);
        return t76;
      })();
    }
  };
  (editable_text._Editable.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textSpan = opts && 'textSpan' in opts ? opts.textSpan : null;
    if (textSpan == null) dart.nullFailed(L60, 2612, 19, "textSpan");
    let value = opts && 'value' in opts ? opts.value : null;
    if (value == null) dart.nullFailed(L60, 2613, 19, "value");
    let startHandleLayerLink = opts && 'startHandleLayerLink' in opts ? opts.startHandleLayerLink : null;
    if (startHandleLayerLink == null) dart.nullFailed(L60, 2614, 19, "startHandleLayerLink");
    let endHandleLayerLink = opts && 'endHandleLayerLink' in opts ? opts.endHandleLayerLink : null;
    if (endHandleLayerLink == null) dart.nullFailed(L60, 2615, 19, "endHandleLayerLink");
    let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
    let backgroundCursorColor = opts && 'backgroundCursorColor' in opts ? opts.backgroundCursorColor : null;
    let showCursor = opts && 'showCursor' in opts ? opts.showCursor : null;
    if (showCursor == null) dart.nullFailed(L60, 2618, 19, "showCursor");
    let forceLine = opts && 'forceLine' in opts ? opts.forceLine : null;
    if (forceLine == null) dart.nullFailed(L60, 2619, 19, "forceLine");
    let readOnly = opts && 'readOnly' in opts ? opts.readOnly : null;
    if (readOnly == null) dart.nullFailed(L60, 2620, 19, "readOnly");
    let textHeightBehavior = opts && 'textHeightBehavior' in opts ? opts.textHeightBehavior : null;
    let textWidthBasis = opts && 'textWidthBasis' in opts ? opts.textWidthBasis : null;
    if (textWidthBasis == null) dart.nullFailed(L60, 2622, 19, "textWidthBasis");
    let hasFocus = opts && 'hasFocus' in opts ? opts.hasFocus : null;
    if (hasFocus == null) dart.nullFailed(L60, 2623, 19, "hasFocus");
    let maxLines = opts && 'maxLines' in opts ? opts.maxLines : null;
    let minLines = opts && 'minLines' in opts ? opts.minLines : null;
    let expands = opts && 'expands' in opts ? opts.expands : null;
    if (expands == null) dart.nullFailed(L60, 2626, 19, "expands");
    let strutStyle = opts && 'strutStyle' in opts ? opts.strutStyle : null;
    let selectionColor = opts && 'selectionColor' in opts ? opts.selectionColor : null;
    let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
    if (textScaleFactor == null) dart.nullFailed(L60, 2629, 19, "textScaleFactor");
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    if (textAlign == null) dart.nullFailed(L60, 2630, 19, "textAlign");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(L60, 2631, 19, "textDirection");
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let obscuringCharacter = opts && 'obscuringCharacter' in opts ? opts.obscuringCharacter : null;
    if (obscuringCharacter == null) dart.nullFailed(L60, 2633, 19, "obscuringCharacter");
    let obscureText = opts && 'obscureText' in opts ? opts.obscureText : null;
    if (obscureText == null) dart.nullFailed(L60, 2634, 19, "obscureText");
    let autocorrect = opts && 'autocorrect' in opts ? opts.autocorrect : null;
    if (autocorrect == null) dart.nullFailed(L60, 2635, 19, "autocorrect");
    let smartDashesType = opts && 'smartDashesType' in opts ? opts.smartDashesType : null;
    if (smartDashesType == null) dart.nullFailed(L60, 2636, 19, "smartDashesType");
    let smartQuotesType = opts && 'smartQuotesType' in opts ? opts.smartQuotesType : null;
    if (smartQuotesType == null) dart.nullFailed(L60, 2637, 19, "smartQuotesType");
    let enableSuggestions = opts && 'enableSuggestions' in opts ? opts.enableSuggestions : null;
    if (enableSuggestions == null) dart.nullFailed(L60, 2638, 19, "enableSuggestions");
    let offset = opts && 'offset' in opts ? opts.offset : null;
    if (offset == null) dart.nullFailed(L60, 2639, 19, "offset");
    let onSelectionChanged = opts && 'onSelectionChanged' in opts ? opts.onSelectionChanged : null;
    let onCaretChanged = opts && 'onCaretChanged' in opts ? opts.onCaretChanged : null;
    let rendererIgnoresPointer = opts && 'rendererIgnoresPointer' in opts ? opts.rendererIgnoresPointer : false;
    if (rendererIgnoresPointer == null) dart.nullFailed(L60, 2642, 10, "rendererIgnoresPointer");
    let cursorWidth = opts && 'cursorWidth' in opts ? opts.cursorWidth : null;
    if (cursorWidth == null) dart.nullFailed(L60, 2643, 19, "cursorWidth");
    let cursorHeight = opts && 'cursorHeight' in opts ? opts.cursorHeight : null;
    let cursorRadius = opts && 'cursorRadius' in opts ? opts.cursorRadius : null;
    let cursorOffset = opts && 'cursorOffset' in opts ? opts.cursorOffset : null;
    let paintCursorAboveText = opts && 'paintCursorAboveText' in opts ? opts.paintCursorAboveText : null;
    if (paintCursorAboveText == null) dart.nullFailed(L60, 2647, 19, "paintCursorAboveText");
    let selectionHeightStyle = opts && 'selectionHeightStyle' in opts ? opts.selectionHeightStyle : C918 || CT.C918;
    if (selectionHeightStyle == null) dart.nullFailed(L60, 2648, 10, "selectionHeightStyle");
    let selectionWidthStyle = opts && 'selectionWidthStyle' in opts ? opts.selectionWidthStyle : C919 || CT.C919;
    if (selectionWidthStyle == null) dart.nullFailed(L60, 2649, 10, "selectionWidthStyle");
    let enableInteractiveSelection = opts && 'enableInteractiveSelection' in opts ? opts.enableInteractiveSelection : true;
    if (enableInteractiveSelection == null) dart.nullFailed(L60, 2650, 10, "enableInteractiveSelection");
    let textSelectionDelegate = opts && 'textSelectionDelegate' in opts ? opts.textSelectionDelegate : null;
    if (textSelectionDelegate == null) dart.nullFailed(L60, 2651, 19, "textSelectionDelegate");
    let devicePixelRatio = opts && 'devicePixelRatio' in opts ? opts.devicePixelRatio : null;
    if (devicePixelRatio == null) dart.nullFailed(L60, 2652, 19, "devicePixelRatio");
    let promptRectRange = opts && 'promptRectRange' in opts ? opts.promptRectRange : null;
    let promptRectColor = opts && 'promptRectColor' in opts ? opts.promptRectColor : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    if (clipBehavior == null) dart.nullFailed(L60, 2655, 19, "clipBehavior");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[textSpan$0] = textSpan;
    this[value$] = value;
    this[startHandleLayerLink$1] = startHandleLayerLink;
    this[endHandleLayerLink$1] = endHandleLayerLink;
    this[cursorColor$0] = cursorColor;
    this[backgroundCursorColor$0] = backgroundCursorColor;
    this[showCursor$0] = showCursor;
    this[forceLine$0] = forceLine;
    this[readOnly$0] = readOnly;
    this[textHeightBehavior$3] = textHeightBehavior;
    this[textWidthBasis$2] = textWidthBasis;
    this[hasFocus$] = hasFocus;
    this[maxLines$3] = maxLines;
    this[minLines$0] = minLines;
    this[expands$0] = expands;
    this[strutStyle$0] = strutStyle;
    this[selectionColor$0] = selectionColor;
    this[textScaleFactor$2] = textScaleFactor;
    this[textAlign$3] = textAlign;
    this[textDirection$4] = textDirection;
    this[locale$3] = locale;
    this[obscuringCharacter$0] = obscuringCharacter;
    this[obscureText$0] = obscureText;
    this[autocorrect$0] = autocorrect;
    this[smartDashesType$0] = smartDashesType;
    this[smartQuotesType$0] = smartQuotesType;
    this[enableSuggestions$0] = enableSuggestions;
    this[offset$1] = offset;
    this[onSelectionChanged$0] = onSelectionChanged;
    this[onCaretChanged$] = onCaretChanged;
    this[rendererIgnoresPointer$0] = rendererIgnoresPointer;
    this[cursorWidth$0] = cursorWidth;
    this[cursorHeight$0] = cursorHeight;
    this[cursorRadius$0] = cursorRadius;
    this[cursorOffset$0] = cursorOffset;
    this[paintCursorAboveText$0] = paintCursorAboveText;
    this[selectionHeightStyle$0] = selectionHeightStyle;
    this[selectionWidthStyle$0] = selectionWidthStyle;
    this[enableInteractiveSelection$0] = enableInteractiveSelection;
    this[textSelectionDelegate$] = textSelectionDelegate;
    this[devicePixelRatio$1] = devicePixelRatio;
    this[promptRectRange$] = promptRectRange;
    this[promptRectColor$] = promptRectColor;
    this[clipBehavior$4] = clipBehavior;
    if (!(textDirection != null)) dart.assertFailed(null, L60, 2656, 15, "textDirection != null");
    if (!(rendererIgnoresPointer != null)) dart.assertFailed(null, L60, 2657, 15, "rendererIgnoresPointer != null");
    editable_text._Editable.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = editable_text._Editable.prototype;
  dart.addTypeTests(editable_text._Editable);
  dart.addTypeCaches(editable_text._Editable);
  dart.setMethodSignature(editable_text._Editable, () => ({
    __proto__: dart.getMethods(editable_text._Editable.__proto__),
    createRenderObject: dart.fnType(editable.RenderEditable, [framework.BuildContext])
  }));
  dart.setLibraryUri(editable_text._Editable, L61);
  dart.setFieldSignature(editable_text._Editable, () => ({
    __proto__: dart.getFields(editable_text._Editable.__proto__),
    textSpan: dart.finalFieldType(text_span.TextSpan),
    value: dart.finalFieldType(text_input.TextEditingValue),
    cursorColor: dart.finalFieldType(dart.nullable(ui.Color)),
    startHandleLayerLink: dart.finalFieldType(layer.LayerLink),
    endHandleLayerLink: dart.finalFieldType(layer.LayerLink),
    backgroundCursorColor: dart.finalFieldType(dart.nullable(ui.Color)),
    showCursor: dart.finalFieldType(change_notifier.ValueNotifier$(core.bool)),
    forceLine: dart.finalFieldType(core.bool),
    readOnly: dart.finalFieldType(core.bool),
    hasFocus: dart.finalFieldType(core.bool),
    maxLines: dart.finalFieldType(dart.nullable(core.int)),
    minLines: dart.finalFieldType(dart.nullable(core.int)),
    expands: dart.finalFieldType(core.bool),
    strutStyle: dart.finalFieldType(dart.nullable(strut_style.StrutStyle)),
    selectionColor: dart.finalFieldType(dart.nullable(ui.Color)),
    textScaleFactor: dart.finalFieldType(core.double),
    textAlign: dart.finalFieldType(ui.TextAlign),
    textDirection: dart.finalFieldType(ui.TextDirection),
    locale: dart.finalFieldType(dart.nullable(ui.Locale)),
    obscuringCharacter: dart.finalFieldType(core.String),
    obscureText: dart.finalFieldType(core.bool),
    textHeightBehavior: dart.finalFieldType(dart.nullable(ui.TextHeightBehavior)),
    textWidthBasis: dart.finalFieldType(text_painter.TextWidthBasis),
    autocorrect: dart.finalFieldType(core.bool),
    smartDashesType: dart.finalFieldType(text_input.SmartDashesType),
    smartQuotesType: dart.finalFieldType(text_input.SmartQuotesType),
    enableSuggestions: dart.finalFieldType(core.bool),
    offset: dart.finalFieldType(viewport_offset.ViewportOffset),
    onSelectionChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [text_editing.TextSelection, editable.RenderEditable, editable.SelectionChangedCause]))),
    onCaretChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [ui.Rect]))),
    rendererIgnoresPointer: dart.finalFieldType(core.bool),
    cursorWidth: dart.finalFieldType(core.double),
    cursorHeight: dart.finalFieldType(dart.nullable(core.double)),
    cursorRadius: dart.finalFieldType(dart.nullable(ui.Radius)),
    cursorOffset: dart.finalFieldType(dart.nullable(ui.Offset)),
    paintCursorAboveText: dart.finalFieldType(core.bool),
    selectionHeightStyle: dart.finalFieldType(ui.BoxHeightStyle),
    selectionWidthStyle: dart.finalFieldType(ui.BoxWidthStyle),
    enableInteractiveSelection: dart.finalFieldType(core.bool),
    textSelectionDelegate: dart.finalFieldType(text_input.TextSelectionDelegate),
    devicePixelRatio: dart.finalFieldType(core.double),
    promptRectRange: dart.finalFieldType(dart.nullable(ui.TextRange)),
    promptRectColor: dart.finalFieldType(dart.nullable(ui.Color)),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var _ltrRegExp = dart.privateName(editable_text, "_ltrRegExp");
  var _rtlRegExp = dart.privateName(editable_text, "_rtlRegExp");
  var _whitespaceRegExp = dart.privateName(editable_text, "_whitespaceRegExp");
  var _hasOpposingDirection = dart.privateName(editable_text, "_hasOpposingDirection");
  var _baseDirection = dart.privateName(editable_text, "_baseDirection");
  var _previousNonWhitespaceDirection = dart.privateName(editable_text, "_previousNonWhitespaceDirection");
  editable_text._WhitespaceDirectionalityFormatter = class _WhitespaceDirectionalityFormatter extends text_formatter.TextInputFormatter {
    formatEditUpdate(oldValue, newValue) {
      if (oldValue == null) dart.nullFailed(L60, 2847, 22, "oldValue");
      if (newValue == null) dart.nullFailed(L60, 2848, 22, "newValue");
      if (!dart.test(this[_hasOpposingDirection])) {
        this[_hasOpposingDirection] = dart.equals(this[_baseDirection], ui.TextDirection.ltr) ? this[_rtlRegExp].hasMatch(newValue.text) : this[_ltrRegExp].hasMatch(newValue.text);
      }
      if (dart.test(this[_hasOpposingDirection])) {
        this[_previousNonWhitespaceDirection] = this[_baseDirection];
        let outputCodepoints = JSArrayOfint().of([]);
        let selectionBase = newValue.selection.baseOffset;
        let selectionExtent = newValue.selection.extentOffset;
        let composingStart = newValue.composing.start;
        let composingEnd = newValue.composing.end;
        function addToLength() {
          selectionBase = dart.notNull(selectionBase) + (dart.notNull(outputCodepoints[$length]) <= dart.notNull(selectionBase) ? 1 : 0);
          selectionExtent = dart.notNull(selectionExtent) + (dart.notNull(outputCodepoints[$length]) <= dart.notNull(selectionExtent) ? 1 : 0);
          composingStart = dart.notNull(composingStart) + (dart.notNull(outputCodepoints[$length]) <= dart.notNull(composingStart) ? 1 : 0);
          composingEnd = dart.notNull(composingEnd) + (dart.notNull(outputCodepoints[$length]) <= dart.notNull(composingEnd) ? 1 : 0);
        }
        dart.fn(addToLength, VoidTovoid());
        function subtractFromLength() {
          selectionBase = dart.notNull(selectionBase) - (dart.notNull(outputCodepoints[$length]) < dart.notNull(selectionBase) ? 1 : 0);
          selectionExtent = dart.notNull(selectionExtent) - (dart.notNull(outputCodepoints[$length]) < dart.notNull(selectionExtent) ? 1 : 0);
          composingStart = dart.notNull(composingStart) - (dart.notNull(outputCodepoints[$length]) < dart.notNull(composingStart) ? 1 : 0);
          composingEnd = dart.notNull(composingEnd) - (dart.notNull(outputCodepoints[$length]) < dart.notNull(composingEnd) ? 1 : 0);
        }
        dart.fn(subtractFromLength, VoidTovoid());
        let isBackspace = dart.notNull(oldValue.text[$runes][$length]) - dart.notNull(newValue.text[$runes][$length]) === 1 && dart.test(this.isDirectionalityMarker(oldValue.text[$runes].last)) && oldValue.text[$substring](0, oldValue.text.length - 1) === newValue.text;
        let previousWasWhitespace = false;
        let previousWasDirectionalityMarker = false;
        let previousNonWhitespaceCodepoint = null;
        let index = 0;
        for (let codepoint of newValue.text[$runes]) {
          if (dart.test(this.isWhitespace(codepoint))) {
            if (!previousWasWhitespace && previousNonWhitespaceCodepoint != null) {
              this[_previousNonWhitespaceDirection] = this.getDirection(previousNonWhitespaceCodepoint);
            }
            if (previousWasWhitespace) {
              subtractFromLength();
              outputCodepoints[$removeLast]();
            }
            if (isBackspace && index === dart.notNull(newValue.text[$runes][$length]) - 1) {
              subtractFromLength();
            } else {
              outputCodepoints[$add](codepoint);
              addToLength();
              outputCodepoints[$add](dart.equals(this[_previousNonWhitespaceDirection], ui.TextDirection.rtl) ? 8207 : 8206);
            }
            previousWasWhitespace = true;
            previousWasDirectionalityMarker = false;
          } else if (dart.test(this.isDirectionalityMarker(codepoint))) {
            if (previousWasWhitespace) {
              subtractFromLength();
              outputCodepoints[$removeLast]();
            }
            outputCodepoints[$add](codepoint);
            previousWasWhitespace = false;
            previousWasDirectionalityMarker = true;
          } else {
            if (!previousWasDirectionalityMarker && previousWasWhitespace && dart.equals(this.getDirection(codepoint), this[_previousNonWhitespaceDirection])) {
              subtractFromLength();
              outputCodepoints[$removeLast]();
            }
            previousNonWhitespaceCodepoint = codepoint;
            outputCodepoints[$add](codepoint);
            previousWasWhitespace = false;
            previousWasDirectionalityMarker = false;
          }
          index = index + 1;
        }
        let formatted = core.String.fromCharCodes(outputCodepoints);
        return new text_input.TextEditingValue.new({text: formatted, selection: new text_editing.TextSelection.new({baseOffset: selectionBase, extentOffset: selectionExtent, affinity: newValue.selection.affinity, isDirectional: newValue.selection.isDirectional}), composing: new ui.TextRange.new({start: composingStart, end: composingEnd})});
      }
      return newValue;
    }
    isWhitespace(value) {
      if (value == null) dart.nullFailed(L60, 2961, 25, "value");
      return this[_whitespaceRegExp].hasMatch(core.String.fromCharCode(value));
    }
    isDirectionalityMarker(value) {
      if (value == null) dart.nullFailed(L60, 2965, 35, "value");
      return value === 8207 || value === 8206;
    }
    getDirection(value) {
      if (value == null) dart.nullFailed(L60, 2969, 34, "value");
      return dart.test(this[_ltrRegExp].hasMatch(core.String.fromCharCode(value))) ? ui.TextDirection.ltr : ui.TextDirection.rtl;
    }
  };
  (editable_text._WhitespaceDirectionalityFormatter.new = function(opts) {
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    this[_ltrRegExp] = core.RegExp.new("[A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF]");
    this[_rtlRegExp] = core.RegExp.new("[\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC]");
    this[_whitespaceRegExp] = core.RegExp.new("\\s");
    this[_hasOpposingDirection] = false;
    this[_baseDirection] = textDirection;
    this[_previousNonWhitespaceDirection] = textDirection;
    ;
  }).prototype = editable_text._WhitespaceDirectionalityFormatter.prototype;
  dart.addTypeTests(editable_text._WhitespaceDirectionalityFormatter);
  dart.addTypeCaches(editable_text._WhitespaceDirectionalityFormatter);
  dart.setMethodSignature(editable_text._WhitespaceDirectionalityFormatter, () => ({
    __proto__: dart.getMethods(editable_text._WhitespaceDirectionalityFormatter.__proto__),
    formatEditUpdate: dart.fnType(text_input.TextEditingValue, [text_input.TextEditingValue, text_input.TextEditingValue]),
    isWhitespace: dart.fnType(core.bool, [core.int]),
    isDirectionalityMarker: dart.fnType(core.bool, [core.int]),
    getDirection: dart.fnType(ui.TextDirection, [core.int])
  }));
  dart.setLibraryUri(editable_text._WhitespaceDirectionalityFormatter, L61);
  dart.setFieldSignature(editable_text._WhitespaceDirectionalityFormatter, () => ({
    __proto__: dart.getFields(editable_text._WhitespaceDirectionalityFormatter.__proto__),
    [_ltrRegExp]: dart.finalFieldType(core.RegExp),
    [_rtlRegExp]: dart.finalFieldType(core.RegExp),
    [_whitespaceRegExp]: dart.finalFieldType(core.RegExp),
    [_baseDirection]: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    [_previousNonWhitespaceDirection]: dart.fieldType(dart.nullable(ui.TextDirection)),
    [_hasOpposingDirection]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(editable_text._WhitespaceDirectionalityFormatter, {
    /*editable_text._WhitespaceDirectionalityFormatter._rlm*/get _rlm() {
      return 8207;
    },
    /*editable_text._WhitespaceDirectionalityFormatter._lrm*/get _lrm() {
      return 8206;
    }
  }, false);
  var C1025;
  dart.defineLazy(editable_text, {
    /*editable_text._kCursorBlinkHalfPeriod*/get _kCursorBlinkHalfPeriod() {
      return C1025 || CT.C1025;
    },
    /*editable_text._kCursorBlinkWaitForStart*/get _kCursorBlinkWaitForStart() {
      return C520 || CT.C520;
    },
    /*editable_text._kObscureShowLatestCharCursorTicks*/get _kObscureShowLatestCharCursorTicks() {
      return 3;
    }
  }, false);
  focus_traversal._FocusTraversalGroupInfo = class _FocusTraversalGroupInfo extends core.Object {};
  (focus_traversal._FocusTraversalGroupInfo.new = function(marker, opts) {
    let t76, t76$, t76$0, t76$1, t76$2;
    let defaultPolicy = opts && 'defaultPolicy' in opts ? opts.defaultPolicy : null;
    let members = opts && 'members' in opts ? opts.members : null;
    this.groupNode = (t76 = marker, t76 == null ? null : t76.focusNode);
    this.policy = (t76$1 = (t76$0 = (t76$ = marker, t76$ == null ? null : t76$.policy), t76$0 == null ? defaultPolicy : t76$0), t76$1 == null ? new focus_traversal.ReadingOrderTraversalPolicy.new() : t76$1);
    this.members = (t76$2 = members, t76$2 == null ? JSArrayOfFocusNode().of([]) : t76$2);
    ;
  }).prototype = focus_traversal._FocusTraversalGroupInfo.prototype;
  dart.addTypeTests(focus_traversal._FocusTraversalGroupInfo);
  dart.addTypeCaches(focus_traversal._FocusTraversalGroupInfo);
  dart.setLibraryUri(focus_traversal._FocusTraversalGroupInfo, L103);
  dart.setFieldSignature(focus_traversal._FocusTraversalGroupInfo, () => ({
    __proto__: dart.getFields(focus_traversal._FocusTraversalGroupInfo.__proto__),
    groupNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    policy: dart.finalFieldType(focus_traversal.FocusTraversalPolicy),
    members: dart.finalFieldType(core.List$(focus_manager.FocusNode))
  }));
  var _name$20 = dart.privateName(focus_traversal, "_name");
  var C1026;
  var C1027;
  var C1028;
  var C1029;
  var C1030;
  focus_traversal.TraversalDirection = class TraversalDirection extends core.Object {
    toString() {
      return this[_name$20];
    }
  };
  (focus_traversal.TraversalDirection.new = function(index, _name) {
    if (index == null) dart.nullFailed(L104, 67, 6, "index");
    if (_name == null) dart.nullFailed(L104, 67, 6, "_name");
    this.index = index;
    this[_name$20] = _name;
    ;
  }).prototype = focus_traversal.TraversalDirection.prototype;
  dart.addTypeTests(focus_traversal.TraversalDirection);
  dart.addTypeCaches(focus_traversal.TraversalDirection);
  dart.setLibraryUri(focus_traversal.TraversalDirection, L103);
  dart.setFieldSignature(focus_traversal.TraversalDirection, () => ({
    __proto__: dart.getFields(focus_traversal.TraversalDirection.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$20]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(focus_traversal.TraversalDirection, ['toString']);
  focus_traversal.TraversalDirection.up = C1026 || CT.C1026;
  focus_traversal.TraversalDirection.right = C1027 || CT.C1027;
  focus_traversal.TraversalDirection.down = C1028 || CT.C1028;
  focus_traversal.TraversalDirection.left = C1029 || CT.C1029;
  focus_traversal.TraversalDirection.values = C1030 || CT.C1030;
  var _findInitialFocus = dart.privateName(focus_traversal, "_findInitialFocus");
  var _sortAllDescendants = dart.privateName(focus_traversal, "_sortAllDescendants");
  var _moveFocus = dart.privateName(focus_traversal, "_moveFocus");
  var _getMarker = dart.privateName(focus_traversal, "_getMarker");
  const Object_Diagnosticable$36$ = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$.new = function() {
  }).prototype = Object_Diagnosticable$36$.prototype;
  dart.applyMixin(Object_Diagnosticable$36$, diagnostics$.Diagnosticable);
  focus_traversal.FocusTraversalPolicy = class FocusTraversalPolicy extends Object_Diagnosticable$36$ {
    findFirstFocus(currentNode) {
      if (currentNode == null) dart.nullFailed(L104, 141, 39, "currentNode");
      return this[_findInitialFocus](currentNode);
    }
    findLastFocus(currentNode) {
      if (currentNode == null) dart.nullFailed(L104, 162, 37, "currentNode");
      return this[_findInitialFocus](currentNode, {fromEnd: true});
    }
    [_findInitialFocus](currentNode, opts) {
      if (currentNode == null) dart.nullFailed(L104, 164, 41, "currentNode");
      let fromEnd = opts && 'fromEnd' in opts ? opts.fromEnd : false;
      if (fromEnd == null) dart.nullFailed(L104, 164, 60, "fromEnd");
      if (!(currentNode != null)) dart.assertFailed(null, L104, 165, 12, "currentNode != null");
      let scope = dart.nullCheck(currentNode.nearestScope);
      let candidate = scope.focusedChild;
      if (candidate == null && dart.test(scope.descendants[$isNotEmpty])) {
        let sorted = this[_sortAllDescendants](scope, currentNode);
        if (dart.test(sorted[$isEmpty])) {
          candidate = null;
        } else {
          candidate = dart.test(fromEnd) ? sorted[$last] : sorted[$first];
        }
      }
      candidate == null ? candidate = currentNode : null;
      return candidate;
    }
    invalidateScopeData(node) {
      if (node == null) dart.nullFailed(L104, 203, 43, "node");
    }
    changedScope(opts) {
      let node = opts && 'node' in opts ? opts.node : null;
      let oldScope = opts && 'oldScope' in opts ? opts.oldScope : null;
    }
    next(currentNode) {
      if (currentNode == null) dart.nullFailed(L104, 225, 23, "currentNode");
      return this[_moveFocus](currentNode, {forward: true});
    }
    previous(currentNode) {
      if (currentNode == null) dart.nullFailed(L104, 237, 27, "currentNode");
      return this[_moveFocus](currentNode, {forward: false});
    }
    [_getMarker](context) {
      let t77, t76;
      return _FocusTraversalGroupMarkerN().as((t76 = context, t76 == null ? null : (t77 = t76.getElementForInheritedWidgetOfExactType(focus_traversal._FocusTraversalGroupMarker), t77 == null ? null : t77.widget)));
    }
    [_sortAllDescendants](scope, currentNode) {
      let t76, t76$, t76$0, t76$1, t77, t76$2, t77$, t76$3, t76$4;
      if (scope == null) dart.nullFailed(L104, 283, 54, "scope");
      if (currentNode == null) dart.nullFailed(L104, 283, 71, "currentNode");
      if (!(scope != null)) dart.assertFailed(null, L104, 284, 12, "scope != null");
      let scopeGroupMarker = this[_getMarker](scope.context);
      let defaultPolicy = (t76$ = (t76 = scopeGroupMarker, t76 == null ? null : t76.policy), t76$ == null ? new focus_traversal.ReadingOrderTraversalPolicy.new() : t76$);
      let groups = new (LinkedMapOfFocusNodeN$_FocusTraversalGroupInfo()).new();
      for (let node of scope.descendants) {
        let groupMarker = this[_getMarker](node.context);
        let groupNode = (t76$0 = groupMarker, t76$0 == null ? null : t76$0.focusNode);
        if (dart.equals(node, groupNode)) {
          let parentContext = focus_traversal._getAncestor(dart.nullCheck(dart.nullCheck(groupNode).context), {count: 2});
          let parentMarker = this[_getMarker](parentContext);
          let parentNode = (t76$1 = parentMarker, t76$1 == null ? null : t76$1.focusNode);
          t76$2 = groups;
          t77 = parentNode;
          t76$2[$_get](t77) == null ? t76$2[$_set](t77, new focus_traversal._FocusTraversalGroupInfo.new(parentMarker, {members: JSArrayOfFocusNode().of([]), defaultPolicy: defaultPolicy})) : null;
          if (!!dart.test(dart.nullCheck(groups[$_get](parentNode)).members[$contains](node))) dart.assertFailed(null, L104, 305, 16, "!groups[parentNode]!.members.contains(node)");
          dart.nullCheck(groups[$_get](parentNode)).members[$add](groupNode);
          continue;
        }
        if (dart.test(node.canRequestFocus) && !dart.test(node.skipTraversal)) {
          t76$3 = groups;
          t77$ = groupNode;
          t76$3[$_get](t77$) == null ? t76$3[$_set](t77$, new focus_traversal._FocusTraversalGroupInfo.new(groupMarker, {members: JSArrayOfFocusNode().of([]), defaultPolicy: defaultPolicy})) : null;
          if (!!dart.test(dart.nullCheck(groups[$_get](groupNode)).members[$contains](node))) dart.assertFailed(null, L104, 313, 16, "!groups[groupNode]!.members.contains(node)");
          dart.nullCheck(groups[$_get](groupNode)).members[$add](node);
        }
      }
      let groupKeys = groups[$keys][$toSet]();
      for (let key of groups[$keys]) {
        let sortedMembers = dart.nullCheck(groups[$_get](key)).policy.sortDescendants(dart.nullCheck(groups[$_get](key)).members, currentNode)[$toList]();
        dart.nullCheck(groups[$_get](key)).members[$clear]();
        dart.nullCheck(groups[$_get](key)).members[$addAll](sortedMembers);
      }
      let sortedDescendants = JSArrayOfFocusNode().of([]);
      function visitGroups(info) {
        if (info == null) dart.nullFailed(L104, 329, 47, "info");
        for (let node of info.members) {
          if (dart.test(groupKeys.contains(node))) {
            visitGroups(dart.nullCheck(groups[$_get](node)));
          } else {
            sortedDescendants[$add](node);
          }
        }
      }
      dart.fn(visitGroups, _FocusTraversalGroupInfoTovoid());
      visitGroups(dart.nullCheck(groups[$_get]((t76$4 = scopeGroupMarker, t76$4 == null ? null : t76$4.focusNode))));
      if (!(dart.notNull(sortedDescendants[$length]) <= dart.notNull(scope.traversalDescendants[$length]) && dart.test(sortedDescendants[$toSet]().difference(scope.traversalDescendants[$toSet]())[$isEmpty]))) dart.assertFailed("sorted descendants contains more nodes than it should: (" + dart.str(sortedDescendants[$toSet]().difference(scope.traversalDescendants[$toSet]())) + ")", L104, 343, 7, "sortedDescendants.length <= scope.traversalDescendants.length && sortedDescendants.toSet().difference(scope.traversalDescendants.toSet()).isEmpty");
      return sortedDescendants;
    }
    [_moveFocus](currentNode, opts) {
      if (currentNode == null) dart.nullFailed(L104, 364, 29, "currentNode");
      let forward = opts && 'forward' in opts ? opts.forward : null;
      if (forward == null) dart.nullFailed(L104, 364, 57, "forward");
      if (!(forward != null)) dart.assertFailed(null, L104, 365, 12, "forward != null");
      let nearestScope = dart.nullCheck(currentNode.nearestScope);
      this.invalidateScopeData(nearestScope);
      let focusedChild = nearestScope.focusedChild;
      if (focusedChild == null) {
        let firstFocus = dart.test(forward) ? this.findFirstFocus(currentNode) : this.findLastFocus(currentNode);
        if (firstFocus != null) {
          focus_traversal._focusAndEnsureVisible(firstFocus, {alignmentPolicy: dart.test(forward) ? scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtEnd : scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtStart});
          return true;
        }
      }
      let sortedNodes = this[_sortAllDescendants](nearestScope, currentNode);
      if (dart.test(forward) && dart.equals(focusedChild, sortedNodes[$last])) {
        focus_traversal._focusAndEnsureVisible(sortedNodes[$first], {alignmentPolicy: scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtEnd});
        return true;
      }
      if (!dart.test(forward) && dart.equals(focusedChild, sortedNodes[$first])) {
        focus_traversal._focusAndEnsureVisible(sortedNodes[$last], {alignmentPolicy: scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtStart});
        return true;
      }
      let maybeFlipped = dart.test(forward) ? sortedNodes : sortedNodes[$reversed];
      let previousNode = null;
      for (let node of maybeFlipped) {
        if (dart.equals(previousNode, focusedChild)) {
          focus_traversal._focusAndEnsureVisible(node, {alignmentPolicy: dart.test(forward) ? scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtEnd : scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtStart});
          return true;
        }
        previousNode = node;
      }
      return false;
    }
  };
  (focus_traversal.FocusTraversalPolicy.new = function() {
    ;
  }).prototype = focus_traversal.FocusTraversalPolicy.prototype;
  dart.addTypeTests(focus_traversal.FocusTraversalPolicy);
  dart.addTypeCaches(focus_traversal.FocusTraversalPolicy);
  dart.setMethodSignature(focus_traversal.FocusTraversalPolicy, () => ({
    __proto__: dart.getMethods(focus_traversal.FocusTraversalPolicy.__proto__),
    findFirstFocus: dart.fnType(dart.nullable(focus_manager.FocusNode), [focus_manager.FocusNode]),
    findLastFocus: dart.fnType(focus_manager.FocusNode, [focus_manager.FocusNode]),
    [_findInitialFocus]: dart.fnType(focus_manager.FocusNode, [focus_manager.FocusNode], {fromEnd: core.bool}, {}),
    invalidateScopeData: dart.fnType(dart.void, [focus_manager.FocusScopeNode]),
    changedScope: dart.fnType(dart.void, [], {node: dart.nullable(focus_manager.FocusNode), oldScope: dart.nullable(focus_manager.FocusScopeNode)}, {}),
    next: dart.fnType(core.bool, [focus_manager.FocusNode]),
    previous: dart.fnType(core.bool, [focus_manager.FocusNode]),
    [_getMarker]: dart.fnType(dart.nullable(focus_traversal._FocusTraversalGroupMarker), [dart.nullable(framework.BuildContext)]),
    [_sortAllDescendants]: dart.fnType(core.List$(focus_manager.FocusNode), [focus_manager.FocusScopeNode, focus_manager.FocusNode]),
    [_moveFocus]: dart.fnType(core.bool, [focus_manager.FocusNode], {}, {forward: core.bool})
  }));
  dart.setLibraryUri(focus_traversal.FocusTraversalPolicy, L103);
  var direction$1 = dart.privateName(focus_traversal, "_DirectionalPolicyDataEntry.direction");
  var node$ = dart.privateName(focus_traversal, "_DirectionalPolicyDataEntry.node");
  focus_traversal._DirectionalPolicyDataEntry = class _DirectionalPolicyDataEntry extends core.Object {
    get direction() {
      return this[direction$1];
    }
    set direction(value) {
      super.direction = value;
    }
    get node() {
      return this[node$];
    }
    set node(value) {
      super.node = value;
    }
  };
  (focus_traversal._DirectionalPolicyDataEntry.new = function(opts) {
    let direction = opts && 'direction' in opts ? opts.direction : null;
    if (direction == null) dart.nullFailed(L104, 408, 52, "direction");
    let node = opts && 'node' in opts ? opts.node : null;
    if (node == null) dart.nullFailed(L104, 408, 77, "node");
    this[direction$1] = direction;
    this[node$] = node;
    if (!(direction != null)) dart.assertFailed(null, L104, 409, 16, "direction != null");
    if (!(node != null)) dart.assertFailed(null, L104, 410, 16, "node != null");
    ;
  }).prototype = focus_traversal._DirectionalPolicyDataEntry.prototype;
  dart.addTypeTests(focus_traversal._DirectionalPolicyDataEntry);
  dart.addTypeCaches(focus_traversal._DirectionalPolicyDataEntry);
  dart.setLibraryUri(focus_traversal._DirectionalPolicyDataEntry, L103);
  dart.setFieldSignature(focus_traversal._DirectionalPolicyDataEntry, () => ({
    __proto__: dart.getFields(focus_traversal._DirectionalPolicyDataEntry.__proto__),
    direction: dart.finalFieldType(focus_traversal.TraversalDirection),
    node: dart.finalFieldType(focus_manager.FocusNode)
  }));
  var history$ = dart.privateName(focus_traversal, "_DirectionalPolicyData.history");
  focus_traversal._DirectionalPolicyData = class _DirectionalPolicyData extends core.Object {
    get history() {
      return this[history$];
    }
    set history(value) {
      super.history = value;
    }
  };
  (focus_traversal._DirectionalPolicyData.new = function(opts) {
    let history = opts && 'history' in opts ? opts.history : null;
    if (history == null) dart.nullFailed(L104, 417, 47, "history");
    this[history$] = history;
    if (!(history != null)) dart.assertFailed(null, L104, 417, 66, "history != null");
    ;
  }).prototype = focus_traversal._DirectionalPolicyData.prototype;
  dart.addTypeTests(focus_traversal._DirectionalPolicyData);
  dart.addTypeCaches(focus_traversal._DirectionalPolicyData);
  dart.setLibraryUri(focus_traversal._DirectionalPolicyData, L103);
  dart.setFieldSignature(focus_traversal._DirectionalPolicyData, () => ({
    __proto__: dart.getFields(focus_traversal._DirectionalPolicyData.__proto__),
    history: dart.finalFieldType(core.List$(focus_traversal._DirectionalPolicyDataEntry))
  }));
  var _policyData = dart.privateName(focus_traversal, "_policyData");
  var _sortAndFindInitial = dart.privateName(focus_traversal, "_sortAndFindInitial");
  var _sortAndFilterHorizontally = dart.privateName(focus_traversal, "_sortAndFilterHorizontally");
  var _sortAndFilterVertically = dart.privateName(focus_traversal, "_sortAndFilterVertically");
  var _popPolicyDataIfNeeded = dart.privateName(focus_traversal, "_popPolicyDataIfNeeded");
  var _pushPolicyData = dart.privateName(focus_traversal, "_pushPolicyData");
  focus_traversal.DirectionalFocusTraversalPolicyMixin = class DirectionalFocusTraversalPolicyMixin extends focus_traversal.FocusTraversalPolicy {};
  focus_traversal.DirectionalFocusTraversalPolicyMixin[dart.mixinOn] = FocusTraversalPolicy => class DirectionalFocusTraversalPolicyMixin extends FocusTraversalPolicy {
    invalidateScopeData(node) {
      if (node == null) dart.nullFailed(L104, 457, 43, "node");
      super.invalidateScopeData(node);
      this[_policyData][$remove](node);
    }
    changedScope(opts) {
      let t76;
      let node = opts && 'node' in opts ? opts.node : null;
      let oldScope = opts && 'oldScope' in opts ? opts.oldScope : null;
      super.changedScope({node: node, oldScope: oldScope});
      if (oldScope != null) {
        t76 = this[_policyData][$_get](oldScope);
        t76 == null ? null : t76.history[$removeWhere](dart.fn(entry => {
          if (entry == null) dart.nullFailed(L104, 466, 79, "entry");
          return dart.equals(entry.node, node);
        }, _DirectionalPolicyDataEntryTobool()));
      }
    }
    findFirstFocusInDirection(currentNode, direction) {
      if (currentNode == null) dart.nullFailed(L104, 473, 50, "currentNode");
      if (direction == null) dart.nullFailed(L104, 473, 82, "direction");
      if (!(direction != null)) dart.assertFailed(null, L104, 474, 12, "direction != null");
      if (!(currentNode != null)) dart.assertFailed(null, L104, 475, 12, "currentNode != null");
      switch (direction) {
        case C1026 || CT.C1026:
        {
          return this[_sortAndFindInitial](currentNode, {vertical: true, first: false});
        }
        case C1028 || CT.C1028:
        {
          return this[_sortAndFindInitial](currentNode, {vertical: true, first: true});
        }
        case C1029 || CT.C1029:
        {
          return this[_sortAndFindInitial](currentNode, {vertical: false, first: false});
        }
        case C1027 || CT.C1027:
        {
          return this[_sortAndFindInitial](currentNode, {vertical: false, first: true});
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [_sortAndFindInitial](currentNode, opts) {
      if (currentNode == null) dart.nullFailed(L104, 492, 44, "currentNode");
      let vertical = opts && 'vertical' in opts ? opts.vertical : null;
      if (vertical == null) dart.nullFailed(L104, 492, 72, "vertical");
      let first = opts && 'first' in opts ? opts.first : null;
      if (first == null) dart.nullFailed(L104, 492, 96, "first");
      let nodes = dart.nullCheck(currentNode.nearestScope).traversalDescendants;
      let sorted = nodes[$toList]();
      collections.mergeSort(focus_manager.FocusNode, sorted, {compare: dart.fn((a, b) => {
          if (a == null) dart.nullFailed(L104, 495, 54, "a");
          if (b == null) dart.nullFailed(L104, 495, 67, "b");
          if (dart.test(vertical)) {
            if (dart.test(first)) {
              return a.rect.top[$compareTo](b.rect.top);
            } else {
              return b.rect.bottom[$compareTo](a.rect.bottom);
            }
          } else {
            if (dart.test(first)) {
              return a.rect.left[$compareTo](b.rect.left);
            } else {
              return b.rect.right[$compareTo](a.rect.right);
            }
          }
        }, FocusNodeAndFocusNodeToint())});
      if (dart.test(sorted[$isNotEmpty])) {
        return sorted[$first];
      }
      return null;
    }
    [_sortAndFilterHorizontally](direction, target, nearestScope) {
      if (direction == null) dart.nullFailed(L104, 527, 24, "direction");
      if (target == null) dart.nullFailed(L104, 528, 10, "target");
      if (nearestScope == null) dart.nullFailed(L104, 529, 15, "nearestScope");
      if (!(dart.equals(direction, focus_traversal.TraversalDirection.left) || dart.equals(direction, focus_traversal.TraversalDirection.right))) dart.assertFailed(null, L104, 531, 12, "direction == TraversalDirection.left || direction == TraversalDirection.right");
      let nodes = nearestScope.traversalDescendants;
      if (!!dart.test(nodes[$contains](nearestScope))) dart.assertFailed(null, L104, 533, 12, "!nodes.contains(nearestScope)");
      let sorted = nodes[$toList]();
      collections.mergeSort(focus_manager.FocusNode, sorted, {compare: dart.fn((a, b) => {
          if (a == null) dart.nullFailed(L104, 535, 54, "a");
          if (b == null) dart.nullFailed(L104, 535, 67, "b");
          return a.rect.center.dx[$compareTo](b.rect.center.dx);
        }, FocusNodeAndFocusNodeToint())});
      let result = null;
      switch (direction) {
        case C1029 || CT.C1029:
        {
          result = sorted[$where](dart.fn(node => {
            if (node == null) dart.nullFailed(L104, 539, 42, "node");
            return !dart.equals(node.rect, target) && dart.notNull(node.rect.center.dx) <= dart.notNull(target.left);
          }, FocusNodeTobool()));
          break;
        }
        case C1027 || CT.C1027:
        {
          result = sorted[$where](dart.fn(node => {
            if (node == null) dart.nullFailed(L104, 542, 42, "node");
            return !dart.equals(node.rect, target) && dart.notNull(node.rect.center.dx) >= dart.notNull(target.right);
          }, FocusNodeTobool()));
          break;
        }
        case C1026 || CT.C1026:
        case C1028 || CT.C1028:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return result;
    }
    [_sortAndFilterVertically](direction, target, nodes) {
      if (direction == null) dart.nullFailed(L104, 555, 24, "direction");
      if (target == null) dart.nullFailed(L104, 556, 10, "target");
      if (nodes == null) dart.nullFailed(L104, 557, 25, "nodes");
      let sorted = nodes[$toList]();
      collections.mergeSort(focus_manager.FocusNode, sorted, {compare: dart.fn((a, b) => {
          if (a == null) dart.nullFailed(L104, 560, 54, "a");
          if (b == null) dart.nullFailed(L104, 560, 67, "b");
          return a.rect.center.dy[$compareTo](b.rect.center.dy);
        }, FocusNodeAndFocusNodeToint())});
      switch (direction) {
        case C1026 || CT.C1026:
        {
          return sorted[$where](dart.fn(node => {
            if (node == null) dart.nullFailed(L104, 563, 40, "node");
            return !dart.equals(node.rect, target) && dart.notNull(node.rect.center.dy) <= dart.notNull(target.top);
          }, FocusNodeTobool()));
        }
        case C1028 || CT.C1028:
        {
          return sorted[$where](dart.fn(node => {
            if (node == null) dart.nullFailed(L104, 565, 40, "node");
            return !dart.equals(node.rect, target) && dart.notNull(node.rect.center.dy) >= dart.notNull(target.bottom);
          }, FocusNodeTobool()));
        }
        case C1029 || CT.C1029:
        case C1027 || CT.C1027:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      if (!(dart.equals(direction, focus_traversal.TraversalDirection.up) || dart.equals(direction, focus_traversal.TraversalDirection.down))) dart.assertFailed(null, L104, 570, 12, "direction == TraversalDirection.up || direction == TraversalDirection.down");
      return null;
    }
    [_popPolicyDataIfNeeded](direction, nearestScope, focusedChild) {
      if (direction == null) dart.nullFailed(L104, 578, 50, "direction");
      if (nearestScope == null) dart.nullFailed(L104, 578, 76, "nearestScope");
      if (focusedChild == null) dart.nullFailed(L104, 578, 100, "focusedChild");
      let policyData = this[_policyData][$_get](nearestScope);
      if (policyData != null && dart.test(policyData.history[$isNotEmpty]) && !dart.equals(policyData.history[$first].direction, direction)) {
        if (policyData.history[$last].node.parent == null) {
          this.invalidateScopeData(nearestScope);
          return false;
        }
        const popOrInvalidate = direction => {
          if (direction == null) dart.nullFailed(L104, 592, 47, "direction");
          let lastNode = policyData.history[$removeLast]().node;
          if (!dart.equals(scrollable$.Scrollable.of(dart.nullCheck(lastNode.context)), scrollable$.Scrollable.of(dart.nullCheck(dart.nullCheck(focus_manager.primaryFocus).context)))) {
            this.invalidateScopeData(nearestScope);
            return false;
          }
          let alignmentPolicy = null;
          switch (direction) {
            case C1026 || CT.C1026:
            case C1029 || CT.C1029:
            {
              alignmentPolicy = scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtStart;
              break;
            }
            case C1027 || CT.C1027:
            case C1028 || CT.C1028:
            {
              alignmentPolicy = scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtEnd;
              break;
            }
            default:
            {
              dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
            }
          }
          focus_traversal._focusAndEnsureVisible(lastNode, {alignmentPolicy: alignmentPolicy});
          return true;
        };
        dart.fn(popOrInvalidate, TraversalDirectionTobool());
        switch (direction) {
          case C1028 || CT.C1028:
          case C1026 || CT.C1026:
          {
            switch (policyData.history[$first].direction) {
              case C1029 || CT.C1029:
              case C1027 || CT.C1027:
              {
                this.invalidateScopeData(nearestScope);
                break;
              }
              case C1026 || CT.C1026:
              case C1028 || CT.C1028:
              {
                if (dart.test(popOrInvalidate(direction))) {
                  return true;
                }
                break;
              }
              default:
              {
                dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
              }
            }
            break;
          }
          case C1029 || CT.C1029:
          case C1027 || CT.C1027:
          {
            switch (policyData.history[$first].direction) {
              case C1029 || CT.C1029:
              case C1027 || CT.C1027:
              {
                if (dart.test(popOrInvalidate(direction))) {
                  return true;
                }
                break;
              }
              case C1026 || CT.C1026:
              case C1028 || CT.C1028:
              {
                this.invalidateScopeData(nearestScope);
                break;
              }
              default:
              {
                dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
              }
            }
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
      if (policyData != null && dart.test(policyData.history[$isEmpty])) {
        this.invalidateScopeData(nearestScope);
      }
      return false;
    }
    [_pushPolicyData](direction, nearestScope, focusedChild) {
      if (direction == null) dart.nullFailed(L104, 656, 43, "direction");
      if (nearestScope == null) dart.nullFailed(L104, 656, 69, "nearestScope");
      if (focusedChild == null) dart.nullFailed(L104, 656, 93, "focusedChild");
      let policyData = this[_policyData][$_get](nearestScope);
      let newEntry = new focus_traversal._DirectionalPolicyDataEntry.new({node: focusedChild, direction: direction});
      if (policyData != null) {
        policyData.history[$add](newEntry);
      } else {
        this[_policyData][$_set](nearestScope, new focus_traversal._DirectionalPolicyData.new({history: JSArrayOf_DirectionalPolicyDataEntry().of([newEntry])}));
      }
    }
    inDirection(currentNode, direction) {
      let t76;
      if (currentNode == null) dart.nullFailed(L104, 685, 30, "currentNode");
      if (direction == null) dart.nullFailed(L104, 685, 62, "direction");
      let nearestScope = dart.nullCheck(currentNode.nearestScope);
      let focusedChild = nearestScope.focusedChild;
      if (focusedChild == null) {
        let firstFocus = (t76 = this.findFirstFocusInDirection(currentNode, direction), t76 == null ? currentNode : t76);
        switch (direction) {
          case C1026 || CT.C1026:
          case C1029 || CT.C1029:
          {
            focus_traversal._focusAndEnsureVisible(firstFocus, {alignmentPolicy: scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtStart});
            break;
          }
          case C1027 || CT.C1027:
          case C1028 || CT.C1028:
          {
            focus_traversal._focusAndEnsureVisible(firstFocus, {alignmentPolicy: scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtEnd});
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        return true;
      }
      if (dart.test(this[_popPolicyDataIfNeeded](direction, nearestScope, focusedChild))) {
        return true;
      }
      let found = null;
      let focusedScrollable = scrollable$.Scrollable.of(dart.nullCheck(focusedChild.context));
      switch (direction) {
        case C1028 || CT.C1028:
        case C1026 || CT.C1026:
        {
          let eligibleNodes = this[_sortAndFilterVertically](direction, focusedChild.rect, nearestScope.traversalDescendants);
          if (focusedScrollable != null && !dart.test(focusedScrollable.position.atEdge)) {
            let filteredEligibleNodes = dart.nullCheck(eligibleNodes)[$where](dart.fn(node => {
              if (node == null) dart.nullFailed(L104, 722, 93, "node");
              return dart.equals(scrollable$.Scrollable.of(dart.nullCheck(node.context)), focusedScrollable);
            }, FocusNodeTobool()));
            if (dart.test(filteredEligibleNodes[$isNotEmpty])) {
              eligibleNodes = filteredEligibleNodes;
            }
          }
          if (dart.test(dart.nullCheck(eligibleNodes)[$isEmpty])) {
            break;
          }
          let sorted = eligibleNodes[$toList]();
          if (dart.equals(direction, focus_traversal.TraversalDirection.up)) {
            sorted = sorted[$reversed][$toList]();
          }
          let band = new ui.Rect.fromLTRB(focusedChild.rect.left, -(1 / 0), focusedChild.rect.right, 1 / 0);
          let inBand = sorted[$where](dart.fn(node => {
            if (node == null) dart.nullFailed(L104, 736, 68, "node");
            return !dart.test(node.rect.intersect(band).isEmpty);
          }, FocusNodeTobool()));
          if (dart.test(inBand[$isNotEmpty])) {
            found = inBand[$first];
            break;
          }
          collections.mergeSort(focus_manager.FocusNode, sorted, {compare: dart.fn((a, b) => {
              if (a == null) dart.nullFailed(L104, 745, 58, "a");
              if (b == null) dart.nullFailed(L104, 745, 71, "b");
              return (dart.notNull(a.rect.center.dx) - dart.notNull(focusedChild.rect.center.dx))[$abs]()[$compareTo]((dart.notNull(b.rect.center.dx) - dart.notNull(focusedChild.rect.center.dx))[$abs]());
            }, FocusNodeAndFocusNodeToint())});
          found = sorted[$first];
          break;
        }
        case C1027 || CT.C1027:
        case C1029 || CT.C1029:
        {
          let eligibleNodes = this[_sortAndFilterHorizontally](direction, focusedChild.rect, nearestScope);
          if (focusedScrollable != null && !dart.test(focusedScrollable.position.atEdge)) {
            let filteredEligibleNodes = dart.nullCheck(eligibleNodes)[$where](dart.fn(node => {
              if (node == null) dart.nullFailed(L104, 754, 93, "node");
              return dart.equals(scrollable$.Scrollable.of(dart.nullCheck(node.context)), focusedScrollable);
            }, FocusNodeTobool()));
            if (dart.test(filteredEligibleNodes[$isNotEmpty])) {
              eligibleNodes = filteredEligibleNodes;
            }
          }
          if (dart.test(dart.nullCheck(eligibleNodes)[$isEmpty])) {
            break;
          }
          let sorted = eligibleNodes[$toList]();
          if (dart.equals(direction, focus_traversal.TraversalDirection.left)) {
            sorted = sorted[$reversed][$toList]();
          }
          let band = new ui.Rect.fromLTRB(-(1 / 0), focusedChild.rect.top, 1 / 0, focusedChild.rect.bottom);
          let inBand = sorted[$where](dart.fn(node => {
            if (node == null) dart.nullFailed(L104, 768, 68, "node");
            return !dart.test(node.rect.intersect(band).isEmpty);
          }, FocusNodeTobool()));
          if (dart.test(inBand[$isNotEmpty])) {
            found = inBand[$first];
            break;
          }
          collections.mergeSort(focus_manager.FocusNode, sorted, {compare: dart.fn((a, b) => {
              if (a == null) dart.nullFailed(L104, 777, 58, "a");
              if (b == null) dart.nullFailed(L104, 777, 71, "b");
              return (dart.notNull(a.rect.center.dy) - dart.notNull(focusedChild.rect.center.dy))[$abs]()[$compareTo]((dart.notNull(b.rect.center.dy) - dart.notNull(focusedChild.rect.center.dy))[$abs]());
            }, FocusNodeAndFocusNodeToint())});
          found = sorted[$first];
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      if (found != null) {
        this[_pushPolicyData](direction, nearestScope, focusedChild);
        switch (direction) {
          case C1026 || CT.C1026:
          case C1029 || CT.C1029:
          {
            focus_traversal._focusAndEnsureVisible(found, {alignmentPolicy: scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtStart});
            break;
          }
          case C1028 || CT.C1028:
          case C1027 || CT.C1027:
          {
            focus_traversal._focusAndEnsureVisible(found, {alignmentPolicy: scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtEnd});
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        return true;
      }
      return false;
    }
  };
  (focus_traversal.DirectionalFocusTraversalPolicyMixin[dart.mixinNew] = function() {
    this[_policyData] = new (LinkedMapOfFocusScopeNode$_DirectionalPolicyData()).new();
  }).prototype = focus_traversal.DirectionalFocusTraversalPolicyMixin.prototype;
  dart.addTypeTests(focus_traversal.DirectionalFocusTraversalPolicyMixin);
  dart.addTypeCaches(focus_traversal.DirectionalFocusTraversalPolicyMixin);
  focus_traversal.DirectionalFocusTraversalPolicyMixin[dart.implements] = () => [focus_traversal.FocusTraversalPolicy];
  dart.setMethodSignature(focus_traversal.DirectionalFocusTraversalPolicyMixin, () => ({
    __proto__: dart.getMethods(focus_traversal.DirectionalFocusTraversalPolicyMixin.__proto__),
    findFirstFocusInDirection: dart.fnType(dart.nullable(focus_manager.FocusNode), [focus_manager.FocusNode, focus_traversal.TraversalDirection]),
    [_sortAndFindInitial]: dart.fnType(dart.nullable(focus_manager.FocusNode), [focus_manager.FocusNode], {}, {first: core.bool, vertical: core.bool}),
    [_sortAndFilterHorizontally]: dart.fnType(dart.nullable(core.Iterable$(focus_manager.FocusNode)), [focus_traversal.TraversalDirection, ui.Rect, focus_manager.FocusNode]),
    [_sortAndFilterVertically]: dart.fnType(dart.nullable(core.Iterable$(focus_manager.FocusNode)), [focus_traversal.TraversalDirection, ui.Rect, core.Iterable$(focus_manager.FocusNode)]),
    [_popPolicyDataIfNeeded]: dart.fnType(core.bool, [focus_traversal.TraversalDirection, focus_manager.FocusScopeNode, focus_manager.FocusNode]),
    [_pushPolicyData]: dart.fnType(dart.void, [focus_traversal.TraversalDirection, focus_manager.FocusScopeNode, focus_manager.FocusNode]),
    inDirection: dart.fnType(core.bool, [focus_manager.FocusNode, focus_traversal.TraversalDirection])
  }));
  dart.setLibraryUri(focus_traversal.DirectionalFocusTraversalPolicyMixin, L103);
  dart.setFieldSignature(focus_traversal.DirectionalFocusTraversalPolicyMixin, () => ({
    __proto__: dart.getFields(focus_traversal.DirectionalFocusTraversalPolicyMixin.__proto__),
    [_policyData]: dart.finalFieldType(core.Map$(focus_manager.FocusScopeNode, focus_traversal._DirectionalPolicyData))
  }));
  const FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36 = class FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin extends focus_traversal.FocusTraversalPolicy {};
  (FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36.new = function() {
    focus_traversal.DirectionalFocusTraversalPolicyMixin[dart.mixinNew].call(this);
    FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36.__proto__.new.call(this);
  }).prototype = FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36.prototype;
  dart.applyMixin(FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36, focus_traversal.DirectionalFocusTraversalPolicyMixin);
  focus_traversal.WidgetOrderTraversalPolicy = class WidgetOrderTraversalPolicy extends FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36 {
    sortDescendants(descendants, currentNode) {
      if (descendants == null) dart.nullFailed(L104, 826, 59, "descendants");
      if (currentNode == null) dart.nullFailed(L104, 826, 82, "currentNode");
      return descendants;
    }
  };
  (focus_traversal.WidgetOrderTraversalPolicy.new = function() {
    focus_traversal.WidgetOrderTraversalPolicy.__proto__.new.call(this);
    ;
  }).prototype = focus_traversal.WidgetOrderTraversalPolicy.prototype;
  dart.addTypeTests(focus_traversal.WidgetOrderTraversalPolicy);
  dart.addTypeCaches(focus_traversal.WidgetOrderTraversalPolicy);
  dart.setMethodSignature(focus_traversal.WidgetOrderTraversalPolicy, () => ({
    __proto__: dart.getMethods(focus_traversal.WidgetOrderTraversalPolicy.__proto__),
    sortDescendants: dart.fnType(core.Iterable$(focus_manager.FocusNode), [core.Iterable$(focus_manager.FocusNode), focus_manager.FocusNode])
  }));
  dart.setLibraryUri(focus_traversal.WidgetOrderTraversalPolicy, L103);
  var _directionalAncestors = dart.privateName(focus_traversal, "_directionalAncestors");
  const Object_Diagnosticable$36$0 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$0.new = function() {
  }).prototype = Object_Diagnosticable$36$0.prototype;
  dart.applyMixin(Object_Diagnosticable$36$0, diagnostics$.Diagnosticable);
  focus_traversal._ReadingOrderSortData = class _ReadingOrderSortData extends Object_Diagnosticable$36$0 {
    static _findDirectionality(context) {
      let t76, t76$;
      if (context == null) dart.nullFailed(L104, 849, 58, "context");
      t76$ = DirectionalityN().as((t76 = context.getElementForInheritedWidgetOfExactType(basic.Directionality), t76 == null ? null : t76.widget));
      return t76$ == null ? null : t76$.textDirection;
    }
    static commonDirectionalityOf(list) {
      if (list == null) dart.nullFailed(L104, 854, 76, "list");
      let allAncestors = list[$map](SetOfDirectionality(), dart.fn(member => {
        if (member == null) dart.nullFailed(L104, 855, 109, "member");
        return member.directionalAncestors[$toSet]();
      }, _ReadingOrderSortDataToSetOfDirectionality()));
      let common = null;
      for (let ancestorSet of allAncestors) {
        common == null ? common = ancestorSet : null;
        common = common.intersection(ancestorSet);
      }
      if (dart.test(dart.nullCheck(common)[$isEmpty])) {
        return list[$first].directionality;
      }
      return list[$first].directionalAncestors[$firstWhere](dart.bind(common, 'contains')).textDirection;
    }
    static sortWithDirectionality(list, directionality) {
      if (list == null) dart.nullFailed(L104, 874, 66, "list");
      if (directionality == null) dart.nullFailed(L104, 874, 86, "directionality");
      collections.mergeSort(focus_traversal._ReadingOrderSortData, list, {compare: dart.fn((a, b) => {
          if (a == null) dart.nullFailed(L104, 875, 76, "a");
          if (b == null) dart.nullFailed(L104, 875, 101, "b");
          switch (directionality) {
            case C80 || CT.C80:
            {
              return a.rect.left[$compareTo](b.rect.left);
            }
            case C79 || CT.C79:
            {
              return b.rect.right[$compareTo](a.rect.right);
            }
            default:
            {
              dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
            }
          }
        }, _ReadingOrderSortDataAnd_ReadingOrderSortDataToint())});
    }
    get directionalAncestors() {
      function getDirectionalityAncestors(context) {
        let t76;
        if (context == null) dart.nullFailed(L104, 888, 66, "context");
        let result = JSArrayOfDirectionality().of([]);
        let directionalityElement = context.getElementForInheritedWidgetOfExactType(basic.Directionality);
        while (directionalityElement != null) {
          result[$add](basic.Directionality.as(directionalityElement.widget));
          directionalityElement = (t76 = focus_traversal._getAncestor(directionalityElement), t76 == null ? null : t76.getElementForInheritedWidgetOfExactType(basic.Directionality));
        }
        return result;
      }
      dart.fn(getDirectionalityAncestors, BuildContextToListOfDirectionality());
      this[_directionalAncestors] == null ? this[_directionalAncestors] = getDirectionalityAncestors(dart.nullCheck(this.node.context)) : null;
      return dart.nullCheck(this[_directionalAncestors]);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L104, 905, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfTextDirection()).new("directionality", this.directionality));
      properties.add(new diagnostics$.StringProperty.new("name", this.node.debugLabel, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfRect()).new("rect", this.rect));
    }
  };
  (focus_traversal._ReadingOrderSortData.new = function(node) {
    if (node == null) dart.nullFailed(L104, 838, 30, "node");
    this[_directionalAncestors] = null;
    this.node = node;
    if (!(node != null)) dart.assertFailed(null, L104, 839, 16, "node != null");
    this.rect = node.rect;
    this.directionality = focus_traversal._ReadingOrderSortData._findDirectionality(dart.nullCheck(node.context));
    ;
  }).prototype = focus_traversal._ReadingOrderSortData.prototype;
  dart.addTypeTests(focus_traversal._ReadingOrderSortData);
  dart.addTypeCaches(focus_traversal._ReadingOrderSortData);
  dart.setGetterSignature(focus_traversal._ReadingOrderSortData, () => ({
    __proto__: dart.getGetters(focus_traversal._ReadingOrderSortData.__proto__),
    directionalAncestors: core.Iterable$(basic.Directionality)
  }));
  dart.setLibraryUri(focus_traversal._ReadingOrderSortData, L103);
  dart.setFieldSignature(focus_traversal._ReadingOrderSortData, () => ({
    __proto__: dart.getFields(focus_traversal._ReadingOrderSortData.__proto__),
    directionality: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    rect: dart.finalFieldType(ui.Rect),
    node: dart.finalFieldType(focus_manager.FocusNode),
    [_directionalAncestors]: dart.fieldType(dart.nullable(core.List$(basic.Directionality)))
  }));
  var _rect = dart.privateName(focus_traversal, "_rect");
  var _memberAncestors = dart.privateName(focus_traversal, "_memberAncestors");
  const Object_Diagnosticable$36$1 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$1.new = function() {
  }).prototype = Object_Diagnosticable$36$1.prototype;
  dart.applyMixin(Object_Diagnosticable$36$1, diagnostics$.Diagnosticable);
  focus_traversal._ReadingOrderDirectionalGroupData = class _ReadingOrderDirectionalGroupData extends Object_Diagnosticable$36$1 {
    get directionality() {
      return this.members[$first].directionality;
    }
    get rect() {
      if (this[_rect] == null) {
        for (let rect of this.members[$map](ui.Rect, dart.fn(data => {
          if (data == null) dart.nullFailed(L104, 925, 72, "data");
          return data.rect;
        }, _ReadingOrderSortDataToRect()))) {
          this[_rect] == null ? this[_rect] = rect : null;
          this[_rect] = dart.nullCheck(this[_rect]).expandToInclude(rect);
        }
      }
      return dart.nullCheck(this[_rect]);
    }
    get memberAncestors() {
      if (this[_memberAncestors] == null) {
        this[_memberAncestors] = JSArrayOfDirectionality().of([]);
        for (let member of this.members) {
          dart.nullCheck(this[_memberAncestors])[$addAll](member.directionalAncestors);
        }
      }
      return dart.nullCheck(this[_memberAncestors]);
    }
    static sortWithDirectionality(list, directionality) {
      if (list == null) dart.nullFailed(L104, 945, 78, "list");
      if (directionality == null) dart.nullFailed(L104, 945, 98, "directionality");
      collections.mergeSort(focus_traversal._ReadingOrderDirectionalGroupData, list, {compare: dart.fn((a, b) => {
          if (a == null) dart.nullFailed(L104, 946, 100, "a");
          if (b == null) dart.nullFailed(L104, 946, 137, "b");
          switch (directionality) {
            case C80 || CT.C80:
            {
              return a.rect.left[$compareTo](b.rect.left);
            }
            case C79 || CT.C79:
            {
              return b.rect.right[$compareTo](a.rect.right);
            }
            default:
            {
              dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
            }
          }
        }, _ReadingOrderDirectionalGroupDataAnd_ReadingOrderDirectionalGroupDataToint())});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L104, 957, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfTextDirection()).new("directionality", this.directionality));
      properties.add(new (DiagnosticsPropertyOfRect()).new("rect", this.rect));
      properties.add(new (IterablePropertyOfString()).new("members", this.members[$map](core.String, dart.fn(member => {
        if (member == null) dart.nullFailed(L104, 961, 99, "member");
        return "\"" + dart.str(member.node.debugLabel) + "\"(" + dart.str(member.rect) + ")";
      }, _ReadingOrderSortDataToString()))));
    }
  };
  (focus_traversal._ReadingOrderDirectionalGroupData.new = function(members) {
    if (members == null) dart.nullFailed(L104, 916, 42, "members");
    this[_rect] = null;
    this[_memberAncestors] = null;
    this.members = members;
    ;
  }).prototype = focus_traversal._ReadingOrderDirectionalGroupData.prototype;
  dart.addTypeTests(focus_traversal._ReadingOrderDirectionalGroupData);
  dart.addTypeCaches(focus_traversal._ReadingOrderDirectionalGroupData);
  dart.setGetterSignature(focus_traversal._ReadingOrderDirectionalGroupData, () => ({
    __proto__: dart.getGetters(focus_traversal._ReadingOrderDirectionalGroupData.__proto__),
    directionality: dart.nullable(ui.TextDirection),
    rect: ui.Rect,
    memberAncestors: core.List$(basic.Directionality)
  }));
  dart.setLibraryUri(focus_traversal._ReadingOrderDirectionalGroupData, L103);
  dart.setFieldSignature(focus_traversal._ReadingOrderDirectionalGroupData, () => ({
    __proto__: dart.getFields(focus_traversal._ReadingOrderDirectionalGroupData.__proto__),
    members: dart.finalFieldType(core.List$(focus_traversal._ReadingOrderSortData)),
    [_rect]: dart.fieldType(dart.nullable(ui.Rect)),
    [_memberAncestors]: dart.fieldType(dart.nullable(core.List$(basic.Directionality)))
  }));
  var _collectDirectionalityGroups = dart.privateName(focus_traversal, "_collectDirectionalityGroups");
  var _pickNext = dart.privateName(focus_traversal, "_pickNext");
  const FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36$ = class FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin extends focus_traversal.FocusTraversalPolicy {};
  (FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36$.new = function() {
    focus_traversal.DirectionalFocusTraversalPolicyMixin[dart.mixinNew].call(this);
    FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36$.__proto__.new.call(this);
  }).prototype = FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36$.prototype;
  dart.applyMixin(FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36$, focus_traversal.DirectionalFocusTraversalPolicyMixin);
  focus_traversal.ReadingOrderTraversalPolicy = class ReadingOrderTraversalPolicy extends FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36$ {
    [_collectDirectionalityGroups](candidates) {
      if (candidates == null) dart.nullFailed(L104, 996, 104, "candidates");
      let currentDirection = candidates[$first].directionality;
      let currentGroup = JSArrayOf_ReadingOrderSortData().of([]);
      let result = JSArrayOf_ReadingOrderDirectionalGroupData().of([]);
      for (let candidate of candidates) {
        if (dart.equals(candidate.directionality, currentDirection)) {
          currentGroup[$add](candidate);
          continue;
        }
        currentDirection = candidate.directionality;
        result[$add](new focus_traversal._ReadingOrderDirectionalGroupData.new(currentGroup));
        currentGroup = JSArrayOf_ReadingOrderSortData().of([candidate]);
      }
      if (dart.test(currentGroup[$isNotEmpty])) {
        result[$add](new focus_traversal._ReadingOrderDirectionalGroupData.new(currentGroup));
      }
      for (let bandGroup of result) {
        if (bandGroup.members[$length] === 1) {
          continue;
        }
        focus_traversal._ReadingOrderSortData.sortWithDirectionality(bandGroup.members, dart.nullCheck(bandGroup.directionality));
      }
      return result;
    }
    [_pickNext](candidates) {
      if (candidates == null) dart.nullFailed(L104, 1023, 63, "candidates");
      collections.mergeSort(focus_traversal._ReadingOrderSortData, candidates, {compare: dart.fn((a, b) => {
          if (a == null) dart.nullFailed(L104, 1025, 82, "a");
          if (b == null) dart.nullFailed(L104, 1025, 107, "b");
          return a.rect.top[$compareTo](b.rect.top);
        }, _ReadingOrderSortDataAnd_ReadingOrderSortDataToint())});
      let topmost = candidates[$first];
      function inBand(current, candidates) {
        if (current == null) dart.nullFailed(L104, 1029, 62, "current");
        if (candidates == null) dart.nullFailed(L104, 1029, 103, "candidates");
        let band = new ui.Rect.fromLTRB(-1 / 0, current.rect.top, 1 / 0, current.rect.bottom);
        return candidates[$where](dart.fn(item => {
          if (item == null) dart.nullFailed(L104, 1031, 54, "item");
          return !dart.test(item.rect.intersect(band).isEmpty);
        }, _ReadingOrderSortDataTobool()))[$toList]();
      }
      dart.fn(inBand, _ReadingOrderSortDataAndIterableOf_ReadingOrderSortDataToListOf_ReadingOrderSortData());
      let inBandOfTop = inBand(topmost, candidates);
      if (!(dart.test(topmost.rect.isEmpty) || dart.test(inBandOfTop[$isNotEmpty]))) dart.assertFailed(null, L104, 1038, 12, "topmost.rect.isEmpty || inBandOfTop.isNotEmpty");
      if (dart.notNull(inBandOfTop[$length]) <= 1) {
        return topmost;
      }
      let nearestCommonDirectionality = focus_traversal._ReadingOrderSortData.commonDirectionalityOf(inBandOfTop);
      focus_traversal._ReadingOrderSortData.sortWithDirectionality(inBandOfTop, dart.nullCheck(nearestCommonDirectionality));
      let bandGroups = this[_collectDirectionalityGroups](inBandOfTop);
      if (bandGroups[$length] === 1) {
        return bandGroups[$first].members[$first];
      }
      focus_traversal._ReadingOrderDirectionalGroupData.sortWithDirectionality(bandGroups, nearestCommonDirectionality);
      return bandGroups[$first].members[$first];
    }
    sortDescendants(descendants, currentNode) {
      if (descendants == null) dart.nullFailed(L104, 1076, 59, "descendants");
      if (currentNode == null) dart.nullFailed(L104, 1076, 82, "currentNode");
      if (!(descendants != null)) dart.assertFailed(null, L104, 1077, 12, "descendants != null");
      if (dart.notNull(descendants[$length]) <= 1) {
        return descendants;
      }
      let data = (() => {
        let t76 = JSArrayOf_ReadingOrderSortData().of([]);
        for (let node of descendants)
          t76.push(new focus_traversal._ReadingOrderSortData.new(node));
        return t76;
      })();
      let sortedList = JSArrayOfFocusNode().of([]);
      let unplaced = data;
      let current = this[_pickNext](unplaced);
      sortedList[$add](current.node);
      unplaced[$remove](current);
      while (dart.test(unplaced[$isNotEmpty])) {
        let next = this[_pickNext](unplaced);
        current = next;
        sortedList[$add](current.node);
        unplaced[$remove](current);
      }
      return sortedList;
    }
  };
  (focus_traversal.ReadingOrderTraversalPolicy.new = function() {
    focus_traversal.ReadingOrderTraversalPolicy.__proto__.new.call(this);
    ;
  }).prototype = focus_traversal.ReadingOrderTraversalPolicy.prototype;
  dart.addTypeTests(focus_traversal.ReadingOrderTraversalPolicy);
  dart.addTypeCaches(focus_traversal.ReadingOrderTraversalPolicy);
  dart.setMethodSignature(focus_traversal.ReadingOrderTraversalPolicy, () => ({
    __proto__: dart.getMethods(focus_traversal.ReadingOrderTraversalPolicy.__proto__),
    [_collectDirectionalityGroups]: dart.fnType(core.List$(focus_traversal._ReadingOrderDirectionalGroupData), [core.Iterable$(focus_traversal._ReadingOrderSortData)]),
    [_pickNext]: dart.fnType(focus_traversal._ReadingOrderSortData, [core.List$(focus_traversal._ReadingOrderSortData)]),
    sortDescendants: dart.fnType(core.Iterable$(focus_manager.FocusNode), [core.Iterable$(focus_manager.FocusNode), focus_manager.FocusNode])
  }));
  dart.setLibraryUri(focus_traversal.ReadingOrderTraversalPolicy, L103);
  const Object_Diagnosticable$36$2 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$2.new = function() {
  }).prototype = Object_Diagnosticable$36$2.prototype;
  dart.applyMixin(Object_Diagnosticable$36$2, diagnostics$.Diagnosticable);
  focus_traversal.FocusOrder = class FocusOrder extends Object_Diagnosticable$36$2 {
    compareTo(other) {
      focus_traversal.FocusOrder.as(other);
      if (other == null) dart.nullFailed(L104, 1151, 28, "other");
      if (!dart.equals(this[$runtimeType], dart.runtimeType(other))) dart.assertFailed("The sorting algorithm must not compare incomparable keys, since they don't " + "know how to order themselves relative to each other. Comparing " + dart.str(this) + " with " + dart.str(other), L104, 1153, 9, "runtimeType == other.runtimeType");
      return this.doCompare(other);
    }
  };
  (focus_traversal.FocusOrder.new = function() {
    ;
  }).prototype = focus_traversal.FocusOrder.prototype;
  dart.addTypeTests(focus_traversal.FocusOrder);
  dart.addTypeCaches(focus_traversal.FocusOrder);
  focus_traversal.FocusOrder[dart.implements] = () => [core.Comparable$(focus_traversal.FocusOrder)];
  dart.setMethodSignature(focus_traversal.FocusOrder, () => ({
    __proto__: dart.getMethods(focus_traversal.FocusOrder.__proto__),
    compareTo: dart.fnType(core.int, [dart.nullable(core.Object)]),
    [$compareTo]: dart.fnType(core.int, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(focus_traversal.FocusOrder, L103);
  dart.defineExtensionMethods(focus_traversal.FocusOrder, ['compareTo']);
  var order$ = dart.privateName(focus_traversal, "NumericFocusOrder.order");
  focus_traversal.NumericFocusOrder = class NumericFocusOrder extends focus_traversal.FocusOrder {
    get order() {
      return this[order$];
    }
    set order(value) {
      super.order = value;
    }
    doCompare(other) {
      focus_traversal.NumericFocusOrder.as(other);
      if (other == null) dart.nullFailed(L104, 1197, 35, "other");
      return this.order[$compareTo](other.order);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L104, 1200, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.DoubleProperty.new("order", this.order));
    }
  };
  (focus_traversal.NumericFocusOrder.new = function(order) {
    if (order == null) dart.nullFailed(L104, 1185, 32, "order");
    this[order$] = order;
    if (!(order != null)) dart.assertFailed(null, L104, 1185, 48, "order != null");
    focus_traversal.NumericFocusOrder.__proto__.new.call(this);
    ;
  }).prototype = focus_traversal.NumericFocusOrder.prototype;
  dart.addTypeTests(focus_traversal.NumericFocusOrder);
  dart.addTypeCaches(focus_traversal.NumericFocusOrder);
  dart.setMethodSignature(focus_traversal.NumericFocusOrder, () => ({
    __proto__: dart.getMethods(focus_traversal.NumericFocusOrder.__proto__),
    doCompare: dart.fnType(core.int, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(focus_traversal.NumericFocusOrder, L103);
  dart.setFieldSignature(focus_traversal.NumericFocusOrder, () => ({
    __proto__: dart.getFields(focus_traversal.NumericFocusOrder.__proto__),
    order: dart.finalFieldType(core.double)
  }));
  var order$0 = dart.privateName(focus_traversal, "LexicalFocusOrder.order");
  focus_traversal.LexicalFocusOrder = class LexicalFocusOrder extends focus_traversal.FocusOrder {
    get order() {
      return this[order$0];
    }
    set order(value) {
      super.order = value;
    }
    doCompare(other) {
      focus_traversal.LexicalFocusOrder.as(other);
      if (other == null) dart.nullFailed(L104, 1235, 35, "other");
      return this.order[$compareTo](other.order);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L104, 1238, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.StringProperty.new("order", this.order));
    }
  };
  (focus_traversal.LexicalFocusOrder.new = function(order) {
    if (order == null) dart.nullFailed(L104, 1223, 32, "order");
    this[order$0] = order;
    if (!(order != null)) dart.assertFailed(null, L104, 1223, 48, "order != null");
    focus_traversal.LexicalFocusOrder.__proto__.new.call(this);
    ;
  }).prototype = focus_traversal.LexicalFocusOrder.prototype;
  dart.addTypeTests(focus_traversal.LexicalFocusOrder);
  dart.addTypeCaches(focus_traversal.LexicalFocusOrder);
  dart.setMethodSignature(focus_traversal.LexicalFocusOrder, () => ({
    __proto__: dart.getMethods(focus_traversal.LexicalFocusOrder.__proto__),
    doCompare: dart.fnType(core.int, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(focus_traversal.LexicalFocusOrder, L103);
  dart.setFieldSignature(focus_traversal.LexicalFocusOrder, () => ({
    __proto__: dart.getFields(focus_traversal.LexicalFocusOrder.__proto__),
    order: dart.finalFieldType(core.String)
  }));
  var node$0 = dart.privateName(focus_traversal, "_OrderedFocusInfo.node");
  var order$1 = dart.privateName(focus_traversal, "_OrderedFocusInfo.order");
  focus_traversal._OrderedFocusInfo = class _OrderedFocusInfo extends core.Object {
    get node() {
      return this[node$0];
    }
    set node(value) {
      super.node = value;
    }
    get order() {
      return this[order$1];
    }
    set order(value) {
      super.order = value;
    }
  };
  (focus_traversal._OrderedFocusInfo.new = function(opts) {
    let node = opts && 'node' in opts ? opts.node : null;
    if (node == null) dart.nullFailed(L104, 1246, 42, "node");
    let order = opts && 'order' in opts ? opts.order : null;
    if (order == null) dart.nullFailed(L104, 1246, 62, "order");
    this[node$0] = node;
    this[order$1] = order;
    if (!(node != null)) dart.assertFailed(null, L104, 1247, 16, "node != null");
    if (!(order != null)) dart.assertFailed(null, L104, 1248, 16, "order != null");
    ;
  }).prototype = focus_traversal._OrderedFocusInfo.prototype;
  dart.addTypeTests(focus_traversal._OrderedFocusInfo);
  dart.addTypeCaches(focus_traversal._OrderedFocusInfo);
  dart.setLibraryUri(focus_traversal._OrderedFocusInfo, L103);
  dart.setFieldSignature(focus_traversal._OrderedFocusInfo, () => ({
    __proto__: dart.getFields(focus_traversal._OrderedFocusInfo.__proto__),
    node: dart.finalFieldType(focus_manager.FocusNode),
    order: dart.finalFieldType(focus_traversal.FocusOrder)
  }));
  var secondary$ = dart.privateName(focus_traversal, "OrderedTraversalPolicy.secondary");
  const FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36$0 = class FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin extends focus_traversal.FocusTraversalPolicy {};
  (FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36$0.new = function() {
    focus_traversal.DirectionalFocusTraversalPolicyMixin[dart.mixinNew].call(this);
    FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36$0.__proto__.new.call(this);
  }).prototype = FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36$0.prototype;
  dart.applyMixin(FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36$0, focus_traversal.DirectionalFocusTraversalPolicyMixin);
  focus_traversal.OrderedTraversalPolicy = class OrderedTraversalPolicy extends FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36$0 {
    get secondary() {
      return this[secondary$];
    }
    set secondary(value) {
      super.secondary = value;
    }
    sortDescendants(descendants, currentNode) {
      let t77;
      if (descendants == null) dart.nullFailed(L104, 1360, 59, "descendants");
      if (currentNode == null) dart.nullFailed(L104, 1360, 82, "currentNode");
      let secondaryPolicy = (t77 = this.secondary, t77 == null ? new focus_traversal.ReadingOrderTraversalPolicy.new() : t77);
      let sortedDescendants = secondaryPolicy.sortDescendants(descendants, currentNode);
      let unordered = JSArrayOfFocusNode().of([]);
      let ordered = JSArrayOf_OrderedFocusInfo().of([]);
      for (let node of sortedDescendants) {
        let order = focus_traversal.FocusTraversalOrder.maybeOf(dart.nullCheck(node.context));
        if (order != null) {
          ordered[$add](new focus_traversal._OrderedFocusInfo.new({node: node, order: order}));
        } else {
          unordered[$add](node);
        }
      }
      collections.mergeSort(focus_traversal._OrderedFocusInfo, ordered, {compare: dart.fn((a, b) => {
          if (a == null) dart.nullFailed(L104, 1373, 71, "a");
          if (b == null) dart.nullFailed(L104, 1373, 92, "b");
          if (!dart.equals(dart.runtimeType(a.order), dart.runtimeType(b.order))) dart.assertFailed("When sorting nodes for determining focus order, the order (" + dart.str(a.order) + ") of " + "node " + dart.str(a.node) + ", isn't the same type as the order (" + dart.str(b.order) + ") of " + dart.str(b.node) + ". " + "Incompatible order types can't be compared.  Use a FocusTraversalGroup to group " + "similar orders together.", L104, 1375, 9, "a.order.runtimeType == b.order.runtimeType");
          return a.order.compareTo(b.order);
        }, _OrderedFocusInfoAnd_OrderedFocusInfoToint())});
      return ordered[$map](focus_manager.FocusNode, dart.fn(info => {
        if (info == null) dart.nullFailed(L104, 1383, 54, "info");
        return info.node;
      }, _OrderedFocusInfoToFocusNode()))[$followedBy](unordered);
    }
  };
  (focus_traversal.OrderedTraversalPolicy.new = function(opts) {
    let secondary = opts && 'secondary' in opts ? opts.secondary : null;
    this[secondary$] = secondary;
    focus_traversal.OrderedTraversalPolicy.__proto__.new.call(this);
    ;
  }).prototype = focus_traversal.OrderedTraversalPolicy.prototype;
  dart.addTypeTests(focus_traversal.OrderedTraversalPolicy);
  dart.addTypeCaches(focus_traversal.OrderedTraversalPolicy);
  dart.setMethodSignature(focus_traversal.OrderedTraversalPolicy, () => ({
    __proto__: dart.getMethods(focus_traversal.OrderedTraversalPolicy.__proto__),
    sortDescendants: dart.fnType(core.Iterable$(focus_manager.FocusNode), [core.Iterable$(focus_manager.FocusNode), focus_manager.FocusNode])
  }));
  dart.setLibraryUri(focus_traversal.OrderedTraversalPolicy, L103);
  dart.setFieldSignature(focus_traversal.OrderedTraversalPolicy, () => ({
    __proto__: dart.getFields(focus_traversal.OrderedTraversalPolicy.__proto__),
    secondary: dart.finalFieldType(dart.nullable(focus_traversal.FocusTraversalPolicy))
  }));
  var order$2 = dart.privateName(focus_traversal, "FocusTraversalOrder.order");
  focus_traversal.FocusTraversalOrder = class FocusTraversalOrder extends framework.InheritedWidget {
    get order() {
      return this[order$2];
    }
    set order(value) {
      super.order = value;
    }
    static of(context) {
      let t77;
      if (context == null) dart.nullFailed(L104, 1409, 37, "context");
      if (!(context != null)) dart.assertFailed(null, L104, 1410, 12, "context != null");
      let marker = FocusTraversalOrderN().as((t77 = context.getElementForInheritedWidgetOfExactType(focus_traversal.FocusTraversalOrder), t77 == null ? null : t77.widget));
      if (!dart.test(dart.fn(() => {
        if (marker == null) {
          dart.throw(assertions.FlutterError.new("FocusTraversalOrder.of() was called with a context that " + "does not contain a FocusTraversalOrder widget. No TraversalOrder widget " + "ancestor could be found starting from the context that was passed to " + "FocusTraversalOrder.of().\n" + "The context used was:\n" + "  " + dart.str(context)));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L104, 1412, 12, "(){\r\n      if (marker == null) {\r\n        throw FlutterError(\r\n          'FocusTraversalOrder.of() was called with a context that '\r\n          'does not contain a FocusTraversalOrder widget. No TraversalOrder widget '\r\n          'ancestor could be found starting from the context that was passed to '\r\n          'FocusTraversalOrder.of().\\n'\r\n          'The context used was:\\n'\r\n          '  $context',\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      return dart.nullCheck(marker).order;
    }
    static maybeOf(context) {
      let t77, t77$;
      if (context == null) dart.nullFailed(L104, 1435, 43, "context");
      if (!(context != null)) dart.assertFailed(null, L104, 1436, 12, "context != null");
      let marker = FocusTraversalOrderN().as((t77 = context.getElementForInheritedWidgetOfExactType(focus_traversal.FocusTraversalOrder), t77 == null ? null : t77.widget));
      t77$ = marker;
      return t77$ == null ? null : t77$.order;
    }
    updateShouldNotify(oldWidget) {
      framework.InheritedWidget.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L104, 1444, 43, "oldWidget");
      return false;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L104, 1447, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfFocusOrder()).new("order", this.order));
    }
  };
  (focus_traversal.FocusTraversalOrder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let order = opts && 'order' in opts ? opts.order : null;
    if (order == null) dart.nullFailed(L104, 1396, 54, "order");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L104, 1396, 77, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[order$2] = order;
    focus_traversal.FocusTraversalOrder.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = focus_traversal.FocusTraversalOrder.prototype;
  dart.addTypeTests(focus_traversal.FocusTraversalOrder);
  dart.addTypeCaches(focus_traversal.FocusTraversalOrder);
  dart.setMethodSignature(focus_traversal.FocusTraversalOrder, () => ({
    __proto__: dart.getMethods(focus_traversal.FocusTraversalOrder.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(focus_traversal.FocusTraversalOrder, L103);
  dart.setFieldSignature(focus_traversal.FocusTraversalOrder, () => ({
    __proto__: dart.getFields(focus_traversal.FocusTraversalOrder.__proto__),
    order: dart.finalFieldType(focus_traversal.FocusOrder)
  }));
  var policy$ = dart.privateName(focus_traversal, "FocusTraversalGroup.policy");
  var descendantsAreFocusable$ = dart.privateName(focus_traversal, "FocusTraversalGroup.descendantsAreFocusable");
  var child$34 = dart.privateName(focus_traversal, "FocusTraversalGroup.child");
  focus_traversal.FocusTraversalGroup = class FocusTraversalGroup extends framework.StatefulWidget {
    get policy() {
      return this[policy$];
    }
    set policy(value) {
      super.policy = value;
    }
    get descendantsAreFocusable() {
      return this[descendantsAreFocusable$];
    }
    set descendantsAreFocusable(value) {
      super.descendantsAreFocusable = value;
    }
    get child() {
      return this[child$34];
    }
    set child(value) {
      super.child = value;
    }
    static of(context) {
      if (context == null) dart.nullFailed(L104, 1698, 47, "context");
      if (!(context != null)) dart.assertFailed(null, L104, 1699, 12, "context != null");
      let inherited = context.dependOnInheritedWidgetOfExactType(focus_traversal._FocusTraversalGroupMarker);
      if (!dart.test(dart.fn(() => {
        if (inherited == null) {
          dart.throw(assertions.FlutterError.new("Unable to find a FocusTraversalGroup widget in the context.\n" + "FocusTraversalGroup.of() was called with a context that does not contain a " + "FocusTraversalGroup.\n" + "No FocusTraversalGroup ancestor could be found starting from the context that was " + "passed to FocusTraversalGroup.of(). This can happen because there is not a " + "WidgetsApp or MaterialApp widget (those widgets introduce a FocusTraversalGroup), " + "or it can happen if the context comes from a widget above those widgets.\n" + "The context used was:\n" + "  " + dart.str(context)));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L104, 1701, 12, "() {\r\n      if (inherited == null) {\r\n        throw FlutterError(\r\n          'Unable to find a FocusTraversalGroup widget in the context.\\n'\r\n          'FocusTraversalGroup.of() was called with a context that does not contain a '\r\n          'FocusTraversalGroup.\\n'\r\n          'No FocusTraversalGroup ancestor could be found starting from the context that was '\r\n          'passed to FocusTraversalGroup.of(). This can happen because there is not a '\r\n          'WidgetsApp or MaterialApp widget (those widgets introduce a FocusTraversalGroup), '\r\n          'or it can happen if the context comes from a widget above those widgets.\\n'\r\n          'The context used was:\\n'\r\n          '  $context',\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      return dart.nullCheck(inherited).policy;
    }
    static maybeOf(context) {
      let t77;
      if (context == null) dart.nullFailed(L104, 1733, 53, "context");
      if (!(context != null)) dart.assertFailed(null, L104, 1734, 12, "context != null");
      let inherited = context.dependOnInheritedWidgetOfExactType(focus_traversal._FocusTraversalGroupMarker);
      t77 = inherited;
      return t77 == null ? null : t77.policy;
    }
    createState() {
      return new focus_traversal._FocusTraversalGroupState.new();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L104, 1743, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfFocusTraversalPolicy()).new("policy", this.policy));
    }
  };
  (focus_traversal.FocusTraversalGroup.new = function(opts) {
    let t77;
    let key = opts && 'key' in opts ? opts.key : null;
    let policy = opts && 'policy' in opts ? opts.policy : null;
    let descendantsAreFocusable = opts && 'descendantsAreFocusable' in opts ? opts.descendantsAreFocusable : true;
    if (descendantsAreFocusable == null) dart.nullFailed(L104, 1654, 10, "descendantsAreFocusable");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L104, 1655, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[descendantsAreFocusable$] = descendantsAreFocusable;
    this[child$34] = child;
    if (!(descendantsAreFocusable != null)) dart.assertFailed(null, L104, 1656, 16, "descendantsAreFocusable != null");
    this[policy$] = (t77 = policy, t77 == null ? new focus_traversal.ReadingOrderTraversalPolicy.new() : t77);
    focus_traversal.FocusTraversalGroup.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = focus_traversal.FocusTraversalGroup.prototype;
  dart.addTypeTests(focus_traversal.FocusTraversalGroup);
  dart.addTypeCaches(focus_traversal.FocusTraversalGroup);
  dart.setMethodSignature(focus_traversal.FocusTraversalGroup, () => ({
    __proto__: dart.getMethods(focus_traversal.FocusTraversalGroup.__proto__),
    createState: dart.fnType(focus_traversal._FocusTraversalGroupState, [])
  }));
  dart.setLibraryUri(focus_traversal.FocusTraversalGroup, L103);
  dart.setFieldSignature(focus_traversal.FocusTraversalGroup, () => ({
    __proto__: dart.getFields(focus_traversal.FocusTraversalGroup.__proto__),
    policy: dart.finalFieldType(focus_traversal.FocusTraversalPolicy),
    descendantsAreFocusable: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C1033;
  var C1034;
  var C1035;
  var C1036;
  var C1037;
  var C1038;
  var C1032;
  var C1031;
  var C1041;
  var C1042;
  var C1043;
  var C1040;
  var C1039;
  focus_traversal._FocusTraversalGroupState = class _FocusTraversalGroupState extends framework.State$(focus_traversal.FocusTraversalGroup) {
    initState() {
      super.initState();
      this.focusNode = new focus_manager.FocusNode.new({canRequestFocus: false, skipTraversal: true, debugLabel: "FocusTraversalGroup"});
    }
    dispose() {
      let t77;
      t77 = this.focusNode;
      t77 == null ? null : t77.dispose();
      super.dispose();
    }
    build(context) {
      if (context == null) dart.nullFailed(L104, 1772, 29, "context");
      return new focus_traversal._FocusTraversalGroupMarker.new({policy: this.widget.policy, focusNode: dart.nullCheck(this.focusNode), child: new focus_scope.Focus.new({focusNode: this.focusNode, canRequestFocus: false, skipTraversal: true, includeSemantics: false, descendantsAreFocusable: this.widget.descendantsAreFocusable, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C1031 || CT.C1031}), $creationLocationd_0dea112b090073317d4: C1039 || CT.C1039});
    }
  };
  (focus_traversal._FocusTraversalGroupState.new = function() {
    this.focusNode = null;
    focus_traversal._FocusTraversalGroupState.__proto__.new.call(this);
    ;
  }).prototype = focus_traversal._FocusTraversalGroupState.prototype;
  dart.addTypeTests(focus_traversal._FocusTraversalGroupState);
  dart.addTypeCaches(focus_traversal._FocusTraversalGroupState);
  dart.setMethodSignature(focus_traversal._FocusTraversalGroupState, () => ({
    __proto__: dart.getMethods(focus_traversal._FocusTraversalGroupState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(focus_traversal._FocusTraversalGroupState, L103);
  dart.setFieldSignature(focus_traversal._FocusTraversalGroupState, () => ({
    __proto__: dart.getFields(focus_traversal._FocusTraversalGroupState.__proto__),
    focusNode: dart.fieldType(dart.nullable(focus_manager.FocusNode))
  }));
  var policy$0 = dart.privateName(focus_traversal, "_FocusTraversalGroupMarker.policy");
  var focusNode$0 = dart.privateName(focus_traversal, "_FocusTraversalGroupMarker.focusNode");
  focus_traversal._FocusTraversalGroupMarker = class _FocusTraversalGroupMarker extends framework.InheritedWidget {
    get policy() {
      return this[policy$0];
    }
    set policy(value) {
      super.policy = value;
    }
    get focusNode() {
      return this[focusNode$0];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    updateShouldNotify(oldWidget) {
      framework.InheritedWidget.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L104, 1802, 43, "oldWidget");
      return false;
    }
  };
  (focus_traversal._FocusTraversalGroupMarker.new = function(opts) {
    let policy = opts && 'policy' in opts ? opts.policy : null;
    if (policy == null) dart.nullFailed(L104, 1791, 19, "policy");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    if (focusNode == null) dart.nullFailed(L104, 1792, 19, "focusNode");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L104, 1793, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[policy$0] = policy;
    this[focusNode$0] = focusNode;
    if (!(policy != null)) dart.assertFailed(null, L104, 1794, 16, "policy != null");
    if (!(focusNode != null)) dart.assertFailed(null, L104, 1795, 16, "focusNode != null");
    focus_traversal._FocusTraversalGroupMarker.__proto__.new.call(this, {child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = focus_traversal._FocusTraversalGroupMarker.prototype;
  dart.addTypeTests(focus_traversal._FocusTraversalGroupMarker);
  dart.addTypeCaches(focus_traversal._FocusTraversalGroupMarker);
  dart.setMethodSignature(focus_traversal._FocusTraversalGroupMarker, () => ({
    __proto__: dart.getMethods(focus_traversal._FocusTraversalGroupMarker.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(focus_traversal._FocusTraversalGroupMarker, L103);
  dart.setFieldSignature(focus_traversal._FocusTraversalGroupMarker, () => ({
    __proto__: dart.getFields(focus_traversal._FocusTraversalGroupMarker.__proto__),
    policy: dart.finalFieldType(focus_traversal.FocusTraversalPolicy),
    focusNode: dart.finalFieldType(focus_manager.FocusNode)
  }));
  var focusNode$1 = dart.privateName(focus_traversal, "RequestFocusIntent.focusNode");
  focus_traversal.RequestFocusIntent = class RequestFocusIntent extends actions$.Intent {
    get focusNode() {
      return this[focusNode$1];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
  };
  (focus_traversal.RequestFocusIntent.new = function(focusNode) {
    if (focusNode == null) dart.nullFailed(L104, 1810, 33, "focusNode");
    this[focusNode$1] = focusNode;
    if (!(focusNode != null)) dart.assertFailed(null, L104, 1811, 16, "focusNode != null");
    focus_traversal.RequestFocusIntent.__proto__.new.call(this);
    ;
  }).prototype = focus_traversal.RequestFocusIntent.prototype;
  dart.addTypeTests(focus_traversal.RequestFocusIntent);
  dart.addTypeCaches(focus_traversal.RequestFocusIntent);
  dart.setLibraryUri(focus_traversal.RequestFocusIntent, L103);
  dart.setFieldSignature(focus_traversal.RequestFocusIntent, () => ({
    __proto__: dart.getFields(focus_traversal.RequestFocusIntent.__proto__),
    focusNode: dart.finalFieldType(focus_manager.FocusNode)
  }));
  focus_traversal.RequestFocusAction = class RequestFocusAction extends actions$.Action$(focus_traversal.RequestFocusIntent) {
    invoke(intent) {
      focus_traversal.RequestFocusIntent.as(intent);
      if (intent == null) dart.nullFailed(L104, 1843, 34, "intent");
      focus_traversal._focusAndEnsureVisible(intent.focusNode);
    }
  };
  (focus_traversal.RequestFocusAction.new = function() {
    focus_traversal.RequestFocusAction.__proto__.new.call(this);
    ;
  }).prototype = focus_traversal.RequestFocusAction.prototype;
  dart.addTypeTests(focus_traversal.RequestFocusAction);
  dart.addTypeCaches(focus_traversal.RequestFocusAction);
  dart.setMethodSignature(focus_traversal.RequestFocusAction, () => ({
    __proto__: dart.getMethods(focus_traversal.RequestFocusAction.__proto__),
    invoke: dart.fnType(dart.void, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(focus_traversal.RequestFocusAction, L103);
  focus_traversal.NextFocusIntent = class NextFocusIntent extends actions$.Intent {};
  (focus_traversal.NextFocusIntent.new = function() {
    focus_traversal.NextFocusIntent.__proto__.new.call(this);
    ;
  }).prototype = focus_traversal.NextFocusIntent.prototype;
  dart.addTypeTests(focus_traversal.NextFocusIntent);
  dart.addTypeCaches(focus_traversal.NextFocusIntent);
  dart.setLibraryUri(focus_traversal.NextFocusIntent, L103);
  focus_traversal.NextFocusAction = class NextFocusAction extends actions$.Action$(focus_traversal.NextFocusIntent) {
    invoke(intent) {
      focus_traversal.NextFocusIntent.as(intent);
      if (intent == null) dart.nullFailed(L104, 1866, 31, "intent");
      dart.nullCheck(focus_manager.primaryFocus).nextFocus();
    }
  };
  (focus_traversal.NextFocusAction.new = function() {
    focus_traversal.NextFocusAction.__proto__.new.call(this);
    ;
  }).prototype = focus_traversal.NextFocusAction.prototype;
  dart.addTypeTests(focus_traversal.NextFocusAction);
  dart.addTypeCaches(focus_traversal.NextFocusAction);
  dart.setMethodSignature(focus_traversal.NextFocusAction, () => ({
    __proto__: dart.getMethods(focus_traversal.NextFocusAction.__proto__),
    invoke: dart.fnType(dart.void, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(focus_traversal.NextFocusAction, L103);
  focus_traversal.PreviousFocusIntent = class PreviousFocusIntent extends actions$.Intent {};
  (focus_traversal.PreviousFocusIntent.new = function() {
    focus_traversal.PreviousFocusIntent.__proto__.new.call(this);
    ;
  }).prototype = focus_traversal.PreviousFocusIntent.prototype;
  dart.addTypeTests(focus_traversal.PreviousFocusIntent);
  dart.addTypeCaches(focus_traversal.PreviousFocusIntent);
  dart.setLibraryUri(focus_traversal.PreviousFocusIntent, L103);
  focus_traversal.PreviousFocusAction = class PreviousFocusAction extends actions$.Action$(focus_traversal.PreviousFocusIntent) {
    invoke(intent) {
      focus_traversal.PreviousFocusIntent.as(intent);
      if (intent == null) dart.nullFailed(L104, 1890, 35, "intent");
      dart.nullCheck(focus_manager.primaryFocus).previousFocus();
    }
  };
  (focus_traversal.PreviousFocusAction.new = function() {
    focus_traversal.PreviousFocusAction.__proto__.new.call(this);
    ;
  }).prototype = focus_traversal.PreviousFocusAction.prototype;
  dart.addTypeTests(focus_traversal.PreviousFocusAction);
  dart.addTypeCaches(focus_traversal.PreviousFocusAction);
  dart.setMethodSignature(focus_traversal.PreviousFocusAction, () => ({
    __proto__: dart.getMethods(focus_traversal.PreviousFocusAction.__proto__),
    invoke: dart.fnType(dart.void, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(focus_traversal.PreviousFocusAction, L103);
  var direction$2 = dart.privateName(focus_traversal, "DirectionalFocusIntent.direction");
  var ignoreTextFields$ = dart.privateName(focus_traversal, "DirectionalFocusIntent.ignoreTextFields");
  focus_traversal.DirectionalFocusIntent = class DirectionalFocusIntent extends actions$.Intent {
    get direction() {
      return this[direction$2];
    }
    set direction(value) {
      super.direction = value;
    }
    get ignoreTextFields() {
      return this[ignoreTextFields$];
    }
    set ignoreTextFields(value) {
      super.ignoreTextFields = value;
    }
  };
  (focus_traversal.DirectionalFocusIntent.new = function(direction, opts) {
    if (direction == null) dart.nullFailed(L104, 1907, 37, "direction");
    let ignoreTextFields = opts && 'ignoreTextFields' in opts ? opts.ignoreTextFields : true;
    if (ignoreTextFields == null) dart.nullFailed(L104, 1907, 54, "ignoreTextFields");
    this[direction$2] = direction;
    this[ignoreTextFields$] = ignoreTextFields;
    if (!(ignoreTextFields != null)) dart.assertFailed(null, L104, 1908, 16, "ignoreTextFields != null");
    focus_traversal.DirectionalFocusIntent.__proto__.new.call(this);
    ;
  }).prototype = focus_traversal.DirectionalFocusIntent.prototype;
  dart.addTypeTests(focus_traversal.DirectionalFocusIntent);
  dart.addTypeCaches(focus_traversal.DirectionalFocusIntent);
  dart.setLibraryUri(focus_traversal.DirectionalFocusIntent, L103);
  dart.setFieldSignature(focus_traversal.DirectionalFocusIntent, () => ({
    __proto__: dart.getFields(focus_traversal.DirectionalFocusIntent.__proto__),
    direction: dart.finalFieldType(focus_traversal.TraversalDirection),
    ignoreTextFields: dart.finalFieldType(core.bool)
  }));
  focus_traversal.DirectionalFocusAction = class DirectionalFocusAction extends actions$.Action$(focus_traversal.DirectionalFocusIntent) {
    invoke(intent) {
      focus_traversal.DirectionalFocusIntent.as(intent);
      if (intent == null) dart.nullFailed(L104, 1931, 38, "intent");
      if (!dart.test(intent.ignoreTextFields) || !editable_text.EditableText.is(dart.nullCheck(dart.nullCheck(focus_manager.primaryFocus).context).widget)) {
        dart.nullCheck(focus_manager.primaryFocus).focusInDirection(intent.direction);
      }
    }
  };
  (focus_traversal.DirectionalFocusAction.new = function() {
    focus_traversal.DirectionalFocusAction.__proto__.new.call(this);
    ;
  }).prototype = focus_traversal.DirectionalFocusAction.prototype;
  dart.addTypeTests(focus_traversal.DirectionalFocusAction);
  dart.addTypeCaches(focus_traversal.DirectionalFocusAction);
  dart.setMethodSignature(focus_traversal.DirectionalFocusAction, () => ({
    __proto__: dart.getMethods(focus_traversal.DirectionalFocusAction.__proto__),
    invoke: dart.fnType(dart.void, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(focus_traversal.DirectionalFocusAction, L103);
  focus_traversal._getAncestor = function _getAncestor(context, opts) {
    if (context == null) dart.nullFailed(L104, 25, 41, "context");
    let count = opts && 'count' in opts ? opts.count : 1;
    if (count == null) dart.nullFailed(L104, 25, 55, "count");
    let target = null;
    context.visitAncestorElements(dart.fn(ancestor => {
      if (ancestor == null) dart.nullFailed(L104, 27, 42, "ancestor");
      count = dart.notNull(count) - 1;
      if (count === 0) {
        target = ancestor;
        return false;
      }
      return true;
    }, ElementTobool()));
    return target;
  };
  focus_traversal._focusAndEnsureVisible = function _focusAndEnsureVisible(node, opts) {
    if (node == null) dart.nullFailed(L104, 39, 13, "node");
    let alignmentPolicy = opts && 'alignmentPolicy' in opts ? opts.alignmentPolicy : C679 || CT.C679;
    if (alignmentPolicy == null) dart.nullFailed(L104, 40, 33, "alignmentPolicy");
    node.requestFocus();
    scrollable$.Scrollable.ensureVisible(dart.nullCheck(node.context), {alignment: 1.0, alignmentPolicy: alignmentPolicy});
  };
  var _dirty$ = dart.privateName(inherited_notifier, "_dirty");
  var _handleUpdate = dart.privateName(inherited_notifier, "_handleUpdate");
  const _is__InheritedNotifierElement_default = Symbol('_is__InheritedNotifierElement_default');
  inherited_notifier._InheritedNotifierElement$ = dart.generic(T => {
    var InheritedNotifierOfT = () => (InheritedNotifierOfT = dart.constFn(inherited_notifier.InheritedNotifier$(T)))();
    class _InheritedNotifierElement extends framework.InheritedElement {
      get widget() {
        return InheritedNotifierOfT().as(super.widget);
      }
      update(newWidget) {
        let t77, t77$;
        InheritedNotifierOfT().as(newWidget);
        if (newWidget == null) dart.nullFailed(L13, 174, 36, "newWidget");
        let oldNotifier = this.widget.notifier;
        let newNotifier = newWidget.notifier;
        if (!dart.equals(oldNotifier, newNotifier)) {
          t77 = oldNotifier;
          t77 == null ? null : t77.removeListener(dart.bind(this, _handleUpdate));
          t77$ = newNotifier;
          t77$ == null ? null : t77$.addListener(dart.bind(this, _handleUpdate));
        }
        super.update(newWidget);
      }
      build() {
        if (dart.test(this[_dirty$])) this.notifyClients(this.widget);
        return super.build();
      }
      [_handleUpdate]() {
        this[_dirty$] = true;
        this.markNeedsBuild();
      }
      notifyClients(oldWidget) {
        InheritedNotifierOfT().as(oldWidget);
        if (oldWidget == null) dart.nullFailed(L13, 197, 43, "oldWidget");
        super.notifyClients(oldWidget);
        this[_dirty$] = false;
      }
      unmount() {
        let t77;
        t77 = this.widget.notifier;
        t77 == null ? null : t77.removeListener(dart.bind(this, _handleUpdate));
        super.unmount();
      }
    }
    (_InheritedNotifierElement.new = function(widget) {
      let t77;
      if (widget == null) dart.nullFailed(L13, 164, 50, "widget");
      this[_dirty$] = false;
      _InheritedNotifierElement.__proto__.new.call(this, widget);
      t77 = widget.notifier;
      t77 == null ? null : t77.addListener(dart.bind(this, _handleUpdate));
    }).prototype = _InheritedNotifierElement.prototype;
    dart.addTypeTests(_InheritedNotifierElement);
    _InheritedNotifierElement.prototype[_is__InheritedNotifierElement_default] = true;
    dart.addTypeCaches(_InheritedNotifierElement);
    dart.setMethodSignature(_InheritedNotifierElement, () => ({
      __proto__: dart.getMethods(_InheritedNotifierElement.__proto__),
      [_handleUpdate]: dart.fnType(dart.void, [])
    }));
    dart.setGetterSignature(_InheritedNotifierElement, () => ({
      __proto__: dart.getGetters(_InheritedNotifierElement.__proto__),
      widget: inherited_notifier.InheritedNotifier$(T)
    }));
    dart.setLibraryUri(_InheritedNotifierElement, L14);
    dart.setFieldSignature(_InheritedNotifierElement, () => ({
      __proto__: dart.getFields(_InheritedNotifierElement.__proto__),
      [_dirty$]: dart.fieldType(core.bool)
    }));
    return _InheritedNotifierElement;
  });
  inherited_notifier._InheritedNotifierElement = inherited_notifier._InheritedNotifierElement$();
  dart.addTypeTests(inherited_notifier._InheritedNotifierElement, _is__InheritedNotifierElement_default);
  var debugLabel$2 = dart.privateName(focus_scope, "Focus.debugLabel");
  var child$35 = dart.privateName(focus_scope, "Focus.child");
  var onKey$ = dart.privateName(focus_scope, "Focus.onKey");
  var onFocusChange$ = dart.privateName(focus_scope, "Focus.onFocusChange");
  var autofocus$0 = dart.privateName(focus_scope, "Focus.autofocus");
  var focusNode$2 = dart.privateName(focus_scope, "Focus.focusNode");
  var skipTraversal$ = dart.privateName(focus_scope, "Focus.skipTraversal");
  var includeSemantics$ = dart.privateName(focus_scope, "Focus.includeSemantics");
  var canRequestFocus$ = dart.privateName(focus_scope, "Focus.canRequestFocus");
  var descendantsAreFocusable$0 = dart.privateName(focus_scope, "Focus.descendantsAreFocusable");
  focus_scope.Focus = class Focus extends framework.StatefulWidget {
    get debugLabel() {
      return this[debugLabel$2];
    }
    set debugLabel(value) {
      super.debugLabel = value;
    }
    get child() {
      return this[child$35];
    }
    set child(value) {
      super.child = value;
    }
    get onKey() {
      return this[onKey$];
    }
    set onKey(value) {
      super.onKey = value;
    }
    get onFocusChange() {
      return this[onFocusChange$];
    }
    set onFocusChange(value) {
      super.onFocusChange = value;
    }
    get autofocus() {
      return this[autofocus$0];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get focusNode() {
      return this[focusNode$2];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get skipTraversal() {
      return this[skipTraversal$];
    }
    set skipTraversal(value) {
      super.skipTraversal = value;
    }
    get includeSemantics() {
      return this[includeSemantics$];
    }
    set includeSemantics(value) {
      super.includeSemantics = value;
    }
    get canRequestFocus() {
      return this[canRequestFocus$];
    }
    set canRequestFocus(value) {
      super.canRequestFocus = value;
    }
    get descendantsAreFocusable() {
      return this[descendantsAreFocusable$0];
    }
    set descendantsAreFocusable(value) {
      super.descendantsAreFocusable = value;
    }
    static of(context, opts) {
      let t77;
      if (context == null) dart.nullFailed(L105, 447, 36, "context");
      let scopeOk = opts && 'scopeOk' in opts ? opts.scopeOk : false;
      if (scopeOk == null) dart.nullFailed(L105, 447, 52, "scopeOk");
      if (!(context != null)) dart.assertFailed(null, L105, 448, 12, "context != null");
      if (!(scopeOk != null)) dart.assertFailed(null, L105, 449, 12, "scopeOk != null");
      let marker = context.dependOnInheritedWidgetOfExactType(focus_scope._FocusMarker);
      let node = (t77 = marker, t77 == null ? null : t77.notifier);
      if (!dart.test(dart.fn(() => {
        if (node == null) {
          dart.throw(assertions.FlutterError.new("Focus.of() was called with a context that does not contain a Focus widget.\n" + "No Focus widget ancestor could be found starting from the context that was passed to " + "Focus.of(). This can happen because you are using a widget that looks for a Focus " + "ancestor, and do not have a Focus widget descendant in the nearest FocusScope.\n" + "The context used was:\n" + "  " + dart.str(context)));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L105, 452, 12, "() {\r\n      if (node == null) {\r\n        throw FlutterError(\r\n          'Focus.of() was called with a context that does not contain a Focus widget.\\n'\r\n          'No Focus widget ancestor could be found starting from the context that was passed to '\r\n          'Focus.of(). This can happen because you are using a widget that looks for a Focus '\r\n          'ancestor, and do not have a Focus widget descendant in the nearest FocusScope.\\n'\r\n          'The context used was:\\n'\r\n          '  $context'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      if (!dart.test(dart.fn(() => {
        if (!dart.test(scopeOk) && focus_manager.FocusScopeNode.is(node)) {
          dart.throw(assertions.FlutterError.new("Focus.of() was called with a context that does not contain a Focus between the given " + "context and the nearest FocusScope widget.\n" + "No Focus ancestor could be found starting from the context that was passed to " + "Focus.of() to the point where it found the nearest FocusScope widget. This can happen " + "because you are using a widget that looks for a Focus ancestor, and do not have a " + "Focus widget ancestor in the current FocusScope.\n" + "The context used was:\n" + "  " + dart.str(context)));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L105, 465, 12, "() {\r\n      if (!scopeOk && node is FocusScopeNode) {\r\n        throw FlutterError(\r\n          'Focus.of() was called with a context that does not contain a Focus between the given '\r\n          'context and the nearest FocusScope widget.\\n'\r\n          'No Focus ancestor could be found starting from the context that was passed to '\r\n          'Focus.of() to the point where it found the nearest FocusScope widget. This can happen '\r\n          'because you are using a widget that looks for a Focus ancestor, and do not have a '\r\n          'Focus widget ancestor in the current FocusScope.\\n'\r\n          'The context used was:\\n'\r\n          '  $context'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      return dart.nullCheck(node);
    }
    static maybeOf(context, opts) {
      let t77;
      if (context == null) dart.nullFailed(L105, 499, 42, "context");
      let scopeOk = opts && 'scopeOk' in opts ? opts.scopeOk : false;
      if (scopeOk == null) dart.nullFailed(L105, 499, 58, "scopeOk");
      if (!(context != null)) dart.assertFailed(null, L105, 500, 12, "context != null");
      if (!(scopeOk != null)) dart.assertFailed(null, L105, 501, 12, "scopeOk != null");
      let marker = context.dependOnInheritedWidgetOfExactType(focus_scope._FocusMarker);
      let node = (t77 = marker, t77 == null ? null : t77.notifier);
      if (node == null) {
        return null;
      }
      if (!dart.test(scopeOk) && focus_manager.FocusScopeNode.is(node)) {
        return null;
      }
      return node;
    }
    static isAt(context) {
      let t77, t77$;
      if (context == null) dart.nullFailed(L105, 525, 33, "context");
      t77$ = (t77 = focus_scope.Focus.maybeOf(context), t77 == null ? null : t77.hasFocus);
      return t77$ == null ? false : t77$;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L105, 528, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.StringProperty.new("debugLabel", this.debugLabel, {defaultValue: null}));
      properties.add(new diagnostics$.FlagProperty.new("autofocus", {value: this.autofocus, ifTrue: "AUTOFOCUS", defaultValue: false}));
      properties.add(new diagnostics$.FlagProperty.new("canRequestFocus", {value: this.canRequestFocus, ifFalse: "NOT FOCUSABLE", defaultValue: false}));
      properties.add(new diagnostics$.FlagProperty.new("descendantsAreFocusable", {value: this.descendantsAreFocusable, ifFalse: "DESCENDANTS UNFOCUSABLE", defaultValue: true}));
      properties.add(new (DiagnosticsPropertyOfFocusNode()).new("focusNode", this.focusNode, {defaultValue: null}));
    }
    createState() {
      return new focus_scope._FocusState.new();
    }
  };
  (focus_scope.Focus.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L105, 276, 19, "child");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(L105, 278, 10, "autofocus");
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let onKey = opts && 'onKey' in opts ? opts.onKey : null;
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : null;
    let descendantsAreFocusable = opts && 'descendantsAreFocusable' in opts ? opts.descendantsAreFocusable : true;
    if (descendantsAreFocusable == null) dart.nullFailed(L105, 283, 10, "descendantsAreFocusable");
    let skipTraversal = opts && 'skipTraversal' in opts ? opts.skipTraversal : null;
    let includeSemantics = opts && 'includeSemantics' in opts ? opts.includeSemantics : true;
    if (includeSemantics == null) dart.nullFailed(L105, 285, 10, "includeSemantics");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$35] = child;
    this[focusNode$2] = focusNode;
    this[autofocus$0] = autofocus;
    this[onFocusChange$] = onFocusChange;
    this[onKey$] = onKey;
    this[debugLabel$2] = debugLabel;
    this[canRequestFocus$] = canRequestFocus;
    this[descendantsAreFocusable$0] = descendantsAreFocusable;
    this[skipTraversal$] = skipTraversal;
    this[includeSemantics$] = includeSemantics;
    if (!(child != null)) dart.assertFailed(null, L105, 286, 16, "child != null");
    if (!(autofocus != null)) dart.assertFailed(null, L105, 287, 16, "autofocus != null");
    if (!(descendantsAreFocusable != null)) dart.assertFailed(null, L105, 288, 16, "descendantsAreFocusable != null");
    if (!(includeSemantics != null)) dart.assertFailed(null, L105, 289, 16, "includeSemantics != null");
    focus_scope.Focus.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = focus_scope.Focus.prototype;
  dart.addTypeTests(focus_scope.Focus);
  dart.addTypeCaches(focus_scope.Focus);
  dart.setMethodSignature(focus_scope.Focus, () => ({
    __proto__: dart.getMethods(focus_scope.Focus.__proto__),
    createState: dart.fnType(focus_scope._FocusState, [])
  }));
  dart.setLibraryUri(focus_scope.Focus, L106);
  dart.setFieldSignature(focus_scope.Focus, () => ({
    __proto__: dart.getFields(focus_scope.Focus.__proto__),
    debugLabel: dart.finalFieldType(dart.nullable(core.String)),
    child: dart.finalFieldType(framework.Widget),
    onKey: dart.finalFieldType(dart.nullable(dart.fnType(dart.dynamic, [focus_manager.FocusNode, raw_keyboard.RawKeyEvent]))),
    onFocusChange: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    autofocus: dart.finalFieldType(core.bool),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    skipTraversal: dart.finalFieldType(dart.nullable(core.bool)),
    includeSemantics: dart.finalFieldType(core.bool),
    canRequestFocus: dart.finalFieldType(dart.nullable(core.bool)),
    descendantsAreFocusable: dart.finalFieldType(core.bool)
  }));
  var _internalNode = dart.privateName(focus_scope, "_internalNode");
  var _hasPrimaryFocus = dart.privateName(focus_scope, "_hasPrimaryFocus");
  var _canRequestFocus = dart.privateName(focus_scope, "_canRequestFocus");
  var _descendantsAreFocusable = dart.privateName(focus_scope, "_descendantsAreFocusable");
  var _didAutofocus = dart.privateName(focus_scope, "_didAutofocus");
  var _focusAttachment$ = dart.privateName(focus_scope, "_focusAttachment");
  var _initNode = dart.privateName(focus_scope, "_initNode");
  var _createNode = dart.privateName(focus_scope, "_createNode");
  var _handleFocusChanged$ = dart.privateName(focus_scope, "_handleFocusChanged");
  var _handleAutofocus = dart.privateName(focus_scope, "_handleAutofocus");
  var C1046;
  var C1047;
  var C1045;
  var C1044;
  var C1050;
  var C1051;
  var C1049;
  var C1048;
  focus_scope._FocusState = class _FocusState extends framework.State$(focus_scope.Focus) {
    get focusNode() {
      let t77;
      t77 = this.widget.focusNode;
      return t77 == null ? dart.nullCheck(this[_internalNode]) : t77;
    }
    initState() {
      super.initState();
      this[_initNode]();
    }
    [_initNode]() {
      if (this.widget.focusNode == null) {
        this[_internalNode] == null ? this[_internalNode] = this[_createNode]() : null;
      }
      this.focusNode.descendantsAreFocusable = this.widget.descendantsAreFocusable;
      if (this.widget.skipTraversal != null) {
        this.focusNode.skipTraversal = dart.nullCheck(this.widget.skipTraversal);
      }
      if (this.widget.canRequestFocus != null) {
        this.focusNode.canRequestFocus = dart.nullCheck(this.widget.canRequestFocus);
      }
      this[_canRequestFocus] = this.focusNode.canRequestFocus;
      this[_descendantsAreFocusable] = this.focusNode.descendantsAreFocusable;
      this[_hasPrimaryFocus] = this.focusNode.hasPrimaryFocus;
      this[_focusAttachment$] = this.focusNode.attach(this.context, {onKey: this.widget.onKey});
      this.focusNode.addListener(dart.bind(this, _handleFocusChanged$));
    }
    [_createNode]() {
      let t77, t77$;
      return new focus_manager.FocusNode.new({debugLabel: this.widget.debugLabel, canRequestFocus: (t77 = this.widget.canRequestFocus, t77 == null ? true : t77), descendantsAreFocusable: this.widget.descendantsAreFocusable, skipTraversal: (t77$ = this.widget.skipTraversal, t77$ == null ? false : t77$)});
    }
    dispose() {
      let t77;
      this.focusNode.removeListener(dart.bind(this, _handleFocusChanged$));
      dart.nullCheck(this[_focusAttachment$]).detach();
      t77 = this[_internalNode];
      t77 == null ? null : t77.dispose();
      super.dispose();
    }
    didChangeDependencies() {
      let t77;
      super.didChangeDependencies();
      t77 = this[_focusAttachment$];
      t77 == null ? null : t77.reparent();
      this[_handleAutofocus]();
    }
    [_handleAutofocus]() {
      if (!dart.test(this[_didAutofocus]) && dart.test(this.widget.autofocus)) {
        focus_scope.FocusScope.of(this.context).autofocus(this.focusNode);
        this[_didAutofocus] = true;
      }
    }
    deactivate() {
      let t77;
      super.deactivate();
      t77 = this[_focusAttachment$];
      t77 == null ? null : t77.reparent();
      this[_didAutofocus] = false;
    }
    didUpdateWidget(oldWidget) {
      focus_scope.Focus.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L105, 631, 30, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.test(dart.fn(() => {
        if (oldWidget.debugLabel != this.widget.debugLabel && this[_internalNode] != null) {
          dart.nullCheck(this[_internalNode]).debugLabel = this.widget.debugLabel;
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L105, 633, 12, "() {\r\n      // Only update the debug label in debug builds, and only if we own the\r\n      // node.\r\n      if (oldWidget.debugLabel != widget.debugLabel && _internalNode != null) {\r\n        _internalNode!.debugLabel = widget.debugLabel;\r\n      }\r\n      return true;\r\n    }()");
      if (dart.equals(oldWidget.focusNode, this.widget.focusNode)) {
        if (this.widget.skipTraversal != null) {
          this.focusNode.skipTraversal = dart.nullCheck(this.widget.skipTraversal);
        }
        if (this.widget.canRequestFocus != null) {
          this.focusNode.canRequestFocus = dart.nullCheck(this.widget.canRequestFocus);
        }
        this.focusNode.descendantsAreFocusable = this.widget.descendantsAreFocusable;
      } else {
        dart.nullCheck(this[_focusAttachment$]).detach();
        this.focusNode.removeListener(dart.bind(this, _handleFocusChanged$));
        this[_initNode]();
      }
      if (!dart.equals(oldWidget.autofocus, this.widget.autofocus)) {
        this[_handleAutofocus]();
      }
    }
    [_handleFocusChanged$]() {
      let hasPrimaryFocus = this.focusNode.hasPrimaryFocus;
      let canRequestFocus = this.focusNode.canRequestFocus;
      let descendantsAreFocusable = this.focusNode.descendantsAreFocusable;
      if (this.widget.onFocusChange != null) {
        dart.nullCheck(this.widget.onFocusChange)(this.focusNode.hasFocus);
      }
      if (!dart.equals(this[_hasPrimaryFocus], hasPrimaryFocus)) {
        this.setState(dart.fn(() => {
          this[_hasPrimaryFocus] = hasPrimaryFocus;
        }, VoidTovoid()));
      }
      if (!dart.equals(this[_canRequestFocus], canRequestFocus)) {
        this.setState(dart.fn(() => {
          this[_canRequestFocus] = canRequestFocus;
        }, VoidTovoid()));
      }
      if (!dart.equals(this[_descendantsAreFocusable], descendantsAreFocusable)) {
        this.setState(dart.fn(() => {
          this[_descendantsAreFocusable] = descendantsAreFocusable;
        }, VoidTovoid()));
      }
    }
    build(context) {
      if (context == null) dart.nullFailed(L105, 686, 29, "context");
      dart.nullCheck(this[_focusAttachment$]).reparent();
      let child = this.widget.child;
      if (dart.test(this.widget.includeSemantics)) {
        child = new basic.Semantics.new({focusable: this[_canRequestFocus], focused: this[_hasPrimaryFocus], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C1044 || CT.C1044});
      }
      return new focus_scope._FocusMarker.new({node: this.focusNode, child: child, $creationLocationd_0dea112b090073317d4: C1048 || CT.C1048});
    }
  };
  (focus_scope._FocusState.new = function() {
    this[_internalNode] = null;
    this[_hasPrimaryFocus] = null;
    this[_canRequestFocus] = null;
    this[_descendantsAreFocusable] = null;
    this[_didAutofocus] = false;
    this[_focusAttachment$] = null;
    focus_scope._FocusState.__proto__.new.call(this);
    ;
  }).prototype = focus_scope._FocusState.prototype;
  dart.addTypeTests(focus_scope._FocusState);
  dart.addTypeCaches(focus_scope._FocusState);
  dart.setMethodSignature(focus_scope._FocusState, () => ({
    __proto__: dart.getMethods(focus_scope._FocusState.__proto__),
    [_initNode]: dart.fnType(dart.void, []),
    [_createNode]: dart.fnType(focus_manager.FocusNode, []),
    [_handleAutofocus]: dart.fnType(dart.void, []),
    [_handleFocusChanged$]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(focus_scope._FocusState, () => ({
    __proto__: dart.getGetters(focus_scope._FocusState.__proto__),
    focusNode: focus_manager.FocusNode
  }));
  dart.setLibraryUri(focus_scope._FocusState, L106);
  dart.setFieldSignature(focus_scope._FocusState, () => ({
    __proto__: dart.getFields(focus_scope._FocusState.__proto__),
    [_internalNode]: dart.fieldType(dart.nullable(focus_manager.FocusNode)),
    [_hasPrimaryFocus]: dart.fieldType(dart.nullable(core.bool)),
    [_canRequestFocus]: dart.fieldType(dart.nullable(core.bool)),
    [_descendantsAreFocusable]: dart.fieldType(dart.nullable(core.bool)),
    [_didAutofocus]: dart.fieldType(core.bool),
    [_focusAttachment$]: dart.fieldType(dart.nullable(focus_manager.FocusAttachment))
  }));
  focus_scope.FocusScope = class FocusScope extends focus_scope.Focus {
    static of(context) {
      let t78, t77, t77$;
      if (context == null) dart.nullFailed(L105, 934, 41, "context");
      if (!(context != null)) dart.assertFailed(null, L105, 935, 12, "context != null");
      let marker = context.dependOnInheritedWidgetOfExactType(focus_scope._FocusMarker);
      t77$ = (t77 = marker, t77 == null ? null : (t78 = t77.notifier, t78 == null ? null : t78.nearestScope));
      return t77$ == null ? dart.nullCheck(context.owner).focusManager.rootScope : t77$;
    }
    createState() {
      return new focus_scope._FocusScopeState.new();
    }
  };
  (focus_scope.FocusScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let node = opts && 'node' in opts ? opts.node : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L105, 906, 21, "child");
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(L105, 907, 10, "autofocus");
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : null;
    let skipTraversal = opts && 'skipTraversal' in opts ? opts.skipTraversal : null;
    let onKey = opts && 'onKey' in opts ? opts.onKey : null;
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(child != null)) dart.assertFailed(null, L105, 913, 16, "child != null");
    if (!(autofocus != null)) dart.assertFailed(null, L105, 914, 16, "autofocus != null");
    focus_scope.FocusScope.__proto__.new.call(this, {key: key, child: child, focusNode: node, autofocus: autofocus, onFocusChange: onFocusChange, canRequestFocus: canRequestFocus, skipTraversal: skipTraversal, onKey: onKey, debugLabel: debugLabel, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = focus_scope.FocusScope.prototype;
  dart.addTypeTests(focus_scope.FocusScope);
  dart.addTypeCaches(focus_scope.FocusScope);
  dart.setMethodSignature(focus_scope.FocusScope, () => ({
    __proto__: dart.getMethods(focus_scope.FocusScope.__proto__),
    createState: dart.fnType(focus_scope._FocusScopeState, [])
  }));
  dart.setLibraryUri(focus_scope.FocusScope, L106);
  var C1054;
  var C1055;
  var C1053;
  var C1052;
  var C1058;
  var C1059;
  var C1057;
  var C1056;
  focus_scope._FocusScopeState = class _FocusScopeState extends focus_scope._FocusState {
    [_createNode]() {
      let t77, t77$;
      return new focus_manager.FocusScopeNode.new({debugLabel: this.widget.debugLabel, canRequestFocus: (t77 = this.widget.canRequestFocus, t77 == null ? true : t77), skipTraversal: (t77$ = this.widget.skipTraversal, t77$ == null ? false : t77$)});
    }
    build(context) {
      if (context == null) dart.nullFailed(L105, 955, 29, "context");
      dart.nullCheck(this[_focusAttachment$]).reparent();
      return new basic.Semantics.new({explicitChildNodes: true, child: new focus_scope._FocusMarker.new({node: this.focusNode, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C1052 || CT.C1052}), $creationLocationd_0dea112b090073317d4: C1056 || CT.C1056});
    }
  };
  (focus_scope._FocusScopeState.new = function() {
    focus_scope._FocusScopeState.__proto__.new.call(this);
    ;
  }).prototype = focus_scope._FocusScopeState.prototype;
  dart.addTypeTests(focus_scope._FocusScopeState);
  dart.addTypeCaches(focus_scope._FocusScopeState);
  dart.setMethodSignature(focus_scope._FocusScopeState, () => ({
    __proto__: dart.getMethods(focus_scope._FocusScopeState.__proto__),
    [_createNode]: dart.fnType(focus_manager.FocusScopeNode, [])
  }));
  dart.setLibraryUri(focus_scope._FocusScopeState, L106);
  var _context = dart.privateName(focus_manager, "_context");
  var _manager = dart.privateName(focus_manager, "_manager");
  var _ancestors = dart.privateName(focus_manager, "_ancestors");
  var _descendants = dart.privateName(focus_manager, "_descendants");
  var _hasKeyboardToken = dart.privateName(focus_manager, "_hasKeyboardToken");
  var _parent$ = dart.privateName(focus_manager, "_parent");
  var _children$1 = dart.privateName(focus_manager, "_children");
  var _debugLabel = dart.privateName(focus_manager, "_debugLabel");
  var _attachment = dart.privateName(focus_manager, "_attachment");
  var _requestFocusWhenReparented = dart.privateName(focus_manager, "_requestFocusWhenReparented");
  var _skipTraversal = dart.privateName(focus_manager, "_skipTraversal");
  var _canRequestFocus$ = dart.privateName(focus_manager, "_canRequestFocus");
  var _descendantsAreFocusable$ = dart.privateName(focus_manager, "_descendantsAreFocusable");
  var _onKey = dart.privateName(focus_manager, "_onKey");
  var _markPropertiesChanged = dart.privateName(focus_manager, "_markPropertiesChanged");
  var C1060;
  var _name$21 = dart.privateName(focus_manager, "_name");
  var C1061;
  var _markedForFocus = dart.privateName(focus_manager, "_markedForFocus");
  var _focusedChildren = dart.privateName(focus_manager, "_focusedChildren");
  var _doRequestFocus = dart.privateName(focus_manager, "_doRequestFocus");
  var C1062;
  var _markNextFocus = dart.privateName(focus_manager, "_markNextFocus");
  var _setAsFocusedChildForScope = dart.privateName(focus_manager, "_setAsFocusedChildForScope");
  var _notify = dart.privateName(focus_manager, "_notify");
  var _removeChild = dart.privateName(focus_manager, "_removeChild");
  var _updateManager = dart.privateName(focus_manager, "_updateManager");
  var _reparent = dart.privateName(focus_manager, "_reparent");
  const Object_DiagnosticableTreeMixin$36 = class Object_DiagnosticableTreeMixin extends core.Object {};
  (Object_DiagnosticableTreeMixin$36.new = function() {
  }).prototype = Object_DiagnosticableTreeMixin$36.prototype;
  dart.applyMixin(Object_DiagnosticableTreeMixin$36, diagnostics$.DiagnosticableTreeMixin);
  const Object_ChangeNotifier$36 = class Object_ChangeNotifier extends Object_DiagnosticableTreeMixin$36 {};
  (Object_ChangeNotifier$36.new = function() {
    change_notifier.ChangeNotifier.new.call(this);
  }).prototype = Object_ChangeNotifier$36.prototype;
  dart.applyMixin(Object_ChangeNotifier$36, change_notifier.ChangeNotifier);
  focus_manager.FocusNode = class FocusNode extends Object_ChangeNotifier$36 {
    get skipTraversal() {
      return this[_skipTraversal];
    }
    set skipTraversal(value) {
      let t77;
      if (value == null) dart.nullFailed(L107, 462, 26, "value");
      if (!dart.equals(value, this[_skipTraversal])) {
        this[_skipTraversal] = value;
        t77 = this[_manager];
        t77 == null ? null : t77[_markPropertiesChanged](this);
      }
    }
    get canRequestFocus() {
      if (!dart.test(this[_canRequestFocus$])) {
        return false;
      }
      let scope = this.enclosingScope;
      if (scope != null && !dart.test(scope.canRequestFocus)) {
        return false;
      }
      for (let ancestor of this.ancestors) {
        if (!dart.test(ancestor.descendantsAreFocusable)) {
          return false;
        }
      }
      return true;
    }
    set canRequestFocus(value) {
      let t77;
      if (value == null) dart.nullFailed(L107, 514, 28, "value");
      if (!dart.equals(value, this[_canRequestFocus$])) {
        this[_canRequestFocus$] = value;
        if (dart.test(this.hasFocus) && !dart.test(value)) {
          this.unfocus({disposition: focus_manager.UnfocusDisposition.previouslyFocusedChild});
        }
        t77 = this[_manager];
        t77 == null ? null : t77[_markPropertiesChanged](this);
      }
    }
    get descendantsAreFocusable() {
      return this[_descendantsAreFocusable$];
    }
    set descendantsAreFocusable(value) {
      let t77;
      if (value == null) dart.nullFailed(L107, 552, 36, "value");
      if (dart.equals(value, this[_descendantsAreFocusable$])) {
        return;
      }
      this[_descendantsAreFocusable$] = value;
      if (!dart.test(value) && dart.test(this.hasFocus)) {
        this.unfocus({disposition: focus_manager.UnfocusDisposition.previouslyFocusedChild});
      }
      t77 = this[_manager];
      t77 == null ? null : t77[_markPropertiesChanged](this);
    }
    get context() {
      return this[_context];
    }
    get onKey() {
      return this[_onKey];
    }
    get parent() {
      return this[_parent$];
    }
    get children() {
      return this[_children$1];
    }
    get traversalChildren() {
      if (!dart.test(this.canRequestFocus)) {
        return C1060 || CT.C1060;
      }
      return this.children[$where](dart.fn(node => {
        if (node == null) dart.nullFailed(L107, 603, 18, "node");
        return !dart.test(node.skipTraversal) && dart.test(node.canRequestFocus);
      }, FocusNodeTobool()));
    }
    get debugLabel() {
      return this[_debugLabel];
    }
    set debugLabel(value) {
      if (!dart.test(dart.fn(() => {
        this[_debugLabel] = value;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L107, 613, 12, "() {\r\n      // Only set the value in debug builds.\r\n      _debugLabel = value;\r\n      return true;\r\n    }()");
    }
    get descendants() {
      if (this[_descendants] == null) {
        let result = JSArrayOfFocusNode().of([]);
        for (let child of this[_children$1]) {
          result[$addAll](child.descendants);
          result[$add](child);
        }
        this[_descendants] = result;
      }
      return dart.nullCheck(this[_descendants]);
    }
    get traversalDescendants() {
      return this.descendants[$where](dart.fn(node => {
        if (node == null) dart.nullFailed(L107, 638, 80, "node");
        return !dart.test(node.skipTraversal) && dart.test(node.canRequestFocus);
      }, FocusNodeTobool()));
    }
    get ancestors() {
      if (this[_ancestors] == null) {
        let result = JSArrayOfFocusNode().of([]);
        let parent = this[_parent$];
        while (parent != null) {
          result[$add](parent);
          parent = parent[_parent$];
        }
        this[_ancestors] = result;
      }
      return dart.nullCheck(this[_ancestors]);
    }
    get hasFocus() {
      let t78, t77, t77$;
      return dart.test(this.hasPrimaryFocus) || dart.test((t77$ = (t77 = this[_manager], t77 == null ? null : (t78 = t77.primaryFocus, t78 == null ? null : t78.ancestors[$contains](this))), t77$ == null ? false : t77$));
    }
    get hasPrimaryFocus() {
      let t77;
      return dart.equals((t77 = this[_manager], t77 == null ? null : t77.primaryFocus), this);
    }
    get highlightMode() {
      return focus_manager.FocusManager.instance.highlightMode;
    }
    get nearestScope() {
      return this.enclosingScope;
    }
    get enclosingScope() {
      for (let node of this.ancestors) {
        if (focus_manager.FocusScopeNode.is(node)) return node;
      }
      return null;
    }
    get size() {
      return this.rect.size;
    }
    get offset() {
      if (!(this.context != null)) dart.assertFailed("Tried to get the offset of a focus node that didn't have its context set yet.\n" + "The context needs to be set before trying to evaluate traversal policies. " + "Setting the context is typically done with the attach method.", L107, 734, 9, "context != null");
      let object = dart.nullCheck(dart.nullCheck(this.context).findRenderObject());
      return matrix_utils.MatrixUtils.transformPoint(object.getTransformTo(null), object.semanticBounds.topLeft);
    }
    get rect() {
      if (!(this.context != null)) dart.assertFailed("Tried to get the bounds of a focus node that didn't have its context set yet.\n" + "The context needs to be set before trying to evaluate traversal policies. " + "Setting the context is typically done with the attach method.", L107, 748, 9, "context != null");
      let object = dart.nullCheck(dart.nullCheck(this.context).findRenderObject());
      let topLeft = matrix_utils.MatrixUtils.transformPoint(object.getTransformTo(null), object.semanticBounds.topLeft);
      let bottomRight = matrix_utils.MatrixUtils.transformPoint(object.getTransformTo(null), object.semanticBounds.bottomRight);
      return new ui.Rect.fromLTRB(topLeft.dx, topLeft.dy, bottomRight.dx, bottomRight.dy);
    }
    unfocus(opts) {
      let t78, t77, t77$, t78$, t77$0, t77$1;
      let disposition = opts && 'disposition' in opts ? opts.disposition : C1061 || CT.C1061;
      if (disposition == null) dart.nullFailed(L107, 867, 24, "disposition");
      if (!(disposition != null)) dart.assertFailed(null, L107, 869, 12, "disposition != null");
      if (!dart.test(this.hasFocus) && (this[_manager] == null || !dart.equals(dart.nullCheck(this[_manager])[_markedForFocus], this))) {
        return;
      }
      let scope = this.enclosingScope;
      if (scope == null) {
        return;
      }
      switch (disposition) {
        case C1061 || CT.C1061:
        {
          if (dart.test(scope.canRequestFocus)) {
            scope[_focusedChildren][$clear]();
          }
          while (!dart.test(dart.nullCheck(scope).canRequestFocus)) {
            scope = (t77 = scope.enclosingScope, t77 == null ? (t78 = this[_manager], t78 == null ? null : t78.rootScope) : t77);
          }
          scope[_doRequestFocus]({findFirstFocus: false});
          break;
        }
        case C1062 || CT.C1062:
        {
          if (dart.test(scope.canRequestFocus)) {
            scope[_focusedChildren][$remove](this);
          }
          while (!dart.test(dart.nullCheck(scope).canRequestFocus)) {
            t77$ = scope.enclosingScope;
            t77$ == null ? null : t77$[_focusedChildren][$remove](scope);
            scope = (t77$0 = scope.enclosingScope, t77$0 == null ? (t78$ = this[_manager], t78$ == null ? null : t78$.rootScope) : t77$0);
          }
          scope[_doRequestFocus]({findFirstFocus: true});
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      if (!dart.test(focus_manager._focusDebug("Unfocused node:", JSArrayOfString().of(["primary focus was " + dart.str(this), "next focus will be " + dart.str((t77$1 = this[_manager], t77$1 == null ? null : t77$1[_markedForFocus]))])))) dart.assertFailed(null, L107, 908, 12, "_focusDebug('Unfocused node:', <String>['primary focus was $this', 'next focus will be ${_manager?._markedForFocus}'])");
    }
    consumeKeyboardToken() {
      if (!dart.test(this[_hasKeyboardToken])) {
        return false;
      }
      this[_hasKeyboardToken] = false;
      return true;
    }
    [_markNextFocus](newFocus) {
      if (newFocus == null) dart.nullFailed(L107, 938, 33, "newFocus");
      if (this[_manager] != null) {
        dart.nullCheck(this[_manager])[_markNextFocus](this);
        return;
      }
      newFocus[_setAsFocusedChildForScope]();
      newFocus[_notify]();
      if (!dart.equals(newFocus, this)) {
        this[_notify]();
      }
    }
    [_removeChild](node, opts) {
      let t77;
      if (node == null) dart.nullFailed(L107, 954, 31, "node");
      let removeScopeFocus = opts && 'removeScopeFocus' in opts ? opts.removeScopeFocus : true;
      if (removeScopeFocus == null) dart.nullFailed(L107, 954, 43, "removeScopeFocus");
      if (!(node != null)) dart.assertFailed(null, L107, 955, 12, "node != null");
      if (!dart.test(this[_children$1][$contains](node))) dart.assertFailed("Tried to remove a node that wasn't a child.", L107, 956, 12, "_children.contains(node)");
      if (!dart.equals(node[_parent$], this)) dart.assertFailed(null, L107, 957, 12, "node._parent == this");
      if (!dart.equals(node[_manager], this[_manager])) dart.assertFailed(null, L107, 958, 12, "node._manager == _manager");
      if (dart.test(removeScopeFocus)) {
        t77 = node.enclosingScope;
        t77 == null ? null : t77[_focusedChildren][$remove](node);
      }
      node[_parent$] = null;
      this[_children$1][$remove](node);
      for (let ancestor of this.ancestors) {
        ancestor[_descendants] = null;
      }
      this[_descendants] = null;
      if (!(this[_manager] == null || !dart.test(dart.nullCheck(this[_manager]).rootScope.descendants[$contains](node)))) dart.assertFailed(null, L107, 970, 12, "_manager == null || !_manager!.rootScope.descendants.contains(node)");
    }
    [_updateManager](manager) {
      this[_manager] = manager;
      for (let descendant of this.descendants) {
        descendant[_manager] = manager;
        descendant[_ancestors] = null;
      }
    }
    [_reparent](child) {
      let t77, t78, t77$, t77$0;
      if (child == null) dart.nullFailed(L107, 983, 28, "child");
      if (!(child != null)) dart.assertFailed(null, L107, 984, 12, "child != null");
      if (!!dart.equals(child, this)) dart.assertFailed("Tried to make a child into a parent of itself.", L107, 985, 12, "child != this");
      if (dart.equals(child[_parent$], this)) {
        if (!dart.test(this[_children$1][$contains](child))) dart.assertFailed("Found a node that says it's a child, but doesn't appear in the child list.", L107, 987, 14, "_children.contains(child)");
        return;
      }
      if (!(this[_manager] == null || !dart.equals(child, dart.nullCheck(this[_manager]).rootScope))) dart.assertFailed("Reparenting the root node isn't allowed.", L107, 991, 12, "_manager == null || child != _manager!.rootScope");
      if (!!dart.test(this.ancestors[$contains](child))) dart.assertFailed("The supplied child is already an ancestor of this node. Loops are not allowed.", L107, 992, 12, "!ancestors.contains(child)");
      let oldScope = child.enclosingScope;
      let hadFocus = child.hasFocus;
      t77 = child[_parent$];
      t77 == null ? null : t77[_removeChild](child, {removeScopeFocus: !dart.equals(oldScope, this.nearestScope)});
      this[_children$1][$add](child);
      child[_parent$] = this;
      child[_ancestors] = null;
      child[_updateManager](this[_manager]);
      for (let ancestor of child.ancestors) {
        ancestor[_descendants] = null;
      }
      if (dart.test(hadFocus)) {
        t77$ = this[_manager];
        t77$ == null ? null : (t78 = t77$.primaryFocus, t78 == null ? null : t78[_setAsFocusedChildForScope]());
      }
      if (oldScope != null && child.context != null && !dart.equals(child.enclosingScope, oldScope)) {
        t77$0 = focus_traversal.FocusTraversalGroup.maybeOf(dart.nullCheck(child.context));
        t77$0 == null ? null : t77$0.changedScope({node: child, oldScope: oldScope});
      }
      if (dart.test(child[_requestFocusWhenReparented])) {
        child[_doRequestFocus]({findFirstFocus: true});
        child[_requestFocusWhenReparented] = false;
      }
    }
    attach(context, opts) {
      let t77;
      let onKey = opts && 'onKey' in opts ? opts.onKey : null;
      this[_context] = context;
      this[_onKey] = (t77 = onKey, t77 == null ? this[_onKey] : t77);
      this[_attachment] = new focus_manager.FocusAttachment.__(this);
      return dart.nullCheck(this[_attachment]);
    }
    dispose() {
      let t77;
      t77 = this[_attachment];
      t77 == null ? null : t77.detach();
      super.dispose();
    }
    [_notify]() {
      if (this[_parent$] == null) {
        return;
      }
      if (dart.test(this.hasPrimaryFocus)) {
        this[_setAsFocusedChildForScope]();
      }
      this.notifyListeners();
    }
    requestFocus(node = null) {
      if (node != null) {
        if (node[_parent$] == null) {
          this[_reparent](node);
        }
        if (!dart.test(node.ancestors[$contains](this))) dart.assertFailed("Focus was requested for a node that is not a descendant of the scope from which it was requested.", L107, 1077, 14, "node.ancestors.contains(this)");
        node[_doRequestFocus]({findFirstFocus: true});
        return;
      }
      this[_doRequestFocus]({findFirstFocus: true});
    }
    [_doRequestFocus](opts) {
      let findFirstFocus = opts && 'findFirstFocus' in opts ? opts.findFirstFocus : null;
      if (findFirstFocus == null) dart.nullFailed(L107, 1085, 39, "findFirstFocus");
      if (!(findFirstFocus != null)) dart.assertFailed(null, L107, 1086, 12, "findFirstFocus != null");
      if (!dart.test(this.canRequestFocus)) {
        if (!dart.test(focus_manager._focusDebug("Node NOT requesting focus because canRequestFocus is false: " + dart.str(this)))) dart.assertFailed(null, L107, 1088, 14, "_focusDebug('Node NOT requesting focus because canRequestFocus is false: $this')");
        return;
      }
      if (this[_parent$] == null) {
        this[_requestFocusWhenReparented] = true;
        return;
      }
      this[_setAsFocusedChildForScope]();
      if (dart.test(this.hasPrimaryFocus) && (dart.nullCheck(this[_manager])[_markedForFocus] == null || dart.equals(dart.nullCheck(this[_manager])[_markedForFocus], this))) {
        return;
      }
      this[_hasKeyboardToken] = true;
      if (!dart.test(focus_manager._focusDebug("Node requesting focus: " + dart.str(this)))) dart.assertFailed(null, L107, 1103, 12, "_focusDebug('Node requesting focus: $this')");
      this[_markNextFocus](this);
    }
    [_setAsFocusedChildForScope]() {
      let scopeFocus = this;
      for (let ancestor of this.ancestors[$whereType](focus_manager.FocusScopeNode)) {
        if (!!dart.equals(scopeFocus, ancestor)) dart.assertFailed("Somehow made a loop by setting focusedChild to its scope.", L107, 1133, 14, "scopeFocus != ancestor");
        if (!dart.test(focus_manager._focusDebug("Setting " + dart.str(scopeFocus) + " as focused child for scope:", JSArrayOfString().of([dart.toString(ancestor)])))) dart.assertFailed(null, L107, 1134, 14, "_focusDebug('Setting $scopeFocus as focused child for scope:', <String>[ancestor.toString()])");
        ancestor[_focusedChildren][$remove](scopeFocus);
        ancestor[_focusedChildren][$add](scopeFocus);
        scopeFocus = ancestor;
      }
    }
    nextFocus() {
      return focus_traversal.FocusTraversalGroup.of(dart.nullCheck(this.context)).next(this);
    }
    previousFocus() {
      return focus_traversal.FocusTraversalGroup.of(dart.nullCheck(this.context)).previous(this);
    }
    focusInDirection(direction) {
      if (direction == null) dart.nullFailed(L107, 1160, 44, "direction");
      return focus_traversal.FocusTraversalGroup.of(dart.nullCheck(this.context)).inDirection(this, direction);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L107, 1163, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfBuildContext()).new("context", this.context, {defaultValue: null}));
      properties.add(new diagnostics$.FlagProperty.new("descendantsAreFocusable", {value: this.descendantsAreFocusable, ifFalse: "DESCENDANTS UNFOCUSABLE", defaultValue: true}));
      properties.add(new diagnostics$.FlagProperty.new("canRequestFocus", {value: this.canRequestFocus, ifFalse: "NOT FOCUSABLE", defaultValue: true}));
      properties.add(new diagnostics$.FlagProperty.new("hasFocus", {value: dart.test(this.hasFocus) && !dart.test(this.hasPrimaryFocus), ifTrue: "IN FOCUS PATH", defaultValue: false}));
      properties.add(new diagnostics$.FlagProperty.new("hasPrimaryFocus", {value: this.hasPrimaryFocus, ifTrue: "PRIMARY FOCUS", defaultValue: false}));
    }
    debugDescribeChildren() {
      let count = 1;
      return this[_children$1][$map](diagnostics$.DiagnosticsNode, dart.fn(child => {
        let t77;
        if (child == null) dart.nullFailed(L107, 1175, 54, "child");
        return child.toDiagnosticsNode({name: "Child " + dart.str((t77 = count, count = t77 + 1, t77))});
      }, FocusNodeToDiagnosticsNode()))[$toList]();
    }
    toStringShort() {
      let hasDebugLabel = this.debugLabel != null && dart.nullCheck(this.debugLabel)[$isNotEmpty];
      let extraData = dart.str(hasDebugLabel ? this.debugLabel : "") + (dart.test(this.hasFocus) && hasDebugLabel ? " " : "") + (dart.test(this.hasFocus) && !dart.test(this.hasPrimaryFocus) ? "[IN FOCUS PATH]" : "") + (dart.test(this.hasPrimaryFocus) ? "[PRIMARY FOCUS]" : "");
      return dart.str(diagnostics$.describeIdentity(this)) + (extraData[$isNotEmpty] ? "(" + extraData + ")" : "");
    }
  };
  (focus_manager.FocusNode.new = function(opts) {
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    let onKey = opts && 'onKey' in opts ? opts.onKey : null;
    let skipTraversal = opts && 'skipTraversal' in opts ? opts.skipTraversal : false;
    if (skipTraversal == null) dart.nullFailed(L107, 436, 10, "skipTraversal");
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : true;
    if (canRequestFocus == null) dart.nullFailed(L107, 437, 10, "canRequestFocus");
    let descendantsAreFocusable = opts && 'descendantsAreFocusable' in opts ? opts.descendantsAreFocusable : true;
    if (descendantsAreFocusable == null) dart.nullFailed(L107, 438, 10, "descendantsAreFocusable");
    this[_context] = null;
    this[_manager] = null;
    this[_ancestors] = null;
    this[_descendants] = null;
    this[_hasKeyboardToken] = false;
    this[_parent$] = null;
    this[_children$1] = JSArrayOfFocusNode().of([]);
    this[_debugLabel] = null;
    this[_attachment] = null;
    this[_requestFocusWhenReparented] = false;
    if (!(skipTraversal != null)) dart.assertFailed(null, L107, 439, 16, "skipTraversal != null");
    if (!(canRequestFocus != null)) dart.assertFailed(null, L107, 440, 16, "canRequestFocus != null");
    if (!(descendantsAreFocusable != null)) dart.assertFailed(null, L107, 441, 16, "descendantsAreFocusable != null");
    this[_skipTraversal] = skipTraversal;
    this[_canRequestFocus$] = canRequestFocus;
    this[_descendantsAreFocusable$] = descendantsAreFocusable;
    this[_onKey] = onKey;
    focus_manager.FocusNode.__proto__.new.call(this);
    this.debugLabel = debugLabel;
  }).prototype = focus_manager.FocusNode.prototype;
  dart.addTypeTests(focus_manager.FocusNode);
  dart.addTypeCaches(focus_manager.FocusNode);
  dart.setMethodSignature(focus_manager.FocusNode, () => ({
    __proto__: dart.getMethods(focus_manager.FocusNode.__proto__),
    unfocus: dart.fnType(dart.void, [], {disposition: focus_manager.UnfocusDisposition}, {}),
    consumeKeyboardToken: dart.fnType(core.bool, []),
    [_markNextFocus]: dart.fnType(dart.void, [focus_manager.FocusNode]),
    [_removeChild]: dart.fnType(dart.void, [focus_manager.FocusNode], {removeScopeFocus: core.bool}, {}),
    [_updateManager]: dart.fnType(dart.void, [dart.nullable(focus_manager.FocusManager)]),
    [_reparent]: dart.fnType(dart.void, [focus_manager.FocusNode]),
    attach: dart.fnType(focus_manager.FocusAttachment, [dart.nullable(framework.BuildContext)], {onKey: dart.nullable(dart.fnType(dart.dynamic, [focus_manager.FocusNode, raw_keyboard.RawKeyEvent]))}, {}),
    [_notify]: dart.fnType(dart.void, []),
    requestFocus: dart.fnType(dart.void, [], [dart.nullable(focus_manager.FocusNode)]),
    [_doRequestFocus]: dart.fnType(dart.void, [], {}, {findFirstFocus: core.bool}),
    [_setAsFocusedChildForScope]: dart.fnType(dart.void, []),
    nextFocus: dart.fnType(core.bool, []),
    previousFocus: dart.fnType(core.bool, []),
    focusInDirection: dart.fnType(core.bool, [focus_traversal.TraversalDirection])
  }));
  dart.setGetterSignature(focus_manager.FocusNode, () => ({
    __proto__: dart.getGetters(focus_manager.FocusNode.__proto__),
    skipTraversal: core.bool,
    canRequestFocus: core.bool,
    descendantsAreFocusable: core.bool,
    context: dart.nullable(framework.BuildContext),
    onKey: dart.nullable(dart.fnType(dart.dynamic, [focus_manager.FocusNode, raw_keyboard.RawKeyEvent])),
    parent: dart.nullable(focus_manager.FocusNode),
    children: core.Iterable$(focus_manager.FocusNode),
    traversalChildren: core.Iterable$(focus_manager.FocusNode),
    debugLabel: dart.nullable(core.String),
    descendants: core.Iterable$(focus_manager.FocusNode),
    traversalDescendants: core.Iterable$(focus_manager.FocusNode),
    ancestors: core.Iterable$(focus_manager.FocusNode),
    hasFocus: core.bool,
    hasPrimaryFocus: core.bool,
    highlightMode: focus_manager.FocusHighlightMode,
    nearestScope: dart.nullable(focus_manager.FocusScopeNode),
    enclosingScope: dart.nullable(focus_manager.FocusScopeNode),
    size: ui.Size,
    offset: ui.Offset,
    rect: ui.Rect
  }));
  dart.setSetterSignature(focus_manager.FocusNode, () => ({
    __proto__: dart.getSetters(focus_manager.FocusNode.__proto__),
    skipTraversal: core.bool,
    canRequestFocus: core.bool,
    descendantsAreFocusable: core.bool,
    debugLabel: dart.nullable(core.String)
  }));
  dart.setLibraryUri(focus_manager.FocusNode, L108);
  dart.setFieldSignature(focus_manager.FocusNode, () => ({
    __proto__: dart.getFields(focus_manager.FocusNode.__proto__),
    [_skipTraversal]: dart.fieldType(core.bool),
    [_canRequestFocus$]: dart.fieldType(core.bool),
    [_descendantsAreFocusable$]: dart.fieldType(core.bool),
    [_context]: dart.fieldType(dart.nullable(framework.BuildContext)),
    [_onKey]: dart.fieldType(dart.nullable(dart.fnType(dart.dynamic, [focus_manager.FocusNode, raw_keyboard.RawKeyEvent]))),
    [_manager]: dart.fieldType(dart.nullable(focus_manager.FocusManager)),
    [_ancestors]: dart.fieldType(dart.nullable(core.List$(focus_manager.FocusNode))),
    [_descendants]: dart.fieldType(dart.nullable(core.List$(focus_manager.FocusNode))),
    [_hasKeyboardToken]: dart.fieldType(core.bool),
    [_parent$]: dart.fieldType(dart.nullable(focus_manager.FocusNode)),
    [_children$1]: dart.finalFieldType(core.List$(focus_manager.FocusNode)),
    [_debugLabel]: dart.fieldType(dart.nullable(core.String)),
    [_attachment]: dart.fieldType(dart.nullable(focus_manager.FocusAttachment)),
    [_requestFocusWhenReparented]: dart.fieldType(core.bool)
  }));
  focus_scope._FocusMarker = class _FocusMarker extends inherited_notifier.InheritedNotifier$(focus_manager.FocusNode) {};
  (focus_scope._FocusMarker.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let node = opts && 'node' in opts ? opts.node : null;
    if (node == null) dart.nullFailed(L105, 971, 24, "node");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L105, 972, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(node != null)) dart.assertFailed(null, L105, 973, 16, "node != null");
    if (!(child != null)) dart.assertFailed(null, L105, 974, 16, "child != null");
    focus_scope._FocusMarker.__proto__.new.call(this, {key: key, notifier: node, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = focus_scope._FocusMarker.prototype;
  dart.addTypeTests(focus_scope._FocusMarker);
  dart.addTypeCaches(focus_scope._FocusMarker);
  dart.setLibraryUri(focus_scope._FocusMarker, L106);
  var C1065;
  var C1066;
  var C1067;
  var C1068;
  var C1069;
  var C1064;
  var C1063;
  var excluding$ = dart.privateName(focus_scope, "ExcludeFocus.excluding");
  var child$36 = dart.privateName(focus_scope, "ExcludeFocus.child");
  focus_scope.ExcludeFocus = class ExcludeFocus extends framework.StatelessWidget {
    get excluding() {
      return this[excluding$];
    }
    set excluding(value) {
      super.excluding = value;
    }
    get child() {
      return this[child$36];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(L105, 1030, 29, "context");
      return new focus_scope.Focus.new({canRequestFocus: false, skipTraversal: true, includeSemantics: false, descendantsAreFocusable: !dart.test(this.excluding), child: this.child, $creationLocationd_0dea112b090073317d4: C1063 || CT.C1063});
    }
  };
  (focus_scope.ExcludeFocus.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let excluding = opts && 'excluding' in opts ? opts.excluding : true;
    if (excluding == null) dart.nullFailed(L105, 997, 10, "excluding");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L105, 998, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[excluding$] = excluding;
    this[child$36] = child;
    if (!(excluding != null)) dart.assertFailed(null, L105, 999, 16, "excluding != null");
    if (!(child != null)) dart.assertFailed(null, L105, 1000, 16, "child != null");
    focus_scope.ExcludeFocus.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = focus_scope.ExcludeFocus.prototype;
  dart.addTypeTests(focus_scope.ExcludeFocus);
  dart.addTypeCaches(focus_scope.ExcludeFocus);
  dart.setMethodSignature(focus_scope.ExcludeFocus, () => ({
    __proto__: dart.getMethods(focus_scope.ExcludeFocus.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(focus_scope.ExcludeFocus, L106);
  dart.setFieldSignature(focus_scope.ExcludeFocus, () => ({
    __proto__: dart.getFields(focus_scope.ExcludeFocus.__proto__),
    excluding: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C1070;
  var C1071;
  var C1072;
  var C1073;
  focus_manager.KeyEventResult = class KeyEventResult extends core.Object {
    toString() {
      return this[_name$21];
    }
  };
  (focus_manager.KeyEventResult.new = function(index, _name) {
    if (index == null) dart.nullFailed(L107, 36, 6, "index");
    if (_name == null) dart.nullFailed(L107, 36, 6, "_name");
    this.index = index;
    this[_name$21] = _name;
    ;
  }).prototype = focus_manager.KeyEventResult.prototype;
  dart.addTypeTests(focus_manager.KeyEventResult);
  dart.addTypeCaches(focus_manager.KeyEventResult);
  dart.setLibraryUri(focus_manager.KeyEventResult, L108);
  dart.setFieldSignature(focus_manager.KeyEventResult, () => ({
    __proto__: dart.getFields(focus_manager.KeyEventResult.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$21]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(focus_manager.KeyEventResult, ['toString']);
  focus_manager.KeyEventResult.handled = C1070 || CT.C1070;
  focus_manager.KeyEventResult.ignored = C1071 || CT.C1071;
  focus_manager.KeyEventResult.skipRemainingHandlers = C1072 || CT.C1072;
  focus_manager.KeyEventResult.values = C1073 || CT.C1073;
  var _node$ = dart.privateName(focus_manager, "_node");
  var _markDetached = dart.privateName(focus_manager, "_markDetached");
  focus_manager.FocusAttachment = class FocusAttachment extends core.Object {
    get isAttached() {
      return dart.equals(this[_node$][_attachment], this);
    }
    detach() {
      let t77, t77$, t77$0;
      if (!(this[_node$] != null)) dart.assertFailed(null, L107, 104, 12, "_node != null");
      if (!dart.test(focus_manager._focusDebug("Detaching node:", JSArrayOfString().of([dart.toString(this[_node$]), "With enclosing scope " + dart.str(this[_node$].enclosingScope)])))) dart.assertFailed(null, L107, 105, 12, "_focusDebug('Detaching node:', <String>[_node.toString(), 'With enclosing scope ${_node.enclosingScope}'])");
      if (dart.test(this.isAttached)) {
        if (dart.test(this[_node$].hasPrimaryFocus) || this[_node$][_manager] != null && dart.equals(dart.nullCheck(this[_node$][_manager])[_markedForFocus], this[_node$])) {
          this[_node$].unfocus({disposition: focus_manager.UnfocusDisposition.previouslyFocusedChild});
        }
        t77 = this[_node$][_manager];
        t77 == null ? null : t77[_markDetached](this[_node$]);
        t77$ = this[_node$][_parent$];
        t77$ == null ? null : t77$[_removeChild](this[_node$]);
        this[_node$][_attachment] = null;
        if (!!dart.test(this[_node$].hasPrimaryFocus)) dart.assertFailed(null, L107, 114, 14, "!_node.hasPrimaryFocus");
        if (!!dart.equals((t77$0 = this[_node$][_manager], t77$0 == null ? null : t77$0[_markedForFocus]), this[_node$])) dart.assertFailed(null, L107, 115, 14, "_node._manager?._markedForFocus != _node");
      }
      if (!!dart.test(this.isAttached)) dart.assertFailed(null, L107, 117, 12, "!isAttached");
    }
    reparent(opts) {
      let parent = opts && 'parent' in opts ? opts.parent : null;
      if (!(this[_node$] != null)) dart.assertFailed(null, L107, 143, 12, "_node != null");
      if (dart.test(this.isAttached)) {
        if (!(this[_node$].context != null)) dart.assertFailed(null, L107, 145, 14, "_node.context != null");
        parent == null ? parent = focus_scope.Focus.maybeOf(dart.nullCheck(this[_node$].context), {scopeOk: true}) : null;
        parent == null ? parent = dart.nullCheck(dart.nullCheck(this[_node$].context).owner).focusManager.rootScope : null;
        if (!(parent != null)) dart.assertFailed(null, L107, 148, 14, "parent != null");
        parent[_reparent](this[_node$]);
      }
    }
  };
  (focus_manager.FocusAttachment.__ = function(_node) {
    if (_node == null) dart.nullFailed(L107, 86, 26, "_node");
    this[_node$] = _node;
    if (!(_node != null)) dart.assertFailed(null, L107, 86, 42, "_node != null");
    ;
  }).prototype = focus_manager.FocusAttachment.prototype;
  dart.addTypeTests(focus_manager.FocusAttachment);
  dart.addTypeCaches(focus_manager.FocusAttachment);
  dart.setMethodSignature(focus_manager.FocusAttachment, () => ({
    __proto__: dart.getMethods(focus_manager.FocusAttachment.__proto__),
    detach: dart.fnType(dart.void, []),
    reparent: dart.fnType(dart.void, [], {parent: dart.nullable(focus_manager.FocusNode)}, {})
  }));
  dart.setGetterSignature(focus_manager.FocusAttachment, () => ({
    __proto__: dart.getGetters(focus_manager.FocusAttachment.__proto__),
    isAttached: core.bool
  }));
  dart.setLibraryUri(focus_manager.FocusAttachment, L108);
  dart.setFieldSignature(focus_manager.FocusAttachment, () => ({
    __proto__: dart.getFields(focus_manager.FocusAttachment.__proto__),
    [_node$]: dart.finalFieldType(focus_manager.FocusNode)
  }));
  var C1074;
  focus_manager.UnfocusDisposition = class UnfocusDisposition extends core.Object {
    toString() {
      return this[_name$21];
    }
  };
  (focus_manager.UnfocusDisposition.new = function(index, _name) {
    if (index == null) dart.nullFailed(L107, 159, 6, "index");
    if (_name == null) dart.nullFailed(L107, 159, 6, "_name");
    this.index = index;
    this[_name$21] = _name;
    ;
  }).prototype = focus_manager.UnfocusDisposition.prototype;
  dart.addTypeTests(focus_manager.UnfocusDisposition);
  dart.addTypeCaches(focus_manager.UnfocusDisposition);
  dart.setLibraryUri(focus_manager.UnfocusDisposition, L108);
  dart.setFieldSignature(focus_manager.UnfocusDisposition, () => ({
    __proto__: dart.getFields(focus_manager.UnfocusDisposition.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$21]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(focus_manager.UnfocusDisposition, ['toString']);
  focus_manager.UnfocusDisposition.scope = C1061 || CT.C1061;
  focus_manager.UnfocusDisposition.previouslyFocusedChild = C1062 || CT.C1062;
  focus_manager.UnfocusDisposition.values = C1074 || CT.C1074;
  focus_manager.FocusScopeNode = class FocusScopeNode extends focus_manager.FocusNode {
    get nearestScope() {
      return this;
    }
    get isFirstFocus() {
      return dart.equals(dart.nullCheck(this.enclosingScope).focusedChild, this);
    }
    get focusedChild() {
      if (!(dart.test(this[_focusedChildren][$isEmpty]) || dart.equals(this[_focusedChildren][$last].enclosingScope, this))) dart.assertFailed("Focused child does not have the same idea of its enclosing scope as the scope does.", L107, 1250, 12, "_focusedChildren.isEmpty || _focusedChildren.last.enclosingScope == this");
      return dart.test(this[_focusedChildren][$isNotEmpty]) ? this[_focusedChildren][$last] : null;
    }
    setFirstFocus(scope) {
      if (scope == null) dart.nullFailed(L107, 1263, 37, "scope");
      if (!(scope != null)) dart.assertFailed(null, L107, 1264, 12, "scope != null");
      if (!!dart.equals(scope, this)) dart.assertFailed("Unexpected self-reference in setFirstFocus.", L107, 1265, 12, "scope != this");
      if (!dart.test(focus_manager._focusDebug("Setting scope as first focus in " + dart.str(this) + " to node:", JSArrayOfString().of([dart.toString(scope)])))) dart.assertFailed(null, L107, 1266, 12, "_focusDebug('Setting scope as first focus in $this to node:', <String>[scope.toString()])");
      if (scope[_parent$] == null) {
        this[_reparent](scope);
      }
      if (!dart.test(scope.ancestors[$contains](this))) dart.assertFailed(dart.str(dart.wrapType(focus_manager.FocusScopeNode)) + " " + dart.str(scope) + " must be a child of " + dart.str(this) + " to set it as first focus.", L107, 1270, 12, "scope.ancestors.contains(this)");
      if (dart.test(this.hasFocus)) {
        scope[_doRequestFocus]({findFirstFocus: true});
      } else {
        scope[_setAsFocusedChildForScope]();
      }
    }
    autofocus(node) {
      if (node == null) dart.nullFailed(L107, 1288, 28, "node");
      if (!dart.test(focus_manager._focusDebug("Node autofocusing: " + dart.str(node)))) dart.assertFailed(null, L107, 1289, 12, "_focusDebug('Node autofocusing: $node')");
      if (this.focusedChild == null) {
        if (node[_parent$] == null) {
          this[_reparent](node);
        }
        if (!dart.test(node.ancestors[$contains](this))) dart.assertFailed("Autofocus was requested for a node that is not a descendant of the scope from which it was requested.", L107, 1294, 14, "node.ancestors.contains(this)");
        node[_doRequestFocus]({findFirstFocus: true});
      }
    }
    [_doRequestFocus](opts) {
      let t77;
      let findFirstFocus = opts && 'findFirstFocus' in opts ? opts.findFirstFocus : null;
      if (findFirstFocus == null) dart.nullFailed(L107, 1300, 39, "findFirstFocus");
      if (!(findFirstFocus != null)) dart.assertFailed(null, L107, 1301, 12, "findFirstFocus != null");
      while (this.focusedChild != null && !dart.test(dart.nullCheck(this.focusedChild).canRequestFocus))
        this[_focusedChildren][$removeLast]();
      if (!dart.test(findFirstFocus)) {
        if (dart.test(this.canRequestFocus)) {
          this[_setAsFocusedChildForScope]();
          this[_markNextFocus](this);
        }
        return;
      }
      let primaryFocus = (t77 = this.focusedChild, t77 == null ? this : t77);
      while (focus_manager.FocusScopeNode.is(primaryFocus) && primaryFocus.focusedChild != null) {
        primaryFocus = dart.nullCheck(primaryFocus.focusedChild);
      }
      if (primaryFocus === this) {
        if (dart.test(primaryFocus.canRequestFocus)) {
          this[_setAsFocusedChildForScope]();
          this[_markNextFocus](this);
        }
      } else {
        primaryFocus[_doRequestFocus]({findFirstFocus: findFirstFocus});
      }
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L107, 1343, 56, "properties");
      super.debugFillProperties(properties);
      if (dart.test(this[_focusedChildren][$isEmpty])) {
        return;
      }
      let childList = this[_focusedChildren][$reversed][$map](core.String, dart.fn(child => {
        if (child == null) dart.nullFailed(L107, 1348, 85, "child");
        return child.toStringShort();
      }, FocusNodeToString()))[$toList]();
      properties.add(new (IterablePropertyOfString()).new("focusedChildren", childList, {defaultValue: JSArrayOfString().of([])}));
    }
  };
  (focus_manager.FocusScopeNode.new = function(opts) {
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    let onKey = opts && 'onKey' in opts ? opts.onKey : null;
    let skipTraversal = opts && 'skipTraversal' in opts ? opts.skipTraversal : false;
    if (skipTraversal == null) dart.nullFailed(L107, 1224, 10, "skipTraversal");
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : true;
    if (canRequestFocus == null) dart.nullFailed(L107, 1225, 10, "canRequestFocus");
    this[_focusedChildren] = JSArrayOfFocusNode().of([]);
    if (!(skipTraversal != null)) dart.assertFailed(null, L107, 1226, 16, "skipTraversal != null");
    if (!(canRequestFocus != null)) dart.assertFailed(null, L107, 1227, 16, "canRequestFocus != null");
    focus_manager.FocusScopeNode.__proto__.new.call(this, {debugLabel: debugLabel, onKey: onKey, canRequestFocus: canRequestFocus, descendantsAreFocusable: true, skipTraversal: skipTraversal});
    ;
  }).prototype = focus_manager.FocusScopeNode.prototype;
  dart.addTypeTests(focus_manager.FocusScopeNode);
  dart.addTypeCaches(focus_manager.FocusScopeNode);
  dart.setMethodSignature(focus_manager.FocusScopeNode, () => ({
    __proto__: dart.getMethods(focus_manager.FocusScopeNode.__proto__),
    setFirstFocus: dart.fnType(dart.void, [focus_manager.FocusScopeNode]),
    autofocus: dart.fnType(dart.void, [focus_manager.FocusNode])
  }));
  dart.setGetterSignature(focus_manager.FocusScopeNode, () => ({
    __proto__: dart.getGetters(focus_manager.FocusScopeNode.__proto__),
    nearestScope: focus_manager.FocusScopeNode,
    isFirstFocus: core.bool,
    focusedChild: dart.nullable(focus_manager.FocusNode)
  }));
  dart.setLibraryUri(focus_manager.FocusScopeNode, L108);
  dart.setFieldSignature(focus_manager.FocusScopeNode, () => ({
    __proto__: dart.getFields(focus_manager.FocusScopeNode.__proto__),
    [_focusedChildren]: dart.finalFieldType(core.List$(focus_manager.FocusNode))
  }));
  var C1075;
  var C1076;
  var C1077;
  focus_manager.FocusHighlightMode = class FocusHighlightMode extends core.Object {
    toString() {
      return this[_name$21];
    }
  };
  (focus_manager.FocusHighlightMode.new = function(index, _name) {
    if (index == null) dart.nullFailed(L107, 1357, 6, "index");
    if (_name == null) dart.nullFailed(L107, 1357, 6, "_name");
    this.index = index;
    this[_name$21] = _name;
    ;
  }).prototype = focus_manager.FocusHighlightMode.prototype;
  dart.addTypeTests(focus_manager.FocusHighlightMode);
  dart.addTypeCaches(focus_manager.FocusHighlightMode);
  dart.setLibraryUri(focus_manager.FocusHighlightMode, L108);
  dart.setFieldSignature(focus_manager.FocusHighlightMode, () => ({
    __proto__: dart.getFields(focus_manager.FocusHighlightMode.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$21]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(focus_manager.FocusHighlightMode, ['toString']);
  focus_manager.FocusHighlightMode.touch = C1075 || CT.C1075;
  focus_manager.FocusHighlightMode.traditional = C1076 || CT.C1076;
  focus_manager.FocusHighlightMode.values = C1077 || CT.C1077;
  var C1078;
  var C1079;
  var C1080;
  var C1081;
  focus_manager.FocusHighlightStrategy = class FocusHighlightStrategy extends core.Object {
    toString() {
      return this[_name$21];
    }
  };
  (focus_manager.FocusHighlightStrategy.new = function(index, _name) {
    if (index == null) dart.nullFailed(L107, 1377, 6, "index");
    if (_name == null) dart.nullFailed(L107, 1377, 6, "_name");
    this.index = index;
    this[_name$21] = _name;
    ;
  }).prototype = focus_manager.FocusHighlightStrategy.prototype;
  dart.addTypeTests(focus_manager.FocusHighlightStrategy);
  dart.addTypeCaches(focus_manager.FocusHighlightStrategy);
  dart.setLibraryUri(focus_manager.FocusHighlightStrategy, L108);
  dart.setFieldSignature(focus_manager.FocusHighlightStrategy, () => ({
    __proto__: dart.getFields(focus_manager.FocusHighlightStrategy.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$21]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(focus_manager.FocusHighlightStrategy, ['toString']);
  focus_manager.FocusHighlightStrategy.automatic = C1078 || CT.C1078;
  focus_manager.FocusHighlightStrategy.alwaysTouch = C1079 || CT.C1079;
  focus_manager.FocusHighlightStrategy.alwaysTraditional = C1080 || CT.C1080;
  focus_manager.FocusHighlightStrategy.values = C1081 || CT.C1081;
  var _highlightStrategy = dart.privateName(focus_manager, "_highlightStrategy");
  var _highlightMode = dart.privateName(focus_manager, "_highlightMode");
  var _lastInteractionWasTouch = dart.privateName(focus_manager, "_lastInteractionWasTouch");
  var _listeners$0 = dart.privateName(focus_manager, "_listeners");
  var _primaryFocus = dart.privateName(focus_manager, "_primaryFocus");
  var _dirtyNodes = dart.privateName(focus_manager, "_dirtyNodes");
  var _haveScheduledUpdate = dart.privateName(focus_manager, "_haveScheduledUpdate");
  var _handleRawKeyEvent = dart.privateName(focus_manager, "_handleRawKeyEvent");
  var _handlePointerEvent = dart.privateName(focus_manager, "_handlePointerEvent");
  var _updateHighlightMode = dart.privateName(focus_manager, "_updateHighlightMode");
  var _notifyHighlightModeListeners = dart.privateName(focus_manager, "_notifyHighlightModeListeners");
  var C1082;
  var C1083;
  var C1084;
  var C1085;
  var C1086;
  var _markNeedsUpdate = dart.privateName(focus_manager, "_markNeedsUpdate");
  var _applyFocusChange = dart.privateName(focus_manager, "_applyFocusChange");
  var rootScope = dart.privateName(focus_manager, "FocusManager.rootScope");
  const Object_DiagnosticableTreeMixin$36$ = class Object_DiagnosticableTreeMixin extends core.Object {};
  (Object_DiagnosticableTreeMixin$36$.new = function() {
  }).prototype = Object_DiagnosticableTreeMixin$36$.prototype;
  dart.applyMixin(Object_DiagnosticableTreeMixin$36$, diagnostics$.DiagnosticableTreeMixin);
  const Object_ChangeNotifier$36$ = class Object_ChangeNotifier extends Object_DiagnosticableTreeMixin$36$ {};
  (Object_ChangeNotifier$36$.new = function() {
    change_notifier.ChangeNotifier.new.call(this);
  }).prototype = Object_ChangeNotifier$36$.prototype;
  dart.applyMixin(Object_ChangeNotifier$36$, change_notifier.ChangeNotifier);
  focus_manager.FocusManager = class FocusManager extends Object_ChangeNotifier$36$ {
    get rootScope() {
      return this[rootScope];
    }
    set rootScope(value) {
      super.rootScope = value;
    }
    static get instance() {
      return dart.nullCheck(binding$5.WidgetsBinding.instance).focusManager;
    }
    get highlightStrategy() {
      return this[_highlightStrategy];
    }
    set highlightStrategy(highlightStrategy) {
      if (highlightStrategy == null) dart.nullFailed(L107, 1477, 48, "highlightStrategy");
      this[_highlightStrategy] = highlightStrategy;
      this[_updateHighlightMode]();
    }
    static get _defaultModeForPlatform() {
      switch (platform.defaultTargetPlatform) {
        case C99 || CT.C99:
        case C100 || CT.C100:
        case C103 || CT.C103:
        {
          if (dart.test(dart.nullCheck(binding$5.WidgetsBinding.instance).mouseTracker.mouseIsConnected)) {
            return focus_manager.FocusHighlightMode.traditional;
          }
          return focus_manager.FocusHighlightMode.touch;
        }
        case C101 || CT.C101:
        case C104 || CT.C104:
        case C102 || CT.C102:
        {
          return focus_manager.FocusHighlightMode.traditional;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    get highlightMode() {
      let t77;
      t77 = this[_highlightMode];
      return t77 == null ? focus_manager.FocusManager._defaultModeForPlatform : t77;
    }
    [_updateHighlightMode]() {
      let newMode = null;
      switch (this.highlightStrategy) {
        case C1078 || CT.C1078:
        {
          if (this[_lastInteractionWasTouch] == null) {
            return;
          }
          if (dart.nullCheck(this[_lastInteractionWasTouch])) {
            newMode = focus_manager.FocusHighlightMode.touch;
          } else {
            newMode = focus_manager.FocusHighlightMode.traditional;
          }
          break;
        }
        case C1079 || CT.C1079:
        {
          newMode = focus_manager.FocusHighlightMode.touch;
          break;
        }
        case C1080 || CT.C1080:
        {
          newMode = focus_manager.FocusHighlightMode.traditional;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let oldMode = this.highlightMode;
      this[_highlightMode] = newMode;
      if (!dart.equals(this.highlightMode, oldMode)) {
        this[_notifyHighlightModeListeners]();
      }
    }
    addHighlightModeListener(listener) {
      if (listener == null) dart.nullFailed(L107, 1565, 66, "listener");
      return this[_listeners$0].add(listener);
    }
    removeHighlightModeListener(listener) {
      if (listener == null) dart.nullFailed(L107, 1569, 69, "listener");
      return this[_listeners$0].remove(listener);
    }
    [_notifyHighlightModeListeners]() {
      if (dart.test(this[_listeners$0].isEmpty)) {
        return;
      }
      let localListeners = ListOfFocusHighlightModeTovoid().from(this[_listeners$0]);
      for (let listener of localListeners) {
        try {
          if (dart.test(this[_listeners$0].contains(listener))) {
            listener(this.highlightMode);
          }
        } catch (e) {
          let exception = dart.getThrown(e);
          let stack = dart.stackTrace(e);
          if (core.Object.is(exception)) {
            let collector = null;
            if (!dart.test(dart.fn(() => {
              collector = dart.fn(() => new (SyncIterableOfDiagnosticsNode()).new((function*() {
                yield new (DiagnosticsPropertyOfFocusManager()).new("The " + dart.str(this[$runtimeType]) + " sending notification was", this, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty});
              }).bind(this)), VoidToIterableOfDiagnosticsNode());
              return true;
            }, VoidTobool())())) dart.assertFailed(null, L107, 1583, 16, "() {\r\n          collector = () sync* {\r\n            yield DiagnosticsProperty<FocusManager>(\r\n              'The $runtimeType sending notification was',\r\n              this,\r\n              style: DiagnosticsTreeStyle.errorProperty,\r\n            );\r\n          };\r\n          return true;\r\n        }()");
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({exception: exception, stack: stack, library: "widgets library", context: new assertions.ErrorDescription.new("while dispatching notifications for " + dart.str(this[$runtimeType])), informationCollector: collector}));
          } else
            throw e;
        }
      }
    }
    [_handlePointerEvent](event) {
      if (event == null) dart.nullFailed(L107, 1610, 41, "event");
      let expectedMode = null;
      switch (event.kind) {
        case C1082 || CT.C1082:
        case C1083 || CT.C1083:
        case C1084 || CT.C1084:
        {
          this[_lastInteractionWasTouch] = true;
          expectedMode = focus_manager.FocusHighlightMode.touch;
          break;
        }
        case C1085 || CT.C1085:
        case C1086 || CT.C1086:
        {
          this[_lastInteractionWasTouch] = false;
          expectedMode = focus_manager.FocusHighlightMode.traditional;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      if (!dart.equals(expectedMode, this.highlightMode)) {
        this[_updateHighlightMode]();
      }
    }
    [_handleRawKeyEvent](event) {
      if (event == null) dart.nullFailed(L107, 1630, 39, "event");
      this[_lastInteractionWasTouch] = false;
      this[_updateHighlightMode]();
      if (!dart.test(focus_manager._focusDebug("Received key event " + dart.str(event.logicalKey)))) dart.assertFailed(null, L107, 1636, 12, "_focusDebug('Received key event ${event.logicalKey}')");
      if (this[_primaryFocus] == null) {
        if (!dart.test(focus_manager._focusDebug("No primary focus for key event, ignored: " + dart.str(event)))) dart.assertFailed(null, L107, 1638, 14, "_focusDebug('No primary focus for key event, ignored: $event')");
        return false;
      }
      let handled = false;
      for (let node of (() => {
        let t78 = JSArrayOfFocusNode().of([]);
        t78.push(dart.nullCheck(this[_primaryFocus]));
        for (let t79 of dart.nullCheck(this[_primaryFocus]).ancestors)
          t78.push(t79);
        return t78;
      })()) {
        if (node.onKey != null) {
          let result = dart.nullCheck(node.onKey)(node, event);
          if (!(typeof result == 'boolean' || focus_manager.KeyEventResult.is(result))) dart.assertFailed("Value returned from onKey handler must be a non-null bool or KeyEventResult, not " + dart.str(dart.runtimeType(result)), L107, 1650, 16, "result is bool || result is KeyEventResult");
          if (focus_manager.KeyEventResult.is(result)) {
            switch (result) {
              case C1070 || CT.C1070:
              {
                if (!dart.test(focus_manager._focusDebug("Node " + dart.str(node) + " handled key event " + dart.str(event) + "."))) dart.assertFailed(null, L107, 1655, 22, "_focusDebug('Node $node handled key event $event.')");
                handled = true;
                break;
              }
              case C1072 || CT.C1072:
              {
                if (!dart.test(focus_manager._focusDebug("Node " + dart.str(node) + " stopped key event propagation: " + dart.str(event) + "."))) dart.assertFailed(null, L107, 1659, 22, "_focusDebug('Node $node stopped key event propagation: $event.')");
                handled = false;
                break;
              }
              case C1071 || CT.C1071:
              {
                continue;
              }
              default:
              {
                dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
              }
            }
          } else if (typeof result == 'boolean') {
            if (dart.test(result)) {
              if (!dart.test(focus_manager._focusDebug("Node " + dart.str(node) + " handled key event " + dart.str(event) + "."))) dart.assertFailed(null, L107, 1667, 20, "_focusDebug('Node $node handled key event $event.')");
              handled = true;
              break;
            } else {
              continue;
            }
          }
          break;
        }
      }
      if (!handled) {
        if (!dart.test(focus_manager._focusDebug("Key event not handled by anyone: " + dart.str(event) + "."))) dart.assertFailed(null, L107, 1678, 14, "_focusDebug('Key event not handled by anyone: $event.')");
      }
      return handled;
    }
    get primaryFocus() {
      return this[_primaryFocus];
    }
    [_markDetached](node) {
      if (node == null) dart.nullFailed(L107, 1695, 32, "node");
      if (!dart.test(focus_manager._focusDebug("Node was detached: " + dart.str(node)))) dart.assertFailed(null, L107, 1698, 12, "_focusDebug('Node was detached: $node')");
      if (dart.equals(this[_primaryFocus], node)) {
        this[_primaryFocus] = null;
      }
      this[_dirtyNodes].remove(node);
    }
    [_markPropertiesChanged](node) {
      if (node == null) dart.nullFailed(L107, 1705, 41, "node");
      this[_markNeedsUpdate]();
      if (!dart.test(focus_manager._focusDebug("Properties changed for node " + dart.str(node) + "."))) dart.assertFailed(null, L107, 1707, 12, "_focusDebug('Properties changed for node $node.')");
      this[_dirtyNodes].add(node);
    }
    [_markNextFocus](node) {
      if (node == null) dart.nullFailed(L107, 1711, 33, "node");
      if (dart.equals(this[_primaryFocus], node)) {
        this[_markedForFocus] = null;
      } else {
        this[_markedForFocus] = node;
        this[_markNeedsUpdate]();
      }
    }
    [_markNeedsUpdate]() {
      if (!dart.test(focus_manager._focusDebug("Scheduling update, current focus is " + dart.str(this[_primaryFocus]) + ", next focus will be " + dart.str(this[_markedForFocus])))) dart.assertFailed(null, L107, 1728, 12, "_focusDebug('Scheduling update, current focus is $_primaryFocus, next focus will be $_markedForFocus')");
      if (dart.test(this[_haveScheduledUpdate])) {
        return;
      }
      this[_haveScheduledUpdate] = true;
      async.scheduleMicrotask(dart.bind(this, _applyFocusChange));
    }
    [_applyFocusChange]() {
      let t80, t80$;
      this[_haveScheduledUpdate] = false;
      let previousFocus = this[_primaryFocus];
      if (this[_primaryFocus] == null && this[_markedForFocus] == null) {
        this[_markedForFocus] = this.rootScope;
      }
      if (!dart.test(focus_manager._focusDebug("Refreshing focus state. Next focus will be " + dart.str(this[_markedForFocus])))) dart.assertFailed(null, L107, 1744, 12, "_focusDebug('Refreshing focus state. Next focus will be $_markedForFocus')");
      if (this[_markedForFocus] != null && !dart.equals(this[_markedForFocus], this[_primaryFocus])) {
        let previousPath = (t80$ = (t80 = previousFocus, t80 == null ? null : t80.ancestors[$toSet]()), t80$ == null ? LinkedHashSetOfFocusNode().new() : t80$);
        let nextPath = dart.nullCheck(this[_markedForFocus]).ancestors[$toSet]();
        this[_dirtyNodes].addAll(nextPath.difference(previousPath));
        this[_dirtyNodes].addAll(previousPath.difference(nextPath));
        this[_primaryFocus] = this[_markedForFocus];
        this[_markedForFocus] = null;
      }
      if (!dart.equals(previousFocus, this[_primaryFocus])) {
        if (!dart.test(focus_manager._focusDebug("Updating focus from " + dart.str(previousFocus) + " to " + dart.str(this[_primaryFocus])))) dart.assertFailed(null, L107, 1759, 14, "_focusDebug('Updating focus from $previousFocus to $_primaryFocus')");
        if (previousFocus != null) {
          this[_dirtyNodes].add(previousFocus);
        }
        if (this[_primaryFocus] != null) {
          this[_dirtyNodes].add(dart.nullCheck(this[_primaryFocus]));
        }
      }
      if (!dart.test(focus_manager._focusDebug("Notifying " + dart.str(this[_dirtyNodes][$length]) + " dirty nodes:", this[_dirtyNodes][$toList]()[$map](core.String, dart.fn(node => {
        if (node == null) dart.nullFailed(L107, 1767, 116, "node");
        return dart.toString(node);
      }, FocusNodeToString()))))) dart.assertFailed(null, L107, 1767, 12, "_focusDebug('Notifying ${_dirtyNodes.length} dirty nodes:', _dirtyNodes.toList().map<String>((FocusNode node) => node.toString()))");
      for (let node of this[_dirtyNodes]) {
        node[_notify]();
      }
      this[_dirtyNodes].clear();
      if (!dart.equals(previousFocus, this[_primaryFocus])) {
        this.notifyListeners();
      }
      if (!dart.test(dart.fn(() => {
        if (false) {
          focus_manager.debugDumpFocusTree();
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L107, 1775, 12, "() {\r\n      if (_kDebugFocus) {\r\n        debugDumpFocusTree();\r\n      }\r\n      return true;\r\n    }()");
    }
    debugDescribeChildren() {
      return JSArrayOfDiagnosticsNode().of([this.rootScope.toDiagnosticsNode({name: "rootScope"})]);
    }
    debugFillProperties(properties) {
      let t80;
      if (properties == null) dart.nullFailed(L107, 1791, 56, "properties");
      properties.add(new diagnostics$.FlagProperty.new("haveScheduledUpdate", {value: this[_haveScheduledUpdate], ifTrue: "UPDATE SCHEDULED"}));
      properties.add(new (DiagnosticsPropertyOfFocusNode()).new("primaryFocus", this.primaryFocus, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfFocusNode()).new("nextFocus", this[_markedForFocus], {defaultValue: null}));
      let element = ElementN().as((t80 = this.primaryFocus, t80 == null ? null : t80.context));
      if (element != null) {
        properties.add(new (DiagnosticsPropertyOfString()).new("primaryFocusCreator", element.debugGetCreatorChain(20)));
      }
    }
  };
  (focus_manager.FocusManager.new = function() {
    this[_highlightStrategy] = focus_manager.FocusHighlightStrategy.automatic;
    this[_highlightMode] = null;
    this[_lastInteractionWasTouch] = null;
    this[_listeners$0] = new (HashedObserverListOfFocusHighlightModeTovoid()).new();
    this[rootScope] = new focus_manager.FocusScopeNode.new({debugLabel: "Root Focus Scope"});
    this[_primaryFocus] = null;
    this[_dirtyNodes] = LinkedHashSetOfFocusNode().new();
    this[_markedForFocus] = null;
    this[_haveScheduledUpdate] = false;
    focus_manager.FocusManager.__proto__.new.call(this);
    this.rootScope[_manager] = this;
    raw_keyboard.RawKeyboard.instance.keyEventHandler = dart.bind(this, _handleRawKeyEvent);
    dart.nullCheck(binding$1.GestureBinding.instance).pointerRouter.addGlobalRoute(dart.bind(this, _handlePointerEvent));
  }).prototype = focus_manager.FocusManager.prototype;
  dart.addTypeTests(focus_manager.FocusManager);
  dart.addTypeCaches(focus_manager.FocusManager);
  dart.setMethodSignature(focus_manager.FocusManager, () => ({
    __proto__: dart.getMethods(focus_manager.FocusManager.__proto__),
    [_updateHighlightMode]: dart.fnType(dart.void, []),
    addHighlightModeListener: dart.fnType(dart.void, [dart.fnType(dart.void, [focus_manager.FocusHighlightMode])]),
    removeHighlightModeListener: dart.fnType(dart.void, [dart.fnType(dart.void, [focus_manager.FocusHighlightMode])]),
    [_notifyHighlightModeListeners]: dart.fnType(dart.void, []),
    [_handlePointerEvent]: dart.fnType(dart.void, [events.PointerEvent]),
    [_handleRawKeyEvent]: dart.fnType(core.bool, [raw_keyboard.RawKeyEvent]),
    [_markDetached]: dart.fnType(dart.void, [focus_manager.FocusNode]),
    [_markPropertiesChanged]: dart.fnType(dart.void, [focus_manager.FocusNode]),
    [_markNextFocus]: dart.fnType(dart.void, [focus_manager.FocusNode]),
    [_markNeedsUpdate]: dart.fnType(dart.void, []),
    [_applyFocusChange]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(focus_manager.FocusManager, () => ({
    __proto__: dart.getGetters(focus_manager.FocusManager.__proto__),
    highlightStrategy: focus_manager.FocusHighlightStrategy,
    highlightMode: focus_manager.FocusHighlightMode,
    primaryFocus: dart.nullable(focus_manager.FocusNode)
  }));
  dart.setSetterSignature(focus_manager.FocusManager, () => ({
    __proto__: dart.getSetters(focus_manager.FocusManager.__proto__),
    highlightStrategy: focus_manager.FocusHighlightStrategy
  }));
  dart.setLibraryUri(focus_manager.FocusManager, L108);
  dart.setFieldSignature(focus_manager.FocusManager, () => ({
    __proto__: dart.getFields(focus_manager.FocusManager.__proto__),
    [_highlightStrategy]: dart.fieldType(focus_manager.FocusHighlightStrategy),
    [_highlightMode]: dart.fieldType(dart.nullable(focus_manager.FocusHighlightMode)),
    [_lastInteractionWasTouch]: dart.fieldType(dart.nullable(core.bool)),
    [_listeners$0]: dart.finalFieldType(observer_list.HashedObserverList$(dart.fnType(dart.void, [focus_manager.FocusHighlightMode]))),
    rootScope: dart.finalFieldType(focus_manager.FocusScopeNode),
    [_primaryFocus]: dart.fieldType(dart.nullable(focus_manager.FocusNode)),
    [_dirtyNodes]: dart.finalFieldType(core.Set$(focus_manager.FocusNode)),
    [_markedForFocus]: dart.fieldType(dart.nullable(focus_manager.FocusNode)),
    [_haveScheduledUpdate]: dart.fieldType(core.bool)
  }));
  focus_manager._focusDebug = function _focusDebug(message, details = null) {
    if (message == null) dart.nullFailed(L107, 22, 25, "message");
    if (false) {
      print.debugPrint("FOCUS: " + dart.str(message));
      if (details != null && dart.test(details[$isNotEmpty])) {
        for (let detail of details) {
          print.debugPrint("    " + dart.str(detail));
        }
      }
    }
    return true;
  };
  focus_manager.debugDescribeFocusTree = function debugDescribeFocusTree() {
    let t80;
    if (!(binding$5.WidgetsBinding.instance != null)) dart.assertFailed(null, L107, 1811, 10, "WidgetsBinding.instance != null");
    let result = null;
    if (!dart.test(dart.fn(() => {
      result = focus_manager.FocusManager.instance.toStringDeep();
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L107, 1813, 10, "() {\r\n    result = FocusManager.instance.toStringDeep();\r\n    return true;\r\n  }()");
    t80 = result;
    return t80 == null ? "" : t80;
  };
  focus_manager.debugDumpFocusTree = function debugDumpFocusTree() {
    if (!dart.test(dart.fn(() => {
      print.debugPrint(focus_manager.debugDescribeFocusTree());
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L107, 1825, 10, "() {\r\n    debugPrint(debugDescribeFocusTree());\r\n    return true;\r\n  }()");
  };
  dart.copyProperties(focus_manager, {
    get primaryFocus() {
      return dart.nullCheck(binding$5.WidgetsBinding.instance).focusManager.primaryFocus;
    }
  });
  dart.defineLazy(focus_manager, {
    /*focus_manager._kDebugFocus*/get _kDebugFocus() {
      return false;
    }
  }, false);
  framework.UniqueKey = class UniqueKey extends key.LocalKey {
    toString() {
      return "[#" + dart.str(diagnostics$.shortHash(this)) + "]";
    }
  };
  (framework.UniqueKey.new = function() {
    framework.UniqueKey.__proto__.new.call(this);
    ;
  }).prototype = framework.UniqueKey.prototype;
  dart.addTypeTests(framework.UniqueKey);
  dart.addTypeCaches(framework.UniqueKey);
  dart.setLibraryUri(framework.UniqueKey, L5);
  dart.defineExtensionMethods(framework.UniqueKey, ['toString']);
  var value$0 = dart.privateName(framework, "ObjectKey.value");
  framework.ObjectKey = class ObjectKey extends key.LocalKey {
    get value() {
      return this[value$0];
    }
    set value(value) {
      super.value = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      return framework.ObjectKey.is(other) && core.identical(other.value, this.value);
    }
    get hashCode() {
      return ui.hashValues(this[$runtimeType], core.identityHashCode(this.value));
    }
    toString() {
      if (dart.equals(this[$runtimeType], dart.wrapType(framework.ObjectKey))) return "[" + dart.str(diagnostics$.describeIdentity(this.value)) + "]";
      return "[" + dart.str(object.objectRuntimeType(this, "ObjectKey")) + " " + dart.str(diagnostics$.describeIdentity(this.value)) + "]";
    }
  };
  (framework.ObjectKey.new = function(value) {
    this[value$0] = value;
    framework.ObjectKey.__proto__.new.call(this);
    ;
  }).prototype = framework.ObjectKey.prototype;
  dart.addTypeTests(framework.ObjectKey);
  dart.addTypeCaches(framework.ObjectKey);
  dart.setLibraryUri(framework.ObjectKey, L5);
  dart.setFieldSignature(framework.ObjectKey, () => ({
    __proto__: dart.getFields(framework.ObjectKey.__proto__),
    value: dart.finalFieldType(dart.nullable(core.Object))
  }));
  dart.defineExtensionMethods(framework.ObjectKey, ['_equals', 'toString']);
  dart.defineExtensionAccessors(framework.ObjectKey, ['hashCode']);
  const _is_GlobalKey_default = Symbol('_is_GlobalKey_default');
  framework.GlobalKey$ = dart.generic(T => {
    class GlobalKey extends key.Key {
      static new(opts) {
        let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
        return new (framework.LabeledGlobalKey$(T)).new(debugLabel);
      }
      static _debugRemoveReservationFor(parent, child) {
        if (parent == null) dart.nullFailed(L4, 160, 50, "parent");
        if (child == null) dart.nullFailed(L4, 160, 66, "child");
        if (!dart.test(dart.fn(() => {
          let t80;
          if (!(parent != null)) dart.assertFailed(null, L4, 162, 14, "parent != null");
          if (!(child != null)) dart.assertFailed(null, L4, 163, 14, "child != null");
          t80 = framework.GlobalKey._debugReservations[$_get](parent);
          t80 == null ? null : t80[$remove](child);
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 161, 12, "() {\r\n      assert(parent != null);\r\n      assert(child != null);\r\n      _debugReservations[parent]?.remove(child);\r\n      return true;\r\n    }()");
      }
      [_register$](element) {
        if (element == null) dart.nullFailed(L4, 169, 26, "element");
        if (!dart.test(dart.fn(() => {
          if (dart.test(framework.GlobalKey._registry[$containsKey](this))) {
            if (!(element.widget != null)) dart.assertFailed(null, L4, 172, 16, "element.widget != null");
            let oldElement = dart.nullCheck(framework.GlobalKey._registry[$_get](this));
            if (!(oldElement.widget != null)) dart.assertFailed(null, L4, 174, 16, "oldElement.widget != null");
            if (!!dart.equals(dart.runtimeType(element.widget), dart.runtimeType(oldElement.widget))) dart.assertFailed(null, L4, 175, 16, "element.widget.runtimeType != oldElement.widget.runtimeType");
            framework.GlobalKey._debugIllFatedElements.add(oldElement);
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 170, 12, "() {\r\n      if (_registry.containsKey(this)) {\r\n        assert(element.widget != null);\r\n        final Element oldElement = _registry[this]!;\r\n        assert(oldElement.widget != null);\r\n        assert(element.widget.runtimeType != oldElement.widget.runtimeType);\r\n        _debugIllFatedElements.add(oldElement);\r\n      }\r\n      return true;\r\n    }()");
        framework.GlobalKey._registry[$_set](this, element);
      }
      [_unregister$](element) {
        if (element == null) dart.nullFailed(L4, 183, 28, "element");
        if (!dart.test(dart.fn(() => {
          if (dart.test(framework.GlobalKey._registry[$containsKey](this)) && !dart.equals(framework.GlobalKey._registry[$_get](this), element)) {
            if (!(element.widget != null)) dart.assertFailed(null, L4, 186, 16, "element.widget != null");
            let oldElement = dart.nullCheck(framework.GlobalKey._registry[$_get](this));
            if (!(oldElement.widget != null)) dart.assertFailed(null, L4, 188, 16, "oldElement.widget != null");
            if (!!dart.equals(dart.runtimeType(element.widget), dart.runtimeType(oldElement.widget))) dart.assertFailed(null, L4, 189, 16, "element.widget.runtimeType != oldElement.widget.runtimeType");
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 184, 12, "() {\r\n      if (_registry.containsKey(this) && _registry[this] != element) {\r\n        assert(element.widget != null);\r\n        final Element oldElement = _registry[this]!;\r\n        assert(oldElement.widget != null);\r\n        assert(element.widget.runtimeType != oldElement.widget.runtimeType);\r\n      }\r\n      return true;\r\n    }()");
        if (dart.equals(framework.GlobalKey._registry[$_get](this), element)) framework.GlobalKey._registry[$remove](this);
      }
      [_debugReserveFor](parent, child) {
        if (parent == null) dart.nullFailed(L4, 197, 33, "parent");
        if (child == null) dart.nullFailed(L4, 197, 49, "child");
        if (!dart.test(dart.fn(() => {
          let t81, t80;
          if (!(parent != null)) dart.assertFailed(null, L4, 199, 14, "parent != null");
          if (!(child != null)) dart.assertFailed(null, L4, 200, 14, "child != null");
          t80 = framework.GlobalKey._debugReservations;
          t81 = parent;
          t80[$_get](t81) == null ? t80[$_set](t81, new (LinkedMapOfElement$GlobalKeyOfStateOfStatefulWidget()).new()) : null;
          dart.nullCheck(framework.GlobalKey._debugReservations[$_get](parent))[$_set](child, this);
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 198, 12, "() {\r\n      assert(parent != null);\r\n      assert(child != null);\r\n      _debugReservations[parent] ??= <Element, GlobalKey>{};\r\n      _debugReservations[parent]![child] = this;\r\n      return true;\r\n    }()");
      }
      static _debugVerifyGlobalKeyReservation() {
        if (!dart.test(dart.fn(() => {
          let keyToParent = new (LinkedMapOfGlobalKeyOfStateOfStatefulWidget$Element()).new();
          framework.GlobalKey._debugReservations[$forEach](dart.fn((parent, childToKey) => {
            let t80;
            if (parent == null) dart.nullFailed(L4, 210, 43, "parent");
            if (childToKey == null) dart.nullFailed(L4, 210, 75, "childToKey");
            if (dart.equals(parent[_lifecycleState], framework._ElementLifecycle.defunct) || dart.equals((t80 = parent.renderObject, t80 == null ? null : t80.attached), false)) return;
            childToKey[$forEach](dart.fn((child, key) => {
              if (child == null) dart.nullFailed(L4, 214, 37, "child");
              if (key == null) dart.nullFailed(L4, 214, 54, "key");
              if (child[_parent] == null) return;
              if (dart.test(keyToParent[$containsKey](key)) && !dart.equals(keyToParent[$_get](key), parent)) {
                let older = dart.nullCheck(keyToParent[$_get](key));
                let newer = parent;
                let error = null;
                if (older.toString() != dart.toString(newer)) {
                  error = new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Multiple widgets used the same GlobalKey."), new assertions.ErrorDescription.new("The key " + dart.str(key) + " was used by multiple widgets. The parents of those widgets were:\n" + "- " + dart.str(older.toString()) + "\n" + "- " + dart.str(dart.toString(newer)) + "\n" + "A GlobalKey can only be specified on one widget at a time in the widget tree.")]));
                } else {
                  error = new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Multiple widgets used the same GlobalKey."), new assertions.ErrorDescription.new("The key " + dart.str(key) + " was used by multiple widgets. The parents of those widgets were " + "different widgets that both had the following description:\n" + "  " + dart.str(dart.toString(parent)) + "\n" + "A GlobalKey can only be specified on one widget at a time in the widget tree.")]));
                }
                if (!dart.equals(child[_parent], older)) {
                  older.visitChildren(dart.fn(currentChild => {
                    if (currentChild == null) dart.nullFailed(L4, 256, 44, "currentChild");
                    if (dart.equals(currentChild, child)) older.forgetChild(child);
                  }, ElementTovoid()));
                }
                if (!dart.equals(child[_parent], newer)) {
                  newer.visitChildren(dart.fn(currentChild => {
                    if (currentChild == null) dart.nullFailed(L4, 262, 44, "currentChild");
                    if (dart.equals(currentChild, child)) newer.forgetChild(child);
                  }, ElementTovoid()));
                }
                dart.throw(error);
              } else {
                keyToParent[$_set](key, parent);
              }
            }, ElementAndGlobalKeyOfStateOfStatefulWidgetTovoid()));
          }, ElementAndMapOfElement$GlobalKeyOfStateOfStatefulWidgetTovoid()));
          framework.GlobalKey._debugReservations[$clear]();
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 208, 12, "() {\r\n      final Map<GlobalKey, Element> keyToParent = <GlobalKey, Element>{};\r\n      _debugReservations.forEach((Element parent, Map<Element, GlobalKey> childToKey) {\r\n        // We ignore parent that are unmounted or detached.\r\n        if (parent._lifecycleState == _ElementLifecycle.defunct || parent.renderObject?.attached == false)\r\n          return;\r\n        childToKey.forEach((Element child, GlobalKey key) {\r\n          // If parent = null, the node is deactivated by its parent and is\r\n          // not re-attached to other part of the tree. We should ignore this\r\n          // node.\r\n          if (child._parent == null)\r\n            return;\r\n          // It is possible the same key registers to the same parent twice\r\n          // with different children. That is illegal, but it is not in the\r\n          // scope of this check. Such error will be detected in\r\n          // _debugVerifyIllFatedPopulation or\r\n          // _debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans.\r\n          if (keyToParent.containsKey(key) && keyToParent[key] != parent) {\r\n            // We have duplication reservations for the same global key.\r\n            final Element older = keyToParent[key]!;\r\n            final Element newer = parent;\r\n            final FlutterError error;\r\n            if (older.toString() != newer.toString()) {\r\n              error = FlutterError.fromParts(<DiagnosticsNode>[\r\n                ErrorSummary('Multiple widgets used the same GlobalKey.'),\r\n                ErrorDescription(\r\n                  'The key $key was used by multiple widgets. The parents of those widgets were:\\n'\r\n                    '- ${older.toString()}\\n'\r\n                    '- ${newer.toString()}\\n'\r\n                    'A GlobalKey can only be specified on one widget at a time in the widget tree.'\r\n                ),\r\n              ]);\r\n            } else {\r\n              error = FlutterError.fromParts(<DiagnosticsNode>[\r\n                ErrorSummary('Multiple widgets used the same GlobalKey.'),\r\n                ErrorDescription(\r\n                  'The key $key was used by multiple widgets. The parents of those widgets were '\r\n                    'different widgets that both had the following description:\\n'\r\n                    '  ${parent.toString()}\\n'\r\n                    'A GlobalKey can only be specified on one widget at a time in the widget tree.'\r\n                ),\r\n              ]);\r\n            }\r\n            // Fix the tree by removing the duplicated child from one of its\r\n            // parents to resolve the duplicated key issue. This allows us to\r\n            // tear down the tree during testing without producing additional\r\n            // misleading exceptions.\r\n            if (child._parent != older) {\r\n              older.visitChildren((Element currentChild) {\r\n                if (currentChild == child)\r\n                  older.forgetChild(child);\r\n              });\r\n            }\r\n            if (child._parent != newer) {\r\n              newer.visitChildren((Element currentChild) {\r\n                if (currentChild == child)\r\n                  newer.forgetChild(child);\r\n              });\r\n            }\r\n            throw error;\r\n          } else {\r\n            keyToParent[key] = parent;\r\n          }\r\n        });\r\n      });\r\n      _debugReservations.clear();\r\n      return true;\r\n    }()");
      }
      static _debugVerifyIllFatedPopulation() {
        if (!dart.test(dart.fn(() => {
          let duplicates = null;
          for (let element of framework.GlobalKey._debugIllFatedElements) {
            if (!dart.equals(element[_lifecycleState], framework._ElementLifecycle.defunct)) {
              if (!(element != null)) dart.assertFailed(null, L4, 283, 18, "element != null");
              if (!(element.widget != null)) dart.assertFailed(null, L4, 284, 18, "element.widget != null");
              if (!(element.widget.key != null)) dart.assertFailed(null, L4, 285, 18, "element.widget.key != null");
              let key = GlobalKeyOfStateOfStatefulWidget().as(dart.nullCheck(element.widget.key));
              if (!dart.test(framework.GlobalKey._registry[$containsKey](key))) dart.assertFailed(null, L4, 287, 18, "_registry.containsKey(key)");
              duplicates == null ? duplicates = new (LinkedMapOfGlobalKeyOfStateOfStatefulWidget$SetOfElement()).new() : null;
              let elements = duplicates[$putIfAbsent](key, dart.fn(() => new (_HashSetOfElement()).new(), VoidToLinkedHashSetOfElement()));
              elements.add(element);
              elements.add(dart.nullCheck(framework.GlobalKey._registry[$_get](key)));
            }
          }
          framework.GlobalKey._debugIllFatedElements.clear();
          if (duplicates != null) {
            let information = JSArrayOfDiagnosticsNode().of([]);
            information[$add](new assertions.ErrorSummary.new("Multiple widgets used the same GlobalKey."));
            for (let key of duplicates[$keys]) {
              let elements = dart.nullCheck(duplicates[$_get](key));
              information[$add](framework.Element.describeElements("The key " + dart.str(key) + " was used by " + dart.str(elements[$length]) + " widgets", elements));
            }
            information[$add](new assertions.ErrorDescription.new("A GlobalKey can only be specified on one widget at a time in the widget tree."));
            dart.throw(new assertions.FlutterError.fromParts(information));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 279, 12, "() {\r\n      Map<GlobalKey, Set<Element>>? duplicates;\r\n      for (final Element element in _debugIllFatedElements) {\r\n        if (element._lifecycleState != _ElementLifecycle.defunct) {\r\n          assert(element != null);\r\n          assert(element.widget != null);\r\n          assert(element.widget.key != null);\r\n          final GlobalKey key = element.widget.key! as GlobalKey;\r\n          assert(_registry.containsKey(key));\r\n          duplicates ??= <GlobalKey, Set<Element>>{};\r\n          // Uses ordered set to produce consistent error message.\r\n          final Set<Element> elements = duplicates.putIfAbsent(key, () => LinkedHashSet<Element>());\r\n          elements.add(element);\r\n          elements.add(_registry[key]!);\r\n        }\r\n      }\r\n      _debugIllFatedElements.clear();\r\n      if (duplicates != null) {\r\n        final List<DiagnosticsNode> information = <DiagnosticsNode>[];\r\n        information.add(ErrorSummary('Multiple widgets used the same GlobalKey.'));\r\n        for (final GlobalKey key in duplicates.keys) {\r\n          final Set<Element> elements = duplicates[key]!;\r\n          // TODO(jacobr): this will omit the '- ' before each widget name and\r\n          // use the more standard whitespace style instead. Please let me know\r\n          // if the '- ' style is a feature we want to maintain and we can add\r\n          // another tree style that supports it. I also see '* ' in some places\r\n          // so it would be nice to unify and normalize.\r\n          information.add(Element.describeElements('The key $key was used by ${elements.length} widgets', elements));\r\n        }\r\n        information.add(ErrorDescription('A GlobalKey can only be specified on one widget at a time in the widget tree.'));\r\n        throw FlutterError.fromParts(information);\r\n      }\r\n      return true;\r\n    }()");
      }
      get [_currentElement$]() {
        return framework.GlobalKey._registry[$_get](this);
      }
      get currentContext() {
        return this[_currentElement$];
      }
      get currentWidget() {
        let t80;
        t80 = this[_currentElement$];
        return t80 == null ? null : t80.widget;
      }
      get currentState() {
        let element = this[_currentElement$];
        if (framework.StatefulElement.is(element)) {
          let statefulElement = element;
          let state = statefulElement.state;
          if (T.is(state)) return state;
        }
        return null;
      }
    }
    (GlobalKey.constructor = function() {
      GlobalKey.__proto__.empty.call(this);
      ;
    }).prototype = GlobalKey.prototype;
    dart.addTypeTests(GlobalKey);
    GlobalKey.prototype[_is_GlobalKey_default] = true;
    dart.addTypeCaches(GlobalKey);
    dart.setMethodSignature(GlobalKey, () => ({
      __proto__: dart.getMethods(GlobalKey.__proto__),
      [_register$]: dart.fnType(dart.void, [framework.Element]),
      [_unregister$]: dart.fnType(dart.void, [framework.Element]),
      [_debugReserveFor]: dart.fnType(dart.void, [framework.Element, framework.Element])
    }));
    dart.setGetterSignature(GlobalKey, () => ({
      __proto__: dart.getGetters(GlobalKey.__proto__),
      [_currentElement$]: dart.nullable(framework.Element),
      currentContext: dart.nullable(framework.BuildContext),
      currentWidget: dart.nullable(framework.Widget),
      currentState: dart.nullable(T)
    }));
    dart.setLibraryUri(GlobalKey, L5);
    return GlobalKey;
  });
  framework.GlobalKey = framework.GlobalKey$();
  dart.defineLazy(framework.GlobalKey, {
    /*framework.GlobalKey._registry*/get _registry() {
      return new (LinkedMapOfGlobalKeyOfStateOfStatefulWidget$Element()).new();
    },
    /*framework.GlobalKey._debugIllFatedElements*/get _debugIllFatedElements() {
      return new (_HashSetOfElement()).new();
    },
    /*framework.GlobalKey._debugReservations*/get _debugReservations() {
      return new (LinkedMapOfElement$MapOfElement$GlobalKeyOfStateOfStatefulWidget()).new();
    }
  }, false);
  dart.addTypeTests(framework.GlobalKey, _is_GlobalKey_default);
  var _debugLabel$ = dart.privateName(framework, "_debugLabel");
  const _is_LabeledGlobalKey_default = Symbol('_is_LabeledGlobalKey_default');
  framework.LabeledGlobalKey$ = dart.generic(T => {
    class LabeledGlobalKey extends framework.GlobalKey$(T) {
      toString() {
        let label = this[_debugLabel$] != null ? " " + dart.str(this[_debugLabel$]) : "";
        if (dart.equals(this[$runtimeType], dart.wrapType(LabeledGlobalKeyOfStateOfStatefulWidget()))) return "[GlobalKey#" + dart.str(diagnostics$.shortHash(this)) + label + "]";
        return "[" + dart.str(diagnostics$.describeIdentity(this)) + label + "]";
      }
    }
    (LabeledGlobalKey.new = function(_debugLabel) {
      this[_debugLabel$] = _debugLabel;
      LabeledGlobalKey.__proto__.constructor.call(this);
      ;
    }).prototype = LabeledGlobalKey.prototype;
    dart.addTypeTests(LabeledGlobalKey);
    LabeledGlobalKey.prototype[_is_LabeledGlobalKey_default] = true;
    dart.addTypeCaches(LabeledGlobalKey);
    dart.setLibraryUri(LabeledGlobalKey, L5);
    dart.setFieldSignature(LabeledGlobalKey, () => ({
      __proto__: dart.getFields(LabeledGlobalKey.__proto__),
      [_debugLabel$]: dart.finalFieldType(dart.nullable(core.String))
    }));
    dart.defineExtensionMethods(LabeledGlobalKey, ['toString']);
    return LabeledGlobalKey;
  });
  framework.LabeledGlobalKey = framework.LabeledGlobalKey$();
  dart.addTypeTests(framework.LabeledGlobalKey, _is_LabeledGlobalKey_default);
  const _is_GlobalObjectKey_default = Symbol('_is_GlobalObjectKey_default');
  var value$1 = dart.privateName(framework, "GlobalObjectKey.value");
  framework.GlobalObjectKey$ = dart.generic(T => {
    var GlobalObjectKeyOfT = () => (GlobalObjectKeyOfT = dart.constFn(framework.GlobalObjectKey$(T)))();
    class GlobalObjectKey extends framework.GlobalKey$(T) {
      get value() {
        return this[value$1];
      }
      set value(value) {
        super.value = value;
      }
      _equals(other) {
        if (other == null) return false;
        if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
        return GlobalObjectKeyOfT().is(other) && core.identical(other.value, this.value);
      }
      get hashCode() {
        return core.identityHashCode(this.value);
      }
      toString() {
        let selfType = object.objectRuntimeType(this, "GlobalObjectKey");
        if (selfType[$endsWith]("<State<StatefulWidget>>")) {
          selfType = selfType[$substring](0, selfType.length - "<State<StatefulWidget>>".length);
        }
        return "[" + dart.str(selfType) + " " + dart.str(diagnostics$.describeIdentity(this.value)) + "]";
      }
    }
    (GlobalObjectKey.new = function(value) {
      if (value == null) dart.nullFailed(L4, 394, 30, "value");
      this[value$1] = value;
      GlobalObjectKey.__proto__.constructor.call(this);
      ;
    }).prototype = GlobalObjectKey.prototype;
    dart.addTypeTests(GlobalObjectKey);
    GlobalObjectKey.prototype[_is_GlobalObjectKey_default] = true;
    dart.addTypeCaches(GlobalObjectKey);
    dart.setLibraryUri(GlobalObjectKey, L5);
    dart.setFieldSignature(GlobalObjectKey, () => ({
      __proto__: dart.getFields(GlobalObjectKey.__proto__),
      value: dart.finalFieldType(core.Object)
    }));
    dart.defineExtensionMethods(GlobalObjectKey, ['_equals', 'toString']);
    dart.defineExtensionAccessors(GlobalObjectKey, ['hashCode']);
    return GlobalObjectKey;
  });
  framework.GlobalObjectKey = framework.GlobalObjectKey$();
  dart.addTypeTests(framework.GlobalObjectKey, _is_GlobalObjectKey_default);
  const _is_TypeMatcher_default = Symbol('_is_TypeMatcher_default');
  framework.TypeMatcher$ = dart.generic(T => {
    class TypeMatcher extends core.Object {
      check(object) {
        return T.is(object);
      }
    }
    (TypeMatcher.new = function() {
      ;
    }).prototype = TypeMatcher.prototype;
    dart.addTypeTests(TypeMatcher);
    TypeMatcher.prototype[_is_TypeMatcher_default] = true;
    dart.addTypeCaches(TypeMatcher);
    dart.setMethodSignature(TypeMatcher, () => ({
      __proto__: dart.getMethods(TypeMatcher.__proto__),
      check: dart.fnType(core.bool, [dart.dynamic])
    }));
    dart.setLibraryUri(TypeMatcher, L5);
    return TypeMatcher;
  });
  framework.TypeMatcher = framework.TypeMatcher$();
  dart.addTypeTests(framework.TypeMatcher, _is_TypeMatcher_default);
  var _name$22 = dart.privateName(framework, "_name");
  var C1087;
  var C1088;
  var C1089;
  var C1090;
  var C1091;
  framework._StateLifecycle = class _StateLifecycle extends core.Object {
    toString() {
      return this[_name$22];
    }
  };
  (framework._StateLifecycle.new = function(index, _name) {
    if (index == null) dart.nullFailed(L4, 943, 6, "index");
    if (_name == null) dart.nullFailed(L4, 943, 6, "_name");
    this.index = index;
    this[_name$22] = _name;
    ;
  }).prototype = framework._StateLifecycle.prototype;
  dart.addTypeTests(framework._StateLifecycle);
  dart.addTypeCaches(framework._StateLifecycle);
  dart.setLibraryUri(framework._StateLifecycle, L5);
  dart.setFieldSignature(framework._StateLifecycle, () => ({
    __proto__: dart.getFields(framework._StateLifecycle.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$22]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(framework._StateLifecycle, ['toString']);
  framework._StateLifecycle.created = C1087 || CT.C1087;
  framework._StateLifecycle.initialized = C1088 || CT.C1088;
  framework._StateLifecycle.ready = C1089 || CT.C1089;
  framework._StateLifecycle.defunct = C1090 || CT.C1090;
  framework._StateLifecycle.values = C1091 || CT.C1091;
  var C1092;
  var C1093;
  var C1094;
  var C1095;
  var C1096;
  framework._ElementLifecycle = class _ElementLifecycle extends core.Object {
    toString() {
      return this[_name$22];
    }
  };
  (framework._ElementLifecycle.new = function(index, _name) {
    if (index == null) dart.nullFailed(L4, 2002, 6, "index");
    if (_name == null) dart.nullFailed(L4, 2002, 6, "_name");
    this.index = index;
    this[_name$22] = _name;
    ;
  }).prototype = framework._ElementLifecycle.prototype;
  dart.addTypeTests(framework._ElementLifecycle);
  dart.addTypeCaches(framework._ElementLifecycle);
  dart.setLibraryUri(framework._ElementLifecycle, L5);
  dart.setFieldSignature(framework._ElementLifecycle, () => ({
    __proto__: dart.getFields(framework._ElementLifecycle.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$22]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(framework._ElementLifecycle, ['toString']);
  framework._ElementLifecycle.initial = C1092 || CT.C1092;
  framework._ElementLifecycle.active = C1093 || CT.C1093;
  framework._ElementLifecycle.inactive = C1094 || CT.C1094;
  framework._ElementLifecycle.defunct = C1095 || CT.C1095;
  framework._ElementLifecycle.values = C1096 || CT.C1096;
  var _locked = dart.privateName(framework, "_locked");
  var _elements = dart.privateName(framework, "_elements");
  var _unmount = dart.privateName(framework, "_unmount");
  var C1097;
  var _unmountAll = dart.privateName(framework, "_unmountAll");
  var C1098;
  framework._InactiveElements = class _InactiveElements extends core.Object {
    [_unmount](element) {
      if (element == null) dart.nullFailed(L4, 2013, 25, "element");
      if (!dart.equals(element[_lifecycleState], framework._ElementLifecycle.inactive)) dart.assertFailed(null, L4, 2014, 12, "element._lifecycleState == _ElementLifecycle.inactive");
      if (!dart.test(dart.fn(() => {
        if (dart.test(debug$0.debugPrintGlobalKeyedWidgetLifecycle)) {
          if (GlobalKeyOfStateOfStatefulWidget().is(element.widget.key)) print.debugPrint("Discarding " + dart.str(element) + " from inactive elements list.");
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 2015, 12, "() {\r\n      if (debugPrintGlobalKeyedWidgetLifecycle) {\r\n        if (element.widget.key is GlobalKey)\r\n          debugPrint('Discarding $element from inactive elements list.');\r\n      }\r\n      return true;\r\n    }()");
      element.visitChildren(dart.fn(child => {
        if (child == null) dart.nullFailed(L4, 2022, 36, "child");
        if (!dart.equals(child[_parent], element)) dart.assertFailed(null, L4, 2023, 14, "child._parent == element");
        this[_unmount](child);
      }, ElementTovoid()));
      element.unmount();
      if (!dart.equals(element[_lifecycleState], framework._ElementLifecycle.defunct)) dart.assertFailed(null, L4, 2027, 12, "element._lifecycleState == _ElementLifecycle.defunct");
    }
    [_unmountAll]() {
      let t80;
      this[_locked] = true;
      let elements = (t80 = this[_elements][$toList](), (() => {
        t80[$sort](C1097 || CT.C1097);
        return t80;
      })());
      this[_elements].clear();
      try {
        elements[$reversed][$forEach](dart.bind(this, _unmount));
      } finally {
        if (!dart.test(this[_elements][$isEmpty])) dart.assertFailed(null, L4, 2037, 14, "_elements.isEmpty");
        this[_locked] = false;
      }
    }
    static _deactivateRecursively(element) {
      if (element == null) dart.nullFailed(L4, 2042, 46, "element");
      if (!dart.equals(element[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 2043, 12, "element._lifecycleState == _ElementLifecycle.active");
      element.deactivate();
      if (!dart.equals(element[_lifecycleState], framework._ElementLifecycle.inactive)) dart.assertFailed(null, L4, 2045, 12, "element._lifecycleState == _ElementLifecycle.inactive");
      element.visitChildren(C1098 || CT.C1098);
      if (!dart.test(dart.fn(() => {
        element.debugDeactivated();
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 2047, 12, "() {\r\n      element.debugDeactivated();\r\n      return true;\r\n    }()");
    }
    add(element) {
      if (element == null) dart.nullFailed(L4, 2053, 20, "element");
      if (!!dart.test(this[_locked])) dart.assertFailed(null, L4, 2054, 12, "!_locked");
      if (!!dart.test(this[_elements].contains(element))) dart.assertFailed(null, L4, 2055, 12, "!_elements.contains(element)");
      if (!(element[_parent] == null)) dart.assertFailed(null, L4, 2056, 12, "element._parent == null");
      if (dart.equals(element[_lifecycleState], framework._ElementLifecycle.active)) framework._InactiveElements._deactivateRecursively(element);
      this[_elements].add(element);
    }
    remove(element) {
      if (element == null) dart.nullFailed(L4, 2062, 23, "element");
      if (!!dart.test(this[_locked])) dart.assertFailed(null, L4, 2063, 12, "!_locked");
      if (!dart.test(this[_elements].contains(element))) dart.assertFailed(null, L4, 2064, 12, "_elements.contains(element)");
      if (!(element[_parent] == null)) dart.assertFailed(null, L4, 2065, 12, "element._parent == null");
      this[_elements].remove(element);
      if (!!dart.equals(element[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 2067, 12, "element._lifecycleState != _ElementLifecycle.active");
    }
    debugContains(element) {
      if (element == null) dart.nullFailed(L4, 2070, 30, "element");
      let result = null;
      let result$35isSet = false;
      function result$35get() {
        return result$35isSet ? result : dart.throw(new _internal.LateError.localNI("result"));
      }
      dart.fn(result$35get, VoidTobool());
      function result$35set(t82) {
        if (t82 == null) dart.nullFailed(L4, 2071, 15, "null");
        result$35isSet = true;
        return result = t82;
      }
      dart.fn(result$35set, boolTodynamic());
      if (!dart.test(dart.fn(() => {
        result$35set(this[_elements].contains(element));
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 2072, 12, "() {\r\n      result = _elements.contains(element);\r\n      return true;\r\n    }()");
      return result$35get();
    }
  };
  (framework._InactiveElements.new = function() {
    this[_locked] = false;
    this[_elements] = new (_HashSetOfElement()).new();
    ;
  }).prototype = framework._InactiveElements.prototype;
  dart.addTypeTests(framework._InactiveElements);
  dart.addTypeCaches(framework._InactiveElements);
  dart.setMethodSignature(framework._InactiveElements, () => ({
    __proto__: dart.getMethods(framework._InactiveElements.__proto__),
    [_unmount]: dart.fnType(dart.void, [framework.Element]),
    [_unmountAll]: dart.fnType(dart.void, []),
    add: dart.fnType(dart.void, [framework.Element]),
    remove: dart.fnType(dart.void, [framework.Element]),
    debugContains: dart.fnType(core.bool, [framework.Element])
  }));
  dart.setLibraryUri(framework._InactiveElements, L5);
  dart.setFieldSignature(framework._InactiveElements, () => ({
    __proto__: dart.getFields(framework._InactiveElements.__proto__),
    [_locked]: dart.fieldType(core.bool),
    [_elements]: dart.finalFieldType(core.Set$(framework.Element))
  }));
  framework.BuildContext = class BuildContext extends core.Object {};
  (framework.BuildContext.new = function() {
    ;
  }).prototype = framework.BuildContext.prototype;
  dart.addTypeTests(framework.BuildContext);
  dart.addTypeCaches(framework.BuildContext);
  dart.setLibraryUri(framework.BuildContext, L5);
  var _dirtyElements = dart.privateName(framework, "_dirtyElements");
  var _scheduledFlushDirtyElements = dart.privateName(framework, "_scheduledFlushDirtyElements");
  var _dirtyElementsNeedsResorting = dart.privateName(framework, "_dirtyElementsNeedsResorting");
  var _debugStateLockLevel = dart.privateName(framework, "_debugStateLockLevel");
  var _debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans = dart.privateName(framework, "_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans");
  var _debugIsInBuildScope = dart.privateName(framework, "_debugIsInBuildScope");
  var onBuildScheduled$ = dart.privateName(framework, "BuildOwner.onBuildScheduled");
  var focusManager = dart.privateName(framework, "BuildOwner.focusManager");
  framework.BuildOwner = class BuildOwner extends core.Object {
    get onBuildScheduled() {
      return this[onBuildScheduled$];
    }
    set onBuildScheduled(value) {
      this[onBuildScheduled$] = value;
    }
    get focusManager() {
      return this[focusManager];
    }
    set focusManager(value) {
      this[focusManager] = value;
    }
    get [_debugIsInBuildScope]() {
      return this[_dirtyElementsNeedsResorting] != null;
    }
    scheduleBuildFor(element) {
      if (element == null) dart.nullFailed(L4, 2592, 33, "element");
      if (!(element != null)) dart.assertFailed(null, L4, 2593, 12, "element != null");
      if (!dart.equals(element.owner, this)) dart.assertFailed(null, L4, 2594, 12, "element.owner == this");
      if (!dart.test(dart.fn(() => {
        if (dart.test(debug$0.debugPrintScheduleBuildForStacks)) assertions.debugPrintStack({label: "scheduleBuildFor() called for " + dart.str(element) + (dart.test(this[_dirtyElements][$contains](element)) ? " (ALREADY IN LIST)" : "")});
        if (!dart.test(element.dirty)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("scheduleBuildFor() called for a widget that is not marked as dirty."), element.describeElement("The method was called for the following element"), new assertions.ErrorDescription.new("This element is not current marked as dirty. Make sure to set the dirty flag before " + "calling scheduleBuildFor()."), new assertions.ErrorHint.new("If you did not attempt to call scheduleBuildFor() yourself, then this probably " + "indicates a bug in the widgets framework. Please report it:\n" + "  https://github.com/flutter/flutter/issues/new?template=2_bug.md")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 2595, 12, "() {\r\n      if (debugPrintScheduleBuildForStacks)\r\n        debugPrintStack(label: 'scheduleBuildFor() called for $element${_dirtyElements.contains(element) ? \" (ALREADY IN LIST)\" : \"\"}');\r\n      if (!element.dirty) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('scheduleBuildFor() called for a widget that is not marked as dirty.'),\r\n          element.describeElement('The method was called for the following element'),\r\n          ErrorDescription(\r\n            'This element is not current marked as dirty. Make sure to set the dirty flag before '\r\n            'calling scheduleBuildFor().'),\r\n          ErrorHint(\r\n            'If you did not attempt to call scheduleBuildFor() yourself, then this probably '\r\n            'indicates a bug in the widgets framework. Please report it:\\n'\r\n            '  https://github.com/flutter/flutter/issues/new?template=2_bug.md'\r\n          ),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      if (dart.test(element[_inDirtyList])) {
        if (!dart.test(dart.fn(() => {
          if (dart.test(debug$0.debugPrintScheduleBuildForStacks)) assertions.debugPrintStack({label: "BuildOwner.scheduleBuildFor() called; _dirtyElementsNeedsResorting was " + dart.str(this[_dirtyElementsNeedsResorting]) + " (now true); dirty list is: " + dart.str(this[_dirtyElements])});
          if (!dart.test(this[_debugIsInBuildScope])) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("BuildOwner.scheduleBuildFor() called inappropriately."), new assertions.ErrorHint.new("The BuildOwner.scheduleBuildFor() method should only be called while the " + "buildScope() method is actively rebuilding the widget tree.")])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 2615, 14, "() {\r\n        if (debugPrintScheduleBuildForStacks)\r\n          debugPrintStack(label: 'BuildOwner.scheduleBuildFor() called; _dirtyElementsNeedsResorting was $_dirtyElementsNeedsResorting (now true); dirty list is: $_dirtyElements');\r\n        if (!_debugIsInBuildScope) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('BuildOwner.scheduleBuildFor() called inappropriately.'),\r\n            ErrorHint(\r\n              'The BuildOwner.scheduleBuildFor() method should only be called while the '\r\n              'buildScope() method is actively rebuilding the widget tree.'\r\n            ),\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
        this[_dirtyElementsNeedsResorting] = true;
        return;
      }
      if (!dart.test(this[_scheduledFlushDirtyElements]) && this.onBuildScheduled != null) {
        this[_scheduledFlushDirtyElements] = true;
        dart.nullCheck(this.onBuildScheduled)();
      }
      this[_dirtyElements][$add](element);
      element[_inDirtyList] = true;
      if (!dart.test(dart.fn(() => {
        if (dart.test(debug$0.debugPrintScheduleBuildForStacks)) print.debugPrint("...dirty list is now: " + dart.str(this[_dirtyElements]));
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 2638, 12, "() {\r\n      if (debugPrintScheduleBuildForStacks)\r\n        debugPrint('...dirty list is now: $_dirtyElements');\r\n      return true;\r\n    }()");
    }
    get [_debugStateLocked]() {
      return dart.notNull(this[_debugStateLockLevel]) > 0;
    }
    get debugBuilding() {
      return this[_debugBuilding];
    }
    lockState(callback) {
      if (callback == null) dart.nullFailed(L4, 2660, 23, "callback");
      if (!(callback != null)) dart.assertFailed(null, L4, 2661, 12, "callback != null");
      if (!(dart.notNull(this[_debugStateLockLevel]) >= 0)) dart.assertFailed(null, L4, 2662, 12, "_debugStateLockLevel >= 0");
      if (!dart.test(dart.fn(() => {
        this[_debugStateLockLevel] = dart.notNull(this[_debugStateLockLevel]) + 1;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 2663, 12, "() {\r\n      _debugStateLockLevel += 1;\r\n      return true;\r\n    }()");
      try {
        callback();
      } finally {
        if (!dart.test(dart.fn(() => {
          this[_debugStateLockLevel] = dart.notNull(this[_debugStateLockLevel]) - 1;
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 2670, 14, "() {\r\n        _debugStateLockLevel -= 1;\r\n        return true;\r\n      }()");
      }
      if (!(dart.notNull(this[_debugStateLockLevel]) >= 0)) dart.assertFailed(null, L4, 2675, 12, "_debugStateLockLevel >= 0");
    }
    buildScope(context, callback = null) {
      if (context == null) dart.nullFailed(L4, 2703, 27, "context");
      if (callback == null && dart.test(this[_dirtyElements][$isEmpty])) return;
      if (!(context != null)) dart.assertFailed(null, L4, 2706, 12, "context != null");
      if (!(dart.notNull(this[_debugStateLockLevel]) >= 0)) dart.assertFailed(null, L4, 2707, 12, "_debugStateLockLevel >= 0");
      if (!!dart.test(this[_debugBuilding])) dart.assertFailed(null, L4, 2708, 12, "!_debugBuilding");
      if (!dart.test(dart.fn(() => {
        if (dart.test(debug$0.debugPrintBuildScope)) print.debugPrint("buildScope called with context " + dart.str(context) + "; dirty list is: " + dart.str(this[_dirtyElements]));
        this[_debugStateLockLevel] = dart.notNull(this[_debugStateLockLevel]) + 1;
        this[_debugBuilding] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 2709, 12, "() {\r\n      if (debugPrintBuildScope)\r\n        debugPrint('buildScope called with context $context; dirty list is: $_dirtyElements');\r\n      _debugStateLockLevel += 1;\r\n      _debugBuilding = true;\r\n      return true;\r\n    }()");
      developer.Timeline.startSync("Build", {arguments: debug$.timelineArgumentsIndicatingLandmarkEvent});
      try {
        this[_scheduledFlushDirtyElements] = true;
        if (callback != null) {
          if (!dart.test(this[_debugStateLocked])) dart.assertFailed(null, L4, 2720, 16, "_debugStateLocked");
          let debugPreviousBuildTarget = null;
          if (!dart.test(dart.fn(() => {
            context[_debugSetAllowIgnoredCallsToMarkNeedsBuild](true);
            debugPreviousBuildTarget = this[_debugCurrentBuildTarget];
            this[_debugCurrentBuildTarget] = context;
            return true;
          }, VoidTobool())())) dart.assertFailed(null, L4, 2722, 16, "() {\r\n          context._debugSetAllowIgnoredCallsToMarkNeedsBuild(true);\r\n          debugPreviousBuildTarget = _debugCurrentBuildTarget;\r\n          _debugCurrentBuildTarget = context;\r\n          return true;\r\n        }()");
          this[_dirtyElementsNeedsResorting] = false;
          try {
            callback();
          } finally {
            if (!dart.test(dart.fn(() => {
              context[_debugSetAllowIgnoredCallsToMarkNeedsBuild](false);
              if (!dart.equals(this[_debugCurrentBuildTarget], context)) dart.assertFailed(null, L4, 2734, 20, "_debugCurrentBuildTarget == context");
              this[_debugCurrentBuildTarget] = debugPreviousBuildTarget;
              this[_debugElementWasRebuilt](context);
              return true;
            }, VoidTobool())())) dart.assertFailed(null, L4, 2732, 18, "() {\r\n            context._debugSetAllowIgnoredCallsToMarkNeedsBuild(false);\r\n            assert(_debugCurrentBuildTarget == context);\r\n            _debugCurrentBuildTarget = debugPreviousBuildTarget;\r\n            _debugElementWasRebuilt(context);\r\n            return true;\r\n          }()");
          }
        }
        this[_dirtyElements][$sort](C1097 || CT.C1097);
        this[_dirtyElementsNeedsResorting] = false;
        let dirtyCount = this[_dirtyElements][$length];
        let index = 0;
        while (index < dart.notNull(dirtyCount)) {
          if (!(this[_dirtyElements][$_get](index) != null)) dart.assertFailed(null, L4, 2746, 16, "_dirtyElements[index] != null");
          if (!dart.test(this[_dirtyElements][$_get](index)[_inDirtyList])) dart.assertFailed(null, L4, 2747, 16, "_dirtyElements[index]._inDirtyList");
          if (!dart.test(dart.fn(() => {
            if (dart.equals(this[_dirtyElements][$_get](index)[_lifecycleState], framework._ElementLifecycle.active) && !dart.test(this[_dirtyElements][$_get](index)[_debugIsInScope](context))) {
              dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Tried to build dirty widget in the wrong build scope."), new assertions.ErrorDescription.new("A widget which was marked as dirty and is still active was scheduled to be built, " + "but the current build scope unexpectedly does not contain that widget."), new assertions.ErrorHint.new("Sometimes this is detected when an element is removed from the widget tree, but the " + "element somehow did not get marked as inactive. In that case, it might be caused by " + "an ancestor element failing to implement visitChildren correctly, thus preventing " + "some or all of its descendants from being correctly deactivated."), new (DiagnosticsPropertyOfElement()).new("The root of the build scope was", context, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty}), new (DiagnosticsPropertyOfElement()).new("The offending element (which does not appear to be a descendant of the root of the build scope) was", this[_dirtyElements][$_get](index), {style: diagnostics$.DiagnosticsTreeStyle.errorProperty})])));
            }
            return true;
          }, VoidTobool())())) dart.assertFailed(null, L4, 2748, 16, "() {\r\n          if (_dirtyElements[index]._lifecycleState == _ElementLifecycle.active && !_dirtyElements[index]._debugIsInScope(context)) {\r\n            throw FlutterError.fromParts(<DiagnosticsNode>[\r\n              ErrorSummary('Tried to build dirty widget in the wrong build scope.'),\r\n              ErrorDescription(\r\n                'A widget which was marked as dirty and is still active was scheduled to be built, '\r\n                'but the current build scope unexpectedly does not contain that widget.',\r\n              ),\r\n              ErrorHint(\r\n                'Sometimes this is detected when an element is removed from the widget tree, but the '\r\n                'element somehow did not get marked as inactive. In that case, it might be caused by '\r\n                'an ancestor element failing to implement visitChildren correctly, thus preventing '\r\n                'some or all of its descendants from being correctly deactivated.',\r\n              ),\r\n              DiagnosticsProperty<Element>(\r\n                'The root of the build scope was',\r\n                context,\r\n                style: DiagnosticsTreeStyle.errorProperty,\r\n              ),\r\n              DiagnosticsProperty<Element>(\r\n                'The offending element (which does not appear to be a descendant of the root of the build scope) was',\r\n                _dirtyElements[index],\r\n                style: DiagnosticsTreeStyle.errorProperty,\r\n              ),\r\n            ]);\r\n          }\r\n          return true;\r\n        }()");
          try {
            this[_dirtyElements][$_get](index).rebuild();
          } catch (e$) {
            let e = dart.getThrown(e$);
            let stack = dart.stackTrace(e$);
            if (core.Object.is(e)) {
              framework._debugReportException(new assertions.ErrorDescription.new("while rebuilding dirty elements"), e, stack, {informationCollector: dart.fn(() => new (SyncIterableOfDiagnosticsNode()).new((function*() {
                  if (index < dart.notNull(this[_dirtyElements][$length])) {
                    yield new object$.DiagnosticsDebugCreator.new(new framework.DebugCreator.new(this[_dirtyElements][$_get](index)));
                    yield this[_dirtyElements][$_get](index).describeElement("The element being rebuilt at the time was index " + dart.str(index) + " of " + dart.str(dirtyCount));
                  } else {
                    yield new assertions.ErrorHint.new("The element being rebuilt at the time was index " + dart.str(index) + " of " + dart.str(dirtyCount) + ", but _dirtyElements only had " + dart.str(this[_dirtyElements][$length]) + " entries. This suggests some confusion in the framework internals.");
                  }
                }).bind(this)), VoidToIterableOfDiagnosticsNode())});
            } else
              throw e$;
          }
          index = index + 1;
          if (dart.notNull(dirtyCount) < dart.notNull(this[_dirtyElements][$length]) || dart.nullCheck(this[_dirtyElementsNeedsResorting])) {
            this[_dirtyElements][$sort](C1097 || CT.C1097);
            this[_dirtyElementsNeedsResorting] = false;
            dirtyCount = this[_dirtyElements][$length];
            while (index > 0 && dart.test(this[_dirtyElements][$_get](index - 1).dirty)) {
              index = index - 1;
            }
          }
        }
        if (!dart.test(dart.fn(() => {
          if (dart.test(this[_dirtyElements][$any](dart.fn(element => {
            if (element == null) dart.nullFailed(L4, 2811, 41, "element");
            return dart.equals(element[_lifecycleState], framework._ElementLifecycle.active) && dart.test(element.dirty);
          }, ElementTobool())))) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("buildScope missed some dirty elements."), new assertions.ErrorHint.new("This probably indicates that the dirty list should have been resorted but was not."), framework.Element.describeElements("The list of dirty elements at the end of the buildScope call was", this[_dirtyElements])])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 2810, 14, "() {\r\n        if (_dirtyElements.any((Element element) => element._lifecycleState == _ElementLifecycle.active && element.dirty)) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('buildScope missed some dirty elements.'),\r\n            ErrorHint('This probably indicates that the dirty list should have been resorted but was not.'),\r\n            Element.describeElements('The list of dirty elements at the end of the buildScope call was', _dirtyElements),\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
      } finally {
        for (let element of this[_dirtyElements]) {
          if (!dart.test(element[_inDirtyList])) dart.assertFailed(null, L4, 2822, 16, "element._inDirtyList");
          element[_inDirtyList] = false;
        }
        this[_dirtyElements][$clear]();
        this[_scheduledFlushDirtyElements] = false;
        this[_dirtyElementsNeedsResorting] = null;
        developer.Timeline.finishSync();
        if (!dart.test(this[_debugBuilding])) dart.assertFailed(null, L4, 2829, 14, "_debugBuilding");
        if (!dart.test(dart.fn(() => {
          this[_debugBuilding] = false;
          this[_debugStateLockLevel] = dart.notNull(this[_debugStateLockLevel]) - 1;
          if (dart.test(debug$0.debugPrintBuildScope)) print.debugPrint("buildScope finished");
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 2830, 14, "() {\r\n        _debugBuilding = false;\r\n        _debugStateLockLevel -= 1;\r\n        if (debugPrintBuildScope)\r\n          debugPrint('buildScope finished');\r\n        return true;\r\n      }()");
      }
      if (!(dart.notNull(this[_debugStateLockLevel]) >= 0)) dart.assertFailed(null, L4, 2838, 12, "_debugStateLockLevel >= 0");
    }
    [_debugTrackElementThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans](node, key) {
      if (node == null) dart.nullFailed(L4, 2843, 83, "node");
      if (key == null) dart.nullFailed(L4, 2843, 99, "key");
      this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans] == null ? this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans] = new (LinkedMapOfElement$SetOfGlobalKeyOfStateOfStatefulWidget()).new() : null;
      let keys = dart.nullCheck(this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans])[$putIfAbsent](node, dart.fn(() => new (_HashSetOfGlobalKeyOfStateOfStatefulWidget()).new(), VoidToHashSetOfGlobalKeyOfStateOfStatefulWidget()));
      keys.add(key);
    }
    [_debugElementWasRebuilt](node) {
      let t85;
      if (node == null) dart.nullFailed(L4, 2850, 40, "node");
      t85 = this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans];
      t85 == null ? null : t85[$remove](node);
    }
    finalizeTree() {
      developer.Timeline.startSync("Finalize tree", {arguments: debug$.timelineArgumentsIndicatingLandmarkEvent});
      try {
        this.lockState(dart.fn(() => {
          this[_inactiveElements][_unmountAll]();
        }, VoidTovoid()));
        if (!dart.test(dart.fn(() => {
          let t85;
          try {
            framework.GlobalKey._debugVerifyGlobalKeyReservation();
            framework.GlobalKey._debugVerifyIllFatedPopulation();
            if (this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans] != null && dart.test(dart.nullCheck(this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans])[$isNotEmpty])) {
              let keys = new (_HashSetOfGlobalKeyOfStateOfStatefulWidget()).new();
              for (let element of dart.nullCheck(this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans])[$keys]) {
                if (!dart.equals(element[_lifecycleState], framework._ElementLifecycle.defunct)) keys.addAll(dart.nullCheck(dart.nullCheck(this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans])[$_get](element)));
              }
              if (dart.test(keys[$isNotEmpty])) {
                let keyStringCount = new (IdentityMapOfString$int()).new();
                let iter = keys[$map](core.String, dart.fn(key => {
                  if (key == null) dart.nullFailed(L4, 2883, 68, "key");
                  return dart.toString(key);
                }, GlobalKeyOfStateOfStatefulWidgetToString()));
                for (let key of iter) {
                  if (dart.test(keyStringCount[$containsKey](key))) {
                    keyStringCount[$update](key, dart.fn(value => {
                      if (value == null) dart.nullFailed(L4, 2885, 51, "value");
                      return dart.notNull(value) + 1;
                    }, intToint()));
                  } else {
                    keyStringCount[$_set](key, 1);
                  }
                }
                let keyLabels = JSArrayOfString().of([]);
                keyStringCount[$forEach](dart.fn((key, count) => {
                  if (key == null) dart.nullFailed(L4, 2891, 46, "key");
                  if (count == null) dart.nullFailed(L4, 2891, 55, "count");
                  if (count === 1) {
                    keyLabels[$add](key);
                  } else {
                    keyLabels[$add](dart.str(key) + " (" + dart.str(count) + " different affected keys had this toString representation)");
                  }
                }, StringAndintTovoid()));
                let elements = dart.nullCheck(this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans])[$keys];
                let elementStringCount = new (IdentityMapOfString$int()).new();
                let iter$ = elements[$map](core.String, dart.fn(element => {
                  if (element == null) dart.nullFailed(L4, 2900, 74, "element");
                  return dart.toString(element);
                }, ElementToString()));
                for (let element of iter$) {
                  if (dart.test(elementStringCount[$containsKey](element))) {
                    elementStringCount[$update](element, dart.fn(value => {
                      if (value == null) dart.nullFailed(L4, 2902, 59, "value");
                      return dart.notNull(value) + 1;
                    }, intToint()));
                  } else {
                    elementStringCount[$_set](element, 1);
                  }
                }
                let elementLabels = JSArrayOfString().of([]);
                elementStringCount[$forEach](dart.fn((element, count) => {
                  if (element == null) dart.nullFailed(L4, 2908, 50, "element");
                  if (count == null) dart.nullFailed(L4, 2908, 63, "count");
                  if (count === 1) {
                    elementLabels[$add](element);
                  } else {
                    elementLabels[$add](dart.str(element) + " (" + dart.str(count) + " different affected elements had this toString representation)");
                  }
                }, StringAndintTovoid()));
                if (!dart.test(keyLabels[$isNotEmpty])) dart.assertFailed(null, L4, 2915, 22, "keyLabels.isNotEmpty");
                let the = keys[$length] === 1 ? " the" : "";
                let s = keys[$length] === 1 ? "" : "s";
                let were = keys[$length] === 1 ? "was" : "were";
                let their = keys[$length] === 1 ? "its" : "their";
                let respective = elementLabels[$length] === 1 ? "" : " respective";
                let those = keys[$length] === 1 ? "that" : "those";
                let s2 = elementLabels[$length] === 1 ? "" : "s";
                let those2 = elementLabels[$length] === 1 ? "that" : "those";
                let they = elementLabels[$length] === 1 ? "it" : "they";
                let think = elementLabels[$length] === 1 ? "thinks" : "think";
                let are = elementLabels[$length] === 1 ? "is" : "are";
                dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Duplicate GlobalKey" + s + " detected in widget tree."), new assertions.ErrorDescription.new("The following GlobalKey" + s + " " + were + " specified multiple times in the widget tree. This will lead to " + "parts of the widget tree being truncated unexpectedly, because the second time a key is seen, " + "the previous instance is moved to the new location. The key" + s + " " + were + ":\n" + "- " + dart.str(keyLabels[$join]("\n  ")) + "\n" + "This was determined by noticing that after" + the + " widget" + s + " with the above global key" + s + " " + were + " moved " + "out of " + their + respective + " previous parent" + s2 + ", " + those2 + " previous parent" + s2 + " never updated during this frame, meaning " + "that " + they + " either did not update at all or updated before the widget" + s + " " + were + " moved, in either case " + "implying that " + they + " still " + think + " that " + they + " should have a child with " + those + " global key" + s + ".\n" + "The specific parent" + s2 + " that did not update after having one or more children forcibly removed " + "due to GlobalKey reparenting " + are + ":\n" + "- " + dart.str(elementLabels[$join]("\n  ")) + "\nA GlobalKey can only be specified on one widget at a time in the widget tree.")])));
              }
            }
          } finally {
            t85 = this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans];
            t85 == null ? null : t85[$clear]();
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 2870, 14, "() {\r\n        try {\r\n          GlobalKey._debugVerifyGlobalKeyReservation();\r\n          GlobalKey._debugVerifyIllFatedPopulation();\r\n          if (_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans != null &&\r\n              _debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans!.isNotEmpty) {\r\n            final Set<GlobalKey> keys = HashSet<GlobalKey>();\r\n            for (final Element element in _debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans!.keys) {\r\n              if (element._lifecycleState != _ElementLifecycle.defunct)\r\n                keys.addAll(_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans![element]!);\r\n            }\r\n            if (keys.isNotEmpty) {\r\n              final Map<String, int> keyStringCount = HashMap<String, int>();\r\n              for (final String key in keys.map<String>((GlobalKey key) => key.toString())) {\r\n                if (keyStringCount.containsKey(key)) {\r\n                  keyStringCount.update(key, (int value) => value + 1);\r\n                } else {\r\n                  keyStringCount[key] = 1;\r\n                }\r\n              }\r\n              final List<String> keyLabels = <String>[];\r\n              keyStringCount.forEach((String key, int count) {\r\n                if (count == 1) {\r\n                  keyLabels.add(key);\r\n                } else {\r\n                  keyLabels.add('$key ($count different affected keys had this toString representation)');\r\n                }\r\n              });\r\n              final Iterable<Element> elements = _debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans!.keys;\r\n              final Map<String, int> elementStringCount = HashMap<String, int>();\r\n              for (final String element in elements.map<String>((Element element) => element.toString())) {\r\n                if (elementStringCount.containsKey(element)) {\r\n                  elementStringCount.update(element, (int value) => value + 1);\r\n                } else {\r\n                  elementStringCount[element] = 1;\r\n                }\r\n              }\r\n              final List<String> elementLabels = <String>[];\r\n              elementStringCount.forEach((String element, int count) {\r\n                if (count == 1) {\r\n                  elementLabels.add(element);\r\n                } else {\r\n                  elementLabels.add('$element ($count different affected elements had this toString representation)');\r\n                }\r\n              });\r\n              assert(keyLabels.isNotEmpty);\r\n              final String the = keys.length == 1 ? ' the' : '';\r\n              final String s = keys.length == 1 ? '' : 's';\r\n              final String were = keys.length == 1 ? 'was' : 'were';\r\n              final String their = keys.length == 1 ? 'its' : 'their';\r\n              final String respective = elementLabels.length == 1 ? '' : ' respective';\r\n              final String those = keys.length == 1 ? 'that' : 'those';\r\n              final String s2 = elementLabels.length == 1 ? '' : 's';\r\n              final String those2 = elementLabels.length == 1 ? 'that' : 'those';\r\n              final String they = elementLabels.length == 1 ? 'it' : 'they';\r\n              final String think = elementLabels.length == 1 ? 'thinks' : 'think';\r\n              final String are = elementLabels.length == 1 ? 'is' : 'are';\r\n              // TODO(jacobr): make this error more structured to better expose which widgets had problems.\r\n              throw FlutterError.fromParts(<DiagnosticsNode>[\r\n                ErrorSummary('Duplicate GlobalKey$s detected in widget tree.'),\r\n                // TODO(jacobr): refactor this code so the elements are clickable\r\n                // in GUI debug tools.\r\n                ErrorDescription(\r\n                  'The following GlobalKey$s $were specified multiple times in the widget tree. This will lead to '\r\n                  'parts of the widget tree being truncated unexpectedly, because the second time a key is seen, '\r\n                  'the previous instance is moved to the new location. The key$s $were:\\n'\r\n                  '- ${keyLabels.join(\"\\n  \")}\\n'\r\n                  'This was determined by noticing that after$the widget$s with the above global key$s $were moved '\r\n                  'out of $their$respective previous parent$s2, $those2 previous parent$s2 never updated during this frame, meaning '\r\n                  'that $they either did not update at all or updated before the widget$s $were moved, in either case '\r\n                  'implying that $they still $think that $they should have a child with $those global key$s.\\n'\r\n                  'The specific parent$s2 that did not update after having one or more children forcibly removed '\r\n                  'due to GlobalKey reparenting $are:\\n'\r\n                  '- ${elementLabels.join(\"\\n  \")}'\r\n                  '\\nA GlobalKey can only be specified on one widget at a time in the widget tree.'\r\n                ),\r\n              ]);\r\n            }\r\n          }\r\n        } finally {\r\n          _debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans?.clear();\r\n        }\r\n        return true;\r\n      }()");
      } catch (e$) {
        let e = dart.getThrown(e$);
        let stack = dart.stackTrace(e$);
        if (core.Object.is(e)) {
          framework._debugReportException(new assertions.ErrorSummary.new("while finalizing the widget tree"), e, stack);
        } else
          throw e$;
      } finally {
        developer.Timeline.finishSync();
      }
    }
    reassemble(root) {
      if (root == null) dart.nullFailed(L4, 2970, 27, "root");
      developer.Timeline.startSync("Dirty Element Tree");
      try {
        if (!(root[_parent] == null)) dart.assertFailed(null, L4, 2973, 14, "root._parent == null");
        if (!dart.equals(root.owner, this)) dart.assertFailed(null, L4, 2974, 14, "root.owner == this");
        root.reassemble();
      } finally {
        developer.Timeline.finishSync();
      }
    }
  };
  (framework.BuildOwner.new = function(opts) {
    let onBuildScheduled = opts && 'onBuildScheduled' in opts ? opts.onBuildScheduled : null;
    this[_inactiveElements] = new framework._InactiveElements.new();
    this[_dirtyElements] = JSArrayOfElement().of([]);
    this[_scheduledFlushDirtyElements] = false;
    this[_dirtyElementsNeedsResorting] = null;
    this[focusManager] = new focus_manager.FocusManager.new();
    this[_debugStateLockLevel] = 0;
    this[_debugBuilding] = false;
    this[_debugCurrentBuildTarget] = null;
    this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans] = null;
    this[onBuildScheduled$] = onBuildScheduled;
    ;
  }).prototype = framework.BuildOwner.prototype;
  dart.addTypeTests(framework.BuildOwner);
  dart.addTypeCaches(framework.BuildOwner);
  dart.setMethodSignature(framework.BuildOwner, () => ({
    __proto__: dart.getMethods(framework.BuildOwner.__proto__),
    scheduleBuildFor: dart.fnType(dart.void, [framework.Element]),
    lockState: dart.fnType(dart.void, [dart.fnType(dart.void, [])]),
    buildScope: dart.fnType(dart.void, [framework.Element], [dart.nullable(dart.fnType(dart.void, []))]),
    [_debugTrackElementThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans]: dart.fnType(dart.void, [framework.Element, framework.GlobalKey$(framework.State$(framework.StatefulWidget))]),
    [_debugElementWasRebuilt]: dart.fnType(dart.void, [framework.Element]),
    finalizeTree: dart.fnType(dart.void, []),
    reassemble: dart.fnType(dart.void, [framework.Element])
  }));
  dart.setGetterSignature(framework.BuildOwner, () => ({
    __proto__: dart.getGetters(framework.BuildOwner.__proto__),
    [_debugIsInBuildScope]: core.bool,
    [_debugStateLocked]: core.bool,
    debugBuilding: core.bool
  }));
  dart.setLibraryUri(framework.BuildOwner, L5);
  dart.setFieldSignature(framework.BuildOwner, () => ({
    __proto__: dart.getFields(framework.BuildOwner.__proto__),
    onBuildScheduled: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
    [_inactiveElements]: dart.finalFieldType(framework._InactiveElements),
    [_dirtyElements]: dart.finalFieldType(core.List$(framework.Element)),
    [_scheduledFlushDirtyElements]: dart.fieldType(core.bool),
    [_dirtyElementsNeedsResorting]: dart.fieldType(dart.nullable(core.bool)),
    focusManager: dart.fieldType(focus_manager.FocusManager),
    [_debugStateLockLevel]: dart.fieldType(core.int),
    [_debugBuilding]: dart.fieldType(core.bool),
    [_debugCurrentBuildTarget]: dart.fieldType(dart.nullable(framework.Element)),
    [_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans]: dart.fieldType(dart.nullable(core.Map$(framework.Element, core.Set$(framework.GlobalKey$(framework.State$(framework.StatefulWidget))))))
  }));
  framework._ElementDiagnosticableTreeNode = class _ElementDiagnosticableTreeNode extends diagnostics$.DiagnosticableTreeNode {
    toJsonMap(delegate) {
      if (delegate == null) dart.nullFailed(L4, 4407, 67, "delegate");
      let json = super.toJsonMap(delegate);
      let element = framework.Element.as(this.value);
      json[$_set]("widgetRuntimeType", dart.toString(dart.runtimeType(element.widget)));
      json[$_set]("stateful", this.stateful);
      return json;
    }
  };
  (framework._ElementDiagnosticableTreeNode.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    let value = opts && 'value' in opts ? opts.value : null;
    if (value == null) dart.nullFailed(L4, 4395, 22, "value");
    let style = opts && 'style' in opts ? opts.style : null;
    let stateful = opts && 'stateful' in opts ? opts.stateful : false;
    if (stateful == null) dart.nullFailed(L4, 4397, 10, "stateful");
    this.stateful = stateful;
    framework._ElementDiagnosticableTreeNode.__proto__.new.call(this, {name: name, value: value, style: style});
    ;
  }).prototype = framework._ElementDiagnosticableTreeNode.prototype;
  dart.addTypeTests(framework._ElementDiagnosticableTreeNode);
  dart.addTypeCaches(framework._ElementDiagnosticableTreeNode);
  dart.setLibraryUri(framework._ElementDiagnosticableTreeNode, L5);
  dart.setFieldSignature(framework._ElementDiagnosticableTreeNode, () => ({
    __proto__: dart.getFields(framework._ElementDiagnosticableTreeNode.__proto__),
    stateful: dart.finalFieldType(core.bool)
  }));
  var _flutterError = dart.privateName(framework, "_flutterError");
  var C1101;
  var C1102;
  var C1100;
  var C1099;
  var message$ = dart.privateName(framework, "ErrorWidget.message");
  var C1103;
  framework.ErrorWidget = class ErrorWidget extends framework.LeafRenderObjectWidget {
    get message() {
      return this[message$];
    }
    set message(value) {
      super.message = value;
    }
    static _defaultErrorWidgetBuilder(details) {
      if (details == null) dart.nullFailed(L4, 4532, 64, "details");
      let message = "";
      if (!dart.test(dart.fn(() => {
        message = dart.notNull(framework.ErrorWidget._stringify(details.exception)) + "\nSee also: https://flutter.dev/docs/testing/errors";
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 4534, 12, "() {\r\n      message = _stringify(details.exception) + '\\nSee also: https://flutter.dev/docs/testing/errors';\r\n      return true;\r\n    }()");
      let exception = details.exception;
      return new framework.ErrorWidget.withDetails({message: message, error: assertions.FlutterError.is(exception) ? exception : null, $creationLocationd_0dea112b090073317d4: C1099 || CT.C1099});
    }
    static _stringify(exception) {
      try {
        return dart.toString(exception);
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
        } else
          throw e$;
      }
      return "Error";
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L4, 4556, 45, "context");
      return new error.RenderErrorBox.new(this.message);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L4, 4559, 56, "properties");
      super.debugFillProperties(properties);
      if (this[_flutterError] == null)
        properties.add(new diagnostics$.StringProperty.new("message", this.message, {quoted: false}));
      else
        properties.add(dart.nullCheck(this[_flutterError]).toDiagnosticsNode({style: diagnostics$.DiagnosticsTreeStyle.whitespace}));
    }
  };
  (framework.ErrorWidget.new = function(exception, opts) {
    if (exception == null) dart.nullFailed(L4, 4488, 22, "exception");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[message$] = framework.ErrorWidget._stringify(exception);
    this[_flutterError] = assertions.FlutterError.is(exception) ? exception : null;
    framework.ErrorWidget.__proto__.new.call(this, {key: new framework.UniqueKey.new(), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.ErrorWidget.prototype;
  (framework.ErrorWidget.withDetails = function(opts) {
    let message = opts && 'message' in opts ? opts.message : "";
    if (message == null) dart.nullFailed(L4, 4497, 34, "message");
    let error = opts && 'error' in opts ? opts.error : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[message$] = message;
    this[_flutterError] = error;
    framework.ErrorWidget.__proto__.new.call(this, {key: new framework.UniqueKey.new(), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.ErrorWidget.prototype;
  dart.addTypeTests(framework.ErrorWidget);
  dart.addTypeCaches(framework.ErrorWidget);
  dart.setMethodSignature(framework.ErrorWidget, () => ({
    __proto__: dart.getMethods(framework.ErrorWidget.__proto__),
    createRenderObject: dart.fnType(box$.RenderBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(framework.ErrorWidget, L5);
  dart.setFieldSignature(framework.ErrorWidget, () => ({
    __proto__: dart.getFields(framework.ErrorWidget.__proto__),
    message: dart.finalFieldType(core.String),
    [_flutterError]: dart.finalFieldType(dart.nullable(assertions.FlutterError))
  }));
  dart.defineLazy(framework.ErrorWidget, {
    /*framework.ErrorWidget.builder*/get builder() {
      return C1103 || CT.C1103;
    },
    set builder(_) {}
  }, false);
  framework.StatelessElement = class StatelessElement extends framework.ComponentElement {
    get widget() {
      return framework.StatelessWidget.as(super.widget);
    }
    build() {
      return this.widget.build(this);
    }
    update(newWidget) {
      framework.StatelessWidget.as(newWidget);
      if (newWidget == null) dart.nullFailed(L4, 4761, 31, "newWidget");
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, L4, 4763, 12, "widget == newWidget");
      this[_dirty] = true;
      this.rebuild();
    }
  };
  (framework.StatelessElement.new = function(widget) {
    if (widget == null) dart.nullFailed(L4, 4752, 36, "widget");
    framework.StatelessElement.__proto__.new.call(this, widget);
    ;
  }).prototype = framework.StatelessElement.prototype;
  dart.addTypeTests(framework.StatelessElement);
  dart.addTypeCaches(framework.StatelessElement);
  dart.setMethodSignature(framework.StatelessElement, () => ({
    __proto__: dart.getMethods(framework.StatelessElement.__proto__),
    build: dart.fnType(framework.Widget, [])
  }));
  dart.setGetterSignature(framework.StatelessElement, () => ({
    __proto__: dart.getGetters(framework.StatelessElement.__proto__),
    widget: framework.StatelessWidget
  }));
  dart.setLibraryUri(framework.StatelessElement, L5);
  var _didChangeDependencies = dart.privateName(framework, "_didChangeDependencies");
  var state = dart.privateName(framework, "StatefulElement.state");
  framework.StatefulElement = class StatefulElement extends framework.ComponentElement {
    get state() {
      return this[state];
    }
    set state(value) {
      super.state = value;
    }
    build() {
      return this.state.build(this);
    }
    reassemble() {
      this.state.reassemble();
      super.reassemble();
    }
    [_firstBuild]() {
      if (!dart.equals(this.state[_debugLifecycleState], framework._StateLifecycle.created)) dart.assertFailed(null, L4, 4818, 12, "state._debugLifecycleState == _StateLifecycle.created");
      try {
        this[_debugSetAllowIgnoredCallsToMarkNeedsBuild](true);
        let debugCheckForReturnedFuture = this.state.initState();
        if (!dart.test(dart.fn(() => {
          if (async.Future.is(debugCheckForReturnedFuture)) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(dart.runtimeType(this.state)) + ".initState() returned a Future."), new assertions.ErrorDescription.new("State.initState() must be a void method without an `async` keyword."), new assertions.ErrorHint.new("Rather than awaiting on asynchronous work directly inside of initState, " + "call a separate method to do this work without awaiting it.")])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 4822, 14, "() {\r\n        if (debugCheckForReturnedFuture is Future) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('${state.runtimeType}.initState() returned a Future.'),\r\n            ErrorDescription('State.initState() must be a void method without an `async` keyword.'),\r\n            ErrorHint(\r\n              'Rather than awaiting on asynchronous work directly inside of initState, '\r\n              'call a separate method to do this work without awaiting it.'\r\n            ),\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
      } finally {
        this[_debugSetAllowIgnoredCallsToMarkNeedsBuild](false);
      }
      if (!dart.test(dart.fn(() => {
        this.state[_debugLifecycleState] = framework._StateLifecycle.initialized;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 4838, 12, "() {\r\n      state._debugLifecycleState = _StateLifecycle.initialized;\r\n      return true;\r\n    }()");
      this.state.didChangeDependencies();
      if (!dart.test(dart.fn(() => {
        this.state[_debugLifecycleState] = framework._StateLifecycle.ready;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 4843, 12, "() {\r\n      state._debugLifecycleState = _StateLifecycle.ready;\r\n      return true;\r\n    }()");
      super[_firstBuild]();
    }
    performRebuild() {
      if (dart.test(this[_didChangeDependencies])) {
        this.state.didChangeDependencies();
        this[_didChangeDependencies] = false;
      }
      super.performRebuild();
    }
    update(newWidget) {
      framework.StatefulWidget.as(newWidget);
      if (newWidget == null) dart.nullFailed(L4, 4860, 30, "newWidget");
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, L4, 4862, 12, "widget == newWidget");
      let oldWidget = dart.nullCheck(this.state[_widget]);
      this[_dirty] = true;
      this.state[_widget] = framework.StatefulWidget.as(this.widget);
      try {
        this[_debugSetAllowIgnoredCallsToMarkNeedsBuild](true);
        let debugCheckForReturnedFuture = this.state.didUpdateWidget(oldWidget);
        if (!dart.test(dart.fn(() => {
          if (async.Future.is(debugCheckForReturnedFuture)) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(dart.runtimeType(this.state)) + ".didUpdateWidget() returned a Future."), new assertions.ErrorDescription.new("State.didUpdateWidget() must be a void method without an `async` keyword."), new assertions.ErrorHint.new("Rather than awaiting on asynchronous work directly inside of didUpdateWidget, " + "call a separate method to do this work without awaiting it.")])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L4, 4872, 14, "() {\r\n        if (debugCheckForReturnedFuture is Future) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('${state.runtimeType}.didUpdateWidget() returned a Future.'),\r\n            ErrorDescription( 'State.didUpdateWidget() must be a void method without an `async` keyword.'),\r\n            ErrorHint(\r\n              'Rather than awaiting on asynchronous work directly inside of didUpdateWidget, '\r\n              'call a separate method to do this work without awaiting it.'\r\n            ),\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
      } finally {
        this[_debugSetAllowIgnoredCallsToMarkNeedsBuild](false);
      }
      this.rebuild();
    }
    activate() {
      super.activate();
      if (!dart.equals(this[_lifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, L4, 4897, 12, "_lifecycleState == _ElementLifecycle.active");
      this.markNeedsBuild();
    }
    deactivate() {
      this.state.deactivate();
      super.deactivate();
    }
    unmount() {
      super.unmount();
      this.state.dispose();
      if (!dart.test(dart.fn(() => {
        if (dart.equals(this.state[_debugLifecycleState], framework._StateLifecycle.defunct)) return true;
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(dart.runtimeType(this.state)) + ".dispose failed to call super.dispose."), new assertions.ErrorDescription.new("dispose() implementations must always call their superclass dispose() method, to ensure " + "that all the resources used by the widget are fully released.")])));
      }, VoidTobool())())) dart.assertFailed(null, L4, 4911, 12, "() {\r\n      if (state._debugLifecycleState == _StateLifecycle.defunct)\r\n        return true;\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('${state.runtimeType}.dispose failed to call super.dispose.'),\r\n        ErrorDescription(\r\n          'dispose() implementations must always call their superclass dispose() method, to ensure '\r\n         'that all the resources used by the widget are fully released.'\r\n        ),\r\n      ]);\r\n    }()");
      this.state[_element] = null;
    }
    inheritFromElement(ancestor, opts) {
      if (ancestor == null) dart.nullFailed(L4, 4931, 46, "ancestor");
      let aspect = opts && 'aspect' in opts ? opts.aspect : null;
      return this.dependOnInheritedElement(ancestor, {aspect: aspect});
    }
    dependOnInheritedElement(ancestor, opts) {
      if (ancestor == null) dart.nullFailed(L4, 4936, 52, "ancestor");
      let aspect = opts && 'aspect' in opts ? opts.aspect : null;
      if (!(ancestor != null)) dart.assertFailed(null, L4, 4937, 12, "ancestor != null");
      if (!dart.test(dart.fn(() => {
        let targetType = dart.runtimeType(ancestor.widget);
        if (dart.equals(this.state[_debugLifecycleState], framework._StateLifecycle.created)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("dependOnInheritedWidgetOfExactType<" + dart.str(targetType) + ">() or dependOnInheritedElement() was called before " + dart.str(dart.runtimeType(this.state)) + ".initState() completed."), new assertions.ErrorDescription.new("When an inherited widget changes, for example if the value of Theme.of() changes, " + "its dependent widgets are rebuilt. If the dependent widget's reference to " + "the inherited widget is in a constructor or an initState() method, " + "then the rebuilt dependent widget will not reflect the changes in the " + "inherited widget."), new assertions.ErrorHint.new("Typically references to inherited widgets should occur in widget build() methods. Alternatively, " + "initialization based on inherited widgets can be placed in the didChangeDependencies method, which " + "is called after initState and whenever the dependencies change thereafter.")])));
        }
        if (dart.equals(this.state[_debugLifecycleState], framework._StateLifecycle.defunct)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("dependOnInheritedWidgetOfExactType<" + dart.str(targetType) + ">() or dependOnInheritedElement() was called after dispose(): " + dart.str(this)), new assertions.ErrorDescription.new("This error happens if you call dependOnInheritedWidgetOfExactType() on the " + "BuildContext for a widget that no longer appears in the widget tree " + "(e.g., whose parent widget no longer includes the widget in its " + "build). This error can occur when code calls " + "dependOnInheritedWidgetOfExactType() from a timer or an animation callback."), new assertions.ErrorHint.new("The preferred solution is to cancel the timer or stop listening to the " + "animation in the dispose() callback. Another solution is to check the " + "\"mounted\" property of this object before calling " + "dependOnInheritedWidgetOfExactType() to ensure the object is still in the " + "tree."), new assertions.ErrorHint.new("This error might indicate a memory leak if " + "dependOnInheritedWidgetOfExactType() is being called because another object " + "is retaining a reference to this State object after it has been " + "removed from the tree. To avoid memory leaks, consider breaking the " + "reference to this object during dispose().")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L4, 4938, 12, "() {\r\n      final Type targetType = ancestor.widget.runtimeType;\r\n      if (state._debugLifecycleState == _StateLifecycle.created) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('dependOnInheritedWidgetOfExactType<$targetType>() or dependOnInheritedElement() was called before ${state.runtimeType}.initState() completed.'),\r\n          ErrorDescription(\r\n            'When an inherited widget changes, for example if the value of Theme.of() changes, '\r\n            \"its dependent widgets are rebuilt. If the dependent widget's reference to \"\r\n            'the inherited widget is in a constructor or an initState() method, '\r\n            'then the rebuilt dependent widget will not reflect the changes in the '\r\n            'inherited widget.',\r\n          ),\r\n          ErrorHint(\r\n            'Typically references to inherited widgets should occur in widget build() methods. Alternatively, '\r\n            'initialization based on inherited widgets can be placed in the didChangeDependencies method, which '\r\n            'is called after initState and whenever the dependencies change thereafter.'\r\n          ),\r\n        ]);\r\n      }\r\n      if (state._debugLifecycleState == _StateLifecycle.defunct) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('dependOnInheritedWidgetOfExactType<$targetType>() or dependOnInheritedElement() was called after dispose(): $this'),\r\n          ErrorDescription(\r\n            'This error happens if you call dependOnInheritedWidgetOfExactType() on the '\r\n            'BuildContext for a widget that no longer appears in the widget tree '\r\n            '(e.g., whose parent widget no longer includes the widget in its '\r\n            'build). This error can occur when code calls '\r\n            'dependOnInheritedWidgetOfExactType() from a timer or an animation callback.'\r\n          ),\r\n          ErrorHint(\r\n            'The preferred solution is to cancel the timer or stop listening to the '\r\n            'animation in the dispose() callback. Another solution is to check the '\r\n            '\"mounted\" property of this object before calling '\r\n            'dependOnInheritedWidgetOfExactType() to ensure the object is still in the '\r\n            'tree.'\r\n          ),\r\n          ErrorHint(\r\n            'This error might indicate a memory leak if '\r\n            'dependOnInheritedWidgetOfExactType() is being called because another object '\r\n            'is retaining a reference to this State object after it has been '\r\n            'removed from the tree. To avoid memory leaks, consider breaking the '\r\n            'reference to this object during dispose().'\r\n          ),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      return super.dependOnInheritedElement(framework.InheritedElement.as(ancestor), {aspect: aspect});
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this[_didChangeDependencies] = true;
    }
    toDiagnosticsNode(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let style = opts && 'style' in opts ? opts.style : null;
      return new framework._ElementDiagnosticableTreeNode.new({name: name, value: this, style: style, stateful: true});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L4, 5016, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfStateOfStatefulWidget()).new("state", this.state, {defaultValue: null}));
    }
  };
  (framework.StatefulElement.new = function(widget) {
    if (widget == null) dart.nullFailed(L4, 4772, 34, "widget");
    this[_didChangeDependencies] = false;
    this[state] = widget.createState();
    framework.StatefulElement.__proto__.new.call(this, widget);
    if (!dart.test(dart.fn(() => {
      if (!dart.test(this.state[_debugTypesAreRight](widget))) {
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("StatefulWidget.createState must return a subtype of State<" + dart.str(dart.runtimeType(widget)) + ">"), new assertions.ErrorDescription.new("The createState function for " + dart.str(dart.runtimeType(widget)) + " returned a state " + "of type " + dart.str(dart.runtimeType(this.state)) + ", which is not a subtype of " + "State<" + dart.str(dart.runtimeType(widget)) + ">, violating the contract for createState.")])));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L4, 4775, 12, "() {\r\n      if (!state._debugTypesAreRight(widget)) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('StatefulWidget.createState must return a subtype of State<${widget.runtimeType}>'),\r\n          ErrorDescription(\r\n            'The createState function for ${widget.runtimeType} returned a state '\r\n            'of type ${state.runtimeType}, which is not a subtype of '\r\n            'State<${widget.runtimeType}>, violating the contract for createState.'\r\n          ),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
    if (!(this.state[_element] == null)) dart.assertFailed(null, L4, 4788, 12, "state._element == null");
    this.state[_element] = this;
    if (!(this.state[_widget] == null)) dart.assertFailed("The createState function for " + dart.str(widget) + " returned an old or invalid state " + "instance: " + dart.str(this.state[_widget]) + ", which is not null, violating the contract " + "for createState.", L4, 4791, 7, "state._widget == null");
    this.state[_widget] = widget;
    if (!dart.equals(this.state[_debugLifecycleState], framework._StateLifecycle.created)) dart.assertFailed(null, L4, 4797, 12, "state._debugLifecycleState == _StateLifecycle.created");
  }).prototype = framework.StatefulElement.prototype;
  dart.addTypeTests(framework.StatefulElement);
  dart.addTypeCaches(framework.StatefulElement);
  dart.setMethodSignature(framework.StatefulElement, () => ({
    __proto__: dart.getMethods(framework.StatefulElement.__proto__),
    build: dart.fnType(framework.Widget, []),
    inheritFromElement: dart.fnType(framework.InheritedWidget, [framework.Element], {aspect: dart.nullable(core.Object)}, {}),
    dependOnInheritedElement: dart.fnType(framework.InheritedWidget, [framework.Element], {aspect: dart.nullable(core.Object)}, {})
  }));
  dart.setLibraryUri(framework.StatefulElement, L5);
  dart.setFieldSignature(framework.StatefulElement, () => ({
    __proto__: dart.getFields(framework.StatefulElement.__proto__),
    state: dart.finalFieldType(framework.State$(framework.StatefulWidget)),
    [_didChangeDependencies]: dart.fieldType(core.bool)
  }));
  var _applyParentData = dart.privateName(framework, "_applyParentData");
  const _is_ParentDataElement_default = Symbol('_is_ParentDataElement_default');
  framework.ParentDataElement$ = dart.generic(T => {
    var ParentDataWidgetOfT = () => (ParentDataWidgetOfT = dart.constFn(framework.ParentDataWidget$(T)))();
    class ParentDataElement extends framework.ProxyElement {
      get widget() {
        return ParentDataWidgetOfT().as(super.widget);
      }
      [_applyParentData](widget) {
        if (widget == null) dart.nullFailed(L4, 5072, 45, "widget");
        function applyParentDataToChild(child) {
          if (child == null) dart.nullFailed(L4, 5073, 41, "child");
          if (framework.RenderObjectElement.is(child)) {
            child[_updateParentData](widget);
          } else {
            if (!!ParentDataElementOfParentData().is(child)) dart.assertFailed(null, L4, 5077, 16, "child is! ParentDataElement<ParentData>");
            child.visitChildren(applyParentDataToChild);
          }
        }
        dart.fn(applyParentDataToChild, ElementTovoid());
        this.visitChildren(applyParentDataToChild);
      }
      applyWidgetOutOfTurn(newWidget) {
        ParentDataWidgetOfT().as(newWidget);
        if (newWidget == null) dart.nullFailed(L4, 5116, 49, "newWidget");
        if (!(newWidget != null)) dart.assertFailed(null, L4, 5117, 12, "newWidget != null");
        if (!dart.test(newWidget.debugCanApplyOutOfTurn())) dart.assertFailed(null, L4, 5118, 12, "newWidget.debugCanApplyOutOfTurn()");
        if (!dart.equals(newWidget.child, this.widget.child)) dart.assertFailed(null, L4, 5119, 12, "newWidget.child == widget.child");
        this[_applyParentData](newWidget);
      }
      notifyClients(oldWidget) {
        ParentDataWidgetOfT().as(oldWidget);
        if (oldWidget == null) dart.nullFailed(L4, 5124, 42, "oldWidget");
        this[_applyParentData](this.widget);
      }
    }
    (ParentDataElement.new = function(widget) {
      if (widget == null) dart.nullFailed(L4, 5067, 41, "widget");
      ParentDataElement.__proto__.new.call(this, widget);
      ;
    }).prototype = ParentDataElement.prototype;
    dart.addTypeTests(ParentDataElement);
    ParentDataElement.prototype[_is_ParentDataElement_default] = true;
    dart.addTypeCaches(ParentDataElement);
    dart.setMethodSignature(ParentDataElement, () => ({
      __proto__: dart.getMethods(ParentDataElement.__proto__),
      [_applyParentData]: dart.fnType(dart.void, [framework.ParentDataWidget$(T)]),
      applyWidgetOutOfTurn: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      notifyClients: dart.fnType(dart.void, [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(ParentDataElement, () => ({
      __proto__: dart.getGetters(ParentDataElement.__proto__),
      widget: framework.ParentDataWidget$(T)
    }));
    dart.setLibraryUri(ParentDataElement, L5);
    return ParentDataElement;
  });
  framework.ParentDataElement = framework.ParentDataElement$();
  dart.addTypeTests(framework.ParentDataElement, _is_ParentDataElement_default);
  framework.RootRenderObjectElement = class RootRenderObjectElement extends framework.RenderObjectElement {
    assignOwner(owner) {
      if (owner == null) dart.nullFailed(L4, 6096, 31, "owner");
      this[_owner$0] = owner;
    }
    mount(parent, newSlot) {
      if (!(parent == null)) dart.assertFailed(null, L4, 6103, 12, "parent == null");
      if (!(newSlot == null)) dart.assertFailed(null, L4, 6104, 12, "newSlot == null");
      super.mount(parent, newSlot);
    }
  };
  (framework.RootRenderObjectElement.new = function(widget) {
    if (widget == null) dart.nullFailed(L4, 6084, 46, "widget");
    framework.RootRenderObjectElement.__proto__.new.call(this, widget);
    ;
  }).prototype = framework.RootRenderObjectElement.prototype;
  dart.addTypeTests(framework.RootRenderObjectElement);
  dart.addTypeCaches(framework.RootRenderObjectElement);
  dart.setMethodSignature(framework.RootRenderObjectElement, () => ({
    __proto__: dart.getMethods(framework.RootRenderObjectElement.__proto__),
    assignOwner: dart.fnType(dart.void, [framework.BuildOwner])
  }));
  dart.setLibraryUri(framework.RootRenderObjectElement, L5);
  framework.LeafRenderObjectElement = class LeafRenderObjectElement extends framework.RenderObjectElement {
    forgetChild(child) {
      if (child == null) dart.nullFailed(L4, 6115, 28, "child");
      if (!false) dart.assertFailed(null, L4, 6116, 12, "false");
      super.forgetChild(child);
    }
    insertRenderObjectChild(child, slot) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L4, 6121, 45, "child");
      if (!false) dart.assertFailed(null, L4, 6122, 12, "false");
    }
    moveRenderObjectChild(child, oldSlot, newSlot) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L4, 6126, 43, "child");
      if (!false) dart.assertFailed(null, L4, 6127, 12, "false");
    }
    removeRenderObjectChild(child, slot) {
      object$.RenderObject.as(child);
      if (child == null) dart.nullFailed(L4, 6131, 45, "child");
      if (!false) dart.assertFailed(null, L4, 6132, 12, "false");
    }
    debugDescribeChildren() {
      return this.widget.debugDescribeChildren();
    }
  };
  (framework.LeafRenderObjectElement.new = function(widget) {
    if (widget == null) dart.nullFailed(L4, 6112, 50, "widget");
    framework.LeafRenderObjectElement.__proto__.new.call(this, widget);
    ;
  }).prototype = framework.LeafRenderObjectElement.prototype;
  dart.addTypeTests(framework.LeafRenderObjectElement);
  dart.addTypeCaches(framework.LeafRenderObjectElement);
  dart.setLibraryUri(framework.LeafRenderObjectElement, L5);
  var element$ = dart.privateName(framework, "DebugCreator.element");
  framework.DebugCreator = class DebugCreator extends core.Object {
    get element() {
      return this[element$];
    }
    set element(value) {
      super.element = value;
    }
    toString() {
      return this.element.debugGetCreatorChain(12);
    }
  };
  (framework.DebugCreator.new = function(element) {
    if (element == null) dart.nullFailed(L4, 6313, 21, "element");
    this[element$] = element;
    ;
  }).prototype = framework.DebugCreator.prototype;
  dart.addTypeTests(framework.DebugCreator);
  dart.addTypeCaches(framework.DebugCreator);
  dart.setLibraryUri(framework.DebugCreator, L5);
  dart.setFieldSignature(framework.DebugCreator, () => ({
    __proto__: dart.getFields(framework.DebugCreator.__proto__),
    element: dart.finalFieldType(framework.Element)
  }));
  dart.defineExtensionMethods(framework.DebugCreator, ['toString']);
  const _is_IndexedSlot_default = Symbol('_is_IndexedSlot_default');
  var value$2 = dart.privateName(framework, "IndexedSlot.value");
  var index$ = dart.privateName(framework, "IndexedSlot.index");
  framework.IndexedSlot$ = dart.generic(T => {
    class IndexedSlot extends core.Object {
      get value() {
        return this[value$2];
      }
      set value(value) {
        super.value = value;
      }
      get index() {
        return this[index$];
      }
      set index(value) {
        super.index = value;
      }
      _equals(other) {
        if (other == null) return false;
        if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
        return framework.IndexedSlot.is(other) && this.index == other.index && dart.equals(this.value, other.value);
      }
      get hashCode() {
        return ui.hashValues(this.index, this.value);
      }
    }
    (IndexedSlot.new = function(index, value) {
      if (index == null) dart.nullFailed(L4, 6355, 26, "index");
      this[index$] = index;
      this[value$2] = value;
      ;
    }).prototype = IndexedSlot.prototype;
    dart.addTypeTests(IndexedSlot);
    IndexedSlot.prototype[_is_IndexedSlot_default] = true;
    dart.addTypeCaches(IndexedSlot);
    dart.setLibraryUri(IndexedSlot, L5);
    dart.setFieldSignature(IndexedSlot, () => ({
      __proto__: dart.getFields(IndexedSlot.__proto__),
      value: dart.finalFieldType(T),
      index: dart.finalFieldType(core.int)
    }));
    dart.defineExtensionMethods(IndexedSlot, ['_equals']);
    dart.defineExtensionAccessors(IndexedSlot, ['hashCode']);
    return IndexedSlot;
  });
  framework.IndexedSlot = framework.IndexedSlot$();
  dart.addTypeTests(framework.IndexedSlot, _is_IndexedSlot_default);
  var C1104;
  framework._NullElement = class _NullElement extends framework.Element {
    get debugDoingBuild() {
      return dart.throw(new core.UnimplementedError.new());
    }
    performRebuild() {
    }
  };
  (framework._NullElement.new = function() {
    framework._NullElement.__proto__.new.call(this, new framework._NullWidget.new({$creationLocationd_0dea112b090073317d4: C1104 || CT.C1104}));
    ;
  }).prototype = framework._NullElement.prototype;
  dart.addTypeTests(framework._NullElement);
  dart.addTypeCaches(framework._NullElement);
  dart.setMethodSignature(framework._NullElement, () => ({
    __proto__: dart.getMethods(framework._NullElement.__proto__),
    performRebuild: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(framework._NullElement, () => ({
    __proto__: dart.getGetters(framework._NullElement.__proto__),
    debugDoingBuild: core.bool
  }));
  dart.setLibraryUri(framework._NullElement, L5);
  dart.defineLazy(framework._NullElement, {
    /*framework._NullElement.instance*/get instance() {
      return new framework._NullElement.new();
    },
    set instance(_) {}
  }, false);
  framework._NullWidget = class _NullWidget extends framework.Widget {
    createElement() {
      return dart.throw(new core.UnimplementedError.new());
    }
  };
  (framework._NullWidget.new = function(opts) {
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    framework._NullWidget.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework._NullWidget.prototype;
  dart.addTypeTests(framework._NullWidget);
  dart.addTypeCaches(framework._NullWidget);
  dart.setMethodSignature(framework._NullWidget, () => ({
    __proto__: dart.getMethods(framework._NullWidget.__proto__),
    createElement: dart.fnType(framework.Element, [])
  }));
  dart.setLibraryUri(framework._NullWidget, L5);
  framework._debugReportException = function _debugReportException(context, exception, stack, opts) {
    if (context == null) dart.nullFailed(L4, 6323, 19, "context");
    if (exception == null) dart.nullFailed(L4, 6324, 10, "exception");
    let informationCollector = opts && 'informationCollector' in opts ? opts.informationCollector : null;
    let details = new assertions.FlutterErrorDetails.new({exception: exception, stack: stack, library: "widgets library", context: context, informationCollector: informationCollector});
    assertions.FlutterError.reportError(details);
    return details;
  };
  debug$0._firstNonUniqueKey = function _firstNonUniqueKey(widgets) {
    if (widgets == null) dart.nullFailed(L109, 112, 42, "widgets");
    let keySet = new (_HashSetOfKey()).new();
    for (let widget of widgets) {
      if (!(widget != null)) dart.assertFailed(null, L109, 115, 12, "widget != null");
      if (widget.key == null) continue;
      if (!dart.test(keySet.add(dart.nullCheck(widget.key)))) return widget.key;
    }
    return null;
  };
  debug$0.debugChildrenHaveDuplicateKeys = function debugChildrenHaveDuplicateKeys(parent, children) {
    if (parent == null) dart.nullFailed(L109, 138, 44, "parent");
    if (children == null) dart.nullFailed(L109, 138, 69, "children");
    if (!dart.test(dart.fn(() => {
      let nonUniqueKey = debug$0._firstNonUniqueKey(children);
      if (nonUniqueKey != null) {
        dart.throw(assertions.FlutterError.new("Duplicate keys found.\n" + "If multiple keyed nodes exist as children of another node, they must have unique keys.\n" + dart.str(parent) + " has multiple children with key " + dart.str(nonUniqueKey) + "."));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L109, 139, 10, "() {\r\n    final Key? nonUniqueKey = _firstNonUniqueKey(children);\r\n    if (nonUniqueKey != null) {\r\n      throw FlutterError(\r\n        'Duplicate keys found.\\n'\r\n        'If multiple keyed nodes exist as children of another node, they must have unique keys.\\n'\r\n        '$parent has multiple children with key $nonUniqueKey.'\r\n      );\r\n    }\r\n    return true;\r\n  }()");
    return false;
  };
  debug$0.debugItemsHaveDuplicateKeys = function debugItemsHaveDuplicateKeys(items) {
    if (items == null) dart.nullFailed(L109, 165, 51, "items");
    if (!dart.test(dart.fn(() => {
      let nonUniqueKey = debug$0._firstNonUniqueKey(items);
      if (nonUniqueKey != null) dart.throw(assertions.FlutterError.new("Duplicate key found: " + dart.str(nonUniqueKey) + "."));
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L109, 166, 10, "() {\r\n    final Key? nonUniqueKey = _firstNonUniqueKey(items);\r\n    if (nonUniqueKey != null)\r\n      throw FlutterError('Duplicate key found: $nonUniqueKey.');\r\n    return true;\r\n  }()");
    return false;
  };
  debug$0.debugCheckHasTable = function debugCheckHasTable(context) {
    if (context == null) dart.nullFailed(L109, 187, 38, "context");
    if (!dart.test(dart.fn(() => {
      if (!table$.Table.is(context.widget) && context.findAncestorWidgetOfExactType(table$.Table) == null) {
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("No Table widget found."), new assertions.ErrorDescription.new(dart.str(dart.runtimeType(context.widget)) + " widgets require a Table widget ancestor."), context.describeWidget("The specific widget that could not find a Table ancestor was"), context.describeOwnershipChain("The ownership chain for the affected widget is")])));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L109, 188, 10, "() {\r\n    if (context.widget is! Table && context.findAncestorWidgetOfExactType<Table>() == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No Table widget found.'),\r\n        ErrorDescription('${context.widget.runtimeType} widgets require a Table widget ancestor.'),\r\n        context.describeWidget('The specific widget that could not find a Table ancestor was'),\r\n        context.describeOwnershipChain('The ownership chain for the affected widget is'),\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  debug$0.debugCheckHasMediaQuery = function debugCheckHasMediaQuery(context) {
    if (context == null) dart.nullFailed(L109, 215, 43, "context");
    if (!dart.test(dart.fn(() => {
      if (!media_query.MediaQuery.is(context.widget) && context.findAncestorWidgetOfExactType(media_query.MediaQuery) == null) {
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("No MediaQuery widget ancestor found."), new assertions.ErrorDescription.new(dart.str(dart.runtimeType(context.widget)) + " widgets require a MediaQuery widget ancestor."), context.describeWidget("The specific widget that could not find a MediaQuery ancestor was"), context.describeOwnershipChain("The ownership chain for the affected widget is"), new assertions.ErrorHint.new("No MediaQuery ancestor could be found starting from the context " + "that was passed to MediaQuery.of(). This can happen because you " + "have not added a WidgetsApp, CupertinoApp, or MaterialApp widget " + "(those widgets introduce a MediaQuery), or it can happen if the " + "context you use comes from a widget above those widgets.")])));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L109, 216, 10, "() {\r\n    if (context.widget is! MediaQuery && context.findAncestorWidgetOfExactType<MediaQuery>() == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No MediaQuery widget ancestor found.'),\r\n        ErrorDescription('${context.widget.runtimeType} widgets require a MediaQuery widget ancestor.'),\r\n        context.describeWidget('The specific widget that could not find a MediaQuery ancestor was'),\r\n        context.describeOwnershipChain('The ownership chain for the affected widget is'),\r\n        ErrorHint(\r\n          'No MediaQuery ancestor could be found starting from the context '\r\n          'that was passed to MediaQuery.of(). This can happen because you '\r\n          'have not added a WidgetsApp, CupertinoApp, or MaterialApp widget '\r\n          '(those widgets introduce a MediaQuery), or it can happen if the '\r\n          'context you use comes from a widget above those widgets.'\r\n        ),\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  debug$0.debugCheckHasDirectionality = function debugCheckHasDirectionality(context, opts) {
    if (context == null) dart.nullFailed(L109, 267, 47, "context");
    let why = opts && 'why' in opts ? opts.why : null;
    let hint = opts && 'hint' in opts ? opts.hint : null;
    let alternative = opts && 'alternative' in opts ? opts.alternative : null;
    if (!dart.test(dart.fn(() => {
      if (!basic.Directionality.is(context.widget) && context.findAncestorWidgetOfExactType(basic.Directionality) == null) {
        why = why == null ? "" : " " + dart.str(why);
        dart.throw(new assertions.FlutterError.fromParts((() => {
          let t87 = JSArrayOfDiagnosticsNode().of([]);
          t87.push(new assertions.ErrorSummary.new("No Directionality widget found."));
          t87.push(new assertions.ErrorDescription.new(dart.str(dart.runtimeType(context.widget)) + " widgets require a Directionality widget ancestor" + dart.str(why) + ".\n"));
          if (hint != null) t87.push(new assertions.ErrorHint.new(hint));
          t87.push(context.describeWidget("The specific widget that could not find a Directionality ancestor was"));
          t87.push(context.describeOwnershipChain("The ownership chain for the affected widget is"));
          t87.push(new assertions.ErrorHint.new("Typically, the Directionality widget is introduced by the MaterialApp " + "or WidgetsApp widget at the top of your application widget tree. It " + "determines the ambient reading direction and is used, for example, to " + "determine how to lay out text, how to interpret \"start\" and \"end\" " + "values, and to resolve EdgeInsetsDirectional, " + "AlignmentDirectional, and other *Directional objects."));
          if (alternative != null) t87.push(new assertions.ErrorHint.new(alternative));
          return t87;
        })()));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L109, 268, 10, "() {\r\n    if (context.widget is! Directionality && context.findAncestorWidgetOfExactType<Directionality>() == null) {\r\n      why = why == null ? '' : ' $why';\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No Directionality widget found.'),\r\n        ErrorDescription('${context.widget.runtimeType} widgets require a Directionality widget ancestor$why.\\n'),\r\n        if (hint != null)\r\n          ErrorHint(hint),\r\n        context.describeWidget('The specific widget that could not find a Directionality ancestor was'),\r\n        context.describeOwnershipChain('The ownership chain for the affected widget is'),\r\n        ErrorHint(\r\n          'Typically, the Directionality widget is introduced by the MaterialApp '\r\n          'or WidgetsApp widget at the top of your application widget tree. It '\r\n          'determines the ambient reading direction and is used, for example, to '\r\n          'determine how to lay out text, how to interpret \"start\" and \"end\" '\r\n          'values, and to resolve EdgeInsetsDirectional, '\r\n          'AlignmentDirectional, and other *Directional objects.'\r\n        ),\r\n        if (alternative != null)\r\n          ErrorHint(alternative),\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  debug$0.debugWidgetBuilderValue = function debugWidgetBuilderValue(widget, built) {
    if (widget == null) dart.nullFailed(L109, 301, 37, "widget");
    if (!dart.test(dart.fn(() => {
      if (built == null) {
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("A build function returned null."), new (DiagnosticsPropertyOfWidget()).new("The offending widget is", widget, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty}), new assertions.ErrorDescription.new("Build functions must never return null."), new assertions.ErrorHint.new("To return an empty space that causes the building widget to fill available room, return \"Container()\". " + "To return an empty space that takes as little room as possible, return \"Container(width: 0.0, height: 0.0)\".")])));
      }
      if (dart.equals(widget, built)) {
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("A build function returned context.widget."), new (DiagnosticsPropertyOfWidget()).new("The offending widget is", widget, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty}), new assertions.ErrorDescription.new("Build functions must never return their BuildContext parameter's widget or a child that contains \"context.widget\". " + "Doing so introduces a loop in the widget tree that can cause the app to crash.")])));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L109, 302, 10, "() {\r\n    if (built == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('A build function returned null.'),\r\n        DiagnosticsProperty<Widget>('The offending widget is', widget, style: DiagnosticsTreeStyle.errorProperty),\r\n        ErrorDescription('Build functions must never return null.'),\r\n        ErrorHint(\r\n          'To return an empty space that causes the building widget to fill available room, return \"Container()\". '\r\n          'To return an empty space that takes as little room as possible, return \"Container(width: 0.0, height: 0.0)\".'\r\n        ),\r\n      ]);\r\n    }\r\n    if (widget == built) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('A build function returned context.widget.'),\r\n        DiagnosticsProperty<Widget>('The offending widget is', widget, style: DiagnosticsTreeStyle.errorProperty),\r\n        ErrorDescription(\r\n          'Build functions must never return their BuildContext parameter\\'s widget or a child that contains \"context.widget\". '\r\n          'Doing so introduces a loop in the widget tree that can cause the app to crash.'\r\n        ),\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
  };
  debug$0.debugCheckHasWidgetsLocalizations = function debugCheckHasWidgetsLocalizations(context) {
    if (context == null) dart.nullFailed(L109, 339, 53, "context");
    if (!dart.test(dart.fn(() => {
      if (localizations.Localizations.of(localizations.WidgetsLocalizations, context, dart.wrapType(localizations.WidgetsLocalizations)) == null) {
        dart.throw(new assertions.FlutterError.fromParts((() => {
          let t88 = JSArrayOfDiagnosticsNode().of([]);
          t88.push(new assertions.ErrorSummary.new("No WidgetsLocalizations found."));
          t88.push(new assertions.ErrorDescription.new(dart.str(dart.runtimeType(context.widget)) + " widgets require WidgetsLocalizations " + "to be provided by a Localizations widget ancestor."));
          t88.push(new assertions.ErrorDescription.new("The widgets library uses Localizations to generate messages, " + "labels, and abbreviations."));
          t88.push(new assertions.ErrorHint.new("To introduce a WidgetsLocalizations, either use a " + "WidgetsApp at the root of your application to include them " + "automatically, or add a Localization widget with a " + "WidgetsLocalizations delegate."));
          for (let t89 of context.describeMissingAncestor({expectedAncestorType: dart.wrapType(localizations.WidgetsLocalizations)}))
            t88.push(t89);
          return t88;
        })()));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L109, 340, 10, "() {\r\n    if (Localizations.of<WidgetsLocalizations>(context, WidgetsLocalizations) == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No WidgetsLocalizations found.'),\r\n        ErrorDescription(\r\n          '${context.widget.runtimeType} widgets require WidgetsLocalizations '\r\n          'to be provided by a Localizations widget ancestor.'\r\n        ),\r\n        ErrorDescription(\r\n          'The widgets library uses Localizations to generate messages, '\r\n          'labels, and abbreviations.'\r\n        ),\r\n        ErrorHint(\r\n          'To introduce a WidgetsLocalizations, either use a '\r\n          'WidgetsApp at the root of your application to include them '\r\n          'automatically, or add a Localization widget with a '\r\n          'WidgetsLocalizations delegate.'\r\n        ),\r\n        ...context.describeMissingAncestor(expectedAncestorType: WidgetsLocalizations)\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  debug$0.debugAssertAllWidgetVarsUnset = function debugAssertAllWidgetVarsUnset(reason) {
    if (reason == null) dart.nullFailed(L109, 372, 43, "reason");
    if (!dart.test(dart.fn(() => {
      if (dart.test(debug$0.debugPrintRebuildDirtyWidgets) || dart.test(debug$0.debugPrintBuildScope) || dart.test(debug$0.debugPrintScheduleBuildForStacks) || dart.test(debug$0.debugPrintGlobalKeyedWidgetLifecycle) || dart.test(debug$0.debugProfileBuildsEnabled) || dart.test(debug$0.debugHighlightDeprecatedWidgets)) {
        dart.throw(assertions.FlutterError.new(reason));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L109, 373, 10, "() {\r\n    if (debugPrintRebuildDirtyWidgets ||\r\n        debugPrintBuildScope ||\r\n        debugPrintScheduleBuildForStacks ||\r\n        debugPrintGlobalKeyedWidgetLifecycle ||\r\n        debugProfileBuildsEnabled ||\r\n        debugHighlightDeprecatedWidgets) {\r\n      throw FlutterError(reason);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  dart.defineLazy(debug$0, {
    /*debug$0.debugPrintRebuildDirtyWidgets*/get debugPrintRebuildDirtyWidgets() {
      return false;
    },
    set debugPrintRebuildDirtyWidgets(_) {},
    /*debug$0.debugOnRebuildDirtyWidget*/get debugOnRebuildDirtyWidget() {
      return null;
    },
    set debugOnRebuildDirtyWidget(_) {},
    /*debug$0.debugPrintBuildScope*/get debugPrintBuildScope() {
      return false;
    },
    set debugPrintBuildScope(_) {},
    /*debug$0.debugPrintScheduleBuildForStacks*/get debugPrintScheduleBuildForStacks() {
      return false;
    },
    set debugPrintScheduleBuildForStacks(_) {},
    /*debug$0.debugPrintGlobalKeyedWidgetLifecycle*/get debugPrintGlobalKeyedWidgetLifecycle() {
      return false;
    },
    set debugPrintGlobalKeyedWidgetLifecycle(_) {},
    /*debug$0.debugProfileBuildsEnabled*/get debugProfileBuildsEnabled() {
      return false;
    },
    set debugProfileBuildsEnabled(_) {},
    /*debug$0.debugHighlightDeprecatedWidgets*/get debugHighlightDeprecatedWidgets() {
      return false;
    },
    set debugHighlightDeprecatedWidgets(_) {}
  }, false);
  var _name$23 = dart.privateName(banner, "_name");
  var C1105;
  var C1106;
  var C1107;
  var C1108;
  var C1109;
  banner.BannerLocation = class BannerLocation extends core.Object {
    toString() {
      return this[_name$23];
    }
  };
  (banner.BannerLocation.new = function(index, _name) {
    if (index == null) dart.nullFailed(L110, 31, 6, "index");
    if (_name == null) dart.nullFailed(L110, 31, 6, "_name");
    this.index = index;
    this[_name$23] = _name;
    ;
  }).prototype = banner.BannerLocation.prototype;
  dart.addTypeTests(banner.BannerLocation);
  dart.addTypeCaches(banner.BannerLocation);
  dart.setLibraryUri(banner.BannerLocation, L111);
  dart.setFieldSignature(banner.BannerLocation, () => ({
    __proto__: dart.getFields(banner.BannerLocation.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$23]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(banner.BannerLocation, ['toString']);
  banner.BannerLocation.topStart = C1105 || CT.C1105;
  banner.BannerLocation.topEnd = C1106 || CT.C1106;
  banner.BannerLocation.bottomStart = C1107 || CT.C1107;
  banner.BannerLocation.bottomEnd = C1108 || CT.C1108;
  banner.BannerLocation.values = C1109 || CT.C1109;
  var C1110;
  var C1112;
  var C1111;
  var _prepared = dart.privateName(banner, "_prepared");
  var __BannerPainter__textPainter = dart.privateName(banner, "_#BannerPainter#_textPainter");
  var __BannerPainter__textPainter_isSet = dart.privateName(banner, "_#BannerPainter#_textPainter#isSet");
  var __BannerPainter__paintShadow = dart.privateName(banner, "_#BannerPainter#_paintShadow");
  var __BannerPainter__paintShadow_isSet = dart.privateName(banner, "_#BannerPainter#_paintShadow#isSet");
  var __BannerPainter__paintBanner = dart.privateName(banner, "_#BannerPainter#_paintBanner");
  var __BannerPainter__paintBanner_isSet = dart.privateName(banner, "_#BannerPainter#_paintBanner#isSet");
  var _textPainter$ = dart.privateName(banner, "_textPainter");
  var _paintShadow = dart.privateName(banner, "_paintShadow");
  var _paintBanner = dart.privateName(banner, "_paintBanner");
  var _prepare = dart.privateName(banner, "_prepare");
  var _translationX = dart.privateName(banner, "_translationX");
  var _translationY = dart.privateName(banner, "_translationY");
  var _rotation = dart.privateName(banner, "_rotation");
  var message$0 = dart.privateName(banner, "BannerPainter.message");
  var textDirection$5 = dart.privateName(banner, "BannerPainter.textDirection");
  var location$0 = dart.privateName(banner, "BannerPainter.location");
  var layoutDirection$ = dart.privateName(banner, "BannerPainter.layoutDirection");
  var color$4 = dart.privateName(banner, "BannerPainter.color");
  var textStyle$ = dart.privateName(banner, "BannerPainter.textStyle");
  var Shadow_blurRadius = dart.privateName(ui, "Shadow.blurRadius");
  var Shadow_offset = dart.privateName(ui, "Shadow.offset");
  var C1114;
  var Shadow_color = dart.privateName(ui, "Shadow.color");
  var BoxShadow_spreadRadius = dart.privateName(box_shadow, "BoxShadow.spreadRadius");
  var C1113;
  banner.BannerPainter = class BannerPainter extends custom_paint.CustomPainter {
    get message() {
      return this[message$0];
    }
    set message(value) {
      super.message = value;
    }
    get textDirection() {
      return this[textDirection$5];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get location() {
      return this[location$0];
    }
    set location(value) {
      super.location = value;
    }
    get layoutDirection() {
      return this[layoutDirection$];
    }
    set layoutDirection(value) {
      super.layoutDirection = value;
    }
    get color() {
      return this[color$4];
    }
    set color(value) {
      super.color = value;
    }
    get textStyle() {
      return this[textStyle$];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get [_textPainter$]() {
      let t90;
      return dart.test(this[__BannerPainter__textPainter_isSet]) ? (t90 = this[__BannerPainter__textPainter], t90) : dart.throw(new _internal.LateError.fieldNI("_textPainter"));
    }
    set [_textPainter$](t90) {
      if (t90 == null) dart.nullFailed(L110, 121, 20, "null");
      this[__BannerPainter__textPainter_isSet] = true;
      this[__BannerPainter__textPainter] = t90;
    }
    get [_paintShadow]() {
      let t91;
      return dart.test(this[__BannerPainter__paintShadow_isSet]) ? (t91 = this[__BannerPainter__paintShadow], t91) : dart.throw(new _internal.LateError.fieldNI("_paintShadow"));
    }
    set [_paintShadow](t91) {
      if (t91 == null) dart.nullFailed(L110, 122, 14, "null");
      this[__BannerPainter__paintShadow_isSet] = true;
      this[__BannerPainter__paintShadow] = t91;
    }
    get [_paintBanner]() {
      let t92;
      return dart.test(this[__BannerPainter__paintBanner_isSet]) ? (t92 = this[__BannerPainter__paintBanner], t92) : dart.throw(new _internal.LateError.fieldNI("_paintBanner"));
    }
    set [_paintBanner](t92) {
      if (t92 == null) dart.nullFailed(L110, 123, 14, "null");
      this[__BannerPainter__paintBanner_isSet] = true;
      this[__BannerPainter__paintBanner] = t92;
    }
    [_prepare]() {
      let t93;
      this[_paintShadow] = banner.BannerPainter._shadow.toPaint();
      this[_paintBanner] = (t93 = ui.Paint.new(), (() => {
        t93.color = this.color;
        return t93;
      })());
      this[_textPainter$] = new text_painter.TextPainter.new({text: new text_span.TextSpan.new({style: this.textStyle, text: this.message}), textAlign: ui.TextAlign.center, textDirection: this.textDirection});
      this[_prepared] = true;
    }
    paint(canvas, size) {
      let t93;
      if (canvas == null) dart.nullFailed(L110, 138, 21, "canvas");
      if (size == null) dart.nullFailed(L110, 138, 34, "size");
      if (!dart.test(this[_prepared])) this[_prepare]();
      t93 = canvas;
      (() => {
        t93.translate(this[_translationX](size.width), this[_translationY](size.height));
        t93.rotate(this[_rotation]);
        t93.drawRect(banner._kRect, this[_paintShadow]);
        t93.drawRect(banner._kRect, this[_paintBanner]);
        return t93;
      })();
      this[_textPainter$].layout({minWidth: 80, maxWidth: 80});
      this[_textPainter$].paint(canvas, banner._kRect.topLeft['+'](new ui.Offset.new(0.0, (dart.notNull(banner._kRect.height) - dart.notNull(this[_textPainter$].height)) / 2.0)));
    }
    shouldRepaint(oldDelegate) {
      banner.BannerPainter.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(L110, 152, 36, "oldDelegate");
      return this.message != oldDelegate.message || !dart.equals(this.location, oldDelegate.location) || !dart.equals(this.color, oldDelegate.color) || !dart.equals(this.textStyle, oldDelegate.textStyle);
    }
    hitTest(position) {
      if (position == null) dart.nullFailed(L110, 160, 23, "position");
      return false;
    }
    [_translationX](width) {
      if (width == null) dart.nullFailed(L110, 162, 31, "width");
      if (!(this.location != null)) dart.assertFailed(null, L110, 163, 12, "location != null");
      if (!(this.layoutDirection != null)) dart.assertFailed(null, L110, 164, 12, "layoutDirection != null");
      switch (this.layoutDirection) {
        case C79 || CT.C79:
        {
          switch (this.location) {
            case C1108 || CT.C1108:
            {
              return 48.484;
            }
            case C1106 || CT.C1106:
            {
              return 0.0;
            }
            case C1107 || CT.C1107:
            {
              return dart.notNull(width) - 48.484;
            }
            case C1105 || CT.C1105:
            {
              return width;
            }
            default:
            {
              dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
            }
          }
        }
        case C80 || CT.C80:
        {
          switch (this.location) {
            case C1108 || CT.C1108:
            {
              return dart.notNull(width) - 48.484;
            }
            case C1106 || CT.C1106:
            {
              return width;
            }
            case C1107 || CT.C1107:
            {
              return 48.484;
            }
            case C1105 || CT.C1105:
            {
              return 0.0;
            }
            default:
            {
              dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
            }
          }
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [_translationY](height) {
      if (height == null) dart.nullFailed(L110, 191, 31, "height");
      if (!(this.location != null)) dart.assertFailed(null, L110, 192, 12, "location != null");
      switch (this.location) {
        case C1107 || CT.C1107:
        case C1108 || CT.C1108:
        {
          return dart.notNull(height) - 48.484;
        }
        case C1105 || CT.C1105:
        case C1106 || CT.C1106:
        {
          return 0.0;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    get [_rotation]() {
      if (!(this.location != null)) dart.assertFailed(null, L110, 204, 12, "location != null");
      if (!(this.layoutDirection != null)) dart.assertFailed(null, L110, 205, 12, "layoutDirection != null");
      switch (this.layoutDirection) {
        case C79 || CT.C79:
        {
          switch (this.location) {
            case C1107 || CT.C1107:
            case C1106 || CT.C1106:
            {
              return -3.141592653589793 / 4.0;
            }
            case C1108 || CT.C1108:
            case C1105 || CT.C1105:
            {
              return 3.141592653589793 / 4.0;
            }
            default:
            {
              dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
            }
          }
        }
        case C80 || CT.C80:
        {
          switch (this.location) {
            case C1107 || CT.C1107:
            case C1106 || CT.C1106:
            {
              return 3.141592653589793 / 4.0;
            }
            case C1108 || CT.C1108:
            case C1105 || CT.C1105:
            {
              return -3.141592653589793 / 4.0;
            }
            default:
            {
              dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
            }
          }
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
  };
  (banner.BannerPainter.new = function(opts) {
    let message = opts && 'message' in opts ? opts.message : null;
    if (message == null) dart.nullFailed(L110, 62, 19, "message");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(L110, 63, 19, "textDirection");
    let location = opts && 'location' in opts ? opts.location : null;
    if (location == null) dart.nullFailed(L110, 64, 19, "location");
    let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
    if (layoutDirection == null) dart.nullFailed(L110, 65, 19, "layoutDirection");
    let color = opts && 'color' in opts ? opts.color : C1110 || CT.C1110;
    if (color == null) dart.nullFailed(L110, 66, 10, "color");
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : C1111 || CT.C1111;
    if (textStyle == null) dart.nullFailed(L110, 67, 10, "textStyle");
    this[_prepared] = false;
    this[__BannerPainter__textPainter] = null;
    this[__BannerPainter__textPainter_isSet] = false;
    this[__BannerPainter__paintShadow] = null;
    this[__BannerPainter__paintShadow_isSet] = false;
    this[__BannerPainter__paintBanner] = null;
    this[__BannerPainter__paintBanner_isSet] = false;
    this[message$0] = message;
    this[textDirection$5] = textDirection;
    this[location$0] = location;
    this[layoutDirection$] = layoutDirection;
    this[color$4] = color;
    this[textStyle$] = textStyle;
    if (!(message != null)) dart.assertFailed(null, L110, 68, 15, "message != null");
    if (!(textDirection != null)) dart.assertFailed(null, L110, 69, 15, "textDirection != null");
    if (!(location != null)) dart.assertFailed(null, L110, 70, 15, "location != null");
    if (!(color != null)) dart.assertFailed(null, L110, 71, 15, "color != null");
    if (!(textStyle != null)) dart.assertFailed(null, L110, 72, 15, "textStyle != null");
    banner.BannerPainter.__proto__.new.call(this, {repaint: dart.nullCheck(binding$2.PaintingBinding.instance).systemFonts});
    ;
  }).prototype = banner.BannerPainter.prototype;
  dart.addTypeTests(banner.BannerPainter);
  dart.addTypeCaches(banner.BannerPainter);
  dart.setMethodSignature(banner.BannerPainter, () => ({
    __proto__: dart.getMethods(banner.BannerPainter.__proto__),
    [_prepare]: dart.fnType(dart.void, []),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    hitTest: dart.fnType(core.bool, [ui.Offset]),
    [_translationX]: dart.fnType(core.double, [core.double]),
    [_translationY]: dart.fnType(core.double, [core.double])
  }));
  dart.setGetterSignature(banner.BannerPainter, () => ({
    __proto__: dart.getGetters(banner.BannerPainter.__proto__),
    [_textPainter$]: text_painter.TextPainter,
    [_paintShadow]: ui.Paint,
    [_paintBanner]: ui.Paint,
    [_rotation]: core.double
  }));
  dart.setSetterSignature(banner.BannerPainter, () => ({
    __proto__: dart.getSetters(banner.BannerPainter.__proto__),
    [_textPainter$]: text_painter.TextPainter,
    [_paintShadow]: ui.Paint,
    [_paintBanner]: ui.Paint
  }));
  dart.setLibraryUri(banner.BannerPainter, L111);
  dart.setFieldSignature(banner.BannerPainter, () => ({
    __proto__: dart.getFields(banner.BannerPainter.__proto__),
    message: dart.finalFieldType(core.String),
    textDirection: dart.finalFieldType(ui.TextDirection),
    location: dart.finalFieldType(banner.BannerLocation),
    layoutDirection: dart.finalFieldType(ui.TextDirection),
    color: dart.finalFieldType(ui.Color),
    textStyle: dart.finalFieldType(text_style.TextStyle),
    [_prepared]: dart.fieldType(core.bool),
    [__BannerPainter__textPainter]: dart.fieldType(dart.nullable(text_painter.TextPainter)),
    [__BannerPainter__textPainter_isSet]: dart.fieldType(core.bool),
    [__BannerPainter__paintShadow]: dart.fieldType(dart.nullable(ui.Paint)),
    [__BannerPainter__paintShadow_isSet]: dart.fieldType(core.bool),
    [__BannerPainter__paintBanner]: dart.fieldType(dart.nullable(ui.Paint)),
    [__BannerPainter__paintBanner_isSet]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(banner.BannerPainter, {
    /*banner.BannerPainter._shadow*/get _shadow() {
      return C1113 || CT.C1113;
    }
  }, false);
  var C1117;
  var C1118;
  var C1116;
  var C1115;
  var child$37 = dart.privateName(banner, "Banner.child");
  var message$1 = dart.privateName(banner, "Banner.message");
  var textDirection$6 = dart.privateName(banner, "Banner.textDirection");
  var location$1 = dart.privateName(banner, "Banner.location");
  var layoutDirection$0 = dart.privateName(banner, "Banner.layoutDirection");
  var color$5 = dart.privateName(banner, "Banner.color");
  var textStyle$0 = dart.privateName(banner, "Banner.textStyle");
  banner.Banner = class Banner extends framework.StatelessWidget {
    get child() {
      return this[child$37];
    }
    set child(value) {
      super.child = value;
    }
    get message() {
      return this[message$1];
    }
    set message(value) {
      super.message = value;
    }
    get textDirection() {
      return this[textDirection$6];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get location() {
      return this[location$1];
    }
    set location(value) {
      super.location = value;
    }
    get layoutDirection() {
      return this[layoutDirection$0];
    }
    set layoutDirection(value) {
      super.layoutDirection = value;
    }
    get color() {
      return this[color$5];
    }
    set color(value) {
      super.color = value;
    }
    get textStyle() {
      return this[textStyle$0];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    build(context) {
      let t93, t93$;
      if (context == null) dart.nullFailed(L110, 302, 29, "context");
      if (!(this.textDirection != null && this.layoutDirection != null || dart.test(debug$0.debugCheckHasDirectionality(context)))) dart.assertFailed(null, L110, 303, 12, "(textDirection != null && layoutDirection != null) || debugCheckHasDirectionality(context)");
      return new basic.CustomPaint.new({foregroundPainter: new banner.BannerPainter.new({message: this.message, textDirection: (t93 = this.textDirection, t93 == null ? basic.Directionality.of(context) : t93), location: this.location, layoutDirection: (t93$ = this.layoutDirection, t93$ == null ? basic.Directionality.of(context) : t93$), color: this.color, textStyle: this.textStyle}), child: this.child, $creationLocationd_0dea112b090073317d4: C1115 || CT.C1115});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L110, 318, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.StringProperty.new("message", this.message, {showName: false}));
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
      properties.add(new (EnumPropertyOfBannerLocation()).new("location", this.location));
      properties.add(new (EnumPropertyOfTextDirection()).new("layoutDirection", this.layoutDirection, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {showName: false}));
      this.textStyle.debugFillProperties(properties, {prefix: "text "});
    }
  };
  (banner.Banner.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let message = opts && 'message' in opts ? opts.message : null;
    if (message == null) dart.nullFailed(L110, 245, 19, "message");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let location = opts && 'location' in opts ? opts.location : null;
    if (location == null) dart.nullFailed(L110, 247, 19, "location");
    let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
    let color = opts && 'color' in opts ? opts.color : C1110 || CT.C1110;
    if (color == null) dart.nullFailed(L110, 249, 10, "color");
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : C1111 || CT.C1111;
    if (textStyle == null) dart.nullFailed(L110, 250, 10, "textStyle");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$37] = child;
    this[message$1] = message;
    this[textDirection$6] = textDirection;
    this[location$1] = location;
    this[layoutDirection$0] = layoutDirection;
    this[color$5] = color;
    this[textStyle$0] = textStyle;
    if (!(message != null)) dart.assertFailed(null, L110, 251, 15, "message != null");
    if (!(location != null)) dart.assertFailed(null, L110, 252, 15, "location != null");
    if (!(color != null)) dart.assertFailed(null, L110, 253, 15, "color != null");
    if (!(textStyle != null)) dart.assertFailed(null, L110, 254, 15, "textStyle != null");
    banner.Banner.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = banner.Banner.prototype;
  dart.addTypeTests(banner.Banner);
  dart.addTypeCaches(banner.Banner);
  dart.setMethodSignature(banner.Banner, () => ({
    __proto__: dart.getMethods(banner.Banner.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(banner.Banner, L111);
  dart.setFieldSignature(banner.Banner, () => ({
    __proto__: dart.getFields(banner.Banner.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    message: dart.finalFieldType(core.String),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    location: dart.finalFieldType(banner.BannerLocation),
    layoutDirection: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    color: dart.finalFieldType(ui.Color),
    textStyle: dart.finalFieldType(text_style.TextStyle)
  }));
  var C1121;
  var C1122;
  var C1123;
  var C1124;
  var C1120;
  var C1119;
  var child$38 = dart.privateName(banner, "CheckedModeBanner.child");
  banner.CheckedModeBanner = class CheckedModeBanner extends framework.StatelessWidget {
    get child() {
      return this[child$38];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(L110, 345, 29, "context");
      let result = this.child;
      if (!dart.test(dart.fn(() => {
        result = new banner.Banner.new({child: result, message: "DEBUG", textDirection: ui.TextDirection.ltr, location: banner.BannerLocation.topEnd, $creationLocationd_0dea112b090073317d4: C1119 || CT.C1119});
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L110, 347, 12, "() {\r\n      result = Banner(\r\n        child: result,\r\n        message: 'DEBUG',\r\n        textDirection: TextDirection.ltr,\r\n        location: BannerLocation.topEnd,\r\n      );\r\n      return true;\r\n    }()");
      return result;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L110, 360, 56, "properties");
      super.debugFillProperties(properties);
      let message = "disabled";
      if (!dart.test(dart.fn(() => {
        message = "\"DEBUG\"";
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L110, 363, 12, "() {\r\n      message = '\"DEBUG\"';\r\n      return true;\r\n    }()");
      properties.add(diagnostics$.DiagnosticsNode.message(message));
    }
  };
  (banner.CheckedModeBanner.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L110, 336, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$38] = child;
    banner.CheckedModeBanner.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = banner.CheckedModeBanner.prototype;
  dart.addTypeTests(banner.CheckedModeBanner);
  dart.addTypeCaches(banner.CheckedModeBanner);
  dart.setMethodSignature(banner.CheckedModeBanner, () => ({
    __proto__: dart.getMethods(banner.CheckedModeBanner.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(banner.CheckedModeBanner, L111);
  dart.setFieldSignature(banner.CheckedModeBanner, () => ({
    __proto__: dart.getFields(banner.CheckedModeBanner.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  var Rect_bottom = dart.privateName(ui, "Rect.bottom");
  var Rect_right = dart.privateName(ui, "Rect.right");
  var Rect_top = dart.privateName(ui, "Rect.top");
  var Rect_left = dart.privateName(ui, "Rect.left");
  var C1125;
  dart.defineLazy(banner, {
    /*banner._kOffset*/get _kOffset() {
      return 40;
    },
    /*banner._kHeight*/get _kHeight() {
      return 12;
    },
    /*banner._kBottomOffset*/get _kBottomOffset() {
      return 48.484;
    },
    /*banner._kRect*/get _kRect() {
      return C1125 || CT.C1125;
    },
    /*banner._kColor*/get _kColor() {
      return C1110 || CT.C1110;
    },
    /*banner._kTextStyle*/get _kTextStyle() {
      return C1111 || CT.C1111;
    }
  }, false);
  var C1126;
  var Locale__countryCode = dart.privateName(ui, "Locale._countryCode");
  var Locale_scriptCode = dart.privateName(ui, "Locale.scriptCode");
  var Locale__languageCode = dart.privateName(ui, "Locale._languageCode");
  var C1128;
  var C1127;
  var navigatorKey$ = dart.privateName(app, "WidgetsApp.navigatorKey");
  var onGenerateRoute$0 = dart.privateName(app, "WidgetsApp.onGenerateRoute");
  var onGenerateInitialRoutes$0 = dart.privateName(app, "WidgetsApp.onGenerateInitialRoutes");
  var pageRouteBuilder$ = dart.privateName(app, "WidgetsApp.pageRouteBuilder");
  var routeInformationParser$1 = dart.privateName(app, "WidgetsApp.routeInformationParser");
  var routerDelegate$1 = dart.privateName(app, "WidgetsApp.routerDelegate");
  var backButtonDispatcher$1 = dart.privateName(app, "WidgetsApp.backButtonDispatcher");
  var routeInformationProvider$1 = dart.privateName(app, "WidgetsApp.routeInformationProvider");
  var home$ = dart.privateName(app, "WidgetsApp.home");
  var routes$ = dart.privateName(app, "WidgetsApp.routes");
  var onUnknownRoute$0 = dart.privateName(app, "WidgetsApp.onUnknownRoute");
  var initialRoute$0 = dart.privateName(app, "WidgetsApp.initialRoute");
  var navigatorObservers$ = dart.privateName(app, "WidgetsApp.navigatorObservers");
  var builder$2 = dart.privateName(app, "WidgetsApp.builder");
  var title$1 = dart.privateName(app, "WidgetsApp.title");
  var onGenerateTitle$ = dart.privateName(app, "WidgetsApp.onGenerateTitle");
  var textStyle$1 = dart.privateName(app, "WidgetsApp.textStyle");
  var color$6 = dart.privateName(app, "WidgetsApp.color");
  var locale$4 = dart.privateName(app, "WidgetsApp.locale");
  var localizationsDelegates$ = dart.privateName(app, "WidgetsApp.localizationsDelegates");
  var localeListResolutionCallback$ = dart.privateName(app, "WidgetsApp.localeListResolutionCallback");
  var localeResolutionCallback$ = dart.privateName(app, "WidgetsApp.localeResolutionCallback");
  var supportedLocales$ = dart.privateName(app, "WidgetsApp.supportedLocales");
  var showPerformanceOverlay$ = dart.privateName(app, "WidgetsApp.showPerformanceOverlay");
  var checkerboardRasterCacheImages$0 = dart.privateName(app, "WidgetsApp.checkerboardRasterCacheImages");
  var checkerboardOffscreenLayers$0 = dart.privateName(app, "WidgetsApp.checkerboardOffscreenLayers");
  var showSemanticsDebugger$ = dart.privateName(app, "WidgetsApp.showSemanticsDebugger");
  var debugShowWidgetInspector$ = dart.privateName(app, "WidgetsApp.debugShowWidgetInspector");
  var inspectorSelectButtonBuilder$ = dart.privateName(app, "WidgetsApp.inspectorSelectButtonBuilder");
  var debugShowCheckedModeBanner$ = dart.privateName(app, "WidgetsApp.debugShowCheckedModeBanner");
  var shortcuts$1 = dart.privateName(app, "WidgetsApp.shortcuts");
  var actions$0 = dart.privateName(app, "WidgetsApp.actions");
  var restorationScopeId$2 = dart.privateName(app, "WidgetsApp.restorationScopeId");
  var C1129;
  var C1130;
  var C1131;
  var C1132;
  var C1133;
  var C1134;
  var C1135;
  var C1136;
  var C1137;
  var C1138;
  var C1139;
  var C1140;
  var C1141;
  var C1142;
  app.WidgetsApp = class WidgetsApp extends framework.StatefulWidget {
    get navigatorKey() {
      return this[navigatorKey$];
    }
    set navigatorKey(value) {
      super.navigatorKey = value;
    }
    get onGenerateRoute() {
      return this[onGenerateRoute$0];
    }
    set onGenerateRoute(value) {
      super.onGenerateRoute = value;
    }
    get onGenerateInitialRoutes() {
      return this[onGenerateInitialRoutes$0];
    }
    set onGenerateInitialRoutes(value) {
      super.onGenerateInitialRoutes = value;
    }
    get pageRouteBuilder() {
      return this[pageRouteBuilder$];
    }
    set pageRouteBuilder(value) {
      super.pageRouteBuilder = value;
    }
    get routeInformationParser() {
      return this[routeInformationParser$1];
    }
    set routeInformationParser(value) {
      super.routeInformationParser = value;
    }
    get routerDelegate() {
      return this[routerDelegate$1];
    }
    set routerDelegate(value) {
      super.routerDelegate = value;
    }
    get backButtonDispatcher() {
      return this[backButtonDispatcher$1];
    }
    set backButtonDispatcher(value) {
      super.backButtonDispatcher = value;
    }
    get routeInformationProvider() {
      return this[routeInformationProvider$1];
    }
    set routeInformationProvider(value) {
      super.routeInformationProvider = value;
    }
    get home() {
      return this[home$];
    }
    set home(value) {
      super.home = value;
    }
    get routes() {
      return this[routes$];
    }
    set routes(value) {
      super.routes = value;
    }
    get onUnknownRoute() {
      return this[onUnknownRoute$0];
    }
    set onUnknownRoute(value) {
      super.onUnknownRoute = value;
    }
    get initialRoute() {
      return this[initialRoute$0];
    }
    set initialRoute(value) {
      super.initialRoute = value;
    }
    get navigatorObservers() {
      return this[navigatorObservers$];
    }
    set navigatorObservers(value) {
      super.navigatorObservers = value;
    }
    get builder() {
      return this[builder$2];
    }
    set builder(value) {
      super.builder = value;
    }
    get title() {
      return this[title$1];
    }
    set title(value) {
      super.title = value;
    }
    get onGenerateTitle() {
      return this[onGenerateTitle$];
    }
    set onGenerateTitle(value) {
      super.onGenerateTitle = value;
    }
    get textStyle() {
      return this[textStyle$1];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get color() {
      return this[color$6];
    }
    set color(value) {
      super.color = value;
    }
    get locale() {
      return this[locale$4];
    }
    set locale(value) {
      super.locale = value;
    }
    get localizationsDelegates() {
      return this[localizationsDelegates$];
    }
    set localizationsDelegates(value) {
      super.localizationsDelegates = value;
    }
    get localeListResolutionCallback() {
      return this[localeListResolutionCallback$];
    }
    set localeListResolutionCallback(value) {
      super.localeListResolutionCallback = value;
    }
    get localeResolutionCallback() {
      return this[localeResolutionCallback$];
    }
    set localeResolutionCallback(value) {
      super.localeResolutionCallback = value;
    }
    get supportedLocales() {
      return this[supportedLocales$];
    }
    set supportedLocales(value) {
      super.supportedLocales = value;
    }
    get showPerformanceOverlay() {
      return this[showPerformanceOverlay$];
    }
    set showPerformanceOverlay(value) {
      super.showPerformanceOverlay = value;
    }
    get checkerboardRasterCacheImages() {
      return this[checkerboardRasterCacheImages$0];
    }
    set checkerboardRasterCacheImages(value) {
      super.checkerboardRasterCacheImages = value;
    }
    get checkerboardOffscreenLayers() {
      return this[checkerboardOffscreenLayers$0];
    }
    set checkerboardOffscreenLayers(value) {
      super.checkerboardOffscreenLayers = value;
    }
    get showSemanticsDebugger() {
      return this[showSemanticsDebugger$];
    }
    set showSemanticsDebugger(value) {
      super.showSemanticsDebugger = value;
    }
    get debugShowWidgetInspector() {
      return this[debugShowWidgetInspector$];
    }
    set debugShowWidgetInspector(value) {
      super.debugShowWidgetInspector = value;
    }
    get inspectorSelectButtonBuilder() {
      return this[inspectorSelectButtonBuilder$];
    }
    set inspectorSelectButtonBuilder(value) {
      super.inspectorSelectButtonBuilder = value;
    }
    get debugShowCheckedModeBanner() {
      return this[debugShowCheckedModeBanner$];
    }
    set debugShowCheckedModeBanner(value) {
      super.debugShowCheckedModeBanner = value;
    }
    get shortcuts() {
      return this[shortcuts$1];
    }
    set shortcuts(value) {
      super.shortcuts = value;
    }
    get actions() {
      return this[actions$0];
    }
    set actions(value) {
      super.actions = value;
    }
    get restorationScopeId() {
      return this[restorationScopeId$2];
    }
    set restorationScopeId(value) {
      super.restorationScopeId = value;
    }
    static get defaultShortcuts() {
      if (true) {
        return app.WidgetsApp._defaultWebShortcuts;
      }
      switch (platform.defaultTargetPlatform) {
        case C99 || CT.C99:
        case C100 || CT.C100:
        case C101 || CT.C101:
        case C102 || CT.C102:
        {
          return app.WidgetsApp._defaultShortcuts;
        }
        case C104 || CT.C104:
        {
          return app.WidgetsApp._defaultMacOsShortcuts;
        }
        case C103 || CT.C103:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return new (LinkedMapOfLogicalKeySet$Intent()).new();
    }
    createState() {
      return new app._WidgetsAppState.new();
    }
  };
  (app.WidgetsApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
    let onGenerateRoute = opts && 'onGenerateRoute' in opts ? opts.onGenerateRoute : null;
    let onGenerateInitialRoutes = opts && 'onGenerateInitialRoutes' in opts ? opts.onGenerateInitialRoutes : null;
    let onUnknownRoute = opts && 'onUnknownRoute' in opts ? opts.onUnknownRoute : null;
    let navigatorObservers = opts && 'navigatorObservers' in opts ? opts.navigatorObservers : C313 || CT.C313;
    if (navigatorObservers == null) dart.nullFailed(L112, 175, 34, "navigatorObservers");
    let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : null;
    let pageRouteBuilder = opts && 'pageRouteBuilder' in opts ? opts.pageRouteBuilder : null;
    let home = opts && 'home' in opts ? opts.home : null;
    let routes = opts && 'routes' in opts ? opts.routes : C1126 || CT.C1126;
    if (routes == null) dart.nullFailed(L112, 179, 37, "routes");
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let title = opts && 'title' in opts ? opts.title : "";
    if (title == null) dart.nullFailed(L112, 181, 10, "title");
    let onGenerateTitle = opts && 'onGenerateTitle' in opts ? opts.onGenerateTitle : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(L112, 184, 19, "color");
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let localizationsDelegates = opts && 'localizationsDelegates' in opts ? opts.localizationsDelegates : null;
    let localeListResolutionCallback = opts && 'localeListResolutionCallback' in opts ? opts.localeListResolutionCallback : null;
    let localeResolutionCallback = opts && 'localeResolutionCallback' in opts ? opts.localeResolutionCallback : null;
    let supportedLocales = opts && 'supportedLocales' in opts ? opts.supportedLocales : C1127 || CT.C1127;
    if (supportedLocales == null) dart.nullFailed(L112, 189, 10, "supportedLocales");
    let showPerformanceOverlay = opts && 'showPerformanceOverlay' in opts ? opts.showPerformanceOverlay : false;
    if (showPerformanceOverlay == null) dart.nullFailed(L112, 190, 10, "showPerformanceOverlay");
    let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
    if (checkerboardRasterCacheImages == null) dart.nullFailed(L112, 191, 10, "checkerboardRasterCacheImages");
    let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
    if (checkerboardOffscreenLayers == null) dart.nullFailed(L112, 192, 10, "checkerboardOffscreenLayers");
    let showSemanticsDebugger = opts && 'showSemanticsDebugger' in opts ? opts.showSemanticsDebugger : false;
    if (showSemanticsDebugger == null) dart.nullFailed(L112, 193, 10, "showSemanticsDebugger");
    let debugShowWidgetInspector = opts && 'debugShowWidgetInspector' in opts ? opts.debugShowWidgetInspector : false;
    if (debugShowWidgetInspector == null) dart.nullFailed(L112, 194, 10, "debugShowWidgetInspector");
    let debugShowCheckedModeBanner = opts && 'debugShowCheckedModeBanner' in opts ? opts.debugShowCheckedModeBanner : true;
    if (debugShowCheckedModeBanner == null) dart.nullFailed(L112, 195, 10, "debugShowCheckedModeBanner");
    let inspectorSelectButtonBuilder = opts && 'inspectorSelectButtonBuilder' in opts ? opts.inspectorSelectButtonBuilder : null;
    let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let restorationScopeId = opts && 'restorationScopeId' in opts ? opts.restorationScopeId : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[navigatorKey$] = navigatorKey;
    this[onGenerateRoute$0] = onGenerateRoute;
    this[onGenerateInitialRoutes$0] = onGenerateInitialRoutes;
    this[onUnknownRoute$0] = onUnknownRoute;
    this[navigatorObservers$] = navigatorObservers;
    this[initialRoute$0] = initialRoute;
    this[pageRouteBuilder$] = pageRouteBuilder;
    this[home$] = home;
    this[routes$] = routes;
    this[builder$2] = builder;
    this[title$1] = title;
    this[onGenerateTitle$] = onGenerateTitle;
    this[textStyle$1] = textStyle;
    this[color$6] = color;
    this[locale$4] = locale;
    this[localizationsDelegates$] = localizationsDelegates;
    this[localeListResolutionCallback$] = localeListResolutionCallback;
    this[localeResolutionCallback$] = localeResolutionCallback;
    this[supportedLocales$] = supportedLocales;
    this[showPerformanceOverlay$] = showPerformanceOverlay;
    this[checkerboardRasterCacheImages$0] = checkerboardRasterCacheImages;
    this[checkerboardOffscreenLayers$0] = checkerboardOffscreenLayers;
    this[showSemanticsDebugger$] = showSemanticsDebugger;
    this[debugShowWidgetInspector$] = debugShowWidgetInspector;
    this[debugShowCheckedModeBanner$] = debugShowCheckedModeBanner;
    this[inspectorSelectButtonBuilder$] = inspectorSelectButtonBuilder;
    this[shortcuts$1] = shortcuts;
    this[actions$0] = actions;
    this[restorationScopeId$2] = restorationScopeId;
    if (!(navigatorObservers != null)) dart.assertFailed(null, L112, 200, 15, "navigatorObservers != null");
    if (!(routes != null)) dart.assertFailed(null, L112, 201, 15, "routes != null");
    if (!(home == null || onGenerateInitialRoutes == null)) dart.assertFailed("If onGenerateInitialRoutes is specified, the home argument will be " + "redundant.", L112, 203, 10, "home == null ||\r\n         onGenerateInitialRoutes == null");
    if (!(home == null || !dart.test(routes[$containsKey]("/")))) dart.assertFailed("If the home property is specified, the routes table " + "cannot include an entry for \"/\", since it would be redundant.", L112, 209, 10, "home == null ||\r\n         !routes.containsKey(Navigator.defaultRouteName)");
    if (!(builder != null || home != null || dart.test(routes[$containsKey]("/")) || onGenerateRoute != null || onUnknownRoute != null)) dart.assertFailed("Either the home property must be specified, " + "or the routes table must include an entry for \"/\", " + "or there must be on onGenerateRoute callback specified, " + "or there must be an onUnknownRoute callback specified, " + "or the builder property must be specified, " + "because otherwise there is nothing to fall back on if the " + "app is started with an intent that specifies an unknown route.", L112, 215, 10, "builder != null ||\r\n         home != null ||\r\n         routes.containsKey(Navigator.defaultRouteName) ||\r\n         onGenerateRoute != null ||\r\n         onUnknownRoute != null");
    if (!(home != null || dart.test(routes[$isNotEmpty]) || onGenerateRoute != null || onUnknownRoute != null || builder != null && navigatorKey == null && initialRoute == null && dart.test(navigatorObservers[$isEmpty]))) dart.assertFailed("If no route is provided using " + "home, routes, onGenerateRoute, or onUnknownRoute, " + "a non-null callback for the builder property must be provided, " + "and the other navigator-related properties, " + "navigatorKey, initialRoute, and navigatorObservers, " + "must have their initial values " + "(null, null, and the empty list, respectively).", L112, 229, 10, "(home != null ||\r\n          routes.isNotEmpty ||\r\n          onGenerateRoute != null ||\r\n          onUnknownRoute != null)\r\n         ||\r\n         (builder != null &&\r\n          navigatorKey == null &&\r\n          initialRoute == null &&\r\n          navigatorObservers.isEmpty)");
    if (!(builder != null || onGenerateRoute != null || pageRouteBuilder != null)) dart.assertFailed("If neither builder nor onGenerateRoute are provided, the " + "pageRouteBuilder must be specified so that the default handler " + "will know what kind of PageRoute transition to build.", L112, 247, 10, "builder != null ||\r\n         onGenerateRoute != null ||\r\n         pageRouteBuilder != null");
    if (!(title != null)) dart.assertFailed(null, L112, 254, 15, "title != null");
    if (!(color != null)) dart.assertFailed(null, L112, 255, 15, "color != null");
    if (!(supportedLocales != null && dart.test(supportedLocales[$isNotEmpty]))) dart.assertFailed(null, L112, 256, 15, "supportedLocales != null && supportedLocales.isNotEmpty");
    if (!(showPerformanceOverlay != null)) dart.assertFailed(null, L112, 257, 15, "showPerformanceOverlay != null");
    if (!(checkerboardRasterCacheImages != null)) dart.assertFailed(null, L112, 258, 15, "checkerboardRasterCacheImages != null");
    if (!(checkerboardOffscreenLayers != null)) dart.assertFailed(null, L112, 259, 15, "checkerboardOffscreenLayers != null");
    if (!(showSemanticsDebugger != null)) dart.assertFailed(null, L112, 260, 15, "showSemanticsDebugger != null");
    if (!(debugShowCheckedModeBanner != null)) dart.assertFailed(null, L112, 261, 15, "debugShowCheckedModeBanner != null");
    if (!(debugShowWidgetInspector != null)) dart.assertFailed(null, L112, 262, 15, "debugShowWidgetInspector != null");
    this[routeInformationProvider$1] = null;
    this[routeInformationParser$1] = null;
    this[routerDelegate$1] = null;
    this[backButtonDispatcher$1] = null;
    app.WidgetsApp.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app.WidgetsApp.prototype;
  (app.WidgetsApp.router = function(opts) {
    let t93;
    let key = opts && 'key' in opts ? opts.key : null;
    let routeInformationProvider = opts && 'routeInformationProvider' in opts ? opts.routeInformationProvider : null;
    let routeInformationParser = opts && 'routeInformationParser' in opts ? opts.routeInformationParser : null;
    if (routeInformationParser == null) dart.nullFailed(L112, 273, 50, "routeInformationParser");
    let routerDelegate = opts && 'routerDelegate' in opts ? opts.routerDelegate : null;
    if (routerDelegate == null) dart.nullFailed(L112, 274, 42, "routerDelegate");
    let backButtonDispatcher = opts && 'backButtonDispatcher' in opts ? opts.backButtonDispatcher : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let title = opts && 'title' in opts ? opts.title : "";
    if (title == null) dart.nullFailed(L112, 277, 10, "title");
    let onGenerateTitle = opts && 'onGenerateTitle' in opts ? opts.onGenerateTitle : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(L112, 280, 19, "color");
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let localizationsDelegates = opts && 'localizationsDelegates' in opts ? opts.localizationsDelegates : null;
    let localeListResolutionCallback = opts && 'localeListResolutionCallback' in opts ? opts.localeListResolutionCallback : null;
    let localeResolutionCallback = opts && 'localeResolutionCallback' in opts ? opts.localeResolutionCallback : null;
    let supportedLocales = opts && 'supportedLocales' in opts ? opts.supportedLocales : C1127 || CT.C1127;
    if (supportedLocales == null) dart.nullFailed(L112, 285, 10, "supportedLocales");
    let showPerformanceOverlay = opts && 'showPerformanceOverlay' in opts ? opts.showPerformanceOverlay : false;
    if (showPerformanceOverlay == null) dart.nullFailed(L112, 286, 10, "showPerformanceOverlay");
    let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
    if (checkerboardRasterCacheImages == null) dart.nullFailed(L112, 287, 10, "checkerboardRasterCacheImages");
    let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
    if (checkerboardOffscreenLayers == null) dart.nullFailed(L112, 288, 10, "checkerboardOffscreenLayers");
    let showSemanticsDebugger = opts && 'showSemanticsDebugger' in opts ? opts.showSemanticsDebugger : false;
    if (showSemanticsDebugger == null) dart.nullFailed(L112, 289, 10, "showSemanticsDebugger");
    let debugShowWidgetInspector = opts && 'debugShowWidgetInspector' in opts ? opts.debugShowWidgetInspector : false;
    if (debugShowWidgetInspector == null) dart.nullFailed(L112, 290, 10, "debugShowWidgetInspector");
    let debugShowCheckedModeBanner = opts && 'debugShowCheckedModeBanner' in opts ? opts.debugShowCheckedModeBanner : true;
    if (debugShowCheckedModeBanner == null) dart.nullFailed(L112, 291, 10, "debugShowCheckedModeBanner");
    let inspectorSelectButtonBuilder = opts && 'inspectorSelectButtonBuilder' in opts ? opts.inspectorSelectButtonBuilder : null;
    let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let restorationScopeId = opts && 'restorationScopeId' in opts ? opts.restorationScopeId : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[routeInformationProvider$1] = routeInformationProvider;
    this[routeInformationParser$1] = routeInformationParser;
    this[routerDelegate$1] = routerDelegate;
    this[builder$2] = builder;
    this[title$1] = title;
    this[onGenerateTitle$] = onGenerateTitle;
    this[textStyle$1] = textStyle;
    this[color$6] = color;
    this[locale$4] = locale;
    this[localizationsDelegates$] = localizationsDelegates;
    this[localeListResolutionCallback$] = localeListResolutionCallback;
    this[localeResolutionCallback$] = localeResolutionCallback;
    this[supportedLocales$] = supportedLocales;
    this[showPerformanceOverlay$] = showPerformanceOverlay;
    this[checkerboardRasterCacheImages$0] = checkerboardRasterCacheImages;
    this[checkerboardOffscreenLayers$0] = checkerboardOffscreenLayers;
    this[showSemanticsDebugger$] = showSemanticsDebugger;
    this[debugShowWidgetInspector$] = debugShowWidgetInspector;
    this[debugShowCheckedModeBanner$] = debugShowCheckedModeBanner;
    this[inspectorSelectButtonBuilder$] = inspectorSelectButtonBuilder;
    this[shortcuts$1] = shortcuts;
    this[actions$0] = actions;
    this[restorationScopeId$2] = restorationScopeId;
    if (!(routeInformationParser != null && routerDelegate != null)) dart.assertFailed("The routeInformationParser and routerDelegate cannot be null.", L112, 297, 10, "routeInformationParser != null &&\r\n         routerDelegate != null");
    if (!(title != null)) dart.assertFailed(null, L112, 301, 15, "title != null");
    if (!(color != null)) dart.assertFailed(null, L112, 302, 15, "color != null");
    if (!(supportedLocales != null && dart.test(supportedLocales[$isNotEmpty]))) dart.assertFailed(null, L112, 303, 15, "supportedLocales != null && supportedLocales.isNotEmpty");
    if (!(showPerformanceOverlay != null)) dart.assertFailed(null, L112, 304, 15, "showPerformanceOverlay != null");
    if (!(checkerboardRasterCacheImages != null)) dart.assertFailed(null, L112, 305, 15, "checkerboardRasterCacheImages != null");
    if (!(checkerboardOffscreenLayers != null)) dart.assertFailed(null, L112, 306, 15, "checkerboardOffscreenLayers != null");
    if (!(showSemanticsDebugger != null)) dart.assertFailed(null, L112, 307, 15, "showSemanticsDebugger != null");
    if (!(debugShowCheckedModeBanner != null)) dart.assertFailed(null, L112, 308, 15, "debugShowCheckedModeBanner != null");
    if (!(debugShowWidgetInspector != null)) dart.assertFailed(null, L112, 309, 15, "debugShowWidgetInspector != null");
    this[navigatorObservers$] = null;
    this[backButtonDispatcher$1] = (t93 = backButtonDispatcher, t93 == null ? new router.RootBackButtonDispatcher.new() : t93);
    this[navigatorKey$] = null;
    this[onGenerateRoute$0] = null;
    this[pageRouteBuilder$] = null;
    this[home$] = null;
    this[onGenerateInitialRoutes$0] = null;
    this[onUnknownRoute$0] = null;
    this[routes$] = null;
    this[initialRoute$0] = null;
    app.WidgetsApp.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app.WidgetsApp.prototype;
  dart.addTypeTests(app.WidgetsApp);
  dart.addTypeCaches(app.WidgetsApp);
  dart.setMethodSignature(app.WidgetsApp, () => ({
    __proto__: dart.getMethods(app.WidgetsApp.__proto__),
    createState: dart.fnType(app._WidgetsAppState, [])
  }));
  dart.setLibraryUri(app.WidgetsApp, L113);
  dart.setFieldSignature(app.WidgetsApp, () => ({
    __proto__: dart.getFields(app.WidgetsApp.__proto__),
    navigatorKey: dart.finalFieldType(dart.nullable(framework.GlobalKey$(navigator$.NavigatorState))),
    onGenerateRoute: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(navigator$.Route), [navigator$.RouteSettings]))),
    onGenerateInitialRoutes: dart.finalFieldType(dart.nullable(dart.fnType(core.List$(navigator$.Route), [core.String]))),
    pageRouteBuilder: dart.finalFieldType(dart.nullable(dart.gFnType(T => [pages.PageRoute$(T), [navigator$.RouteSettings, dart.fnType(framework.Widget, [framework.BuildContext])]], T => [dart.nullable(core.Object)]))),
    routeInformationParser: dart.finalFieldType(dart.nullable(router.RouteInformationParser$(core.Object))),
    routerDelegate: dart.finalFieldType(dart.nullable(router.RouterDelegate$(core.Object))),
    backButtonDispatcher: dart.finalFieldType(dart.nullable(router.BackButtonDispatcher)),
    routeInformationProvider: dart.finalFieldType(dart.nullable(router.RouteInformationProvider)),
    home: dart.finalFieldType(dart.nullable(framework.Widget)),
    routes: dart.finalFieldType(dart.nullable(core.Map$(core.String, dart.fnType(framework.Widget, [framework.BuildContext])))),
    onUnknownRoute: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(navigator$.Route), [navigator$.RouteSettings]))),
    initialRoute: dart.finalFieldType(dart.nullable(core.String)),
    navigatorObservers: dart.finalFieldType(dart.nullable(core.List$(navigator$.NavigatorObserver))),
    builder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]))),
    title: dart.finalFieldType(core.String),
    onGenerateTitle: dart.finalFieldType(dart.nullable(dart.fnType(core.String, [framework.BuildContext]))),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    color: dart.finalFieldType(ui.Color),
    locale: dart.finalFieldType(dart.nullable(ui.Locale)),
    localizationsDelegates: dart.finalFieldType(dart.nullable(core.Iterable$(localizations.LocalizationsDelegate))),
    localeListResolutionCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(ui.Locale), [dart.nullable(core.List$(ui.Locale)), core.Iterable$(ui.Locale)]))),
    localeResolutionCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(ui.Locale), [dart.nullable(ui.Locale), core.Iterable$(ui.Locale)]))),
    supportedLocales: dart.finalFieldType(core.Iterable$(ui.Locale)),
    showPerformanceOverlay: dart.finalFieldType(core.bool),
    checkerboardRasterCacheImages: dart.finalFieldType(core.bool),
    checkerboardOffscreenLayers: dart.finalFieldType(core.bool),
    showSemanticsDebugger: dart.finalFieldType(core.bool),
    debugShowWidgetInspector: dart.finalFieldType(core.bool),
    inspectorSelectButtonBuilder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, dart.fnType(dart.void, [])]))),
    debugShowCheckedModeBanner: dart.finalFieldType(core.bool),
    shortcuts: dart.finalFieldType(dart.nullable(core.Map$(shortcuts$.LogicalKeySet, actions$.Intent))),
    actions: dart.finalFieldType(dart.nullable(core.Map$(core.Type, actions$.Action$(actions$.Intent)))),
    restorationScopeId: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineLazy(app.WidgetsApp, {
    /*app.WidgetsApp.showPerformanceOverlayOverride*/get showPerformanceOverlayOverride() {
      return false;
    },
    set showPerformanceOverlayOverride(_) {},
    /*app.WidgetsApp.debugShowWidgetInspectorOverride*/get debugShowWidgetInspectorOverride() {
      return false;
    },
    set debugShowWidgetInspectorOverride(_) {},
    /*app.WidgetsApp.debugAllowBannerOverride*/get debugAllowBannerOverride() {
      return true;
    },
    set debugAllowBannerOverride(_) {},
    /*app.WidgetsApp._defaultShortcuts*/get _defaultShortcuts() {
      return new (LinkedMapOfLogicalKeySet$Intent()).from([new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.enter), C1129 || CT.C1129, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.space), C1129 || CT.C1129, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.gameButtonA), C1129 || CT.C1129, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.escape), C1130 || CT.C1130, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.tab), C1131 || CT.C1131, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.shift, keyboard_key.LogicalKeyboardKey.tab), C1132 || CT.C1132, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowLeft), C1133 || CT.C1133, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowRight), C1134 || CT.C1134, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowDown), C1135 || CT.C1135, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowUp), C1136 || CT.C1136, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.control, keyboard_key.LogicalKeyboardKey.arrowUp), C1137 || CT.C1137, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.control, keyboard_key.LogicalKeyboardKey.arrowDown), C1138 || CT.C1138, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.control, keyboard_key.LogicalKeyboardKey.arrowLeft), C1139 || CT.C1139, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.control, keyboard_key.LogicalKeyboardKey.arrowRight), C1140 || CT.C1140, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.pageUp), C1141 || CT.C1141, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.pageDown), C1142 || CT.C1142]);
    },
    /*app.WidgetsApp._defaultWebShortcuts*/get _defaultWebShortcuts() {
      return new (LinkedMapOfLogicalKeySet$Intent()).from([new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.space), C1129 || CT.C1129, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.escape), C1130 || CT.C1130, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.tab), C1131 || CT.C1131, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.shift, keyboard_key.LogicalKeyboardKey.tab), C1132 || CT.C1132, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowUp), C1137 || CT.C1137, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowDown), C1138 || CT.C1138, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowLeft), C1139 || CT.C1139, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowRight), C1140 || CT.C1140, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.pageUp), C1141 || CT.C1141, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.pageDown), C1142 || CT.C1142]);
    },
    /*app.WidgetsApp._defaultMacOsShortcuts*/get _defaultMacOsShortcuts() {
      return new (LinkedMapOfLogicalKeySet$Intent()).from([new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.enter), C1129 || CT.C1129, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.space), C1129 || CT.C1129, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.escape), C1130 || CT.C1130, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.tab), C1131 || CT.C1131, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.shift, keyboard_key.LogicalKeyboardKey.tab), C1132 || CT.C1132, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowLeft), C1133 || CT.C1133, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowRight), C1134 || CT.C1134, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowDown), C1135 || CT.C1135, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowUp), C1136 || CT.C1136, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.meta, keyboard_key.LogicalKeyboardKey.arrowUp), C1137 || CT.C1137, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.meta, keyboard_key.LogicalKeyboardKey.arrowDown), C1138 || CT.C1138, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.meta, keyboard_key.LogicalKeyboardKey.arrowLeft), C1139 || CT.C1139, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.meta, keyboard_key.LogicalKeyboardKey.arrowRight), C1140 || CT.C1140, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.pageUp), C1141 || CT.C1141, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.pageDown), C1142 || CT.C1142]);
    },
    /*app.WidgetsApp.defaultActions*/get defaultActions() {
      return new (LinkedMapOfType$ActionOfIntent()).from([dart.wrapType(actions$.DoNothingIntent), new actions$.DoNothingAction.new(), dart.wrapType(actions$.DoNothingAndStopPropagationIntent), new actions$.DoNothingAction.new({consumesKey: false}), dart.wrapType(focus_traversal.RequestFocusIntent), new focus_traversal.RequestFocusAction.new(), dart.wrapType(focus_traversal.NextFocusIntent), new focus_traversal.NextFocusAction.new(), dart.wrapType(focus_traversal.PreviousFocusIntent), new focus_traversal.PreviousFocusAction.new(), dart.wrapType(focus_traversal.DirectionalFocusIntent), new focus_traversal.DirectionalFocusAction.new(), dart.wrapType(scrollable$.ScrollIntent), new scrollable$.ScrollAction.new()]);
    },
    set defaultActions(_) {}
  }, false);
  var _defaultRouteInformationProvider = dart.privateName(app, "_defaultRouteInformationProvider");
  var _navigator$ = dart.privateName(app, "_navigator");
  var _locale$ = dart.privateName(app, "_locale");
  var _initialRouteName = dart.privateName(app, "_initialRouteName");
  var _updateRouting = dart.privateName(app, "_updateRouting");
  var _resolveLocales = dart.privateName(app, "_resolveLocales");
  var _usesRouter = dart.privateName(app, "_usesRouter");
  var _usesNavigator = dart.privateName(app, "_usesNavigator");
  var _effectiveRouteInformationProvider = dart.privateName(app, "_effectiveRouteInformationProvider");
  var _onGenerateRoute = dart.privateName(app, "_onGenerateRoute");
  var _onUnknownRoute = dart.privateName(app, "_onUnknownRoute");
  var _localizationsDelegates = dart.privateName(app, "_localizationsDelegates");
  var _debugCheckLocalizations = dart.privateName(app, "_debugCheckLocalizations");
  var C1145;
  var C1146;
  var C1147;
  var C1148;
  var C1144;
  var C1143;
  var C1151;
  var C1152;
  var C1153;
  var C1154;
  var C1155;
  var C1156;
  var C1157;
  var C1158;
  var C1150;
  var C1149;
  var C1161;
  var C1160;
  var C1159;
  var C1164;
  var C1165;
  var C1163;
  var C1162;
  var C1168;
  var C1169;
  var C1167;
  var C1166;
  var C1172;
  var C1173;
  var C1171;
  var C1170;
  var C1176;
  var C1177;
  var C1178;
  var C1179;
  var C1175;
  var C1174;
  var C1182;
  var C1181;
  var C1180;
  var C1185;
  var C1184;
  var C1183;
  var C1188;
  var C1189;
  var C1187;
  var C1186;
  var C1192;
  var C1191;
  var C1190;
  var C1195;
  var C1196;
  var C1197;
  var C1194;
  var C1193;
  var C1200;
  var C1199;
  var C1198;
  var C1203;
  var C1204;
  var C1205;
  var C1202;
  var C1201;
  var C1208;
  var C1209;
  var C1210;
  var C1207;
  var C1206;
  var C1213;
  var C1212;
  var C1211;
  var C1216;
  var C1217;
  var C1215;
  var C1214;
  var C1220;
  var C1221;
  var C1219;
  var C1218;
  var C1224;
  var C1225;
  var C1226;
  var C1223;
  var C1222;
  var C1229;
  var C1230;
  var C1228;
  var C1227;
  const State_WidgetsBindingObserver$36$2 = class State_WidgetsBindingObserver extends framework.State$(app.WidgetsApp) {};
  (State_WidgetsBindingObserver$36$2.new = function() {
    State_WidgetsBindingObserver$36$2.__proto__.new.call(this);
  }).prototype = State_WidgetsBindingObserver$36$2.prototype;
  dart.applyMixin(State_WidgetsBindingObserver$36$2, binding$5.WidgetsBindingObserver);
  app._WidgetsAppState = class _WidgetsAppState extends State_WidgetsBindingObserver$36$2 {
    get [_initialRouteName]() {
      let t93;
      return dart.nullCheck(binding$5.WidgetsBinding.instance).window.defaultRouteName !== "/" ? dart.nullCheck(binding$5.WidgetsBinding.instance).window.defaultRouteName : (t93 = this.widget.initialRoute, t93 == null ? dart.nullCheck(binding$5.WidgetsBinding.instance).window.defaultRouteName : t93);
    }
    initState() {
      super.initState();
      this[_updateRouting]();
      this[_locale$] = this[_resolveLocales](dart.nullCheck(binding$5.WidgetsBinding.instance).window.locales, this.widget.supportedLocales);
      dart.nullCheck(binding$5.WidgetsBinding.instance).addObserver(this);
    }
    didUpdateWidget(oldWidget) {
      app.WidgetsApp.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L112, 1129, 35, "oldWidget");
      super.didUpdateWidget(oldWidget);
      this[_updateRouting]({oldWidget: oldWidget});
    }
    dispose() {
      let t93;
      dart.nullCheck(binding$5.WidgetsBinding.instance).removeObserver(this);
      t93 = this[_defaultRouteInformationProvider];
      t93 == null ? null : t93.dispose();
      super.dispose();
    }
    [_updateRouting](opts) {
      let t93, t93$, t93$0, t93$1;
      let oldWidget = opts && 'oldWidget' in opts ? opts.oldWidget : null;
      if (dart.test(this[_usesRouter])) {
        if (!!dart.test(this[_usesNavigator])) dart.assertFailed(null, L112, 1143, 14, "!_usesNavigator");
        this[_navigator$] = null;
        if (oldWidget == null || !dart.equals(oldWidget.routeInformationProvider, this.widget.routeInformationProvider)) {
          t93 = this[_defaultRouteInformationProvider];
          t93 == null ? null : t93.dispose();
          this[_defaultRouteInformationProvider] = null;
          if (this.widget.routeInformationProvider == null) {
            this[_defaultRouteInformationProvider] = new router.PlatformRouteInformationProvider.new({initialRouteInformation: new router.RouteInformation.new({location: this[_initialRouteName]})});
          }
        }
      } else if (dart.test(this[_usesNavigator])) {
        if (!!dart.test(this[_usesRouter])) dart.assertFailed(null, L112, 1157, 14, "!_usesRouter");
        t93$ = this[_defaultRouteInformationProvider];
        t93$ == null ? null : t93$.dispose();
        this[_defaultRouteInformationProvider] = null;
        if (oldWidget == null || !dart.equals(this.widget.navigatorKey, oldWidget.navigatorKey)) {
          this[_navigator$] = (t93$0 = this.widget.navigatorKey, t93$0 == null ? new (GlobalObjectKeyOfNavigatorState()).new(this) : t93$0);
        }
        if (!(this[_navigator$] != null)) dart.assertFailed(null, L112, 1163, 14, "_navigator != null");
      } else {
        if (!(this.widget.builder != null)) dart.assertFailed(null, L112, 1165, 14, "widget.builder != null");
        if (!!dart.test(this[_usesRouter])) dart.assertFailed(null, L112, 1166, 14, "!_usesRouter");
        if (!!dart.test(this[_usesNavigator])) dart.assertFailed(null, L112, 1167, 14, "!_usesNavigator");
        this[_navigator$] = null;
        t93$1 = this[_defaultRouteInformationProvider];
        t93$1 == null ? null : t93$1.dispose();
        this[_defaultRouteInformationProvider] = null;
      }
      if (!dart.equals(this[_usesNavigator], this[_navigator$] != null)) dart.assertFailed(null, L112, 1173, 12, "_usesNavigator == (_navigator != null)");
    }
    get [_usesRouter]() {
      return this.widget.routerDelegate != null;
    }
    get [_usesNavigator]() {
      let t93;
      return this.widget.home != null || dart.equals((t93 = this.widget.routes, t93 == null ? null : t93[$isNotEmpty]), true) || this.widget.onGenerateRoute != null || this.widget.onUnknownRoute != null;
    }
    get [_effectiveRouteInformationProvider]() {
      let t93;
      t93 = this.widget.routeInformationProvider;
      return t93 == null ? this[_defaultRouteInformationProvider] : t93;
    }
    [_onGenerateRoute](settings) {
      if (settings == null) dart.nullFailed(L112, 1188, 50, "settings");
      let name = settings.name;
      let pageContentBuilder = name === "/" && this.widget.home != null ? dart.fn(context => {
        if (context == null) dart.nullFailed(L112, 1191, 25, "context");
        return dart.nullCheck(this.widget.home);
      }, BuildContextToWidget()) : dart.nullCheck(this.widget.routes)[$_get](name);
      if (pageContentBuilder != null) {
        if (!(this.widget.pageRouteBuilder != null)) dart.assertFailed("The default onGenerateRoute handler for WidgetsApp must have a " + "pageRouteBuilder set if the home or routes properties are set.", L112, 1195, 14, "widget.pageRouteBuilder != null");
        let route = dart.nullCheck(this.widget.pageRouteBuilder)(dart.dynamic, settings, pageContentBuilder);
        if (!(route != null)) dart.assertFailed("The pageRouteBuilder for WidgetsApp must return a valid non-null Route.", L112, 1202, 14, "route != null");
        return route;
      }
      if (this.widget.onGenerateRoute != null) return dart.nullCheck(this.widget.onGenerateRoute)(settings);
      return null;
    }
    [_onUnknownRoute](settings) {
      if (settings == null) dart.nullFailed(L112, 1211, 48, "settings");
      if (!dart.test(dart.fn(() => {
        if (this.widget.onUnknownRoute == null) {
          dart.throw(assertions.FlutterError.new("Could not find a generator for route " + dart.str(settings) + " in the " + dart.str(this[$runtimeType]) + ".\n" + "Make sure your root app widget has provided a way to generate \n" + "this route.\n" + "Generators for routes are searched for in the following order:\n" + " 1. For the \"/\" route, the \"home\" property, if non-null, is used.\n" + " 2. Otherwise, the \"routes\" table is used, if it has an entry for " + "the route.\n" + " 3. Otherwise, onGenerateRoute is called. It should return a " + "non-null value for any valid route not handled by \"home\" and \"routes\".\n" + " 4. Finally if all else fails onUnknownRoute is called.\n" + "Unfortunately, onUnknownRoute was not set."));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L112, 1212, 12, "() {\r\n      if (widget.onUnknownRoute == null) {\r\n        throw FlutterError(\r\n          'Could not find a generator for route $settings in the $runtimeType.\\n'\r\n          'Make sure your root app widget has provided a way to generate \\n'\r\n          'this route.\\n'\r\n          'Generators for routes are searched for in the following order:\\n'\r\n          ' 1. For the \"/\" route, the \"home\" property, if non-null, is used.\\n'\r\n          ' 2. Otherwise, the \"routes\" table is used, if it has an entry for '\r\n          'the route.\\n'\r\n          ' 3. Otherwise, onGenerateRoute is called. It should return a '\r\n          'non-null value for any valid route not handled by \"home\" and \"routes\".\\n'\r\n          ' 4. Finally if all else fails onUnknownRoute is called.\\n'\r\n          'Unfortunately, onUnknownRoute was not set.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      let result = dart.nullCheck(this.widget.onUnknownRoute)(settings);
      if (!dart.test(dart.fn(() => {
        if (result == null) {
          dart.throw(assertions.FlutterError.new("The onUnknownRoute callback returned null.\n" + "When the " + dart.str(this[$runtimeType]) + " requested the route " + dart.str(settings) + " from its " + "onUnknownRoute callback, the callback returned null. Such callbacks " + "must never return null."));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L112, 1231, 12, "() {\r\n      if (result == null) {\r\n        throw FlutterError(\r\n          'The onUnknownRoute callback returned null.\\n'\r\n          'When the $runtimeType requested the route $settings from its '\r\n          'onUnknownRoute callback, the callback returned null. Such callbacks '\r\n          'must never return null.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      return dart.nullCheck(result);
    }
    didPopRoute() {
      return async.async(core.bool, (function* didPopRoute() {
        let t93;
        if (!dart.test(this.mounted)) dart.assertFailed(null, L112, 1248, 12, "mounted");
        if (dart.test(this[_usesRouter])) return false;
        let navigator = (t93 = this[_navigator$], t93 == null ? null : t93.currentState);
        if (navigator == null) return false;
        return yield navigator.maybePop(ObjectN());
      }).bind(this));
    }
    didPushRoute(route) {
      if (route == null) dart.nullFailed(L112, 1261, 36, "route");
      return async.async(core.bool, (function* didPushRoute() {
        let t93;
        if (!dart.test(this.mounted)) dart.assertFailed(null, L112, 1262, 12, "mounted");
        if (dart.test(this[_usesRouter])) return false;
        let navigator = (t93 = this[_navigator$], t93 == null ? null : t93.currentState);
        if (navigator == null) return false;
        navigator.pushNamed(ObjectN(), route);
        return true;
      }).bind(this));
    }
    [_resolveLocales](preferredLocales, supportedLocales) {
      if (supportedLocales == null) dart.nullFailed(L112, 1280, 75, "supportedLocales");
      if (this.widget.localeListResolutionCallback != null) {
        let locale = dart.nullCheck(this.widget.localeListResolutionCallback)(preferredLocales, this.widget.supportedLocales);
        if (locale != null) return locale;
      }
      if (this.widget.localeResolutionCallback != null) {
        let locale = dart.nullCheck(this.widget.localeResolutionCallback)(preferredLocales != null && dart.test(preferredLocales[$isNotEmpty]) ? preferredLocales[$first] : null, this.widget.supportedLocales);
        if (locale != null) return locale;
      }
      return app._WidgetsAppState.basicLocaleListResolution(preferredLocales, supportedLocales);
    }
    static basicLocaleListResolution(preferredLocales, supportedLocales) {
      let t94, t93, t94$, t93$, t94$0, t93$0, t94$1, t93$1, t94$2, t93$2, t93$3, t93$4;
      if (supportedLocales == null) dart.nullFailed(L112, 1342, 92, "supportedLocales");
      if (preferredLocales == null || dart.test(preferredLocales[$isEmpty])) {
        return supportedLocales[$first];
      }
      let allSupportedLocales = new (IdentityMapOfString$Locale()).new();
      let languageAndCountryLocales = new (IdentityMapOfString$Locale()).new();
      let languageAndScriptLocales = new (IdentityMapOfString$Locale()).new();
      let languageLocales = new (IdentityMapOfString$Locale()).new();
      let countryLocales = new (IdentityMapOfStringN$Locale()).new();
      for (let locale of supportedLocales) {
        t93 = allSupportedLocales;
        t94 = dart.str(locale.languageCode) + "_" + dart.str(locale.scriptCode) + "_" + dart.str(locale.countryCode);
        t93[$_get](t94) == null ? t93[$_set](t94, locale) : null;
        t93$ = languageAndScriptLocales;
        t94$ = dart.str(locale.languageCode) + "_" + dart.str(locale.scriptCode);
        t93$[$_get](t94$) == null ? t93$[$_set](t94$, locale) : null;
        t93$0 = languageAndCountryLocales;
        t94$0 = dart.str(locale.languageCode) + "_" + dart.str(locale.countryCode);
        t93$0[$_get](t94$0) == null ? t93$0[$_set](t94$0, locale) : null;
        t93$1 = languageLocales;
        t94$1 = locale.languageCode;
        t93$1[$_get](t94$1) == null ? t93$1[$_set](t94$1, locale) : null;
        t93$2 = countryLocales;
        t94$2 = locale.countryCode;
        t93$2[$_get](t94$2) == null ? t93$2[$_set](t94$2, locale) : null;
      }
      let matchesLanguageCode = null;
      let matchesCountryCode = null;
      for (let localeIndex = 0; localeIndex < dart.notNull(preferredLocales[$length]); localeIndex = localeIndex + 1) {
        let userLocale = preferredLocales[$_get](localeIndex);
        if (dart.test(allSupportedLocales[$containsKey](dart.str(userLocale.languageCode) + "_" + dart.str(userLocale.scriptCode) + "_" + dart.str(userLocale.countryCode)))) {
          return userLocale;
        }
        if (userLocale.scriptCode != null) {
          let match = languageAndScriptLocales[$_get](dart.str(userLocale.languageCode) + "_" + dart.str(userLocale.scriptCode));
          if (match != null) {
            return match;
          }
        }
        if (userLocale.countryCode != null) {
          let match = languageAndCountryLocales[$_get](dart.str(userLocale.languageCode) + "_" + dart.str(userLocale.countryCode));
          if (match != null) {
            return match;
          }
        }
        if (matchesLanguageCode != null) {
          return matchesLanguageCode;
        }
        let match = languageLocales[$_get](userLocale.languageCode);
        if (match != null) {
          matchesLanguageCode = match;
          if (localeIndex === 0 && !(localeIndex + 1 < dart.notNull(preferredLocales[$length]) && preferredLocales[$_get](localeIndex + 1).languageCode == userLocale.languageCode)) {
            return matchesLanguageCode;
          }
        }
        if (matchesCountryCode == null && userLocale.countryCode != null) {
          match = countryLocales[$_get](userLocale.countryCode);
          if (match != null) {
            matchesCountryCode = match;
          }
        }
      }
      let resolvedLocale = (t93$4 = (t93$3 = matchesLanguageCode, t93$3 == null ? matchesCountryCode : t93$3), t93$4 == null ? supportedLocales[$first] : t93$4);
      return resolvedLocale;
    }
    didChangeLocales(locales) {
      let newLocale = this[_resolveLocales](locales, this.widget.supportedLocales);
      if (!dart.equals(newLocale, this[_locale$])) {
        this.setState(dart.fn(() => {
          this[_locale$] = newLocale;
        }, VoidTovoid()));
      }
    }
    get [_localizationsDelegates]() {
      return new (SyncIterableOfLocalizationsDelegate()).new((function* _localizationsDelegates() {
        if (this.widget.localizationsDelegates != null) yield* dart.nullCheck(this.widget.localizationsDelegates);
        yield localizations.DefaultWidgetsLocalizations.delegate;
      }).bind(this));
    }
    [_debugCheckLocalizations](appLocale) {
      if (appLocale == null) dart.nullFailed(L112, 1451, 40, "appLocale");
      if (!dart.test(dart.fn(() => {
        let unsupportedTypes = this[_localizationsDelegates][$map](core.Type, dart.fn(delegate => {
          if (delegate == null) dart.nullFailed(L112, 1454, 75, "delegate");
          return delegate.type;
        }, LocalizationsDelegateToType()))[$toSet]();
        for (let delegate of this[_localizationsDelegates]) {
          if (!dart.test(unsupportedTypes.contains(delegate.type))) continue;
          if (dart.test(delegate.isSupported(appLocale))) unsupportedTypes.remove(delegate.type);
        }
        if (dart.test(unsupportedTypes[$isEmpty])) return true;
        if (dart.test(collections.listEquals(core.String, unsupportedTypes[$map](core.String, dart.fn(type => {
          if (type == null) dart.nullFailed(L112, 1467, 49, "type");
          return dart.toString(type);
        }, TypeToString()))[$toList](), JSArrayOfString().of(["CupertinoLocalizations"])))) return true;
        let message = new core.StringBuffer.new();
        message.writeln("═"[$times](8));
        message.writeln("Warning: This application's locale, " + dart.str(appLocale) + ", is not supported by all of its\n" + "localization delegates.");
        for (let unsupportedType of unsupportedTypes) {
          if (dart.toString(unsupportedType) === "CupertinoLocalizations") continue;
          message.writeln("> A " + dart.str(unsupportedType) + " delegate that supports the " + dart.str(appLocale) + " locale was not found.");
        }
        message.writeln("See https://flutter.dev/tutorials/internationalization/ for more\n" + "information about configuring an app's locale, supportedLocales,\n" + "and localizationsDelegates parameters.");
        message.writeln("═"[$times](8));
        print.debugPrint(message.toString());
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L112, 1452, 12, "() {\r\n      final Set<Type> unsupportedTypes =\r\n        _localizationsDelegates.map<Type>((LocalizationsDelegate<dynamic> delegate) => delegate.type).toSet();\r\n      for (final LocalizationsDelegate<dynamic> delegate in _localizationsDelegates) {\r\n        if (!unsupportedTypes.contains(delegate.type))\r\n          continue;\r\n        if (delegate.isSupported(appLocale))\r\n          unsupportedTypes.remove(delegate.type);\r\n      }\r\n      if (unsupportedTypes.isEmpty)\r\n        return true;\r\n\r\n      // Currently the Cupertino library only provides english localizations.\r\n      // Remove this when https://github.com/flutter/flutter/issues/23847\r\n      // is fixed.\r\n      if (listEquals(unsupportedTypes.map((Type type) => type.toString()).toList(), <String>['CupertinoLocalizations']))\r\n        return true;\r\n\r\n      final StringBuffer message = StringBuffer();\r\n      message.writeln('\\u2550' * 8);\r\n      message.writeln(\r\n        \"Warning: This application's locale, $appLocale, is not supported by all of its\\n\"\r\n        'localization delegates.'\r\n      );\r\n      for (final Type unsupportedType in unsupportedTypes) {\r\n        // Currently the Cupertino library only provides english localizations.\r\n        // Remove this when https://github.com/flutter/flutter/issues/23847\r\n        // is fixed.\r\n        if (unsupportedType.toString() == 'CupertinoLocalizations')\r\n          continue;\r\n        message.writeln(\r\n          '> A $unsupportedType delegate that supports the $appLocale locale was not found.'\r\n        );\r\n      }\r\n      message.writeln(\r\n        'See https://flutter.dev/tutorials/internationalization/ for more\\n'\r\n        \"information about configuring an app's locale, supportedLocales,\\n\"\r\n        'and localizationsDelegates parameters.'\r\n      );\r\n      message.writeln('\\u2550' * 8);\r\n      debugPrint(message.toString());\r\n      return true;\r\n    }()");
      return true;
    }
    build(context) {
      let t93, t93$;
      if (context == null) dart.nullFailed(L112, 1499, 29, "context");
      let routing = null;
      if (dart.test(this[_usesRouter])) {
        if (!(this[_effectiveRouteInformationProvider] != null)) dart.assertFailed(null, L112, 1502, 14, "_effectiveRouteInformationProvider != null");
        routing = new (RouterOfObject()).new({routeInformationProvider: this[_effectiveRouteInformationProvider], routeInformationParser: this.widget.routeInformationParser, routerDelegate: dart.nullCheck(this.widget.routerDelegate), backButtonDispatcher: this.widget.backButtonDispatcher, $creationLocationd_0dea112b090073317d4: C1143 || CT.C1143});
      } else if (dart.test(this[_usesNavigator])) {
        if (!(this[_navigator$] != null)) dart.assertFailed(null, L112, 1510, 14, "_navigator != null");
        routing = new navigator$.Navigator.new({restorationScopeId: "nav", key: this[_navigator$], initialRoute: this[_initialRouteName], onGenerateRoute: dart.bind(this, _onGenerateRoute), onGenerateInitialRoutes: this.widget.onGenerateInitialRoutes == null ? C311 || CT.C311 : dart.fn((navigator, initialRouteName) => {
            if (navigator == null) dart.nullFailed(L112, 1518, 29, "navigator");
            if (initialRouteName == null) dart.nullFailed(L112, 1518, 47, "initialRouteName");
            return dart.nullCheck(this.widget.onGenerateInitialRoutes)(initialRouteName);
          }, NavigatorStateAndStringToListOfRoute()), onUnknownRoute: dart.bind(this, _onUnknownRoute), observers: dart.nullCheck(this.widget.navigatorObservers), reportsRouteUpdateToEngine: true, $creationLocationd_0dea112b090073317d4: C1149 || CT.C1149});
      }
      let result = null;
      if (this.widget.builder != null) {
        result = new basic.Builder.new({builder: dart.fn(context => {
            if (context == null) dart.nullFailed(L112, 1530, 32, "context");
            return dart.nullCheck(this.widget.builder)(context, routing);
          }, BuildContextToWidget()), $creationLocationd_0dea112b090073317d4: C1159 || CT.C1159});
      } else {
        if (!(routing != null)) dart.assertFailed(null, L112, 1535, 14, "routing != null");
        result = dart.nullCheck(routing);
      }
      if (this.widget.textStyle != null) {
        result = new text.DefaultTextStyle.new({style: dart.nullCheck(this.widget.textStyle), child: result, $creationLocationd_0dea112b090073317d4: C1162 || CT.C1162});
      }
      let performanceOverlay = null;
      if (dart.test(this.widget.showPerformanceOverlay) || dart.test(app.WidgetsApp.showPerformanceOverlayOverride)) {
        performanceOverlay = new performance_overlay$.PerformanceOverlay.allEnabled({checkerboardRasterCacheImages: this.widget.checkerboardRasterCacheImages, checkerboardOffscreenLayers: this.widget.checkerboardOffscreenLayers, $creationLocationd_0dea112b090073317d4: C1166 || CT.C1166});
      } else if (dart.test(this.widget.checkerboardRasterCacheImages) || dart.test(this.widget.checkerboardOffscreenLayers)) {
        performanceOverlay = new performance_overlay$.PerformanceOverlay.new({checkerboardRasterCacheImages: this.widget.checkerboardRasterCacheImages, checkerboardOffscreenLayers: this.widget.checkerboardOffscreenLayers, $creationLocationd_0dea112b090073317d4: C1170 || CT.C1170});
      }
      if (performanceOverlay != null) {
        result = new basic.Stack.new({children: JSArrayOfWidget().of([result, new basic.Positioned.new({top: 0.0, left: 0.0, right: 0.0, child: performanceOverlay, $creationLocationd_0dea112b090073317d4: C1174 || CT.C1174})]), $creationLocationd_0dea112b090073317d4: C1180 || CT.C1180});
      }
      if (dart.test(this.widget.showSemanticsDebugger)) {
        result = new semantics_debugger.SemanticsDebugger.new({child: result, $creationLocationd_0dea112b090073317d4: C1183 || CT.C1183});
      }
      if (!dart.test(dart.fn(() => {
        if (dart.test(this.widget.debugShowWidgetInspector) || dart.test(app.WidgetsApp.debugShowWidgetInspectorOverride)) {
          result = new widget_inspector.WidgetInspector.new({child: result, selectButtonBuilder: this.widget.inspectorSelectButtonBuilder, $creationLocationd_0dea112b090073317d4: C1186 || CT.C1186});
        }
        if (dart.test(this.widget.debugShowCheckedModeBanner) && dart.test(app.WidgetsApp.debugAllowBannerOverride)) {
          result = new banner.CheckedModeBanner.new({child: result, $creationLocationd_0dea112b090073317d4: C1190 || CT.C1190});
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L112, 1575, 12, "() {\r\n      if (widget.debugShowWidgetInspector || WidgetsApp.debugShowWidgetInspectorOverride) {\r\n        result = WidgetInspector(\r\n          child: result,\r\n          selectButtonBuilder: widget.inspectorSelectButtonBuilder,\r\n        );\r\n      }\r\n      if (widget.debugShowCheckedModeBanner && WidgetsApp.debugAllowBannerOverride) {\r\n        result = CheckedModeBanner(\r\n          child: result,\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      let title = null;
      if (this.widget.onGenerateTitle != null) {
        title = new basic.Builder.new({builder: dart.fn(context => {
            if (context == null) dart.nullFailed(L112, 1596, 32, "context");
            let title = dart.nullCheck(this.widget.onGenerateTitle)(context);
            if (!(title != null)) dart.assertFailed("onGenerateTitle must return a non-null String", L112, 1598, 18, "title != null");
            return new title$.Title.new({title: title, color: this.widget.color, child: result, $creationLocationd_0dea112b090073317d4: C1193 || CT.C1193});
          }, BuildContextToTitle()), $creationLocationd_0dea112b090073317d4: C1198 || CT.C1198});
      } else {
        title = new title$.Title.new({title: this.widget.title, color: this.widget.color, child: result, $creationLocationd_0dea112b090073317d4: C1201 || CT.C1201});
      }
      let appLocale = this.widget.locale != null ? this[_resolveLocales](JSArrayOfLocale().of([dart.nullCheck(this.widget.locale)]), this.widget.supportedLocales) : dart.nullCheck(this[_locale$]);
      if (!dart.test(this[_debugCheckLocalizations](appLocale))) dart.assertFailed(null, L112, 1618, 12, "_debugCheckLocalizations(appLocale)");
      return new restoration$.RootRestorationScope.new({restorationId: this.widget.restorationScopeId, child: new shortcuts$.Shortcuts.new({shortcuts: (t93 = this.widget.shortcuts, t93 == null ? app.WidgetsApp.defaultShortcuts : t93), debugLabel: "<Default WidgetsApp Shortcuts>", child: new actions$.Actions.new({actions: (t93$ = this.widget.actions, t93$ == null ? app.WidgetsApp.defaultActions : t93$), child: new focus_traversal.FocusTraversalGroup.new({policy: new focus_traversal.ReadingOrderTraversalPolicy.new(), child: new app._MediaQueryFromWindow.new({child: new localizations.Localizations.new({locale: appLocale, delegates: this[_localizationsDelegates][$toList](), child: title, $creationLocationd_0dea112b090073317d4: C1206 || CT.C1206}), $creationLocationd_0dea112b090073317d4: C1211 || CT.C1211}), $creationLocationd_0dea112b090073317d4: C1214 || CT.C1214}), $creationLocationd_0dea112b090073317d4: C1218 || CT.C1218}), $creationLocationd_0dea112b090073317d4: C1222 || CT.C1222}), $creationLocationd_0dea112b090073317d4: C1227 || CT.C1227});
    }
  };
  (app._WidgetsAppState.new = function() {
    this[_defaultRouteInformationProvider] = null;
    this[_navigator$] = null;
    this[_locale$] = null;
    app._WidgetsAppState.__proto__.new.call(this);
    ;
  }).prototype = app._WidgetsAppState.prototype;
  dart.addTypeTests(app._WidgetsAppState);
  dart.addTypeCaches(app._WidgetsAppState);
  dart.setMethodSignature(app._WidgetsAppState, () => ({
    __proto__: dart.getMethods(app._WidgetsAppState.__proto__),
    [_updateRouting]: dart.fnType(dart.void, [], {oldWidget: dart.nullable(app.WidgetsApp)}, {}),
    [_onGenerateRoute]: dart.fnType(dart.nullable(navigator$.Route), [navigator$.RouteSettings]),
    [_onUnknownRoute]: dart.fnType(navigator$.Route, [navigator$.RouteSettings]),
    [_resolveLocales]: dart.fnType(ui.Locale, [dart.nullable(core.List$(ui.Locale)), core.Iterable$(ui.Locale)]),
    [_debugCheckLocalizations]: dart.fnType(core.bool, [ui.Locale]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(app._WidgetsAppState, () => ({
    __proto__: dart.getGetters(app._WidgetsAppState.__proto__),
    [_initialRouteName]: core.String,
    [_usesRouter]: core.bool,
    [_usesNavigator]: core.bool,
    [_effectiveRouteInformationProvider]: dart.nullable(router.RouteInformationProvider),
    [_localizationsDelegates]: core.Iterable$(localizations.LocalizationsDelegate)
  }));
  dart.setLibraryUri(app._WidgetsAppState, L113);
  dart.setFieldSignature(app._WidgetsAppState, () => ({
    __proto__: dart.getFields(app._WidgetsAppState.__proto__),
    [_defaultRouteInformationProvider]: dart.fieldType(dart.nullable(router.PlatformRouteInformationProvider)),
    [_navigator$]: dart.fieldType(dart.nullable(framework.GlobalKey$(navigator$.NavigatorState))),
    [_locale$]: dart.fieldType(dart.nullable(ui.Locale))
  }));
  var child$39 = dart.privateName(app, "_MediaQueryFromWindow.child");
  app._MediaQueryFromWindow = class _MediaQueryFromWindow extends framework.StatefulWidget {
    get child() {
      return this[child$39];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new app._MediaQueryFromWindowsState.new();
    }
  };
  (app._MediaQueryFromWindow.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L112, 1647, 56, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$39] = child;
    app._MediaQueryFromWindow.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app._MediaQueryFromWindow.prototype;
  dart.addTypeTests(app._MediaQueryFromWindow);
  dart.addTypeCaches(app._MediaQueryFromWindow);
  dart.setMethodSignature(app._MediaQueryFromWindow, () => ({
    __proto__: dart.getMethods(app._MediaQueryFromWindow.__proto__),
    createState: dart.fnType(app._MediaQueryFromWindowsState, [])
  }));
  dart.setLibraryUri(app._MediaQueryFromWindow, L113);
  dart.setFieldSignature(app._MediaQueryFromWindow, () => ({
    __proto__: dart.getFields(app._MediaQueryFromWindow.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C1233;
  var C1234;
  var C1232;
  var C1231;
  const State_WidgetsBindingObserver$36$3 = class State_WidgetsBindingObserver extends framework.State$(app._MediaQueryFromWindow) {};
  (State_WidgetsBindingObserver$36$3.new = function() {
    State_WidgetsBindingObserver$36$3.__proto__.new.call(this);
  }).prototype = State_WidgetsBindingObserver$36$3.prototype;
  dart.applyMixin(State_WidgetsBindingObserver$36$3, binding$5.WidgetsBindingObserver);
  app._MediaQueryFromWindowsState = class _MediaQueryFromWindowsState extends State_WidgetsBindingObserver$36$3 {
    initState() {
      super.initState();
      dart.nullCheck(binding$5.WidgetsBinding.instance).addObserver(this);
    }
    didChangeAccessibilityFeatures() {
      this.setState(dart.fn(() => {
      }, VoidTovoid()));
    }
    didChangeMetrics() {
      this.setState(dart.fn(() => {
      }, VoidTovoid()));
    }
    didChangeTextScaleFactor() {
      this.setState(dart.fn(() => {
      }, VoidTovoid()));
    }
    didChangePlatformBrightness() {
      this.setState(dart.fn(() => {
      }, VoidTovoid()));
    }
    build(context) {
      if (context == null) dart.nullFailed(L112, 1702, 29, "context");
      let data = new media_query.MediaQueryData.fromWindow(dart.nullCheck(binding$5.WidgetsBinding.instance).window);
      if (!false) {
        data = data.copyWith({platformBrightness: debug$.debugBrightnessOverride});
      }
      return new media_query.MediaQuery.new({data: data, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C1231 || CT.C1231});
    }
    dispose() {
      dart.nullCheck(binding$5.WidgetsBinding.instance).removeObserver(this);
      super.dispose();
    }
  };
  (app._MediaQueryFromWindowsState.new = function() {
    app._MediaQueryFromWindowsState.__proto__.new.call(this);
    ;
  }).prototype = app._MediaQueryFromWindowsState.prototype;
  dart.addTypeTests(app._MediaQueryFromWindowsState);
  dart.addTypeCaches(app._MediaQueryFromWindowsState);
  dart.setMethodSignature(app._MediaQueryFromWindowsState, () => ({
    __proto__: dart.getMethods(app._MediaQueryFromWindowsState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(app._MediaQueryFromWindowsState, L113);
  var _buildOwner = dart.privateName(binding$5, "_buildOwner");
  var _observers = dart.privateName(binding$5, "_observers");
  var _needToReportFirstFrame = dart.privateName(binding$5, "_needToReportFirstFrame");
  var _firstFrameCompleter = dart.privateName(binding$5, "_firstFrameCompleter");
  var _renderViewElement = dart.privateName(binding$5, "_renderViewElement");
  var _readyToProduceFrames = dart.privateName(binding$5, "_readyToProduceFrames");
  var _debugAddStackFilters = dart.privateName(binding$5, "_debugAddStackFilters");
  var _handleBuildScheduled = dart.privateName(binding$5, "_handleBuildScheduled");
  var _handleNavigationInvocation = dart.privateName(binding$5, "_handleNavigationInvocation");
  var C1235;
  var PartialStackFrame_method = dart.privateName(assertions, "PartialStackFrame.method");
  var PartialStackFrame_className = dart.privateName(assertions, "PartialStackFrame.className");
  var PartialStackFrame_package = dart.privateName(assertions, "PartialStackFrame.package");
  var C1236;
  var C1237;
  var C1238;
  var C1239;
  var C1240;
  var C1241;
  var C1242;
  var C1243;
  var C1244;
  var RepetitiveStackFrameFilter_replacement = dart.privateName(assertions, "RepetitiveStackFrameFilter.replacement");
  var C1246;
  var RepetitiveStackFrameFilter_frames = dart.privateName(assertions, "RepetitiveStackFrameFilter.frames");
  var C1245;
  var C1248;
  var C1247;
  var C1250;
  var C1249;
  var C1252;
  var C1251;
  var C1254;
  var C1253;
  var C1256;
  var C1255;
  var _forceRebuild = dart.privateName(binding$5, "_forceRebuild");
  var _handlePushRouteInformation = dart.privateName(binding$5, "_handlePushRouteInformation");
  var C1259;
  var C1260;
  var C1258;
  var C1257;
  var debugBuildingDirtyElements = dart.privateName(binding$5, "WidgetsBinding.debugBuildingDirtyElements");
  binding$5.WidgetsBinding = class WidgetsBinding extends core.Object {
    static get instance() {
      return binding$5.WidgetsBinding._instance;
    }
  };
  binding$5.WidgetsBinding[dart.mixinOn] = _WidgetsBinding$36BindingBase$36ServicesBinding$36SchedulerBinding$36GestureBinding$36RendererBinding$36SemanticsBinding => class WidgetsBinding extends _WidgetsBinding$36BindingBase$36ServicesBinding$36SchedulerBinding$36GestureBinding$36RendererBinding$36SemanticsBinding {
    get debugBuildingDirtyElements() {
      return this[debugBuildingDirtyElements];
    }
    set debugBuildingDirtyElements(value) {
      this[debugBuildingDirtyElements] = value;
    }
    initInstances() {
      super.initInstances();
      binding$5.WidgetsBinding._instance = this;
      if (!dart.test(dart.fn(() => {
        this[_debugAddStackFilters]();
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L6, 280, 12, "() {\r\n      _debugAddStackFilters();\r\n      return true;\r\n    }()");
      this[_buildOwner] = new framework.BuildOwner.new();
      dart.nullCheck(this.buildOwner).onBuildScheduled = dart.bind(this, _handleBuildScheduled);
      this.window.onLocaleChanged = dart.bind(this, 'handleLocaleChanged');
      this.window.onAccessibilityFeaturesChanged = dart.bind(this, 'handleAccessibilityFeaturesChanged');
      system_channels.SystemChannels.navigation.setMethodCallHandler(dart.bind(this, _handleNavigationInvocation));
      assertions.FlutterErrorDetails.propertiesTransformers[$add](C1235 || CT.C1235);
    }
    [_debugAddStackFilters]() {
      let elementInflateWidget = C1236 || CT.C1236;
      let elementUpdateChild = C1237 || CT.C1237;
      let elementRebuild = C1238 || CT.C1238;
      let componentElementPerformRebuild = C1239 || CT.C1239;
      let componentElementFirstBuild = C1240 || CT.C1240;
      let componentElementMount = C1241 || CT.C1241;
      let statefulElementFirstBuild = C1242 || CT.C1242;
      let singleChildMount = C1243 || CT.C1243;
      let statefulElementRebuild = C1244 || CT.C1244;
      assertions.FlutterError.addDefaultStackFilter(C1245 || CT.C1245);
      assertions.FlutterError.addDefaultStackFilter(C1247 || CT.C1247);
      assertions.FlutterError.addDefaultStackFilter(C1249 || CT.C1249);
      assertions.FlutterError.addDefaultStackFilter(C1251 || CT.C1251);
      assertions.FlutterError.addDefaultStackFilter(C1253 || CT.C1253);
      assertions.FlutterError.addDefaultStackFilter(C1255 || CT.C1255);
    }
    initServiceExtensions() {
      super.initServiceExtensions();
      if (!false) {
        this.registerSignalServiceExtension({name: "debugDumpApp", callback: dart.fn(() => {
            binding$5.debugDumpApp();
            return print.debugPrintDone;
          }, VoidToFutureOfvoid())});
        if (!true) {
          this.registerBoolServiceExtension({name: "showPerformanceOverlay", getter: dart.fn(() => FutureOfbool().value(app.WidgetsApp.showPerformanceOverlayOverride), VoidToFutureOfbool()), setter: dart.fn(value => {
              if (value == null) dart.nullFailed(L6, 403, 25, "value");
              if (dart.equals(app.WidgetsApp.showPerformanceOverlayOverride, value)) return FutureOfvoid().value();
              app.WidgetsApp.showPerformanceOverlayOverride = value;
              return this[_forceRebuild]();
            }, boolToFutureOfvoid())});
        }
        this.registerServiceExtension({name: "didSendFirstFrameEvent", callback: dart.fn(_ => {
            if (_ == null) dart.nullFailed(L6, 414, 20, "_");
            return async.async(MapOfString$dynamic(), (function*() {
              return new (IdentityMapOfString$dynamic()).from(["enabled", dart.test(this[_needToReportFirstFrame]) ? "false" : "true"]);
            }).bind(this));
          }, MapOfString$StringToFutureOfMapOfString$dynamic())});
        this.registerServiceExtension({name: "didSendFirstFrameRasterizedEvent", callback: dart.fn(_ => {
            if (_ == null) dart.nullFailed(L6, 428, 20, "_");
            return async.async(MapOfString$dynamic(), (function*() {
              return new (IdentityMapOfString$dynamic()).from(["enabled", dart.test(this.firstFrameRasterized) ? "true" : "false"]);
            }).bind(this));
          }, MapOfString$StringToFutureOfMapOfString$dynamic())});
        this.registerServiceExtension({name: "fastReassemble", callback: dart.fn(params => {
            if (params == null) dart.nullFailed(L6, 440, 40, "params");
            return async.async(MapOfString$String(), (function*() {
              let className = StringN().as(params[$_get]("className"));
              function markElementsDirty(element) {
                if (element == null) dart.nullFailed(L6, 442, 42, "element");
                if (dart.toString(dart.runtimeType(element.widget)) == className) {
                  element.markNeedsBuild();
                }
                element.visitChildElements(markElementsDirty);
              }
              dart.fn(markElementsDirty, ElementTovoid());
              if (this.renderViewElement != null) {
                markElementsDirty(dart.nullCheck(this.renderViewElement));
              }
              yield this.endOfFrame;
              return new (IdentityMapOfString$String()).from(["type", "Success"]);
            }).bind(this));
          }, MapOfString$ObjectToFutureOfMapOfString$String())});
        this.registerBoolServiceExtension({name: "profileWidgetBuilds", getter: dart.fn(() => async.async(core.bool, function*() {
            return debug$0.debugProfileBuildsEnabled;
          }), VoidToFutureOfbool()), setter: dart.fn(value => {
            if (value == null) dart.nullFailed(L6, 460, 23, "value");
            return async.async(dart.void, function*() {
              if (!dart.equals(debug$0.debugProfileBuildsEnabled, value)) debug$0.debugProfileBuildsEnabled = value;
            });
          }, boolToFutureOfvoid())});
      }
      if (!dart.test(dart.fn(() => {
        this.registerBoolServiceExtension({name: "debugAllowBanner", getter: dart.fn(() => FutureOfbool().value(app.WidgetsApp.debugAllowBannerOverride), VoidToFutureOfbool()), setter: dart.fn(value => {
            if (value == null) dart.nullFailed(L6, 471, 23, "value");
            if (dart.equals(app.WidgetsApp.debugAllowBannerOverride, value)) return FutureOfvoid().value();
            app.WidgetsApp.debugAllowBannerOverride = value;
            return this[_forceRebuild]();
          }, boolToFutureOfvoid())});
        this.registerBoolServiceExtension({name: "debugWidgetInspector", getter: dart.fn(() => async.async(core.bool, function*() {
            return app.WidgetsApp.debugShowWidgetInspectorOverride;
          }), VoidToFutureOfbool()), setter: dart.fn(value => {
            if (value == null) dart.nullFailed(L6, 484, 25, "value");
            if (dart.equals(app.WidgetsApp.debugShowWidgetInspectorOverride, value)) return FutureOfvoid().value();
            app.WidgetsApp.debugShowWidgetInspectorOverride = value;
            return this[_forceRebuild]();
          }, boolToFutureOfvoid())});
        widget_inspector.WidgetInspectorService.instance.initServiceExtensions(dart.bind(this, 'registerServiceExtension'));
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L6, 467, 12, "() {\r\n      registerBoolServiceExtension(\r\n        name: 'debugAllowBanner',\r\n        getter: () => Future<bool>.value(WidgetsApp.debugAllowBannerOverride),\r\n        setter: (bool value) {\r\n          if (WidgetsApp.debugAllowBannerOverride == value)\r\n            return Future<void>.value();\r\n          WidgetsApp.debugAllowBannerOverride = value;\r\n          return _forceRebuild();\r\n        },\r\n      );\r\n\r\n      // This service extension is deprecated and will be removed by 12/1/2018.\r\n      // Use ext.flutter.inspector.show instead.\r\n      registerBoolServiceExtension(\r\n          name: 'debugWidgetInspector',\r\n          getter: () async => WidgetsApp.debugShowWidgetInspectorOverride,\r\n          setter: (bool value) {\r\n            if (WidgetsApp.debugShowWidgetInspectorOverride == value)\r\n              return Future<void>.value();\r\n            WidgetsApp.debugShowWidgetInspectorOverride = value;\r\n            return _forceRebuild();\r\n          },\r\n      );\r\n\r\n      WidgetInspectorService.instance.initServiceExtensions(registerServiceExtension);\r\n\r\n      return true;\r\n    }()");
    }
    [_forceRebuild]() {
      if (this.renderViewElement != null) {
        dart.nullCheck(this.buildOwner).reassemble(dart.nullCheck(this.renderViewElement));
        return this.endOfFrame;
      }
      return FutureOfvoid().value();
    }
    get buildOwner() {
      return this[_buildOwner];
    }
    get focusManager() {
      return dart.nullCheck(this[_buildOwner]).focusManager;
    }
    addObserver(observer) {
      if (observer == null) dart.nullFailed(L6, 541, 43, "observer");
      return this[_observers][$add](observer);
    }
    removeObserver(observer) {
      if (observer == null) dart.nullFailed(L6, 551, 46, "observer");
      return this[_observers][$remove](observer);
    }
    handleMetricsChanged() {
      super.handleMetricsChanged();
      for (let observer of this[_observers])
        observer.didChangeMetrics();
    }
    handleTextScaleFactorChanged() {
      super.handleTextScaleFactorChanged();
      for (let observer of this[_observers])
        observer.didChangeTextScaleFactor();
    }
    handlePlatformBrightnessChanged() {
      super.handlePlatformBrightnessChanged();
      for (let observer of this[_observers])
        observer.didChangePlatformBrightness();
    }
    handleAccessibilityFeaturesChanged() {
      super.handleAccessibilityFeaturesChanged();
      for (let observer of this[_observers])
        observer.didChangeAccessibilityFeatures();
    }
    handleLocaleChanged() {
      this.dispatchLocalesChanged(this.window.locales);
    }
    dispatchLocalesChanged(locales) {
      for (let observer of this[_observers])
        observer.didChangeLocales(locales);
    }
    dispatchAccessibilityFeaturesChanged() {
      for (let observer of this[_observers])
        observer.didChangeAccessibilityFeatures();
    }
    handlePopRoute() {
      return async.async(dart.void, (function* handlePopRoute() {
        for (let observer of ListOfWidgetsBindingObserver().from(this[_observers])) {
          if (dart.test(yield observer.didPopRoute())) return;
        }
        system_navigator.SystemNavigator.pop();
      }).bind(this));
    }
    handlePushRoute(route) {
      if (route == null) dart.nullFailed(L6, 653, 39, "route");
      return async.async(dart.void, (function* handlePushRoute() {
        for (let observer of ListOfWidgetsBindingObserver().from(this[_observers])) {
          if (dart.test(yield observer.didPushRoute(route))) return;
        }
      }).bind(this));
    }
    [_handlePushRouteInformation](routeArguments) {
      if (routeArguments == null) dart.nullFailed(L6, 660, 66, "routeArguments");
      return async.async(dart.void, (function* _handlePushRouteInformation() {
        for (let observer of ListOfWidgetsBindingObserver().from(this[_observers])) {
          if (dart.test(yield observer.didPushRouteInformation(new router.RouteInformation.new({location: core.String.as(routeArguments[$_get]("location")), state: core.Object.as(routeArguments[$_get]("state"))})))) return;
        }
      }).bind(this));
    }
    [_handleNavigationInvocation](methodCall) {
      if (methodCall == null) dart.nullFailed(L6, 674, 58, "methodCall");
      switch (methodCall.method) {
        case "popRoute":
        {
          return this.handlePopRoute();
        }
        case "pushRoute":
        {
          return this.handlePushRoute(core.String.as(methodCall.arguments));
        }
        case "pushRouteInformation":
        {
          return this[_handlePushRouteInformation](core.Map.as(methodCall.arguments));
        }
      }
      return async.Future.value();
    }
    handleAppLifecycleStateChanged(state) {
      if (state == null) dart.nullFailed(L6, 687, 57, "state");
      super.handleAppLifecycleStateChanged(state);
      for (let observer of this[_observers])
        observer.didChangeAppLifecycleState(state);
    }
    handleMemoryPressure() {
      super.handleMemoryPressure();
      for (let observer of this[_observers])
        observer.didHaveMemoryPressure();
    }
    get firstFrameRasterized() {
      return this[_firstFrameCompleter].isCompleted;
    }
    get waitUntilFirstFrameRasterized() {
      return this[_firstFrameCompleter].future;
    }
    get debugDidSendFirstFrameEvent() {
      return !dart.test(this[_needToReportFirstFrame]);
    }
    deferFirstFrameReport() {
      if (!false) {
        this.deferFirstFrame();
      }
    }
    allowFirstFrameReport() {
      if (!false) {
        this.allowFirstFrame();
      }
    }
    [_handleBuildScheduled]() {
      if (!dart.test(dart.fn(() => {
        if (dart.test(this.debugBuildingDirtyElements)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Build scheduled during frame."), new assertions.ErrorDescription.new("While the widget tree was being built, laid out, and painted, " + "a new frame was scheduled to rebuild the widget tree."), new assertions.ErrorHint.new("This might be because setState() was called from a layout or " + "paint callback. " + "If a change is needed to the widget tree, it should be applied " + "as the tree is being built. Scheduling a change for the subsequent " + "frame instead results in an interface that lags behind by one frame. " + "If this was done to make your build dependent on a size measured at " + "layout time, consider using a LayoutBuilder, CustomSingleChildLayout, " + "or CustomMultiChildLayout. If, on the other hand, the one frame delay " + "is the desired effect, for example because this is an " + "animation, consider scheduling the frame in a post-frame callback " + "using SchedulerBinding.addPostFrameCallback or " + "using an AnimationController to trigger the animation.")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L6, 767, 12, "() {\r\n      if (debugBuildingDirtyElements) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Build scheduled during frame.'),\r\n          ErrorDescription(\r\n            'While the widget tree was being built, laid out, and painted, '\r\n            'a new frame was scheduled to rebuild the widget tree.'\r\n          ),\r\n          ErrorHint(\r\n            'This might be because setState() was called from a layout or '\r\n            'paint callback. '\r\n            'If a change is needed to the widget tree, it should be applied '\r\n            'as the tree is being built. Scheduling a change for the subsequent '\r\n            'frame instead results in an interface that lags behind by one frame. '\r\n            'If this was done to make your build dependent on a size measured at '\r\n            'layout time, consider using a LayoutBuilder, CustomSingleChildLayout, '\r\n            'or CustomMultiChildLayout. If, on the other hand, the one frame delay '\r\n            'is the desired effect, for example because this is an '\r\n            'animation, consider scheduling the frame in a post-frame callback '\r\n            'using SchedulerBinding.addPostFrameCallback or '\r\n            'using an AnimationController to trigger the animation.',\r\n          )\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      this.ensureVisualUpdate();
    }
    drawFrame() {
      if (!!dart.test(this.debugBuildingDirtyElements)) dart.assertFailed(null, L6, 871, 12, "!debugBuildingDirtyElements");
      if (!dart.test(dart.fn(() => {
        this.debugBuildingDirtyElements = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L6, 872, 12, "() {\r\n      debugBuildingDirtyElements = true;\r\n      return true;\r\n    }()");
      let firstFrameCallback = null;
      if (dart.test(this[_needToReportFirstFrame])) {
        if (!!dart.test(this[_firstFrameCompleter].isCompleted)) dart.assertFailed(null, L6, 879, 14, "!_firstFrameCompleter.isCompleted");
        firstFrameCallback = dart.fn(timings => {
          if (timings == null) dart.nullFailed(L6, 881, 47, "timings");
          if (!dart.test(this.sendFramesToEngine)) dart.assertFailed(null, L6, 882, 16, "sendFramesToEngine");
          if (!false) {
            developer.Timeline.instantSync("Rasterized first useful frame");
            developer.postEvent("Flutter.FirstFrame", new (IdentityMapOfString$dynamic()).new());
          }
          dart.nullCheck(binding$.SchedulerBinding.instance).removeTimingsCallback(dart.nullCheck(firstFrameCallback));
          firstFrameCallback = null;
          this[_firstFrameCompleter].complete();
        }, ListOfFrameTimingTovoid());
        dart.nullCheck(binding$.SchedulerBinding.instance).addTimingsCallback(dart.nullCheck(firstFrameCallback));
      }
      try {
        if (this.renderViewElement != null) dart.nullCheck(this.buildOwner).buildScope(dart.nullCheck(this.renderViewElement));
        super.drawFrame();
        dart.nullCheck(this.buildOwner).finalizeTree();
      } finally {
        if (!dart.test(dart.fn(() => {
          this.debugBuildingDirtyElements = false;
          return true;
        }, VoidTobool())())) dart.assertFailed(null, L6, 903, 14, "() {\r\n        debugBuildingDirtyElements = false;\r\n        return true;\r\n      }()");
      }
      if (!false) {
        if (dart.test(this[_needToReportFirstFrame]) && dart.test(this.sendFramesToEngine)) {
          developer.Timeline.instantSync("Widgets built first useful frame");
        }
      }
      this[_needToReportFirstFrame] = false;
      if (firstFrameCallback != null && !dart.test(this.sendFramesToEngine)) {
        this[_needToReportFirstFrame] = true;
        dart.nullCheck(binding$.SchedulerBinding.instance).removeTimingsCallback(dart.nullCheck(firstFrameCallback));
      }
    }
    get renderViewElement() {
      return this[_renderViewElement];
    }
    get framesEnabled() {
      return dart.test(super.framesEnabled) && dart.test(this[_readyToProduceFrames]);
    }
    scheduleAttachRootWidget(rootWidget) {
      if (rootWidget == null) dart.nullFailed(L6, 939, 40, "rootWidget");
      async.Timer.run(dart.fn(() => {
        this.attachRootWidget(rootWidget);
      }, VoidTovoid()));
    }
    attachRootWidget(rootWidget) {
      if (rootWidget == null) dart.nullFailed(L6, 954, 32, "rootWidget");
      this[_readyToProduceFrames] = true;
      this[_renderViewElement] = new (RenderObjectToWidgetAdapterOfRenderBox()).new({container: this.renderView, debugShortDescription: "[root]", child: rootWidget, $creationLocationd_0dea112b090073317d4: C1257 || CT.C1257}).attachToRenderTree(dart.nullCheck(this.buildOwner), RenderObjectToWidgetElementNOfRenderBox().as(this.renderViewElement));
    }
    get isRootWidgetAttached() {
      return this[_renderViewElement] != null;
    }
    performReassemble() {
      if (!dart.test(dart.fn(() => {
        widget_inspector.WidgetInspectorService.instance.performReassemble();
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L6, 971, 12, "() {\r\n      WidgetInspectorService.instance.performReassemble();\r\n      return true;\r\n    }()");
      if (this.renderViewElement != null) dart.nullCheck(this.buildOwner).reassemble(dart.nullCheck(this.renderViewElement));
      return super.performReassemble();
    }
    computePlatformResolvedLocale(supportedLocales) {
      if (supportedLocales == null) dart.nullFailed(L6, 1018, 54, "supportedLocales");
      return this.window.computePlatformResolvedLocale(supportedLocales);
    }
  };
  (binding$5.WidgetsBinding[dart.mixinNew] = function() {
    this[_buildOwner] = null;
    this[_observers] = JSArrayOfWidgetsBindingObserver().of([]);
    this[_needToReportFirstFrame] = true;
    this[_firstFrameCompleter] = CompleterOfvoid().new();
    this[debugBuildingDirtyElements] = false;
    this[_renderViewElement] = null;
    this[_readyToProduceFrames] = false;
  }).prototype = binding$5.WidgetsBinding.prototype;
  dart.addTypeTests(binding$5.WidgetsBinding);
  dart.addTypeCaches(binding$5.WidgetsBinding);
  binding$5.WidgetsBinding[dart.implements] = () => [binding$3.SemanticsBinding, binding.RendererBinding, binding$1.GestureBinding, binding$.SchedulerBinding, binding$0.ServicesBinding, binding$4.BindingBase];
  dart.setMethodSignature(binding$5.WidgetsBinding, () => ({
    __proto__: dart.getMethods(binding$5.WidgetsBinding.__proto__),
    initInstances: dart.fnType(dart.void, []),
    [_debugAddStackFilters]: dart.fnType(dart.void, []),
    initServiceExtensions: dart.fnType(dart.void, []),
    [_forceRebuild]: dart.fnType(async.Future$(dart.void), []),
    addObserver: dart.fnType(dart.void, [binding$5.WidgetsBindingObserver]),
    removeObserver: dart.fnType(core.bool, [binding$5.WidgetsBindingObserver]),
    handleMetricsChanged: dart.fnType(dart.void, []),
    handleTextScaleFactorChanged: dart.fnType(dart.void, []),
    handlePlatformBrightnessChanged: dart.fnType(dart.void, []),
    handleAccessibilityFeaturesChanged: dart.fnType(dart.void, []),
    handleLocaleChanged: dart.fnType(dart.void, []),
    dispatchLocalesChanged: dart.fnType(dart.void, [dart.nullable(core.List$(ui.Locale))]),
    dispatchAccessibilityFeaturesChanged: dart.fnType(dart.void, []),
    handlePopRoute: dart.fnType(async.Future$(dart.void), []),
    handlePushRoute: dart.fnType(async.Future$(dart.void), [core.String]),
    [_handlePushRouteInformation]: dart.fnType(async.Future$(dart.void), [core.Map]),
    [_handleNavigationInvocation]: dart.fnType(async.Future, [message_codec.MethodCall]),
    handleAppLifecycleStateChanged: dart.fnType(dart.void, [ui.AppLifecycleState]),
    handleMemoryPressure: dart.fnType(dart.void, []),
    deferFirstFrameReport: dart.fnType(dart.void, []),
    allowFirstFrameReport: dart.fnType(dart.void, []),
    [_handleBuildScheduled]: dart.fnType(dart.void, []),
    drawFrame: dart.fnType(dart.void, []),
    scheduleAttachRootWidget: dart.fnType(dart.void, [framework.Widget]),
    attachRootWidget: dart.fnType(dart.void, [framework.Widget]),
    performReassemble: dart.fnType(async.Future$(dart.void), []),
    computePlatformResolvedLocale: dart.fnType(dart.nullable(ui.Locale), [core.List$(ui.Locale)])
  }));
  dart.setGetterSignature(binding$5.WidgetsBinding, () => ({
    __proto__: dart.getGetters(binding$5.WidgetsBinding.__proto__),
    buildOwner: dart.nullable(framework.BuildOwner),
    focusManager: focus_manager.FocusManager,
    firstFrameRasterized: core.bool,
    waitUntilFirstFrameRasterized: async.Future$(dart.void),
    debugDidSendFirstFrameEvent: core.bool,
    renderViewElement: dart.nullable(framework.Element),
    framesEnabled: core.bool,
    isRootWidgetAttached: core.bool
  }));
  dart.setLibraryUri(binding$5.WidgetsBinding, L7);
  dart.setFieldSignature(binding$5.WidgetsBinding, () => ({
    __proto__: dart.getFields(binding$5.WidgetsBinding.__proto__),
    [_buildOwner]: dart.fieldType(dart.nullable(framework.BuildOwner)),
    [_observers]: dart.finalFieldType(core.List$(binding$5.WidgetsBindingObserver)),
    [_needToReportFirstFrame]: dart.fieldType(core.bool),
    [_firstFrameCompleter]: dart.finalFieldType(async.Completer$(dart.void)),
    debugBuildingDirtyElements: dart.fieldType(core.bool),
    [_renderViewElement]: dart.fieldType(dart.nullable(framework.Element)),
    [_readyToProduceFrames]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(binding$5.WidgetsBinding, {
    /*binding$5.WidgetsBinding._instance*/get _instance() {
      return null;
    },
    set _instance(_) {}
  }, false);
  var _newWidget = dart.privateName(binding$5, "_newWidget");
  const _is_RenderObjectToWidgetAdapter_default = Symbol('_is_RenderObjectToWidgetAdapter_default');
  var child$40 = dart.privateName(binding$5, "RenderObjectToWidgetAdapter.child");
  var container$ = dart.privateName(binding$5, "RenderObjectToWidgetAdapter.container");
  var debugShortDescription$ = dart.privateName(binding$5, "RenderObjectToWidgetAdapter.debugShortDescription");
  binding$5.RenderObjectToWidgetAdapter$ = dart.generic(T => {
    var RenderObjectToWidgetElementOfT = () => (RenderObjectToWidgetElementOfT = dart.constFn(binding$5.RenderObjectToWidgetElement$(T)))();
    var RenderObjectToWidgetElementNOfT = () => (RenderObjectToWidgetElementNOfT = dart.constFn(dart.nullable(RenderObjectToWidgetElementOfT())))();
    class RenderObjectToWidgetAdapter extends framework.RenderObjectWidget {
      get child() {
        return this[child$40];
      }
      set child(value) {
        super.child = value;
      }
      get container() {
        return this[container$];
      }
      set container(value) {
        super.container = value;
      }
      get debugShortDescription() {
        return this[debugShortDescription$];
      }
      set debugShortDescription(value) {
        super.debugShortDescription = value;
      }
      createElement() {
        return new (RenderObjectToWidgetElementOfT()).new(this);
      }
      createRenderObject(context) {
        if (context == null) dart.nullFailed(L6, 1101, 65, "context");
        return this.container;
      }
      updateRenderObject(context, renderObject) {
        if (context == null) dart.nullFailed(L6, 1104, 40, "context");
        object$.RenderObject.as(renderObject);
        if (renderObject == null) dart.nullFailed(L6, 1104, 62, "renderObject");
      }
      attachToRenderTree(owner, element = null) {
        if (owner == null) dart.nullFailed(L6, 1113, 64, "owner");
        RenderObjectToWidgetElementNOfT().as(element);
        if (element == null) {
          owner.lockState(dart.fn(() => {
            element = this.createElement();
            if (!(element != null)) dart.assertFailed(null, L6, 1117, 16, "element != null");
            dart.nullCheck(element).assignOwner(owner);
          }, VoidTovoid()));
          owner.buildScope(dart.nullCheck(element), dart.fn(() => {
            dart.nullCheck(element).mount(null, null);
          }, VoidTovoid()));
          dart.nullCheck(binding$.SchedulerBinding.instance).ensureVisualUpdate();
        } else {
          element[_newWidget] = this;
          element.markNeedsBuild();
        }
        return dart.nullCheck(element);
      }
      toStringShort() {
        let t93;
        t93 = this.debugShortDescription;
        return t93 == null ? super.toStringShort() : t93;
      }
    }
    (RenderObjectToWidgetAdapter.new = function(opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      let container = opts && 'container' in opts ? opts.container : null;
      if (container == null) dart.nullFailed(L6, 1082, 19, "container");
      let debugShortDescription = opts && 'debugShortDescription' in opts ? opts.debugShortDescription : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[child$40] = child;
      this[container$] = container;
      this[debugShortDescription$] = debugShortDescription;
      RenderObjectToWidgetAdapter.__proto__.new.call(this, {key: new (GlobalObjectKeyOfStateOfStatefulWidget()).new(container), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = RenderObjectToWidgetAdapter.prototype;
    dart.addTypeTests(RenderObjectToWidgetAdapter);
    RenderObjectToWidgetAdapter.prototype[_is_RenderObjectToWidgetAdapter_default] = true;
    dart.addTypeCaches(RenderObjectToWidgetAdapter);
    dart.setMethodSignature(RenderObjectToWidgetAdapter, () => ({
      __proto__: dart.getMethods(RenderObjectToWidgetAdapter.__proto__),
      createElement: dart.fnType(binding$5.RenderObjectToWidgetElement$(T), []),
      createRenderObject: dart.fnType(object$.RenderObjectWithChildMixin$(T), [framework.BuildContext]),
      attachToRenderTree: dart.fnType(binding$5.RenderObjectToWidgetElement$(T), [framework.BuildOwner], [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(RenderObjectToWidgetAdapter, L7);
    dart.setFieldSignature(RenderObjectToWidgetAdapter, () => ({
      __proto__: dart.getFields(RenderObjectToWidgetAdapter.__proto__),
      child: dart.finalFieldType(dart.nullable(framework.Widget)),
      container: dart.finalFieldType(object$.RenderObjectWithChildMixin$(T)),
      debugShortDescription: dart.finalFieldType(dart.nullable(core.String))
    }));
    return RenderObjectToWidgetAdapter;
  });
  binding$5.RenderObjectToWidgetAdapter = binding$5.RenderObjectToWidgetAdapter$();
  dart.addTypeTests(binding$5.RenderObjectToWidgetAdapter, _is_RenderObjectToWidgetAdapter_default);
  var _child$0 = dart.privateName(binding$5, "_child");
  var _rebuild$ = dart.privateName(binding$5, "_rebuild");
  const _is_RenderObjectToWidgetElement_default = Symbol('_is_RenderObjectToWidgetElement_default');
  var C1261;
  binding$5.RenderObjectToWidgetElement$ = dart.generic(T => {
    var RenderObjectToWidgetAdapterOfT = () => (RenderObjectToWidgetAdapterOfT = dart.constFn(binding$5.RenderObjectToWidgetAdapter$(T)))();
    var RenderObjectWithChildMixinOfT = () => (RenderObjectWithChildMixinOfT = dart.constFn(object$.RenderObjectWithChildMixin$(T)))();
    class RenderObjectToWidgetElement extends framework.RootRenderObjectElement {
      get widget() {
        return RenderObjectToWidgetAdapterOfT().as(super.widget);
      }
      visitChildren(visitor) {
        if (visitor == null) dart.nullFailed(L6, 1163, 37, "visitor");
        if (this[_child$0] != null) visitor(dart.nullCheck(this[_child$0]));
      }
      forgetChild(child) {
        if (child == null) dart.nullFailed(L6, 1169, 28, "child");
        if (!dart.equals(child, this[_child$0])) dart.assertFailed(null, L6, 1170, 12, "child == _child");
        this[_child$0] = null;
        super.forgetChild(child);
      }
      mount(parent, newSlot) {
        if (!(parent == null)) dart.assertFailed(null, L6, 1177, 12, "parent == null");
        super.mount(parent, newSlot);
        this[_rebuild$]();
      }
      update(newWidget) {
        RenderObjectToWidgetAdapterOfT().as(newWidget);
        if (newWidget == null) dart.nullFailed(L6, 1183, 46, "newWidget");
        super.update(newWidget);
        if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, L6, 1185, 12, "widget == newWidget");
        this[_rebuild$]();
      }
      performRebuild() {
        if (this[_newWidget] != null) {
          let newWidget = dart.nullCheck(this[_newWidget]);
          this[_newWidget] = null;
          this.update(RenderObjectToWidgetAdapterOfT().as(newWidget));
        }
        super.performRebuild();
        if (!(this[_newWidget] == null)) dart.assertFailed(null, L6, 1203, 12, "_newWidget == null");
      }
      [_rebuild$]() {
        try {
          this[_child$0] = this.updateChild(this[_child$0], this.widget.child, binding$5.RenderObjectToWidgetElement._rootChildSlot);
          if (!(this[_child$0] != null)) dart.assertFailed(null, L6, 1209, 14, "_child != null");
        } catch (e) {
          let exception = dart.getThrown(e);
          let stack = dart.stackTrace(e);
          if (core.Object.is(exception)) {
            let details = new assertions.FlutterErrorDetails.new({exception: exception, stack: stack, library: "widgets library", context: new assertions.ErrorDescription.new("attaching to the render tree")});
            assertions.FlutterError.reportError(details);
            let error = framework.ErrorWidget.builder(details);
            this[_child$0] = this.updateChild(null, error, binding$5.RenderObjectToWidgetElement._rootChildSlot);
          } else
            throw e;
        }
      }
      get renderObject() {
        return RenderObjectWithChildMixinOfT().as(super.renderObject);
      }
      insertRenderObjectChild(child, slot) {
        object$.RenderObject.as(child);
        if (child == null) dart.nullFailed(L6, 1227, 45, "child");
        if (!dart.equals(slot, binding$5.RenderObjectToWidgetElement._rootChildSlot)) dart.assertFailed(null, L6, 1228, 12, "slot == _rootChildSlot");
        if (!dart.test(this.renderObject.debugValidateChild(child))) dart.assertFailed(null, L6, 1229, 12, "renderObject.debugValidateChild(child)");
        this.renderObject.child = T.as(child);
      }
      moveRenderObjectChild(child, oldSlot, newSlot) {
        object$.RenderObject.as(child);
        if (child == null) dart.nullFailed(L6, 1234, 43, "child");
        if (!false) dart.assertFailed(null, L6, 1235, 12, "false");
      }
      removeRenderObjectChild(child, slot) {
        object$.RenderObject.as(child);
        if (child == null) dart.nullFailed(L6, 1239, 45, "child");
        if (!dart.equals(this.renderObject.child, child)) dart.assertFailed(null, L6, 1240, 12, "renderObject.child == child");
        this.renderObject.child = null;
      }
    }
    (RenderObjectToWidgetElement.new = function(widget) {
      if (widget == null) dart.nullFailed(L6, 1153, 62, "widget");
      this[_child$0] = null;
      this[_newWidget] = null;
      RenderObjectToWidgetElement.__proto__.new.call(this, widget);
      ;
    }).prototype = RenderObjectToWidgetElement.prototype;
    dart.addTypeTests(RenderObjectToWidgetElement);
    RenderObjectToWidgetElement.prototype[_is_RenderObjectToWidgetElement_default] = true;
    dart.addTypeCaches(RenderObjectToWidgetElement);
    dart.setMethodSignature(RenderObjectToWidgetElement, () => ({
      __proto__: dart.getMethods(RenderObjectToWidgetElement.__proto__),
      [_rebuild$]: dart.fnType(dart.void, [])
    }));
    dart.setGetterSignature(RenderObjectToWidgetElement, () => ({
      __proto__: dart.getGetters(RenderObjectToWidgetElement.__proto__),
      widget: binding$5.RenderObjectToWidgetAdapter$(T),
      renderObject: object$.RenderObjectWithChildMixin$(T)
    }));
    dart.setLibraryUri(RenderObjectToWidgetElement, L7);
    dart.setFieldSignature(RenderObjectToWidgetElement, () => ({
      __proto__: dart.getFields(RenderObjectToWidgetElement.__proto__),
      [_child$0]: dart.fieldType(dart.nullable(framework.Element)),
      [_newWidget]: dart.fieldType(dart.nullable(framework.Widget))
    }));
    return RenderObjectToWidgetElement;
  });
  binding$5.RenderObjectToWidgetElement = binding$5.RenderObjectToWidgetElement$();
  dart.defineLazy(binding$5.RenderObjectToWidgetElement, {
    /*binding$5.RenderObjectToWidgetElement._rootChildSlot*/get _rootChildSlot() {
      return C1261 || CT.C1261;
    }
  }, false);
  dart.addTypeTests(binding$5.RenderObjectToWidgetElement, _is_RenderObjectToWidgetElement_default);
  const BindingBase_GestureBinding$36 = class BindingBase_GestureBinding extends binding$4.BindingBase {};
  (BindingBase_GestureBinding$36.new = function() {
    binding$1.GestureBinding[dart.mixinNew].call(this);
    BindingBase_GestureBinding$36.__proto__.new.call(this);
  }).prototype = BindingBase_GestureBinding$36.prototype;
  dart.applyMixin(BindingBase_GestureBinding$36, binding$1.GestureBinding);
  const BindingBase_SchedulerBinding$36 = class BindingBase_SchedulerBinding extends BindingBase_GestureBinding$36 {};
  (BindingBase_SchedulerBinding$36.new = function() {
    binding$.SchedulerBinding[dart.mixinNew].call(this);
    BindingBase_SchedulerBinding$36.__proto__.new.call(this);
  }).prototype = BindingBase_SchedulerBinding$36.prototype;
  dart.applyMixin(BindingBase_SchedulerBinding$36, binding$.SchedulerBinding);
  const BindingBase_ServicesBinding$36 = class BindingBase_ServicesBinding extends BindingBase_SchedulerBinding$36 {};
  (BindingBase_ServicesBinding$36.new = function() {
    binding$0.ServicesBinding[dart.mixinNew].call(this);
    BindingBase_ServicesBinding$36.__proto__.new.call(this);
  }).prototype = BindingBase_ServicesBinding$36.prototype;
  dart.applyMixin(BindingBase_ServicesBinding$36, binding$0.ServicesBinding);
  const BindingBase_PaintingBinding$36 = class BindingBase_PaintingBinding extends BindingBase_ServicesBinding$36 {};
  (BindingBase_PaintingBinding$36.new = function() {
    binding$2.PaintingBinding[dart.mixinNew].call(this);
    BindingBase_PaintingBinding$36.__proto__.new.call(this);
  }).prototype = BindingBase_PaintingBinding$36.prototype;
  dart.applyMixin(BindingBase_PaintingBinding$36, binding$2.PaintingBinding);
  const BindingBase_SemanticsBinding$36 = class BindingBase_SemanticsBinding extends BindingBase_PaintingBinding$36 {};
  (BindingBase_SemanticsBinding$36.new = function() {
    binding$3.SemanticsBinding[dart.mixinNew].call(this);
    BindingBase_SemanticsBinding$36.__proto__.new.call(this);
  }).prototype = BindingBase_SemanticsBinding$36.prototype;
  dart.applyMixin(BindingBase_SemanticsBinding$36, binding$3.SemanticsBinding);
  const BindingBase_RendererBinding$36 = class BindingBase_RendererBinding extends BindingBase_SemanticsBinding$36 {};
  (BindingBase_RendererBinding$36.new = function() {
    binding.RendererBinding[dart.mixinNew].call(this);
    BindingBase_RendererBinding$36.__proto__.new.call(this);
  }).prototype = BindingBase_RendererBinding$36.prototype;
  dart.applyMixin(BindingBase_RendererBinding$36, binding.RendererBinding);
  const BindingBase_WidgetsBinding$36 = class BindingBase_WidgetsBinding extends BindingBase_RendererBinding$36 {};
  (BindingBase_WidgetsBinding$36.new = function() {
    binding$5.WidgetsBinding[dart.mixinNew].call(this);
    BindingBase_WidgetsBinding$36.__proto__.new.call(this);
  }).prototype = BindingBase_WidgetsBinding$36.prototype;
  dart.applyMixin(BindingBase_WidgetsBinding$36, binding$5.WidgetsBinding);
  binding$5.WidgetsFlutterBinding = class WidgetsFlutterBinding extends BindingBase_WidgetsBinding$36 {
    static ensureInitialized() {
      if (binding$5.WidgetsBinding.instance == null) new binding$5.WidgetsFlutterBinding.new();
      return dart.nullCheck(binding$5.WidgetsBinding.instance);
    }
  };
  (binding$5.WidgetsFlutterBinding.new = function() {
    binding$5.WidgetsFlutterBinding.__proto__.new.call(this);
    ;
  }).prototype = binding$5.WidgetsFlutterBinding.prototype;
  dart.addTypeTests(binding$5.WidgetsFlutterBinding);
  dart.addTypeCaches(binding$5.WidgetsFlutterBinding);
  dart.setLibraryUri(binding$5.WidgetsFlutterBinding, L7);
  binding$5.runApp = function runApp(app) {
    let t94;
    if (app == null) dart.nullFailed(L6, 1046, 20, "app");
    t94 = binding$5.WidgetsFlutterBinding.ensureInitialized();
    (() => {
      t94.scheduleAttachRootWidget(app);
      t94.scheduleWarmUpFrame();
      return t94;
    })();
  };
  binding$5.debugDumpApp = function debugDumpApp() {
    if (!(binding$5.WidgetsBinding.instance != null)) dart.assertFailed(null, L6, 1054, 10, "WidgetsBinding.instance != null");
    let mode = "RELEASE MODE";
    if (!dart.test(dart.fn(() => {
      mode = "CHECKED MODE";
      return true;
    }, VoidTobool())())) dart.assertFailed(null, L6, 1056, 10, "() {\r\n    mode = 'CHECKED MODE';\r\n    return true;\r\n  }()");
    print.debugPrint(dart.str(dart.runtimeType(binding$5.WidgetsBinding.instance)) + " - " + mode);
    if (dart.nullCheck(binding$5.WidgetsBinding.instance).renderViewElement != null) {
      print.debugPrint(dart.nullCheck(dart.nullCheck(binding$5.WidgetsBinding.instance).renderViewElement).toStringDeep());
    } else {
      print.debugPrint("<no tree currently mounted>");
    }
  };
  var textDirection$7 = dart.privateName(basic, "Directionality.textDirection");
  basic.Directionality = class Directionality extends framework.InheritedWidget {
    get textDirection() {
      return this[textDirection$7];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    static of(context) {
      if (context == null) dart.nullFailed(L114, 116, 40, "context");
      if (!dart.test(debug$0.debugCheckHasDirectionality(context))) dart.assertFailed(null, L114, 117, 12, "debugCheckHasDirectionality(context)");
      let widget = dart.nullCheck(context.dependOnInheritedWidgetOfExactType(basic.Directionality));
      return widget.textDirection;
    }
    static maybeOf(context) {
      let t94;
      if (context == null) dart.nullFailed(L114, 138, 46, "context");
      let widget = context.dependOnInheritedWidgetOfExactType(basic.Directionality);
      t94 = widget;
      return t94 == null ? null : t94.textDirection;
    }
    updateShouldNotify(oldWidget) {
      basic.Directionality.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L114, 144, 42, "oldWidget");
      return !dart.equals(this.textDirection, oldWidget.textDirection);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 147, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection));
    }
  };
  (basic.Directionality.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(L114, 90, 19, "textDirection");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L114, 91, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[textDirection$7] = textDirection;
    if (!(textDirection != null)) dart.assertFailed(null, L114, 92, 15, "textDirection != null");
    if (!(child != null)) dart.assertFailed(null, L114, 93, 15, "child != null");
    basic.Directionality.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Directionality.prototype;
  dart.addTypeTests(basic.Directionality);
  dart.addTypeCaches(basic.Directionality);
  dart.setMethodSignature(basic.Directionality, () => ({
    __proto__: dart.getMethods(basic.Directionality.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(basic.Directionality, L115);
  dart.setFieldSignature(basic.Directionality, () => ({
    __proto__: dart.getFields(basic.Directionality.__proto__),
    textDirection: dart.finalFieldType(ui.TextDirection)
  }));
  var opacity$2 = dart.privateName(basic, "Opacity.opacity");
  var alwaysIncludeSemantics$2 = dart.privateName(basic, "Opacity.alwaysIncludeSemantics");
  basic.Opacity = class Opacity extends framework.SingleChildRenderObjectWidget {
    get opacity() {
      return this[opacity$2];
    }
    set opacity(value) {
      super.opacity = value;
    }
    get alwaysIncludeSemantics() {
      return this[alwaysIncludeSemantics$2];
    }
    set alwaysIncludeSemantics(value) {
      super.alwaysIncludeSemantics = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 271, 49, "context");
      return new proxy_box.RenderOpacity.new({opacity: this.opacity, alwaysIncludeSemantics: this.alwaysIncludeSemantics});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 279, 40, "context");
      proxy_box.RenderOpacity.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 279, 63, "renderObject");
      t94 = renderObject;
      (() => {
        t94.opacity = this.opacity;
        t94.alwaysIncludeSemantics = this.alwaysIncludeSemantics;
        return t94;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 286, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.DoubleProperty.new("opacity", this.opacity));
      properties.add(new diagnostics$.FlagProperty.new("alwaysIncludeSemantics", {value: this.alwaysIncludeSemantics, ifTrue: "alwaysIncludeSemantics"}));
    }
  };
  (basic.Opacity.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let opacity = opts && 'opacity' in opts ? opts.opacity : null;
    if (opacity == null) dart.nullFailed(L114, 241, 19, "opacity");
    let alwaysIncludeSemantics = opts && 'alwaysIncludeSemantics' in opts ? opts.alwaysIncludeSemantics : false;
    if (alwaysIncludeSemantics == null) dart.nullFailed(L114, 242, 10, "alwaysIncludeSemantics");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[opacity$2] = opacity;
    this[alwaysIncludeSemantics$2] = alwaysIncludeSemantics;
    if (!(opacity != null && dart.notNull(opacity) >= 0.0 && dart.notNull(opacity) <= 1.0)) dart.assertFailed(null, L114, 244, 15, "opacity != null && opacity >= 0.0 && opacity <= 1.0");
    if (!(alwaysIncludeSemantics != null)) dart.assertFailed(null, L114, 245, 15, "alwaysIncludeSemantics != null");
    basic.Opacity.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Opacity.prototype;
  dart.addTypeTests(basic.Opacity);
  dart.addTypeCaches(basic.Opacity);
  dart.setMethodSignature(basic.Opacity, () => ({
    __proto__: dart.getMethods(basic.Opacity.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderOpacity, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Opacity, L115);
  dart.setFieldSignature(basic.Opacity, () => ({
    __proto__: dart.getFields(basic.Opacity.__proto__),
    opacity: dart.finalFieldType(core.double),
    alwaysIncludeSemantics: dart.finalFieldType(core.bool)
  }));
  var C1262;
  var shaderCallback$ = dart.privateName(basic, "ShaderMask.shaderCallback");
  var blendMode$ = dart.privateName(basic, "ShaderMask.blendMode");
  basic.ShaderMask = class ShaderMask extends framework.SingleChildRenderObjectWidget {
    get shaderCallback() {
      return this[shaderCallback$];
    }
    set shaderCallback(value) {
      super.shaderCallback = value;
    }
    get blendMode() {
      return this[blendMode$];
    }
    set blendMode(value) {
      super.blendMode = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 355, 52, "context");
      return new proxy_box.RenderShaderMask.new({shaderCallback: this.shaderCallback, blendMode: this.blendMode});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 363, 40, "context");
      proxy_box.RenderShaderMask.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 363, 66, "renderObject");
      t94 = renderObject;
      (() => {
        t94.shaderCallback = this.shaderCallback;
        t94.blendMode = this.blendMode;
        return t94;
      })();
    }
  };
  (basic.ShaderMask.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let shaderCallback = opts && 'shaderCallback' in opts ? opts.shaderCallback : null;
    if (shaderCallback == null) dart.nullFailed(L114, 331, 19, "shaderCallback");
    let blendMode = opts && 'blendMode' in opts ? opts.blendMode : C1262 || CT.C1262;
    if (blendMode == null) dart.nullFailed(L114, 332, 10, "blendMode");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[shaderCallback$] = shaderCallback;
    this[blendMode$] = blendMode;
    if (!(shaderCallback != null)) dart.assertFailed(null, L114, 334, 15, "shaderCallback != null");
    if (!(blendMode != null)) dart.assertFailed(null, L114, 335, 15, "blendMode != null");
    basic.ShaderMask.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.ShaderMask.prototype;
  dart.addTypeTests(basic.ShaderMask);
  dart.addTypeCaches(basic.ShaderMask);
  dart.setMethodSignature(basic.ShaderMask, () => ({
    __proto__: dart.getMethods(basic.ShaderMask.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderShaderMask, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.ShaderMask, L115);
  dart.setFieldSignature(basic.ShaderMask, () => ({
    __proto__: dart.getFields(basic.ShaderMask.__proto__),
    shaderCallback: dart.finalFieldType(dart.fnType(ui.Shader, [ui.Rect])),
    blendMode: dart.finalFieldType(ui.BlendMode)
  }));
  var filter$ = dart.privateName(basic, "BackdropFilter.filter");
  basic.BackdropFilter = class BackdropFilter extends framework.SingleChildRenderObjectWidget {
    get filter() {
      return this[filter$];
    }
    set filter(value) {
      super.filter = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 441, 56, "context");
      return new proxy_box.RenderBackdropFilter.new({filter: this.filter});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L114, 446, 40, "context");
      proxy_box.RenderBackdropFilter.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 446, 70, "renderObject");
      renderObject.filter = this.filter;
    }
  };
  (basic.BackdropFilter.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let filter = opts && 'filter' in opts ? opts.filter : null;
    if (filter == null) dart.nullFailed(L114, 429, 19, "filter");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[filter$] = filter;
    if (!(filter != null)) dart.assertFailed(null, L114, 431, 15, "filter != null");
    basic.BackdropFilter.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.BackdropFilter.prototype;
  dart.addTypeTests(basic.BackdropFilter);
  dart.addTypeCaches(basic.BackdropFilter);
  dart.setMethodSignature(basic.BackdropFilter, () => ({
    __proto__: dart.getMethods(basic.BackdropFilter.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderBackdropFilter, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.BackdropFilter, L115);
  dart.setFieldSignature(basic.BackdropFilter, () => ({
    __proto__: dart.getFields(basic.BackdropFilter.__proto__),
    filter: dart.finalFieldType(ui.ImageFilter)
  }));
  var painter$ = dart.privateName(basic, "CustomPaint.painter");
  var foregroundPainter$ = dart.privateName(basic, "CustomPaint.foregroundPainter");
  var size$1 = dart.privateName(basic, "CustomPaint.size");
  var isComplex$ = dart.privateName(basic, "CustomPaint.isComplex");
  var willChange$ = dart.privateName(basic, "CustomPaint.willChange");
  basic.CustomPaint = class CustomPaint extends framework.SingleChildRenderObjectWidget {
    get painter() {
      return this[painter$];
    }
    set painter(value) {
      super.painter = value;
    }
    get foregroundPainter() {
      return this[foregroundPainter$];
    }
    set foregroundPainter(value) {
      super.foregroundPainter = value;
    }
    get size() {
      return this[size$1];
    }
    set size(value) {
      super.size = value;
    }
    get isComplex() {
      return this[isComplex$];
    }
    set isComplex(value) {
      super.isComplex = value;
    }
    get willChange() {
      return this[willChange$];
    }
    set willChange(value) {
      super.willChange = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 557, 53, "context");
      return new custom_paint.RenderCustomPaint.new({painter: this.painter, foregroundPainter: this.foregroundPainter, preferredSize: this.size, isComplex: this.isComplex, willChange: this.willChange});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 568, 40, "context");
      custom_paint.RenderCustomPaint.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 568, 67, "renderObject");
      t94 = renderObject;
      (() => {
        t94.painter = this.painter;
        t94.foregroundPainter = this.foregroundPainter;
        t94.preferredSize = this.size;
        t94.isComplex = this.isComplex;
        t94.willChange = this.willChange;
        return t94;
      })();
    }
    didUnmountRenderObject(renderObject) {
      let t94;
      custom_paint.RenderCustomPaint.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 578, 49, "renderObject");
      t94 = renderObject;
      (() => {
        t94.painter = null;
        t94.foregroundPainter = null;
        return t94;
      })();
    }
  };
  (basic.CustomPaint.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let painter = opts && 'painter' in opts ? opts.painter : null;
    let foregroundPainter = opts && 'foregroundPainter' in opts ? opts.foregroundPainter : null;
    let size = opts && 'size' in opts ? opts.size : C772 || CT.C772;
    if (size == null) dart.nullFailed(L114, 512, 10, "size");
    let isComplex = opts && 'isComplex' in opts ? opts.isComplex : false;
    if (isComplex == null) dart.nullFailed(L114, 513, 10, "isComplex");
    let willChange = opts && 'willChange' in opts ? opts.willChange : false;
    if (willChange == null) dart.nullFailed(L114, 514, 10, "willChange");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[painter$] = painter;
    this[foregroundPainter$] = foregroundPainter;
    this[size$1] = size;
    this[isComplex$] = isComplex;
    this[willChange$] = willChange;
    if (!(size != null)) dart.assertFailed(null, L114, 516, 15, "size != null");
    if (!(isComplex != null)) dart.assertFailed(null, L114, 517, 15, "isComplex != null");
    if (!(willChange != null)) dart.assertFailed(null, L114, 518, 15, "willChange != null");
    if (!(painter != null || foregroundPainter != null || !dart.test(isComplex) && !dart.test(willChange))) dart.assertFailed(null, L114, 519, 15, "painter != null || foregroundPainter != null || (!isComplex && !willChange)");
    basic.CustomPaint.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.CustomPaint.prototype;
  dart.addTypeTests(basic.CustomPaint);
  dart.addTypeCaches(basic.CustomPaint);
  dart.setMethodSignature(basic.CustomPaint, () => ({
    __proto__: dart.getMethods(basic.CustomPaint.__proto__),
    createRenderObject: dart.fnType(custom_paint.RenderCustomPaint, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.CustomPaint, L115);
  dart.setFieldSignature(basic.CustomPaint, () => ({
    __proto__: dart.getFields(basic.CustomPaint.__proto__),
    painter: dart.finalFieldType(dart.nullable(custom_paint.CustomPainter)),
    foregroundPainter: dart.finalFieldType(dart.nullable(custom_paint.CustomPainter)),
    size: dart.finalFieldType(ui.Size),
    isComplex: dart.finalFieldType(core.bool),
    willChange: dart.finalFieldType(core.bool)
  }));
  var clipper$ = dart.privateName(basic, "ClipRect.clipper");
  var clipBehavior$5 = dart.privateName(basic, "ClipRect.clipBehavior");
  basic.ClipRect = class ClipRect extends framework.SingleChildRenderObjectWidget {
    get clipper() {
      return this[clipper$];
    }
    set clipper(value) {
      super.clipper = value;
    }
    get clipBehavior() {
      return this[clipBehavior$5];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 644, 50, "context");
      if (!!dart.equals(this.clipBehavior, ui.Clip.none)) dart.assertFailed(null, L114, 645, 12, "clipBehavior != Clip.none");
      return new proxy_box.RenderClipRect.new({clipper: this.clipper, clipBehavior: this.clipBehavior});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 650, 40, "context");
      proxy_box.RenderClipRect.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 650, 64, "renderObject");
      if (!!dart.equals(this.clipBehavior, ui.Clip.none)) dart.assertFailed(null, L114, 651, 12, "clipBehavior != Clip.none");
      t94 = renderObject;
      (() => {
        t94.clipper = this.clipper;
        t94.clipBehavior = this.clipBehavior;
        return t94;
      })();
    }
    didUnmountRenderObject(renderObject) {
      proxy_box.RenderClipRect.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 658, 46, "renderObject");
      renderObject.clipper = null;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 663, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfCustomClipperOfRect()).new("clipper", this.clipper, {defaultValue: null}));
    }
  };
  (basic.ClipRect.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let clipper = opts && 'clipper' in opts ? opts.clipper : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C470 || CT.C470;
    if (clipBehavior == null) dart.nullFailed(L114, 631, 49, "clipBehavior");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[clipper$] = clipper;
    this[clipBehavior$5] = clipBehavior;
    if (!(clipBehavior != null)) dart.assertFailed(null, L114, 632, 16, "clipBehavior != null");
    basic.ClipRect.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.ClipRect.prototype;
  dart.addTypeTests(basic.ClipRect);
  dart.addTypeCaches(basic.ClipRect);
  dart.setMethodSignature(basic.ClipRect, () => ({
    __proto__: dart.getMethods(basic.ClipRect.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderClipRect, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.ClipRect, L115);
  dart.setFieldSignature(basic.ClipRect, () => ({
    __proto__: dart.getFields(basic.ClipRect.__proto__),
    clipper: dart.finalFieldType(dart.nullable(proxy_box.CustomClipper$(ui.Rect))),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var C1264;
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  var C1263;
  var C1265;
  var borderRadius$ = dart.privateName(basic, "ClipRRect.borderRadius");
  var clipper$0 = dart.privateName(basic, "ClipRRect.clipper");
  var clipBehavior$6 = dart.privateName(basic, "ClipRRect.clipBehavior");
  basic.ClipRRect = class ClipRRect extends framework.SingleChildRenderObjectWidget {
    get borderRadius() {
      return this[borderRadius$];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get clipper() {
      return this[clipper$0];
    }
    set clipper(value) {
      super.clipper = value;
    }
    get clipBehavior() {
      return this[clipBehavior$6];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 719, 51, "context");
      if (!!dart.equals(this.clipBehavior, ui.Clip.none)) dart.assertFailed(null, L114, 720, 12, "clipBehavior != Clip.none");
      return new proxy_box.RenderClipRRect.new({borderRadius: dart.nullCheck(this.borderRadius), clipper: this.clipper, clipBehavior: this.clipBehavior});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 725, 40, "context");
      proxy_box.RenderClipRRect.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 725, 65, "renderObject");
      if (!!dart.equals(this.clipBehavior, ui.Clip.none)) dart.assertFailed(null, L114, 726, 12, "clipBehavior != Clip.none");
      t94 = renderObject;
      (() => {
        t94.borderRadius = dart.nullCheck(this.borderRadius);
        t94.clipBehavior = this.clipBehavior;
        t94.clipper = this.clipper;
        return t94;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 734, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfBorderRadius()).new("borderRadius", this.borderRadius, {showName: false, defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfCustomClipperOfRRect()).new("clipper", this.clipper, {defaultValue: null}));
    }
  };
  (basic.ClipRRect.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : C1263 || CT.C1263;
    let clipper = opts && 'clipper' in opts ? opts.clipper : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C1265 || CT.C1265;
    if (clipBehavior == null) dart.nullFailed(L114, 696, 10, "clipBehavior");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[borderRadius$] = borderRadius;
    this[clipper$0] = clipper;
    this[clipBehavior$6] = clipBehavior;
    if (!(borderRadius != null || clipper != null)) dart.assertFailed(null, L114, 698, 15, "borderRadius != null || clipper != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L114, 699, 15, "clipBehavior != null");
    basic.ClipRRect.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.ClipRRect.prototype;
  dart.addTypeTests(basic.ClipRRect);
  dart.addTypeCaches(basic.ClipRRect);
  dart.setMethodSignature(basic.ClipRRect, () => ({
    __proto__: dart.getMethods(basic.ClipRRect.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderClipRRect, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.ClipRRect, L115);
  dart.setFieldSignature(basic.ClipRRect, () => ({
    __proto__: dart.getFields(basic.ClipRRect.__proto__),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius)),
    clipper: dart.finalFieldType(dart.nullable(proxy_box.CustomClipper$(ui.RRect))),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var clipper$1 = dart.privateName(basic, "ClipOval.clipper");
  var clipBehavior$7 = dart.privateName(basic, "ClipOval.clipBehavior");
  basic.ClipOval = class ClipOval extends framework.SingleChildRenderObjectWidget {
    get clipper() {
      return this[clipper$1];
    }
    set clipper(value) {
      super.clipper = value;
    }
    get clipBehavior() {
      return this[clipBehavior$7];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 783, 50, "context");
      if (!!dart.equals(this.clipBehavior, ui.Clip.none)) dart.assertFailed(null, L114, 784, 12, "clipBehavior != Clip.none");
      return new proxy_box.RenderClipOval.new({clipper: this.clipper, clipBehavior: this.clipBehavior});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 789, 40, "context");
      proxy_box.RenderClipOval.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 789, 64, "renderObject");
      if (!!dart.equals(this.clipBehavior, ui.Clip.none)) dart.assertFailed(null, L114, 790, 12, "clipBehavior != Clip.none");
      t94 = renderObject;
      (() => {
        t94.clipper = this.clipper;
        t94.clipBehavior = this.clipBehavior;
        return t94;
      })();
    }
    didUnmountRenderObject(renderObject) {
      proxy_box.RenderClipOval.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 797, 46, "renderObject");
      renderObject.clipper = null;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 802, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfCustomClipperOfRect()).new("clipper", this.clipper, {defaultValue: null}));
    }
  };
  (basic.ClipOval.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let clipper = opts && 'clipper' in opts ? opts.clipper : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C1265 || CT.C1265;
    if (clipBehavior == null) dart.nullFailed(L114, 762, 48, "clipBehavior");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[clipper$1] = clipper;
    this[clipBehavior$7] = clipBehavior;
    if (!(clipBehavior != null)) dart.assertFailed(null, L114, 763, 16, "clipBehavior != null");
    basic.ClipOval.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.ClipOval.prototype;
  dart.addTypeTests(basic.ClipOval);
  dart.addTypeCaches(basic.ClipOval);
  dart.setMethodSignature(basic.ClipOval, () => ({
    __proto__: dart.getMethods(basic.ClipOval.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderClipOval, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.ClipOval, L115);
  dart.setFieldSignature(basic.ClipOval, () => ({
    __proto__: dart.getFields(basic.ClipOval.__proto__),
    clipper: dart.finalFieldType(dart.nullable(proxy_box.CustomClipper$(ui.Rect))),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var C1268;
  var C1269;
  var C1270;
  var C1267;
  var C1266;
  var C1273;
  var C1274;
  var C1272;
  var C1271;
  var clipper$2 = dart.privateName(basic, "ClipPath.clipper");
  var clipBehavior$8 = dart.privateName(basic, "ClipPath.clipBehavior");
  basic.ClipPath = class ClipPath extends framework.SingleChildRenderObjectWidget {
    get clipper() {
      return this[clipper$2];
    }
    set clipper(value) {
      super.clipper = value;
    }
    get clipBehavior() {
      return this[clipBehavior$8];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    static shape(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      if (shape == null) dart.nullFailed(L114, 849, 26, "shape");
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C1265 || CT.C1265;
      if (clipBehavior == null) dart.nullFailed(L114, 850, 10, "clipBehavior");
      let child = opts && 'child' in opts ? opts.child : null;
      if (!(clipBehavior != null)) dart.assertFailed(null, L114, 853, 12, "clipBehavior != null");
      if (!!dart.equals(clipBehavior, ui.Clip.none)) dart.assertFailed(null, L114, 854, 12, "clipBehavior != Clip.none");
      if (!(shape != null)) dart.assertFailed(null, L114, 855, 12, "shape != null");
      return new basic.Builder.new({key: key, builder: dart.fn(context => {
          if (context == null) dart.nullFailed(L114, 858, 30, "context");
          return new basic.ClipPath.new({clipper: new proxy_box.ShapeBorderClipper.new({shape: shape, textDirection: basic.Directionality.maybeOf(context)}), clipBehavior: clipBehavior, child: child, $creationLocationd_0dea112b090073317d4: C1266 || CT.C1266});
        }, BuildContextToClipPath()), $creationLocationd_0dea112b090073317d4: C1271 || CT.C1271});
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 884, 50, "context");
      if (!!dart.equals(this.clipBehavior, ui.Clip.none)) dart.assertFailed(null, L114, 885, 12, "clipBehavior != Clip.none");
      return new proxy_box.RenderClipPath.new({clipper: this.clipper, clipBehavior: this.clipBehavior});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 890, 40, "context");
      proxy_box.RenderClipPath.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 890, 64, "renderObject");
      if (!!dart.equals(this.clipBehavior, ui.Clip.none)) dart.assertFailed(null, L114, 891, 12, "clipBehavior != Clip.none");
      t94 = renderObject;
      (() => {
        t94.clipper = this.clipper;
        t94.clipBehavior = this.clipBehavior;
        return t94;
      })();
    }
    didUnmountRenderObject(renderObject) {
      proxy_box.RenderClipPath.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 898, 46, "renderObject");
      renderObject.clipper = null;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 903, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfCustomClipperOfPath()).new("clipper", this.clipper, {defaultValue: null}));
    }
  };
  (basic.ClipPath.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let clipper = opts && 'clipper' in opts ? opts.clipper : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C1265 || CT.C1265;
    if (clipBehavior == null) dart.nullFailed(L114, 838, 10, "clipBehavior");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[clipper$2] = clipper;
    this[clipBehavior$8] = clipBehavior;
    if (!(clipBehavior != null)) dart.assertFailed(null, L114, 840, 15, "clipBehavior != null");
    basic.ClipPath.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.ClipPath.prototype;
  dart.addTypeTests(basic.ClipPath);
  dart.addTypeCaches(basic.ClipPath);
  dart.setMethodSignature(basic.ClipPath, () => ({
    __proto__: dart.getMethods(basic.ClipPath.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderClipPath, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.ClipPath, L115);
  dart.setFieldSignature(basic.ClipPath, () => ({
    __proto__: dart.getFields(basic.ClipPath.__proto__),
    clipper: dart.finalFieldType(dart.nullable(proxy_box.CustomClipper$(ui.Path))),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var _name$24 = dart.privateName(box_border, "_name");
  var C1275;
  var shape$ = dart.privateName(basic, "PhysicalModel.shape");
  var clipBehavior$9 = dart.privateName(basic, "PhysicalModel.clipBehavior");
  var borderRadius$0 = dart.privateName(basic, "PhysicalModel.borderRadius");
  var elevation$ = dart.privateName(basic, "PhysicalModel.elevation");
  var color$7 = dart.privateName(basic, "PhysicalModel.color");
  var shadowColor$ = dart.privateName(basic, "PhysicalModel.shadowColor");
  basic.PhysicalModel = class PhysicalModel extends framework.SingleChildRenderObjectWidget {
    get shape() {
      return this[shape$];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[clipBehavior$9];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get borderRadius() {
      return this[borderRadius$0];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get elevation() {
      return this[elevation$];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get color() {
      return this[color$7];
    }
    set color(value) {
      super.color = value;
    }
    get shadowColor() {
      return this[shadowColor$];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 975, 55, "context");
      return new proxy_box.RenderPhysicalModel.new({shape: this.shape, clipBehavior: this.clipBehavior, borderRadius: this.borderRadius, elevation: this.elevation, color: this.color, shadowColor: this.shadowColor});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 986, 40, "context");
      proxy_box.RenderPhysicalModel.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 986, 69, "renderObject");
      t94 = renderObject;
      (() => {
        t94.shape = this.shape;
        t94.clipBehavior = this.clipBehavior;
        t94.borderRadius = this.borderRadius;
        t94.elevation = this.elevation;
        t94.color = this.color;
        t94.shadowColor = this.shadowColor;
        return t94;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 997, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfBoxShape()).new("shape", this.shape));
      properties.add(new (DiagnosticsPropertyOfBorderRadius()).new("borderRadius", this.borderRadius));
      properties.add(new diagnostics$.DoubleProperty.new("elevation", this.elevation));
      properties.add(new colors.ColorProperty.new("color", this.color));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor));
    }
  };
  (basic.PhysicalModel.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let shape = opts && 'shape' in opts ? opts.shape : C1275 || CT.C1275;
    if (shape == null) dart.nullFailed(L114, 932, 10, "shape");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C804 || CT.C804;
    if (clipBehavior == null) dart.nullFailed(L114, 933, 10, "clipBehavior");
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 0;
    if (elevation == null) dart.nullFailed(L114, 935, 10, "elevation");
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(L114, 936, 19, "color");
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : C56 || CT.C56;
    if (shadowColor == null) dart.nullFailed(L114, 937, 10, "shadowColor");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[shape$] = shape;
    this[clipBehavior$9] = clipBehavior;
    this[borderRadius$0] = borderRadius;
    this[elevation$] = elevation;
    this[color$7] = color;
    this[shadowColor$] = shadowColor;
    if (!(shape != null)) dart.assertFailed(null, L114, 939, 15, "shape != null");
    if (!(elevation != null && dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, L114, 940, 15, "elevation != null && elevation >= 0.0");
    if (!(color != null)) dart.assertFailed(null, L114, 941, 15, "color != null");
    if (!(shadowColor != null)) dart.assertFailed(null, L114, 942, 15, "shadowColor != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L114, 943, 15, "clipBehavior != null");
    basic.PhysicalModel.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.PhysicalModel.prototype;
  dart.addTypeTests(basic.PhysicalModel);
  dart.addTypeCaches(basic.PhysicalModel);
  dart.setMethodSignature(basic.PhysicalModel, () => ({
    __proto__: dart.getMethods(basic.PhysicalModel.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderPhysicalModel, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.PhysicalModel, L115);
  dart.setFieldSignature(basic.PhysicalModel, () => ({
    __proto__: dart.getFields(basic.PhysicalModel.__proto__),
    shape: dart.finalFieldType(box_border.BoxShape),
    clipBehavior: dart.finalFieldType(ui.Clip),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius)),
    elevation: dart.finalFieldType(core.double),
    color: dart.finalFieldType(ui.Color),
    shadowColor: dart.finalFieldType(ui.Color)
  }));
  var clipper$3 = dart.privateName(basic, "PhysicalShape.clipper");
  var clipBehavior$10 = dart.privateName(basic, "PhysicalShape.clipBehavior");
  var elevation$0 = dart.privateName(basic, "PhysicalShape.elevation");
  var color$8 = dart.privateName(basic, "PhysicalShape.color");
  var shadowColor$0 = dart.privateName(basic, "PhysicalShape.shadowColor");
  basic.PhysicalShape = class PhysicalShape extends framework.SingleChildRenderObjectWidget {
    get clipper() {
      return this[clipper$3];
    }
    set clipper(value) {
      super.clipper = value;
    }
    get clipBehavior() {
      return this[clipBehavior$10];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get elevation() {
      return this[elevation$0];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get color() {
      return this[color$8];
    }
    set color(value) {
      super.color = value;
    }
    get shadowColor() {
      return this[shadowColor$0];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 1066, 55, "context");
      return new proxy_box.RenderPhysicalShape.new({clipper: this.clipper, clipBehavior: this.clipBehavior, elevation: this.elevation, color: this.color, shadowColor: this.shadowColor});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 1077, 40, "context");
      proxy_box.RenderPhysicalShape.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 1077, 69, "renderObject");
      t94 = renderObject;
      (() => {
        t94.clipper = this.clipper;
        t94.clipBehavior = this.clipBehavior;
        t94.elevation = this.elevation;
        t94.color = this.color;
        t94.shadowColor = this.shadowColor;
        return t94;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 1087, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfCustomClipperOfPath()).new("clipper", this.clipper));
      properties.add(new diagnostics$.DoubleProperty.new("elevation", this.elevation));
      properties.add(new colors.ColorProperty.new("color", this.color));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor));
    }
  };
  (basic.PhysicalShape.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let clipper = opts && 'clipper' in opts ? opts.clipper : null;
    if (clipper == null) dart.nullFailed(L114, 1028, 19, "clipper");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C804 || CT.C804;
    if (clipBehavior == null) dart.nullFailed(L114, 1029, 10, "clipBehavior");
    let elevation = opts && 'elevation' in opts ? opts.elevation : 0;
    if (elevation == null) dart.nullFailed(L114, 1030, 10, "elevation");
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(L114, 1031, 19, "color");
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : C56 || CT.C56;
    if (shadowColor == null) dart.nullFailed(L114, 1032, 10, "shadowColor");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[clipper$3] = clipper;
    this[clipBehavior$10] = clipBehavior;
    this[elevation$0] = elevation;
    this[color$8] = color;
    this[shadowColor$0] = shadowColor;
    if (!(clipper != null)) dart.assertFailed(null, L114, 1034, 15, "clipper != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L114, 1035, 15, "clipBehavior != null");
    if (!(elevation != null && dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, L114, 1036, 15, "elevation != null && elevation >= 0.0");
    if (!(color != null)) dart.assertFailed(null, L114, 1037, 15, "color != null");
    if (!(shadowColor != null)) dart.assertFailed(null, L114, 1038, 15, "shadowColor != null");
    basic.PhysicalShape.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.PhysicalShape.prototype;
  dart.addTypeTests(basic.PhysicalShape);
  dart.addTypeCaches(basic.PhysicalShape);
  dart.setMethodSignature(basic.PhysicalShape, () => ({
    __proto__: dart.getMethods(basic.PhysicalShape.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderPhysicalShape, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.PhysicalShape, L115);
  dart.setFieldSignature(basic.PhysicalShape, () => ({
    __proto__: dart.getFields(basic.PhysicalShape.__proto__),
    clipper: dart.finalFieldType(proxy_box.CustomClipper$(ui.Path)),
    clipBehavior: dart.finalFieldType(ui.Clip),
    elevation: dart.finalFieldType(core.double),
    color: dart.finalFieldType(ui.Color),
    shadowColor: dart.finalFieldType(ui.Color)
  }));
  var transform$0 = dart.privateName(basic, "Transform.transform");
  var origin$ = dart.privateName(basic, "Transform.origin");
  var alignment$4 = dart.privateName(basic, "Transform.alignment");
  var transformHitTests$0 = dart.privateName(basic, "Transform.transformHitTests");
  basic.Transform = class Transform extends framework.SingleChildRenderObjectWidget {
    get transform() {
      return this[transform$0];
    }
    set transform(value) {
      super.transform = value;
    }
    get origin() {
      return this[origin$];
    }
    set origin(value) {
      super.origin = value;
    }
    get alignment() {
      return this[alignment$4];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get transformHitTests() {
      return this[transformHitTests$0];
    }
    set transformHitTests(value) {
      super.transformHitTests = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 1284, 51, "context");
      return new proxy_box.RenderTransform.new({transform: this.transform, origin: this.origin, alignment: this.alignment, textDirection: basic.Directionality.maybeOf(context), transformHitTests: this.transformHitTests});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 1295, 40, "context");
      proxy_box.RenderTransform.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 1295, 65, "renderObject");
      t94 = renderObject;
      (() => {
        t94.transform = this.transform;
        t94.origin = this.origin;
        t94.alignment = this.alignment;
        t94.textDirection = basic.Directionality.maybeOf(context);
        t94.transformHitTests = this.transformHitTests;
        return t94;
      })();
    }
  };
  (basic.Transform.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let transform = opts && 'transform' in opts ? opts.transform : null;
    if (transform == null) dart.nullFailed(L114, 1143, 19, "transform");
    let origin = opts && 'origin' in opts ? opts.origin : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let transformHitTests = opts && 'transformHitTests' in opts ? opts.transformHitTests : true;
    if (transformHitTests == null) dart.nullFailed(L114, 1146, 10, "transformHitTests");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[transform$0] = transform;
    this[origin$] = origin;
    this[alignment$4] = alignment;
    this[transformHitTests$0] = transformHitTests;
    if (!(transform != null)) dart.assertFailed(null, L114, 1148, 15, "transform != null");
    basic.Transform.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Transform.prototype;
  (basic.Transform.rotate = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let angle = opts && 'angle' in opts ? opts.angle : null;
    if (angle == null) dart.nullFailed(L114, 1180, 21, "angle");
    let origin = opts && 'origin' in opts ? opts.origin : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C413 || CT.C413;
    let transformHitTests = opts && 'transformHitTests' in opts ? opts.transformHitTests : true;
    if (transformHitTests == null) dart.nullFailed(L114, 1183, 10, "transformHitTests");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[origin$] = origin;
    this[alignment$4] = alignment;
    this[transformHitTests$0] = transformHitTests;
    this[transform$0] = vector_math_64.Matrix4.rotationZ(angle);
    basic.Transform.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Transform.prototype;
  (basic.Transform.translate = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let offset = opts && 'offset' in opts ? opts.offset : null;
    if (offset == null) dart.nullFailed(L114, 1209, 21, "offset");
    let transformHitTests = opts && 'transformHitTests' in opts ? opts.transformHitTests : true;
    if (transformHitTests == null) dart.nullFailed(L114, 1210, 10, "transformHitTests");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[transformHitTests$0] = transformHitTests;
    this[transform$0] = vector_math_64.Matrix4.translationValues(offset.dx, offset.dy, 0.0);
    this[origin$] = null;
    this[alignment$4] = null;
    basic.Transform.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Transform.prototype;
  (basic.Transform.scale = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let scale = opts && 'scale' in opts ? opts.scale : null;
    if (scale == null) dart.nullFailed(L114, 1248, 21, "scale");
    let origin = opts && 'origin' in opts ? opts.origin : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C413 || CT.C413;
    let transformHitTests = opts && 'transformHitTests' in opts ? opts.transformHitTests : true;
    if (transformHitTests == null) dart.nullFailed(L114, 1251, 10, "transformHitTests");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[origin$] = origin;
    this[alignment$4] = alignment;
    this[transformHitTests$0] = transformHitTests;
    this[transform$0] = vector_math_64.Matrix4.diagonal3Values(scale, scale, 1.0);
    basic.Transform.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Transform.prototype;
  dart.addTypeTests(basic.Transform);
  dart.addTypeCaches(basic.Transform);
  dart.setMethodSignature(basic.Transform, () => ({
    __proto__: dart.getMethods(basic.Transform.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderTransform, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Transform, L115);
  dart.setFieldSignature(basic.Transform, () => ({
    __proto__: dart.getFields(basic.Transform.__proto__),
    transform: dart.finalFieldType(vector_math_64.Matrix4),
    origin: dart.finalFieldType(dart.nullable(ui.Offset)),
    alignment: dart.finalFieldType(dart.nullable(alignment$.AlignmentGeometry)),
    transformHitTests: dart.finalFieldType(core.bool)
  }));
  var link$ = dart.privateName(basic, "CompositedTransformTarget.link");
  basic.CompositedTransformTarget = class CompositedTransformTarget extends framework.SingleChildRenderObjectWidget {
    get link() {
      return this[link$];
    }
    set link(value) {
      super.link = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 1343, 53, "context");
      return new proxy_box.RenderLeaderLayer.new({link: this.link});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L114, 1350, 40, "context");
      proxy_box.RenderLeaderLayer.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 1350, 67, "renderObject");
      renderObject.link = this.link;
    }
  };
  (basic.CompositedTransformTarget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let link = opts && 'link' in opts ? opts.link : null;
    if (link == null) dart.nullFailed(L114, 1330, 19, "link");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[link$] = link;
    if (!(link != null)) dart.assertFailed(null, L114, 1332, 15, "link != null");
    basic.CompositedTransformTarget.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.CompositedTransformTarget.prototype;
  dart.addTypeTests(basic.CompositedTransformTarget);
  dart.addTypeCaches(basic.CompositedTransformTarget);
  dart.setMethodSignature(basic.CompositedTransformTarget, () => ({
    __proto__: dart.getMethods(basic.CompositedTransformTarget.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderLeaderLayer, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.CompositedTransformTarget, L115);
  dart.setFieldSignature(basic.CompositedTransformTarget, () => ({
    __proto__: dart.getFields(basic.CompositedTransformTarget.__proto__),
    link: dart.finalFieldType(layer.LayerLink)
  }));
  var C1276;
  var link$0 = dart.privateName(basic, "CompositedTransformFollower.link");
  var showWhenUnlinked$ = dart.privateName(basic, "CompositedTransformFollower.showWhenUnlinked");
  var targetAnchor$ = dart.privateName(basic, "CompositedTransformFollower.targetAnchor");
  var followerAnchor$ = dart.privateName(basic, "CompositedTransformFollower.followerAnchor");
  var offset$2 = dart.privateName(basic, "CompositedTransformFollower.offset");
  basic.CompositedTransformFollower = class CompositedTransformFollower extends framework.SingleChildRenderObjectWidget {
    get link() {
      return this[link$0];
    }
    set link(value) {
      super.link = value;
    }
    get showWhenUnlinked() {
      return this[showWhenUnlinked$];
    }
    set showWhenUnlinked(value) {
      super.showWhenUnlinked = value;
    }
    get targetAnchor() {
      return this[targetAnchor$];
    }
    set targetAnchor(value) {
      super.targetAnchor = value;
    }
    get followerAnchor() {
      return this[followerAnchor$];
    }
    set followerAnchor(value) {
      super.followerAnchor = value;
    }
    get offset() {
      return this[offset$2];
    }
    set offset(value) {
      super.offset = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 1452, 55, "context");
      return new proxy_box.RenderFollowerLayer.new({link: this.link, showWhenUnlinked: this.showWhenUnlinked, offset: this.offset, leaderAnchor: this.targetAnchor, followerAnchor: this.followerAnchor});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 1463, 40, "context");
      proxy_box.RenderFollowerLayer.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 1463, 69, "renderObject");
      t94 = renderObject;
      (() => {
        t94.link = this.link;
        t94.showWhenUnlinked = this.showWhenUnlinked;
        t94.offset = this.offset;
        t94.leaderAnchor = this.targetAnchor;
        t94.followerAnchor = this.followerAnchor;
        return t94;
      })();
    }
  };
  (basic.CompositedTransformFollower.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let link = opts && 'link' in opts ? opts.link : null;
    if (link == null) dart.nullFailed(L114, 1392, 19, "link");
    let showWhenUnlinked = opts && 'showWhenUnlinked' in opts ? opts.showWhenUnlinked : true;
    if (showWhenUnlinked == null) dart.nullFailed(L114, 1393, 10, "showWhenUnlinked");
    let offset = opts && 'offset' in opts ? opts.offset : C1 || CT.C1;
    if (offset == null) dart.nullFailed(L114, 1394, 10, "offset");
    let targetAnchor = opts && 'targetAnchor' in opts ? opts.targetAnchor : C1276 || CT.C1276;
    if (targetAnchor == null) dart.nullFailed(L114, 1395, 10, "targetAnchor");
    let followerAnchor = opts && 'followerAnchor' in opts ? opts.followerAnchor : C1276 || CT.C1276;
    if (followerAnchor == null) dart.nullFailed(L114, 1396, 10, "followerAnchor");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[link$0] = link;
    this[showWhenUnlinked$] = showWhenUnlinked;
    this[offset$2] = offset;
    this[targetAnchor$] = targetAnchor;
    this[followerAnchor$] = followerAnchor;
    if (!(link != null)) dart.assertFailed(null, L114, 1398, 15, "link != null");
    if (!(showWhenUnlinked != null)) dart.assertFailed(null, L114, 1399, 15, "showWhenUnlinked != null");
    if (!(offset != null)) dart.assertFailed(null, L114, 1400, 15, "offset != null");
    if (!(targetAnchor != null)) dart.assertFailed(null, L114, 1401, 15, "targetAnchor != null");
    if (!(followerAnchor != null)) dart.assertFailed(null, L114, 1402, 15, "followerAnchor != null");
    basic.CompositedTransformFollower.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.CompositedTransformFollower.prototype;
  dart.addTypeTests(basic.CompositedTransformFollower);
  dart.addTypeCaches(basic.CompositedTransformFollower);
  dart.setMethodSignature(basic.CompositedTransformFollower, () => ({
    __proto__: dart.getMethods(basic.CompositedTransformFollower.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderFollowerLayer, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.CompositedTransformFollower, L115);
  dart.setFieldSignature(basic.CompositedTransformFollower, () => ({
    __proto__: dart.getFields(basic.CompositedTransformFollower.__proto__),
    link: dart.finalFieldType(layer.LayerLink),
    showWhenUnlinked: dart.finalFieldType(core.bool),
    targetAnchor: dart.finalFieldType(alignment$.Alignment),
    followerAnchor: dart.finalFieldType(alignment$.Alignment),
    offset: dart.finalFieldType(ui.Offset)
  }));
  var _name$25 = dart.privateName(box_fit, "_name");
  var C1277;
  var fit$0 = dart.privateName(basic, "FittedBox.fit");
  var alignment$5 = dart.privateName(basic, "FittedBox.alignment");
  var clipBehavior$11 = dart.privateName(basic, "FittedBox.clipBehavior");
  basic.FittedBox = class FittedBox extends framework.SingleChildRenderObjectWidget {
    get fit() {
      return this[fit$0];
    }
    set fit(value) {
      super.fit = value;
    }
    get alignment() {
      return this[alignment$5];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get clipBehavior() {
      return this[clipBehavior$11];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 1543, 51, "context");
      return new proxy_box.RenderFittedBox.new({fit: this.fit, alignment: this.alignment, textDirection: basic.Directionality.maybeOf(context), clipBehavior: this.clipBehavior});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 1553, 40, "context");
      proxy_box.RenderFittedBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 1553, 65, "renderObject");
      t94 = renderObject;
      (() => {
        t94.fit = this.fit;
        t94.alignment = this.alignment;
        t94.textDirection = basic.Directionality.maybeOf(context);
        t94.clipBehavior = this.clipBehavior;
        return t94;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 1562, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfBoxFit()).new("fit", this.fit));
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment));
    }
  };
  (basic.FittedBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let fit = opts && 'fit' in opts ? opts.fit : C1277 || CT.C1277;
    if (fit == null) dart.nullFailed(L114, 1509, 10, "fit");
    let alignment = opts && 'alignment' in opts ? opts.alignment : C413 || CT.C413;
    if (alignment == null) dart.nullFailed(L114, 1510, 10, "alignment");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C804 || CT.C804;
    if (clipBehavior == null) dart.nullFailed(L114, 1511, 10, "clipBehavior");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[fit$0] = fit;
    this[alignment$5] = alignment;
    this[clipBehavior$11] = clipBehavior;
    if (!(fit != null)) dart.assertFailed(null, L114, 1513, 15, "fit != null");
    if (!(alignment != null)) dart.assertFailed(null, L114, 1514, 15, "alignment != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L114, 1515, 15, "clipBehavior != null");
    basic.FittedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.FittedBox.prototype;
  dart.addTypeTests(basic.FittedBox);
  dart.addTypeCaches(basic.FittedBox);
  dart.setMethodSignature(basic.FittedBox, () => ({
    __proto__: dart.getMethods(basic.FittedBox.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderFittedBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.FittedBox, L115);
  dart.setFieldSignature(basic.FittedBox, () => ({
    __proto__: dart.getFields(basic.FittedBox.__proto__),
    fit: dart.finalFieldType(box_fit.BoxFit),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var translation$ = dart.privateName(basic, "FractionalTranslation.translation");
  var transformHitTests$1 = dart.privateName(basic, "FractionalTranslation.transformHitTests");
  basic.FractionalTranslation = class FractionalTranslation extends framework.SingleChildRenderObjectWidget {
    get translation() {
      return this[translation$];
    }
    set translation(value) {
      super.translation = value;
    }
    get transformHitTests() {
      return this[transformHitTests$1];
    }
    set transformHitTests(value) {
      super.transformHitTests = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 1608, 63, "context");
      return new proxy_box.RenderFractionalTranslation.new({translation: this.translation, transformHitTests: this.transformHitTests});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 1616, 40, "context");
      proxy_box.RenderFractionalTranslation.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 1616, 77, "renderObject");
      t94 = renderObject;
      (() => {
        t94.translation = this.translation;
        t94.transformHitTests = this.transformHitTests;
        return t94;
      })();
    }
  };
  (basic.FractionalTranslation.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let translation = opts && 'translation' in opts ? opts.translation : null;
    if (translation == null) dart.nullFailed(L114, 1592, 19, "translation");
    let transformHitTests = opts && 'transformHitTests' in opts ? opts.transformHitTests : true;
    if (transformHitTests == null) dart.nullFailed(L114, 1593, 10, "transformHitTests");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[translation$] = translation;
    this[transformHitTests$1] = transformHitTests;
    if (!(translation != null)) dart.assertFailed(null, L114, 1595, 15, "translation != null");
    basic.FractionalTranslation.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.FractionalTranslation.prototype;
  dart.addTypeTests(basic.FractionalTranslation);
  dart.addTypeCaches(basic.FractionalTranslation);
  dart.setMethodSignature(basic.FractionalTranslation, () => ({
    __proto__: dart.getMethods(basic.FractionalTranslation.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderFractionalTranslation, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.FractionalTranslation, L115);
  dart.setFieldSignature(basic.FractionalTranslation, () => ({
    __proto__: dart.getFields(basic.FractionalTranslation.__proto__),
    translation: dart.finalFieldType(ui.Offset),
    transformHitTests: dart.finalFieldType(core.bool)
  }));
  var quarterTurns$ = dart.privateName(basic, "RotatedBox.quarterTurns");
  basic.RotatedBox = class RotatedBox extends framework.SingleChildRenderObjectWidget {
    get quarterTurns() {
      return this[quarterTurns$];
    }
    set quarterTurns(value) {
      super.quarterTurns = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 1663, 52, "context");
      return new rotated_box.RenderRotatedBox.new({quarterTurns: this.quarterTurns});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L114, 1666, 40, "context");
      rotated_box.RenderRotatedBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 1666, 66, "renderObject");
      renderObject.quarterTurns = this.quarterTurns;
    }
  };
  (basic.RotatedBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let quarterTurns = opts && 'quarterTurns' in opts ? opts.quarterTurns : null;
    if (quarterTurns == null) dart.nullFailed(L114, 1654, 19, "quarterTurns");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[quarterTurns$] = quarterTurns;
    if (!(quarterTurns != null)) dart.assertFailed(null, L114, 1656, 15, "quarterTurns != null");
    basic.RotatedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.RotatedBox.prototype;
  dart.addTypeTests(basic.RotatedBox);
  dart.addTypeCaches(basic.RotatedBox);
  dart.setMethodSignature(basic.RotatedBox, () => ({
    __proto__: dart.getMethods(basic.RotatedBox.__proto__),
    createRenderObject: dart.fnType(rotated_box.RenderRotatedBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.RotatedBox, L115);
  dart.setFieldSignature(basic.RotatedBox, () => ({
    __proto__: dart.getFields(basic.RotatedBox.__proto__),
    quarterTurns: dart.finalFieldType(core.int)
  }));
  var padding$1 = dart.privateName(basic, "Padding.padding");
  basic.Padding = class Padding extends framework.SingleChildRenderObjectWidget {
    get padding() {
      return this[padding$1];
    }
    set padding(value) {
      super.padding = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 1738, 49, "context");
      return new shifted_box.RenderPadding.new({padding: this.padding, textDirection: basic.Directionality.maybeOf(context)});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 1746, 40, "context");
      shifted_box.RenderPadding.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 1746, 63, "renderObject");
      t94 = renderObject;
      (() => {
        t94.padding = this.padding;
        t94.textDirection = basic.Directionality.maybeOf(context);
        return t94;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 1753, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding));
    }
  };
  (basic.Padding.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    if (padding == null) dart.nullFailed(L114, 1729, 19, "padding");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[padding$1] = padding;
    if (!(padding != null)) dart.assertFailed(null, L114, 1731, 15, "padding != null");
    basic.Padding.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Padding.prototype;
  dart.addTypeTests(basic.Padding);
  dart.addTypeCaches(basic.Padding);
  dart.setMethodSignature(basic.Padding, () => ({
    __proto__: dart.getMethods(basic.Padding.__proto__),
    createRenderObject: dart.fnType(shifted_box.RenderPadding, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Padding, L115);
  dart.setFieldSignature(basic.Padding, () => ({
    __proto__: dart.getFields(basic.Padding.__proto__),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry)
  }));
  var alignment$6 = dart.privateName(basic, "Align.alignment");
  var widthFactor$0 = dart.privateName(basic, "Align.widthFactor");
  var heightFactor$0 = dart.privateName(basic, "Align.heightFactor");
  basic.Align = class Align extends framework.SingleChildRenderObjectWidget {
    get alignment() {
      return this[alignment$6];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get widthFactor() {
      return this[widthFactor$0];
    }
    set widthFactor(value) {
      super.widthFactor = value;
    }
    get heightFactor() {
      return this[heightFactor$0];
    }
    set heightFactor(value) {
      super.heightFactor = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 1931, 55, "context");
      return new shifted_box.RenderPositionedBox.new({alignment: this.alignment, widthFactor: this.widthFactor, heightFactor: this.heightFactor, textDirection: basic.Directionality.maybeOf(context)});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 1941, 40, "context");
      shifted_box.RenderPositionedBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 1941, 69, "renderObject");
      t94 = renderObject;
      (() => {
        t94.alignment = this.alignment;
        t94.widthFactor = this.widthFactor;
        t94.heightFactor = this.heightFactor;
        t94.textDirection = basic.Directionality.maybeOf(context);
        return t94;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 1950, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment));
      properties.add(new diagnostics$.DoubleProperty.new("widthFactor", this.widthFactor, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("heightFactor", this.heightFactor, {defaultValue: null}));
    }
  };
  (basic.Align.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C413 || CT.C413;
    if (alignment == null) dart.nullFailed(L114, 1893, 10, "alignment");
    let widthFactor = opts && 'widthFactor' in opts ? opts.widthFactor : null;
    let heightFactor = opts && 'heightFactor' in opts ? opts.heightFactor : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$6] = alignment;
    this[widthFactor$0] = widthFactor;
    this[heightFactor$0] = heightFactor;
    if (!(alignment != null)) dart.assertFailed(null, L114, 1897, 15, "alignment != null");
    if (!(widthFactor == null || dart.notNull(widthFactor) >= 0.0)) dart.assertFailed(null, L114, 1898, 15, "widthFactor == null || widthFactor >= 0.0");
    if (!(heightFactor == null || dart.notNull(heightFactor) >= 0.0)) dart.assertFailed(null, L114, 1899, 15, "heightFactor == null || heightFactor >= 0.0");
    basic.Align.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Align.prototype;
  dart.addTypeTests(basic.Align);
  dart.addTypeCaches(basic.Align);
  dart.setMethodSignature(basic.Align, () => ({
    __proto__: dart.getMethods(basic.Align.__proto__),
    createRenderObject: dart.fnType(shifted_box.RenderPositionedBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Align, L115);
  dart.setFieldSignature(basic.Align, () => ({
    __proto__: dart.getFields(basic.Align.__proto__),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    widthFactor: dart.finalFieldType(dart.nullable(core.double)),
    heightFactor: dart.finalFieldType(dart.nullable(core.double))
  }));
  basic.Center = class Center extends basic.Align {};
  (basic.Center.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let widthFactor = opts && 'widthFactor' in opts ? opts.widthFactor : null;
    let heightFactor = opts && 'heightFactor' in opts ? opts.heightFactor : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    basic.Center.__proto__.new.call(this, {key: key, widthFactor: widthFactor, heightFactor: heightFactor, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Center.prototype;
  dart.addTypeTests(basic.Center);
  dart.addTypeCaches(basic.Center);
  dart.setLibraryUri(basic.Center, L115);
  var delegate$1 = dart.privateName(basic, "CustomSingleChildLayout.delegate");
  basic.CustomSingleChildLayout = class CustomSingleChildLayout extends framework.SingleChildRenderObjectWidget {
    get delegate() {
      return this[delegate$1];
    }
    set delegate(value) {
      super.delegate = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 2015, 68, "context");
      return new shifted_box.RenderCustomSingleChildLayoutBox.new({delegate: this.delegate});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L114, 2020, 40, "context");
      shifted_box.RenderCustomSingleChildLayoutBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 2020, 82, "renderObject");
      renderObject.delegate = this.delegate;
    }
  };
  (basic.CustomSingleChildLayout.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    if (delegate == null) dart.nullFailed(L114, 2006, 19, "delegate");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[delegate$1] = delegate;
    if (!(delegate != null)) dart.assertFailed(null, L114, 2008, 15, "delegate != null");
    basic.CustomSingleChildLayout.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.CustomSingleChildLayout.prototype;
  dart.addTypeTests(basic.CustomSingleChildLayout);
  dart.addTypeCaches(basic.CustomSingleChildLayout);
  dart.setMethodSignature(basic.CustomSingleChildLayout, () => ({
    __proto__: dart.getMethods(basic.CustomSingleChildLayout.__proto__),
    createRenderObject: dart.fnType(shifted_box.RenderCustomSingleChildLayoutBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.CustomSingleChildLayout, L115);
  dart.setFieldSignature(basic.CustomSingleChildLayout, () => ({
    __proto__: dart.getFields(basic.CustomSingleChildLayout.__proto__),
    delegate: dart.finalFieldType(shifted_box.SingleChildLayoutDelegate)
  }));
  var id$ = dart.privateName(basic, "LayoutId.id");
  basic.LayoutId = class LayoutId extends framework.ParentDataWidget$(custom_layout.MultiChildLayoutParentData) {
    get id() {
      return this[id$];
    }
    set id(value) {
      super.id = value;
    }
    applyParentData(renderObject) {
      if (renderObject == null) dart.nullFailed(L114, 2049, 37, "renderObject");
      if (!custom_layout.MultiChildLayoutParentData.is(renderObject.parentData)) dart.assertFailed(null, L114, 2050, 12, "renderObject.parentData is MultiChildLayoutParentData");
      let parentData = custom_layout.MultiChildLayoutParentData.as(dart.nullCheck(renderObject.parentData));
      if (!dart.equals(parentData.id, this.id)) {
        parentData.id = this.id;
        let targetParent = renderObject.parent;
        if (object$.RenderObject.is(targetParent)) targetParent.markNeedsLayout();
      }
    }
    get debugTypicalAncestorWidgetClass() {
      return dart.wrapType(basic.CustomMultiChildLayout);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 2064, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfObject()).new("id", this.id));
    }
  };
  (basic.LayoutId.new = function(opts) {
    let t94;
    let key = opts && 'key' in opts ? opts.key : null;
    let id = opts && 'id' in opts ? opts.id : null;
    if (id == null) dart.nullFailed(L114, 2036, 19, "id");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L114, 2037, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[id$] = id;
    if (!(child != null)) dart.assertFailed(null, L114, 2038, 15, "child != null");
    if (!(id != null)) dart.assertFailed(null, L114, 2039, 15, "id != null");
    basic.LayoutId.__proto__.new.call(this, {key: (t94 = key, t94 == null ? new (ValueKeyOfObject()).new(id) : t94), child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.LayoutId.prototype;
  dart.addTypeTests(basic.LayoutId);
  dart.addTypeCaches(basic.LayoutId);
  dart.setMethodSignature(basic.LayoutId, () => ({
    __proto__: dart.getMethods(basic.LayoutId.__proto__),
    applyParentData: dart.fnType(dart.void, [object$.RenderObject])
  }));
  dart.setGetterSignature(basic.LayoutId, () => ({
    __proto__: dart.getGetters(basic.LayoutId.__proto__),
    debugTypicalAncestorWidgetClass: core.Type
  }));
  dart.setLibraryUri(basic.LayoutId, L115);
  dart.setFieldSignature(basic.LayoutId, () => ({
    __proto__: dart.getFields(basic.LayoutId.__proto__),
    id: dart.finalFieldType(core.Object)
  }));
  var delegate$2 = dart.privateName(basic, "CustomMultiChildLayout.delegate");
  basic.CustomMultiChildLayout = class CustomMultiChildLayout extends framework.MultiChildRenderObjectWidget {
    get delegate() {
      return this[delegate$2];
    }
    set delegate(value) {
      super.delegate = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 2111, 67, "context");
      return new custom_layout.RenderCustomMultiChildLayoutBox.new({delegate: this.delegate});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L114, 2116, 40, "context");
      custom_layout.RenderCustomMultiChildLayoutBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 2116, 81, "renderObject");
      renderObject.delegate = this.delegate;
    }
  };
  (basic.CustomMultiChildLayout.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    if (delegate == null) dart.nullFailed(L114, 2102, 19, "delegate");
    let children = opts && 'children' in opts ? opts.children : C365 || CT.C365;
    if (children == null) dart.nullFailed(L114, 2103, 18, "children");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[delegate$2] = delegate;
    if (!(delegate != null)) dart.assertFailed(null, L114, 2104, 15, "delegate != null");
    basic.CustomMultiChildLayout.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.CustomMultiChildLayout.prototype;
  dart.addTypeTests(basic.CustomMultiChildLayout);
  dart.addTypeCaches(basic.CustomMultiChildLayout);
  dart.setMethodSignature(basic.CustomMultiChildLayout, () => ({
    __proto__: dart.getMethods(basic.CustomMultiChildLayout.__proto__),
    createRenderObject: dart.fnType(custom_layout.RenderCustomMultiChildLayoutBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.CustomMultiChildLayout, L115);
  dart.setFieldSignature(basic.CustomMultiChildLayout, () => ({
    __proto__: dart.getFields(basic.CustomMultiChildLayout.__proto__),
    delegate: dart.finalFieldType(custom_layout.MultiChildLayoutDelegate)
  }));
  var _additionalConstraints = dart.privateName(basic, "_additionalConstraints");
  basic.SizedBox = class SizedBox extends framework.SingleChildRenderObjectWidget {
    get width() {
      return this[width$0];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$0];
    }
    set height(value) {
      super.height = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 2206, 56, "context");
      return new proxy_box.RenderConstrainedBox.new({additionalConstraints: this[_additionalConstraints]});
    }
    get [_additionalConstraints]() {
      return new box$.BoxConstraints.tightFor({width: this.width, height: this.height});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L114, 2217, 40, "context");
      proxy_box.RenderConstrainedBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 2217, 70, "renderObject");
      renderObject.additionalConstraints = this[_additionalConstraints];
    }
    toStringShort() {
      let type = null;
      if (this.width === 1 / 0 && this.height === 1 / 0) {
        type = dart.str(object.objectRuntimeType(this, "SizedBox")) + ".expand";
      } else if (this.width === 0.0 && this.height === 0.0) {
        type = dart.str(object.objectRuntimeType(this, "SizedBox")) + ".shrink";
      } else {
        type = object.objectRuntimeType(this, "SizedBox");
      }
      return this.key == null ? type : dart.str(type) + "-" + dart.str(this.key);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 2235, 56, "properties");
      super.debugFillProperties(properties);
      let level = null;
      if (this.width === 1 / 0 && this.height === 1 / 0 || this.width === 0.0 && this.height === 0.0) {
        level = diagnostics$.DiagnosticLevel.hidden;
      } else {
        level = diagnostics$.DiagnosticLevel.info;
      }
      properties.add(new diagnostics$.DoubleProperty.new("width", this.width, {defaultValue: null, level: level}));
      properties.add(new diagnostics$.DoubleProperty.new("height", this.height, {defaultValue: null, level: level}));
    }
  };
  (basic.SizedBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[width$0] = width;
    this[height$0] = height;
    basic.SizedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.SizedBox.prototype;
  (basic.SizedBox.expand = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[width$0] = 1 / 0;
    this[height$0] = 1 / 0;
    basic.SizedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.SizedBox.prototype;
  (basic.SizedBox.shrink = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[width$0] = 0.0;
    this[height$0] = 0.0;
    basic.SizedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.SizedBox.prototype;
  (basic.SizedBox.fromSize = function(opts) {
    let t94, t94$;
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let size = opts && 'size' in opts ? opts.size : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[width$0] = (t94 = size, t94 == null ? null : t94.width);
    this[height$0] = (t94$ = size, t94$ == null ? null : t94$.height);
    basic.SizedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.SizedBox.prototype;
  dart.addTypeTests(basic.SizedBox);
  dart.addTypeCaches(basic.SizedBox);
  const width$0 = SizedBox_width;
  const height$0 = SizedBox_height;
  dart.setMethodSignature(basic.SizedBox, () => ({
    __proto__: dart.getMethods(basic.SizedBox.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderConstrainedBox, [framework.BuildContext])
  }));
  dart.setGetterSignature(basic.SizedBox, () => ({
    __proto__: dart.getGetters(basic.SizedBox.__proto__),
    [_additionalConstraints]: box$.BoxConstraints
  }));
  dart.setLibraryUri(basic.SizedBox, L115);
  dart.setFieldSignature(basic.SizedBox, () => ({
    __proto__: dart.getFields(basic.SizedBox.__proto__),
    width: dart.finalFieldType(dart.nullable(core.double)),
    height: dart.finalFieldType(dart.nullable(core.double))
  }));
  var constraints$0 = dart.privateName(basic, "ConstrainedBox.constraints");
  basic.ConstrainedBox = class ConstrainedBox extends framework.SingleChildRenderObjectWidget {
    get constraints() {
      return this[constraints$0];
    }
    set constraints(value) {
      super.constraints = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 2300, 56, "context");
      return new proxy_box.RenderConstrainedBox.new({additionalConstraints: this.constraints});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L114, 2305, 40, "context");
      proxy_box.RenderConstrainedBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 2305, 70, "renderObject");
      renderObject.additionalConstraints = this.constraints;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 2310, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfBoxConstraints()).new("constraints", this.constraints, {showName: false}));
    }
  };
  (basic.ConstrainedBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    if (constraints == null) dart.nullFailed(L114, 2290, 19, "constraints");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[constraints$0] = constraints;
    if (!(constraints != null)) dart.assertFailed(null, L114, 2292, 15, "constraints != null");
    if (!dart.test(constraints.debugAssertIsValid())) dart.assertFailed(null, L114, 2293, 15, "constraints.debugAssertIsValid()");
    basic.ConstrainedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.ConstrainedBox.prototype;
  dart.addTypeTests(basic.ConstrainedBox);
  dart.addTypeCaches(basic.ConstrainedBox);
  dart.setMethodSignature(basic.ConstrainedBox, () => ({
    __proto__: dart.getMethods(basic.ConstrainedBox.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderConstrainedBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.ConstrainedBox, L115);
  dart.setFieldSignature(basic.ConstrainedBox, () => ({
    __proto__: dart.getFields(basic.ConstrainedBox.__proto__),
    constraints: dart.finalFieldType(box$.BoxConstraints)
  }));
  var textDirection$8 = dart.privateName(basic, "UnconstrainedBox.textDirection");
  var alignment$7 = dart.privateName(basic, "UnconstrainedBox.alignment");
  var constrainedAxis$ = dart.privateName(basic, "UnconstrainedBox.constrainedAxis");
  var clipBehavior$12 = dart.privateName(basic, "UnconstrainedBox.clipBehavior");
  basic.UnconstrainedBox = class UnconstrainedBox extends framework.SingleChildRenderObjectWidget {
    get textDirection() {
      return this[textDirection$8];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get alignment() {
      return this[alignment$7];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get constrainedAxis() {
      return this[constrainedAxis$];
    }
    set constrainedAxis(value) {
      super.constrainedAxis = value;
    }
    get clipBehavior() {
      return this[clipBehavior$12];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    updateRenderObject(context, renderObject) {
      let t95, t94;
      if (context == null) dart.nullFailed(L114, 2384, 40, "context");
      shifted_box.RenderUnconstrainedBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 2384, 82, "renderObject");
      t94 = renderObject;
      (() => {
        t94.textDirection = (t95 = this.textDirection, t95 == null ? basic.Directionality.maybeOf(context) : t95);
        t94.alignment = this.alignment;
        t94.constrainedAxis = this.constrainedAxis;
        t94.clipBehavior = this.clipBehavior;
        return t94;
      })();
    }
    createRenderObject(context) {
      let t94;
      if (context == null) dart.nullFailed(L114, 2393, 58, "context");
      return new shifted_box.RenderUnconstrainedBox.new({textDirection: (t94 = this.textDirection, t94 == null ? basic.Directionality.maybeOf(context) : t94), alignment: this.alignment, constrainedAxis: this.constrainedAxis, clipBehavior: this.clipBehavior});
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 2401, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment));
      properties.add(new (EnumPropertyOfAxis()).new("constrainedAxis", this.constrainedAxis, {defaultValue: null}));
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
    }
  };
  (basic.UnconstrainedBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C413 || CT.C413;
    if (alignment == null) dart.nullFailed(L114, 2348, 10, "alignment");
    let constrainedAxis = opts && 'constrainedAxis' in opts ? opts.constrainedAxis : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C804 || CT.C804;
    if (clipBehavior == null) dart.nullFailed(L114, 2350, 10, "clipBehavior");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[textDirection$8] = textDirection;
    this[alignment$7] = alignment;
    this[constrainedAxis$] = constrainedAxis;
    this[clipBehavior$12] = clipBehavior;
    if (!(alignment != null)) dart.assertFailed(null, L114, 2351, 15, "alignment != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L114, 2352, 15, "clipBehavior != null");
    basic.UnconstrainedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.UnconstrainedBox.prototype;
  dart.addTypeTests(basic.UnconstrainedBox);
  dart.addTypeCaches(basic.UnconstrainedBox);
  dart.setMethodSignature(basic.UnconstrainedBox, () => ({
    __proto__: dart.getMethods(basic.UnconstrainedBox.__proto__),
    createRenderObject: dart.fnType(shifted_box.RenderUnconstrainedBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.UnconstrainedBox, L115);
  dart.setFieldSignature(basic.UnconstrainedBox, () => ({
    __proto__: dart.getFields(basic.UnconstrainedBox.__proto__),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    constrainedAxis: dart.finalFieldType(dart.nullable(basic_types.Axis)),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var widthFactor$1 = dart.privateName(basic, "FractionallySizedBox.widthFactor");
  var heightFactor$1 = dart.privateName(basic, "FractionallySizedBox.heightFactor");
  var alignment$8 = dart.privateName(basic, "FractionallySizedBox.alignment");
  basic.FractionallySizedBox = class FractionallySizedBox extends framework.SingleChildRenderObjectWidget {
    get widthFactor() {
      return this[widthFactor$1];
    }
    set widthFactor(value) {
      super.widthFactor = value;
    }
    get heightFactor() {
      return this[heightFactor$1];
    }
    set heightFactor(value) {
      super.heightFactor = value;
    }
    get alignment() {
      return this[alignment$8];
    }
    set alignment(value) {
      super.alignment = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 2478, 70, "context");
      return new shifted_box.RenderFractionallySizedOverflowBox.new({alignment: this.alignment, widthFactor: this.widthFactor, heightFactor: this.heightFactor, textDirection: basic.Directionality.maybeOf(context)});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 2488, 40, "context");
      shifted_box.RenderFractionallySizedOverflowBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 2488, 84, "renderObject");
      t94 = renderObject;
      (() => {
        t94.alignment = this.alignment;
        t94.widthFactor = this.widthFactor;
        t94.heightFactor = this.heightFactor;
        t94.textDirection = basic.Directionality.maybeOf(context);
        return t94;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 2497, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment));
      properties.add(new diagnostics$.DoubleProperty.new("widthFactor", this.widthFactor, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("heightFactor", this.heightFactor, {defaultValue: null}));
    }
  };
  (basic.FractionallySizedBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C413 || CT.C413;
    if (alignment == null) dart.nullFailed(L114, 2430, 10, "alignment");
    let widthFactor = opts && 'widthFactor' in opts ? opts.widthFactor : null;
    let heightFactor = opts && 'heightFactor' in opts ? opts.heightFactor : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$8] = alignment;
    this[widthFactor$1] = widthFactor;
    this[heightFactor$1] = heightFactor;
    if (!(alignment != null)) dart.assertFailed(null, L114, 2434, 15, "alignment != null");
    if (!(widthFactor == null || dart.notNull(widthFactor) >= 0.0)) dart.assertFailed(null, L114, 2435, 15, "widthFactor == null || widthFactor >= 0.0");
    if (!(heightFactor == null || dart.notNull(heightFactor) >= 0.0)) dart.assertFailed(null, L114, 2436, 15, "heightFactor == null || heightFactor >= 0.0");
    basic.FractionallySizedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.FractionallySizedBox.prototype;
  dart.addTypeTests(basic.FractionallySizedBox);
  dart.addTypeCaches(basic.FractionallySizedBox);
  dart.setMethodSignature(basic.FractionallySizedBox, () => ({
    __proto__: dart.getMethods(basic.FractionallySizedBox.__proto__),
    createRenderObject: dart.fnType(shifted_box.RenderFractionallySizedOverflowBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.FractionallySizedBox, L115);
  dart.setFieldSignature(basic.FractionallySizedBox, () => ({
    __proto__: dart.getFields(basic.FractionallySizedBox.__proto__),
    widthFactor: dart.finalFieldType(dart.nullable(core.double)),
    heightFactor: dart.finalFieldType(dart.nullable(core.double)),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry)
  }));
  var maxWidth$ = dart.privateName(basic, "LimitedBox.maxWidth");
  var maxHeight$ = dart.privateName(basic, "LimitedBox.maxHeight");
  basic.LimitedBox = class LimitedBox extends framework.SingleChildRenderObjectWidget {
    get maxWidth() {
      return this[maxWidth$];
    }
    set maxWidth(value) {
      super.maxWidth = value;
    }
    get maxHeight() {
      return this[maxHeight$];
    }
    set maxHeight(value) {
      super.maxHeight = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 2553, 52, "context");
      return new proxy_box.RenderLimitedBox.new({maxWidth: this.maxWidth, maxHeight: this.maxHeight});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 2561, 40, "context");
      proxy_box.RenderLimitedBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 2561, 66, "renderObject");
      t94 = renderObject;
      (() => {
        t94.maxWidth = this.maxWidth;
        t94.maxHeight = this.maxHeight;
        return t94;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 2568, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.DoubleProperty.new("maxWidth", this.maxWidth, {defaultValue: 1 / 0}));
      properties.add(new diagnostics$.DoubleProperty.new("maxHeight", this.maxHeight, {defaultValue: 1 / 0}));
    }
  };
  (basic.LimitedBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : 1 / 0;
    if (maxWidth == null) dart.nullFailed(L114, 2537, 10, "maxWidth");
    let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : 1 / 0;
    if (maxHeight == null) dart.nullFailed(L114, 2538, 10, "maxHeight");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[maxWidth$] = maxWidth;
    this[maxHeight$] = maxHeight;
    if (!(maxWidth != null && dart.notNull(maxWidth) >= 0.0)) dart.assertFailed(null, L114, 2540, 15, "maxWidth != null && maxWidth >= 0.0");
    if (!(maxHeight != null && dart.notNull(maxHeight) >= 0.0)) dart.assertFailed(null, L114, 2541, 15, "maxHeight != null && maxHeight >= 0.0");
    basic.LimitedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.LimitedBox.prototype;
  dart.addTypeTests(basic.LimitedBox);
  dart.addTypeCaches(basic.LimitedBox);
  dart.setMethodSignature(basic.LimitedBox, () => ({
    __proto__: dart.getMethods(basic.LimitedBox.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderLimitedBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.LimitedBox, L115);
  dart.setFieldSignature(basic.LimitedBox, () => ({
    __proto__: dart.getFields(basic.LimitedBox.__proto__),
    maxWidth: dart.finalFieldType(core.double),
    maxHeight: dart.finalFieldType(core.double)
  }));
  var alignment$9 = dart.privateName(basic, "OverflowBox.alignment");
  var minWidth$ = dart.privateName(basic, "OverflowBox.minWidth");
  var maxWidth$0 = dart.privateName(basic, "OverflowBox.maxWidth");
  var minHeight$ = dart.privateName(basic, "OverflowBox.minHeight");
  var maxHeight$0 = dart.privateName(basic, "OverflowBox.maxHeight");
  basic.OverflowBox = class OverflowBox extends framework.SingleChildRenderObjectWidget {
    get alignment() {
      return this[alignment$9];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get minWidth() {
      return this[minWidth$];
    }
    set minWidth(value) {
      super.minWidth = value;
    }
    get maxWidth() {
      return this[maxWidth$0];
    }
    set maxWidth(value) {
      super.maxWidth = value;
    }
    get minHeight() {
      return this[minHeight$];
    }
    set minHeight(value) {
      super.minHeight = value;
    }
    get maxHeight() {
      return this[maxHeight$0];
    }
    set maxHeight(value) {
      super.maxHeight = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 2639, 64, "context");
      return new shifted_box.RenderConstrainedOverflowBox.new({alignment: this.alignment, minWidth: this.minWidth, maxWidth: this.maxWidth, minHeight: this.minHeight, maxHeight: this.maxHeight, textDirection: basic.Directionality.maybeOf(context)});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 2651, 40, "context");
      shifted_box.RenderConstrainedOverflowBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 2651, 78, "renderObject");
      t94 = renderObject;
      (() => {
        t94.alignment = this.alignment;
        t94.minWidth = this.minWidth;
        t94.maxWidth = this.maxWidth;
        t94.minHeight = this.minHeight;
        t94.maxHeight = this.maxHeight;
        t94.textDirection = basic.Directionality.maybeOf(context);
        return t94;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 2662, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment));
      properties.add(new diagnostics$.DoubleProperty.new("minWidth", this.minWidth, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("maxWidth", this.maxWidth, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("minHeight", this.minHeight, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("maxHeight", this.maxHeight, {defaultValue: null}));
    }
  };
  (basic.OverflowBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C413 || CT.C413;
    if (alignment == null) dart.nullFailed(L114, 2594, 10, "alignment");
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
    let minHeight = opts && 'minHeight' in opts ? opts.minHeight : null;
    let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$9] = alignment;
    this[minWidth$] = minWidth;
    this[maxWidth$0] = maxWidth;
    this[minHeight$] = minHeight;
    this[maxHeight$0] = maxHeight;
    basic.OverflowBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.OverflowBox.prototype;
  dart.addTypeTests(basic.OverflowBox);
  dart.addTypeCaches(basic.OverflowBox);
  dart.setMethodSignature(basic.OverflowBox, () => ({
    __proto__: dart.getMethods(basic.OverflowBox.__proto__),
    createRenderObject: dart.fnType(shifted_box.RenderConstrainedOverflowBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.OverflowBox, L115);
  dart.setFieldSignature(basic.OverflowBox, () => ({
    __proto__: dart.getFields(basic.OverflowBox.__proto__),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    minWidth: dart.finalFieldType(dart.nullable(core.double)),
    maxWidth: dart.finalFieldType(dart.nullable(core.double)),
    minHeight: dart.finalFieldType(dart.nullable(core.double)),
    maxHeight: dart.finalFieldType(dart.nullable(core.double))
  }));
  var alignment$10 = dart.privateName(basic, "SizedOverflowBox.alignment");
  var size$2 = dart.privateName(basic, "SizedOverflowBox.size");
  basic.SizedOverflowBox = class SizedOverflowBox extends framework.SingleChildRenderObjectWidget {
    get alignment() {
      return this[alignment$10];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get size() {
      return this[size$2];
    }
    set size(value) {
      super.size = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 2722, 58, "context");
      return new shifted_box.RenderSizedOverflowBox.new({alignment: this.alignment, requestedSize: this.size, textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 2731, 40, "context");
      shifted_box.RenderSizedOverflowBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 2731, 72, "renderObject");
      t94 = renderObject;
      (() => {
        t94.alignment = this.alignment;
        t94.requestedSize = this.size;
        t94.textDirection = basic.Directionality.of(context);
        return t94;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 2739, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment));
      properties.add(new (DiagnosticsPropertyOfSize()).new("size", this.size, {defaultValue: null}));
    }
  };
  (basic.SizedOverflowBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let size = opts && 'size' in opts ? opts.size : null;
    if (size == null) dart.nullFailed(L114, 2691, 19, "size");
    let alignment = opts && 'alignment' in opts ? opts.alignment : C413 || CT.C413;
    if (alignment == null) dart.nullFailed(L114, 2692, 10, "alignment");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[size$2] = size;
    this[alignment$10] = alignment;
    if (!(size != null)) dart.assertFailed(null, L114, 2694, 15, "size != null");
    if (!(alignment != null)) dart.assertFailed(null, L114, 2695, 15, "alignment != null");
    basic.SizedOverflowBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.SizedOverflowBox.prototype;
  dart.addTypeTests(basic.SizedOverflowBox);
  dart.addTypeCaches(basic.SizedOverflowBox);
  dart.setMethodSignature(basic.SizedOverflowBox, () => ({
    __proto__: dart.getMethods(basic.SizedOverflowBox.__proto__),
    createRenderObject: dart.fnType(shifted_box.RenderSizedOverflowBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.SizedOverflowBox, L115);
  dart.setFieldSignature(basic.SizedOverflowBox, () => ({
    __proto__: dart.getFields(basic.SizedOverflowBox.__proto__),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    size: dart.finalFieldType(ui.Size)
  }));
  var offstage$0 = dart.privateName(basic, "Offstage.offstage");
  basic.Offstage = class Offstage extends framework.SingleChildRenderObjectWidget {
    get offstage() {
      return this[offstage$0];
    }
    set offstage(value) {
      super.offstage = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 2843, 50, "context");
      return new proxy_box.RenderOffstage.new({offstage: this.offstage});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L114, 2846, 40, "context");
      proxy_box.RenderOffstage.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 2846, 64, "renderObject");
      renderObject.offstage = this.offstage;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 2851, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfbool()).new("offstage", this.offstage));
    }
    createElement() {
      return new basic._OffstageElement.new(this);
    }
  };
  (basic.Offstage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let offstage = opts && 'offstage' in opts ? opts.offstage : true;
    if (offstage == null) dart.nullFailed(L114, 2823, 35, "offstage");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[offstage$0] = offstage;
    if (!(offstage != null)) dart.assertFailed(null, L114, 2824, 14, "offstage != null");
    basic.Offstage.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Offstage.prototype;
  dart.addTypeTests(basic.Offstage);
  dart.addTypeCaches(basic.Offstage);
  dart.setMethodSignature(basic.Offstage, () => ({
    __proto__: dart.getMethods(basic.Offstage.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderOffstage, [framework.BuildContext]),
    createElement: dart.fnType(basic._OffstageElement, [])
  }));
  dart.setLibraryUri(basic.Offstage, L115);
  dart.setFieldSignature(basic.Offstage, () => ({
    __proto__: dart.getFields(basic.Offstage.__proto__),
    offstage: dart.finalFieldType(core.bool)
  }));
  basic._OffstageElement = class _OffstageElement extends framework.SingleChildRenderObjectElement {
    get widget() {
      return basic.Offstage.as(super.widget);
    }
    debugVisitOnstageChildren(visitor) {
      if (visitor == null) dart.nullFailed(L114, 2867, 49, "visitor");
      if (!dart.test(this.widget.offstage)) super.debugVisitOnstageChildren(visitor);
    }
  };
  (basic._OffstageElement.new = function(widget) {
    if (widget == null) dart.nullFailed(L114, 2861, 29, "widget");
    basic._OffstageElement.__proto__.new.call(this, widget);
    ;
  }).prototype = basic._OffstageElement.prototype;
  dart.addTypeTests(basic._OffstageElement);
  dart.addTypeCaches(basic._OffstageElement);
  dart.setGetterSignature(basic._OffstageElement, () => ({
    __proto__: dart.getGetters(basic._OffstageElement.__proto__),
    widget: basic.Offstage
  }));
  dart.setLibraryUri(basic._OffstageElement, L115);
  var aspectRatio$ = dart.privateName(basic, "AspectRatio.aspectRatio");
  basic.AspectRatio = class AspectRatio extends framework.SingleChildRenderObjectWidget {
    get aspectRatio() {
      return this[aspectRatio$];
    }
    set aspectRatio(value) {
      super.aspectRatio = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 3002, 53, "context");
      return new proxy_box.RenderAspectRatio.new({aspectRatio: this.aspectRatio});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L114, 3005, 40, "context");
      proxy_box.RenderAspectRatio.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 3005, 67, "renderObject");
      renderObject.aspectRatio = this.aspectRatio;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 3010, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.DoubleProperty.new("aspectRatio", this.aspectRatio));
    }
  };
  (basic.AspectRatio.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let aspectRatio = opts && 'aspectRatio' in opts ? opts.aspectRatio : null;
    if (aspectRatio == null) dart.nullFailed(L114, 2988, 19, "aspectRatio");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[aspectRatio$] = aspectRatio;
    if (!(aspectRatio != null)) dart.assertFailed(null, L114, 2990, 15, "aspectRatio != null");
    if (!(dart.notNull(aspectRatio) > 0.0)) dart.assertFailed(null, L114, 2991, 15, "aspectRatio > 0.0");
    basic.AspectRatio.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.AspectRatio.prototype;
  dart.addTypeTests(basic.AspectRatio);
  dart.addTypeCaches(basic.AspectRatio);
  dart.setMethodSignature(basic.AspectRatio, () => ({
    __proto__: dart.getMethods(basic.AspectRatio.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderAspectRatio, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.AspectRatio, L115);
  dart.setFieldSignature(basic.AspectRatio, () => ({
    __proto__: dart.getFields(basic.AspectRatio.__proto__),
    aspectRatio: dart.finalFieldType(core.double)
  }));
  var _stepWidth = dart.privateName(basic, "_stepWidth");
  var _stepHeight = dart.privateName(basic, "_stepHeight");
  var stepWidth$ = dart.privateName(basic, "IntrinsicWidth.stepWidth");
  var stepHeight$ = dart.privateName(basic, "IntrinsicWidth.stepHeight");
  basic.IntrinsicWidth = class IntrinsicWidth extends framework.SingleChildRenderObjectWidget {
    get stepWidth() {
      return this[stepWidth$];
    }
    set stepWidth(value) {
      super.stepWidth = value;
    }
    get stepHeight() {
      return this[stepHeight$];
    }
    set stepHeight(value) {
      super.stepHeight = value;
    }
    get [_stepWidth]() {
      return this.stepWidth === 0.0 ? null : this.stepWidth;
    }
    get [_stepHeight]() {
      return this.stepHeight === 0.0 ? null : this.stepHeight;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 3082, 56, "context");
      return new proxy_box.RenderIntrinsicWidth.new({stepWidth: this[_stepWidth], stepHeight: this[_stepHeight]});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 3087, 40, "context");
      proxy_box.RenderIntrinsicWidth.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 3087, 70, "renderObject");
      t94 = renderObject;
      (() => {
        t94.stepWidth = this[_stepWidth];
        t94.stepHeight = this[_stepHeight];
        return t94;
      })();
    }
  };
  (basic.IntrinsicWidth.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let stepWidth = opts && 'stepWidth' in opts ? opts.stepWidth : null;
    let stepHeight = opts && 'stepHeight' in opts ? opts.stepHeight : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[stepWidth$] = stepWidth;
    this[stepHeight$] = stepHeight;
    if (!(stepWidth == null || dart.notNull(stepWidth) >= 0.0)) dart.assertFailed(null, L114, 3054, 14, "stepWidth == null || stepWidth >= 0.0");
    if (!(stepHeight == null || dart.notNull(stepHeight) >= 0.0)) dart.assertFailed(null, L114, 3055, 14, "stepHeight == null || stepHeight >= 0.0");
    basic.IntrinsicWidth.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.IntrinsicWidth.prototype;
  dart.addTypeTests(basic.IntrinsicWidth);
  dart.addTypeCaches(basic.IntrinsicWidth);
  dart.setMethodSignature(basic.IntrinsicWidth, () => ({
    __proto__: dart.getMethods(basic.IntrinsicWidth.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderIntrinsicWidth, [framework.BuildContext])
  }));
  dart.setGetterSignature(basic.IntrinsicWidth, () => ({
    __proto__: dart.getGetters(basic.IntrinsicWidth.__proto__),
    [_stepWidth]: dart.nullable(core.double),
    [_stepHeight]: dart.nullable(core.double)
  }));
  dart.setLibraryUri(basic.IntrinsicWidth, L115);
  dart.setFieldSignature(basic.IntrinsicWidth, () => ({
    __proto__: dart.getFields(basic.IntrinsicWidth.__proto__),
    stepWidth: dart.finalFieldType(dart.nullable(core.double)),
    stepHeight: dart.finalFieldType(dart.nullable(core.double))
  }));
  basic.IntrinsicHeight = class IntrinsicHeight extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 3130, 57, "context");
      return new proxy_box.RenderIntrinsicHeight.new();
    }
  };
  (basic.IntrinsicHeight.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    basic.IntrinsicHeight.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.IntrinsicHeight.prototype;
  dart.addTypeTests(basic.IntrinsicHeight);
  dart.addTypeCaches(basic.IntrinsicHeight);
  dart.setMethodSignature(basic.IntrinsicHeight, () => ({
    __proto__: dart.getMethods(basic.IntrinsicHeight.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderIntrinsicHeight, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.IntrinsicHeight, L115);
  var baseline$ = dart.privateName(basic, "Baseline.baseline");
  var baselineType$ = dart.privateName(basic, "Baseline.baselineType");
  basic.Baseline = class Baseline extends framework.SingleChildRenderObjectWidget {
    get baseline() {
      return this[baseline$];
    }
    set baseline(value) {
      super.baseline = value;
    }
    get baselineType() {
      return this[baselineType$];
    }
    set baselineType(value) {
      super.baselineType = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 3169, 50, "context");
      return new shifted_box.RenderBaseline.new({baseline: this.baseline, baselineType: this.baselineType});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 3174, 40, "context");
      shifted_box.RenderBaseline.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 3174, 64, "renderObject");
      t94 = renderObject;
      (() => {
        t94.baseline = this.baseline;
        t94.baselineType = this.baselineType;
        return t94;
      })();
    }
  };
  (basic.Baseline.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let baseline = opts && 'baseline' in opts ? opts.baseline : null;
    if (baseline == null) dart.nullFailed(L114, 3154, 19, "baseline");
    let baselineType = opts && 'baselineType' in opts ? opts.baselineType : null;
    if (baselineType == null) dart.nullFailed(L114, 3155, 19, "baselineType");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[baseline$] = baseline;
    this[baselineType$] = baselineType;
    if (!(baseline != null)) dart.assertFailed(null, L114, 3157, 15, "baseline != null");
    if (!(baselineType != null)) dart.assertFailed(null, L114, 3158, 15, "baselineType != null");
    basic.Baseline.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Baseline.prototype;
  dart.addTypeTests(basic.Baseline);
  dart.addTypeCaches(basic.Baseline);
  dart.setMethodSignature(basic.Baseline, () => ({
    __proto__: dart.getMethods(basic.Baseline.__proto__),
    createRenderObject: dart.fnType(shifted_box.RenderBaseline, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Baseline, L115);
  dart.setFieldSignature(basic.Baseline, () => ({
    __proto__: dart.getFields(basic.Baseline.__proto__),
    baseline: dart.finalFieldType(core.double),
    baselineType: dart.finalFieldType(ui.TextBaseline)
  }));
  basic.SliverToBoxAdapter = class SliverToBoxAdapter extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 3214, 60, "context");
      return new sliver.RenderSliverToBoxAdapter.new();
    }
  };
  (basic.SliverToBoxAdapter.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    basic.SliverToBoxAdapter.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.SliverToBoxAdapter.prototype;
  dart.addTypeTests(basic.SliverToBoxAdapter);
  dart.addTypeCaches(basic.SliverToBoxAdapter);
  dart.setMethodSignature(basic.SliverToBoxAdapter, () => ({
    __proto__: dart.getMethods(basic.SliverToBoxAdapter.__proto__),
    createRenderObject: dart.fnType(sliver.RenderSliverToBoxAdapter, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.SliverToBoxAdapter, L115);
  var padding$2 = dart.privateName(basic, "SliverPadding.padding");
  basic.SliverPadding = class SliverPadding extends framework.SingleChildRenderObjectWidget {
    get padding() {
      return this[padding$2];
    }
    set padding(value) {
      super.padding = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 3244, 55, "context");
      return new sliver_padding.RenderSliverPadding.new({padding: this.padding, textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 3252, 40, "context");
      sliver_padding.RenderSliverPadding.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 3252, 69, "renderObject");
      t94 = renderObject;
      (() => {
        t94.padding = this.padding;
        t94.textDirection = basic.Directionality.of(context);
        return t94;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 3259, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding));
    }
  };
  (basic.SliverPadding.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    if (padding == null) dart.nullFailed(L114, 3235, 19, "padding");
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[padding$2] = padding;
    if (!(padding != null)) dart.assertFailed(null, L114, 3237, 15, "padding != null");
    basic.SliverPadding.__proto__.new.call(this, {key: key, child: sliver, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.SliverPadding.prototype;
  dart.addTypeTests(basic.SliverPadding);
  dart.addTypeCaches(basic.SliverPadding);
  dart.setMethodSignature(basic.SliverPadding, () => ({
    __proto__: dart.getMethods(basic.SliverPadding.__proto__),
    createRenderObject: dart.fnType(sliver_padding.RenderSliverPadding, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.SliverPadding, L115);
  dart.setFieldSignature(basic.SliverPadding, () => ({
    __proto__: dart.getFields(basic.SliverPadding.__proto__),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry)
  }));
  var _getDirection = dart.privateName(basic, "_getDirection");
  var mainAxis$ = dart.privateName(basic, "ListBody.mainAxis");
  var reverse$ = dart.privateName(basic, "ListBody.reverse");
  basic.ListBody = class ListBody extends framework.MultiChildRenderObjectWidget {
    get mainAxis() {
      return this[mainAxis$];
    }
    set mainAxis(value) {
      super.mainAxis = value;
    }
    get reverse() {
      return this[reverse$];
    }
    set reverse(value) {
      super.reverse = value;
    }
    [_getDirection](context) {
      if (context == null) dart.nullFailed(L114, 3352, 44, "context");
      return basic.getAxisDirectionFromAxisReverseAndDirectionality(context, this.mainAxis, this.reverse);
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 3357, 50, "context");
      return new list_body.RenderListBody.new({axisDirection: this[_getDirection](context)});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L114, 3362, 40, "context");
      list_body.RenderListBody.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 3362, 64, "renderObject");
      renderObject.axisDirection = this[_getDirection](context);
    }
  };
  (basic.ListBody.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let mainAxis = opts && 'mainAxis' in opts ? opts.mainAxis : C424 || CT.C424;
    if (mainAxis == null) dart.nullFailed(L114, 3329, 10, "mainAxis");
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    if (reverse == null) dart.nullFailed(L114, 3330, 10, "reverse");
    let children = opts && 'children' in opts ? opts.children : C365 || CT.C365;
    if (children == null) dart.nullFailed(L114, 3331, 18, "children");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[mainAxis$] = mainAxis;
    this[reverse$] = reverse;
    if (!(mainAxis != null)) dart.assertFailed(null, L114, 3332, 15, "mainAxis != null");
    basic.ListBody.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.ListBody.prototype;
  dart.addTypeTests(basic.ListBody);
  dart.addTypeCaches(basic.ListBody);
  dart.setMethodSignature(basic.ListBody, () => ({
    __proto__: dart.getMethods(basic.ListBody.__proto__),
    [_getDirection]: dart.fnType(basic_types.AxisDirection, [framework.BuildContext]),
    createRenderObject: dart.fnType(list_body.RenderListBody, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.ListBody, L115);
  dart.setFieldSignature(basic.ListBody, () => ({
    __proto__: dart.getFields(basic.ListBody.__proto__),
    mainAxis: dart.finalFieldType(basic_types.Axis),
    reverse: dart.finalFieldType(core.bool)
  }));
  var AlignmentDirectional_y = dart.privateName(alignment$, "AlignmentDirectional.y");
  var AlignmentDirectional_start = dart.privateName(alignment$, "AlignmentDirectional.start");
  var C1278;
  var _name$26 = dart.privateName(stack, "_name");
  var C1279;
  var C1280;
  var _debugCheckHasDirectionality = dart.privateName(basic, "_debugCheckHasDirectionality");
  var alignment$11 = dart.privateName(basic, "Stack.alignment");
  var textDirection$9 = dart.privateName(basic, "Stack.textDirection");
  var fit$1 = dart.privateName(basic, "Stack.fit");
  var overflow$2 = dart.privateName(basic, "Stack.overflow");
  var clipBehavior$13 = dart.privateName(basic, "Stack.clipBehavior");
  basic.Stack = class Stack extends framework.MultiChildRenderObjectWidget {
    get alignment() {
      return this[alignment$11];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get textDirection() {
      return this[textDirection$9];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get fit() {
      return this[fit$1];
    }
    set fit(value) {
      super.fit = value;
    }
    get overflow() {
      return this[overflow$2];
    }
    set overflow(value) {
      super.overflow = value;
    }
    get clipBehavior() {
      return this[clipBehavior$13];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    [_debugCheckHasDirectionality](context) {
      if (context == null) dart.nullFailed(L114, 3560, 50, "context");
      if (alignment$.AlignmentDirectional.is(this.alignment) && this.textDirection == null) {
        if (!dart.test(debug$0.debugCheckHasDirectionality(context, {why: "to resolve the 'alignment' argument", hint: dart.equals(this.alignment, alignment$.AlignmentDirectional.topStart) ? "The default value for 'alignment' is AlignmentDirectional.topStart, which requires a text direction." : null, alternative: "Instead of providing a Directionality widget, another solution would be passing a non-directional 'alignment', or an explicit 'textDirection', to the " + dart.str(this[$runtimeType]) + "."}))) dart.assertFailed(null, L114, 3562, 14, "debugCheckHasDirectionality(\r\n        context,\r\n        why: 'to resolve the \\'alignment\\' argument',\r\n        hint: alignment == AlignmentDirectional.topStart ? 'The default value for \\'alignment\\' is AlignmentDirectional.topStart, which requires a text direction.' : null,\r\n        alternative: 'Instead of providing a Directionality widget, another solution would be passing a non-directional \\'alignment\\', or an explicit \\'textDirection\\', to the $runtimeType.')");
      }
      return true;
    }
    createRenderObject(context) {
      let t94;
      if (context == null) dart.nullFailed(L114, 3573, 47, "context");
      if (!dart.test(this[_debugCheckHasDirectionality](context))) dart.assertFailed(null, L114, 3574, 12, "_debugCheckHasDirectionality(context)");
      return new stack.RenderStack.new({alignment: this.alignment, textDirection: (t94 = this.textDirection, t94 == null ? basic.Directionality.maybeOf(context) : t94), fit: this.fit, clipBehavior: dart.equals(this.overflow, stack.Overflow.visible) ? ui.Clip.none : this.clipBehavior});
    }
    updateRenderObject(context, renderObject) {
      let t95, t94;
      if (context == null) dart.nullFailed(L114, 3584, 40, "context");
      stack.RenderStack.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 3584, 61, "renderObject");
      if (!dart.test(this[_debugCheckHasDirectionality](context))) dart.assertFailed(null, L114, 3585, 12, "_debugCheckHasDirectionality(context)");
      t94 = renderObject;
      (() => {
        t94.alignment = this.alignment;
        t94.textDirection = (t95 = this.textDirection, t95 == null ? basic.Directionality.maybeOf(context) : t95);
        t94.fit = this.fit;
        t94.clipBehavior = dart.equals(this.overflow, stack.Overflow.visible) ? ui.Clip.none : this.clipBehavior;
        return t94;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 3594, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment));
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
      properties.add(new (EnumPropertyOfStackFit()).new("fit", this.fit));
      properties.add(new (EnumPropertyOfClip()).new("clipBehavior", this.clipBehavior, {defaultValue: ui.Clip.hardEdge}));
    }
  };
  (basic.Stack.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C1278 || CT.C1278;
    if (alignment == null) dart.nullFailed(L114, 3489, 10, "alignment");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let fit = opts && 'fit' in opts ? opts.fit : C1279 || CT.C1279;
    if (fit == null) dart.nullFailed(L114, 3491, 10, "fit");
    let overflow = opts && 'overflow' in opts ? opts.overflow : C1280 || CT.C1280;
    if (overflow == null) dart.nullFailed(L114, 3496, 10, "overflow");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C470 || CT.C470;
    if (clipBehavior == null) dart.nullFailed(L114, 3497, 10, "clipBehavior");
    let children = opts && 'children' in opts ? opts.children : C365 || CT.C365;
    if (children == null) dart.nullFailed(L114, 3498, 18, "children");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$11] = alignment;
    this[textDirection$9] = textDirection;
    this[fit$1] = fit;
    this[overflow$2] = overflow;
    this[clipBehavior$13] = clipBehavior;
    if (!(clipBehavior != null)) dart.assertFailed(null, L114, 3499, 15, "clipBehavior != null");
    basic.Stack.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Stack.prototype;
  dart.addTypeTests(basic.Stack);
  dart.addTypeCaches(basic.Stack);
  dart.setMethodSignature(basic.Stack, () => ({
    __proto__: dart.getMethods(basic.Stack.__proto__),
    [_debugCheckHasDirectionality]: dart.fnType(core.bool, [framework.BuildContext]),
    createRenderObject: dart.fnType(stack.RenderStack, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Stack, L115);
  dart.setFieldSignature(basic.Stack, () => ({
    __proto__: dart.getFields(basic.Stack.__proto__),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    fit: dart.finalFieldType(stack.StackFit),
    overflow: dart.finalFieldType(stack.Overflow),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var index$0 = dart.privateName(basic, "IndexedStack.index");
  basic.IndexedStack = class IndexedStack extends basic.Stack {
    get index() {
      return this[index$0];
    }
    set index(value) {
      super.index = value;
    }
    createRenderObject(context) {
      let t94;
      if (context == null) dart.nullFailed(L114, 3633, 54, "context");
      if (!dart.test(this[_debugCheckHasDirectionality](context))) dart.assertFailed(null, L114, 3634, 12, "_debugCheckHasDirectionality(context)");
      return new stack.RenderIndexedStack.new({index: this.index, alignment: this.alignment, textDirection: (t94 = this.textDirection, t94 == null ? basic.Directionality.maybeOf(context) : t94)});
    }
    updateRenderObject(context, renderObject) {
      let t95, t94;
      if (context == null) dart.nullFailed(L114, 3643, 40, "context");
      stack.RenderIndexedStack.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 3643, 68, "renderObject");
      if (!dart.test(this[_debugCheckHasDirectionality](context))) dart.assertFailed(null, L114, 3644, 12, "_debugCheckHasDirectionality(context)");
      t94 = renderObject;
      (() => {
        t94.index = this.index;
        t94.alignment = this.alignment;
        t94.textDirection = (t95 = this.textDirection, t95 == null ? basic.Directionality.maybeOf(context) : t95);
        return t94;
      })();
    }
  };
  (basic.IndexedStack.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C1278 || CT.C1278;
    if (alignment == null) dart.nullFailed(L114, 3622, 23, "alignment");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let sizing = opts && 'sizing' in opts ? opts.sizing : C1279 || CT.C1279;
    if (sizing == null) dart.nullFailed(L114, 3624, 14, "sizing");
    let index = opts && 'index' in opts ? opts.index : 0;
    let children = opts && 'children' in opts ? opts.children : C365 || CT.C365;
    if (children == null) dart.nullFailed(L114, 3626, 18, "children");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[index$0] = index;
    basic.IndexedStack.__proto__.new.call(this, {key: key, alignment: alignment, textDirection: textDirection, fit: sizing, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.IndexedStack.prototype;
  dart.addTypeTests(basic.IndexedStack);
  dart.addTypeCaches(basic.IndexedStack);
  dart.setMethodSignature(basic.IndexedStack, () => ({
    __proto__: dart.getMethods(basic.IndexedStack.__proto__),
    createRenderObject: dart.fnType(stack.RenderIndexedStack, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.IndexedStack, L115);
  dart.setFieldSignature(basic.IndexedStack, () => ({
    __proto__: dart.getFields(basic.IndexedStack.__proto__),
    index: dart.finalFieldType(dart.nullable(core.int))
  }));
  var left$ = dart.privateName(basic, "Positioned.left");
  var top$ = dart.privateName(basic, "Positioned.top");
  var right$ = dart.privateName(basic, "Positioned.right");
  var bottom$ = dart.privateName(basic, "Positioned.bottom");
  var width$1 = dart.privateName(basic, "Positioned.width");
  var height$1 = dart.privateName(basic, "Positioned.height");
  basic.Positioned = class Positioned extends framework.ParentDataWidget$(stack.StackParentData) {
    get left() {
      return this[left$];
    }
    set left(value) {
      super.left = value;
    }
    get top() {
      return this[top$];
    }
    set top(value) {
      super.top = value;
    }
    get right() {
      return this[right$];
    }
    set right(value) {
      super.right = value;
    }
    get bottom() {
      return this[bottom$];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get width() {
      return this[width$1];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$1];
    }
    set height(value) {
      super.height = value;
    }
    static directional(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (textDirection == null) dart.nullFailed(L114, 3779, 28, "textDirection");
      let start = opts && 'start' in opts ? opts.start : null;
      let top = opts && 'top' in opts ? opts.top : null;
      let end = opts && 'end' in opts ? opts.end : null;
      let bottom = opts && 'bottom' in opts ? opts.bottom : null;
      let width = opts && 'width' in opts ? opts.width : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(L114, 3786, 21, "child");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      if (!(textDirection != null)) dart.assertFailed(null, L114, 3788, 12, "textDirection != null");
      let left = null;
      let right = null;
      switch (textDirection) {
        case C79 || CT.C79:
        {
          left = end;
          right = start;
          break;
        }
        case C80 || CT.C80:
        {
          left = start;
          right = end;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return new basic.Positioned.new({key: key, left: left, top: top, right: right, bottom: bottom, width: width, height: height, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }
    applyParentData(renderObject) {
      if (renderObject == null) dart.nullFailed(L114, 3868, 37, "renderObject");
      if (!stack.StackParentData.is(renderObject.parentData)) dart.assertFailed(null, L114, 3869, 12, "renderObject.parentData is StackParentData");
      let parentData = stack.StackParentData.as(dart.nullCheck(renderObject.parentData));
      let needsLayout = false;
      if (parentData.left != this.left) {
        parentData.left = this.left;
        needsLayout = true;
      }
      if (parentData.top != this.top) {
        parentData.top = this.top;
        needsLayout = true;
      }
      if (parentData.right != this.right) {
        parentData.right = this.right;
        needsLayout = true;
      }
      if (parentData.bottom != this.bottom) {
        parentData.bottom = this.bottom;
        needsLayout = true;
      }
      if (parentData.width != this.width) {
        parentData.width = this.width;
        needsLayout = true;
      }
      if (parentData.height != this.height) {
        parentData.height = this.height;
        needsLayout = true;
      }
      if (needsLayout) {
        let targetParent = renderObject.parent;
        if (object$.RenderObject.is(targetParent)) targetParent.markNeedsLayout();
      }
    }
    get debugTypicalAncestorWidgetClass() {
      return dart.wrapType(basic.Stack);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 3914, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.DoubleProperty.new("left", this.left, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("top", this.top, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("right", this.right, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("bottom", this.bottom, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("width", this.width, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("height", this.height, {defaultValue: null}));
    }
  };
  (basic.Positioned.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let left = opts && 'left' in opts ? opts.left : null;
    let top = opts && 'top' in opts ? opts.top : null;
    let right = opts && 'right' in opts ? opts.right : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L114, 3708, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[left$] = left;
    this[top$] = top;
    this[right$] = right;
    this[bottom$] = bottom;
    this[width$1] = width;
    this[height$1] = height;
    if (!(left == null || right == null || width == null)) dart.assertFailed(null, L114, 3709, 15, "left == null || right == null || width == null");
    if (!(top == null || bottom == null || height == null)) dart.assertFailed(null, L114, 3710, 15, "top == null || bottom == null || height == null");
    basic.Positioned.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Positioned.prototype;
  (basic.Positioned.fromRect = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let rect = opts && 'rect' in opts ? opts.rect : null;
    if (rect == null) dart.nullFailed(L114, 3720, 19, "rect");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L114, 3721, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[left$] = rect.left;
    this[top$] = rect.top;
    this[width$1] = rect.width;
    this[height$1] = rect.height;
    this[right$] = null;
    this[bottom$] = null;
    basic.Positioned.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Positioned.prototype;
  (basic.Positioned.fromRelativeRect = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let rect = opts && 'rect' in opts ? opts.rect : null;
    if (rect == null) dart.nullFailed(L114, 3736, 27, "rect");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L114, 3737, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[left$] = rect.left;
    this[top$] = rect.top;
    this[right$] = rect.right;
    this[bottom$] = rect.bottom;
    this[width$1] = null;
    this[height$1] = null;
    basic.Positioned.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Positioned.prototype;
  (basic.Positioned.fill = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let left = opts && 'left' in opts ? opts.left : 0;
    let top = opts && 'top' in opts ? opts.top : 0;
    let right = opts && 'right' in opts ? opts.right : 0;
    let bottom = opts && 'bottom' in opts ? opts.bottom : 0;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L114, 3754, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[left$] = left;
    this[top$] = top;
    this[right$] = right;
    this[bottom$] = bottom;
    this[width$1] = null;
    this[height$1] = null;
    basic.Positioned.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Positioned.prototype;
  dart.addTypeTests(basic.Positioned);
  dart.addTypeCaches(basic.Positioned);
  dart.setMethodSignature(basic.Positioned, () => ({
    __proto__: dart.getMethods(basic.Positioned.__proto__),
    applyParentData: dart.fnType(dart.void, [object$.RenderObject])
  }));
  dart.setGetterSignature(basic.Positioned, () => ({
    __proto__: dart.getGetters(basic.Positioned.__proto__),
    debugTypicalAncestorWidgetClass: core.Type
  }));
  dart.setLibraryUri(basic.Positioned, L115);
  dart.setFieldSignature(basic.Positioned, () => ({
    __proto__: dart.getFields(basic.Positioned.__proto__),
    left: dart.finalFieldType(dart.nullable(core.double)),
    top: dart.finalFieldType(dart.nullable(core.double)),
    right: dart.finalFieldType(dart.nullable(core.double)),
    bottom: dart.finalFieldType(dart.nullable(core.double)),
    width: dart.finalFieldType(dart.nullable(core.double)),
    height: dart.finalFieldType(dart.nullable(core.double))
  }));
  var C1283;
  var C1284;
  var C1285;
  var C1286;
  var C1287;
  var C1288;
  var C1289;
  var C1290;
  var C1282;
  var C1281;
  var start$ = dart.privateName(basic, "PositionedDirectional.start");
  var top$0 = dart.privateName(basic, "PositionedDirectional.top");
  var end$ = dart.privateName(basic, "PositionedDirectional.end");
  var bottom$0 = dart.privateName(basic, "PositionedDirectional.bottom");
  var width$2 = dart.privateName(basic, "PositionedDirectional.width");
  var height$2 = dart.privateName(basic, "PositionedDirectional.height");
  var child$41 = dart.privateName(basic, "PositionedDirectional.child");
  basic.PositionedDirectional = class PositionedDirectional extends framework.StatelessWidget {
    get start() {
      return this[start$];
    }
    set start(value) {
      super.start = value;
    }
    get top() {
      return this[top$0];
    }
    set top(value) {
      super.top = value;
    }
    get end() {
      return this[end$];
    }
    set end(value) {
      super.end = value;
    }
    get bottom() {
      return this[bottom$0];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get width() {
      return this[width$2];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$2];
    }
    set height(value) {
      super.height = value;
    }
    get child() {
      return this[child$41];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(L114, 4024, 29, "context");
      return basic.Positioned.directional({textDirection: basic.Directionality.of(context), start: this.start, top: this.top, end: this.end, bottom: this.bottom, width: this.width, height: this.height, child: this.child, $creationLocationd_0dea112b090073317d4: C1281 || CT.C1281});
    }
  };
  (basic.PositionedDirectional.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let start = opts && 'start' in opts ? opts.start : null;
    let top = opts && 'top' in opts ? opts.top : null;
    let end = opts && 'end' in opts ? opts.end : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L114, 3977, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[start$] = start;
    this[top$0] = top;
    this[end$] = end;
    this[bottom$0] = bottom;
    this[width$2] = width;
    this[height$2] = height;
    this[child$41] = child;
    basic.PositionedDirectional.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.PositionedDirectional.prototype;
  dart.addTypeTests(basic.PositionedDirectional);
  dart.addTypeCaches(basic.PositionedDirectional);
  dart.setMethodSignature(basic.PositionedDirectional, () => ({
    __proto__: dart.getMethods(basic.PositionedDirectional.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.PositionedDirectional, L115);
  dart.setFieldSignature(basic.PositionedDirectional, () => ({
    __proto__: dart.getFields(basic.PositionedDirectional.__proto__),
    start: dart.finalFieldType(dart.nullable(core.double)),
    top: dart.finalFieldType(dart.nullable(core.double)),
    end: dart.finalFieldType(dart.nullable(core.double)),
    bottom: dart.finalFieldType(dart.nullable(core.double)),
    width: dart.finalFieldType(dart.nullable(core.double)),
    height: dart.finalFieldType(dart.nullable(core.double)),
    child: dart.finalFieldType(framework.Widget)
  }));
  var _name$27 = dart.privateName(flex$, "_name");
  var C1291;
  var C1292;
  var C1293;
  var C1294;
  var _needTextDirection = dart.privateName(basic, "_needTextDirection");
  var direction$3 = dart.privateName(basic, "Flex.direction");
  var mainAxisAlignment$ = dart.privateName(basic, "Flex.mainAxisAlignment");
  var mainAxisSize$ = dart.privateName(basic, "Flex.mainAxisSize");
  var crossAxisAlignment$ = dart.privateName(basic, "Flex.crossAxisAlignment");
  var textDirection$10 = dart.privateName(basic, "Flex.textDirection");
  var verticalDirection$ = dart.privateName(basic, "Flex.verticalDirection");
  var textBaseline$0 = dart.privateName(basic, "Flex.textBaseline");
  var clipBehavior$14 = dart.privateName(basic, "Flex.clipBehavior");
  basic.Flex = class Flex extends framework.MultiChildRenderObjectWidget {
    get direction() {
      return this[direction$3];
    }
    set direction(value) {
      super.direction = value;
    }
    get mainAxisAlignment() {
      return this[mainAxisAlignment$];
    }
    set mainAxisAlignment(value) {
      super.mainAxisAlignment = value;
    }
    get mainAxisSize() {
      return this[mainAxisSize$];
    }
    set mainAxisSize(value) {
      super.mainAxisSize = value;
    }
    get crossAxisAlignment() {
      return this[crossAxisAlignment$];
    }
    set crossAxisAlignment(value) {
      super.crossAxisAlignment = value;
    }
    get textDirection() {
      return this[textDirection$10];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get verticalDirection() {
      return this[verticalDirection$];
    }
    set verticalDirection(value) {
      super.verticalDirection = value;
    }
    get textBaseline() {
      return this[textBaseline$0];
    }
    set textBaseline(value) {
      super.textBaseline = value;
    }
    get clipBehavior() {
      return this[clipBehavior$14];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get [_needTextDirection]() {
      if (!(this.direction != null)) dart.assertFailed(null, L114, 4234, 12, "direction != null");
      switch (this.direction) {
        case C685 || CT.C685:
        {
          return true;
        }
        case C424 || CT.C424:
        {
          if (!(this.crossAxisAlignment != null)) dart.assertFailed(null, L114, 4239, 16, "crossAxisAlignment != null");
          return dart.equals(this.crossAxisAlignment, flex$.CrossAxisAlignment.start) || dart.equals(this.crossAxisAlignment, flex$.CrossAxisAlignment.end);
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    getEffectiveTextDirection(context) {
      let t94;
      if (context == null) dart.nullFailed(L114, 4261, 57, "context");
      t94 = this.textDirection;
      return t94 == null ? dart.test(this[_needTextDirection]) ? basic.Directionality.maybeOf(context) : null : t94;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 4266, 46, "context");
      return new flex$.RenderFlex.new({direction: this.direction, mainAxisAlignment: this.mainAxisAlignment, mainAxisSize: this.mainAxisSize, crossAxisAlignment: this.crossAxisAlignment, textDirection: this.getEffectiveTextDirection(context), verticalDirection: this.verticalDirection, textBaseline: this.textBaseline, clipBehavior: this.clipBehavior});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 4280, 40, "context");
      flex$.RenderFlex.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 4280, 70, "renderObject");
      t94 = renderObject;
      (() => {
        t94.direction = this.direction;
        t94.mainAxisAlignment = this.mainAxisAlignment;
        t94.mainAxisSize = this.mainAxisSize;
        t94.crossAxisAlignment = this.crossAxisAlignment;
        t94.textDirection = this.getEffectiveTextDirection(context);
        t94.verticalDirection = this.verticalDirection;
        t94.textBaseline = this.textBaseline;
        t94.clipBehavior = this.clipBehavior;
        return t94;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 4293, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfAxis()).new("direction", this.direction));
      properties.add(new (EnumPropertyOfMainAxisAlignment()).new("mainAxisAlignment", this.mainAxisAlignment));
      properties.add(new (EnumPropertyOfMainAxisSize()).new("mainAxisSize", this.mainAxisSize, {defaultValue: flex$.MainAxisSize.max}));
      properties.add(new (EnumPropertyOfCrossAxisAlignment()).new("crossAxisAlignment", this.crossAxisAlignment));
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
      properties.add(new (EnumPropertyOfVerticalDirection()).new("verticalDirection", this.verticalDirection, {defaultValue: basic_types.VerticalDirection.down}));
      properties.add(new (EnumPropertyOfTextBaseline()).new("textBaseline", this.textBaseline, {defaultValue: null}));
    }
  };
  (basic.Flex.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let direction = opts && 'direction' in opts ? opts.direction : null;
    if (direction == null) dart.nullFailed(L114, 4120, 19, "direction");
    let mainAxisAlignment = opts && 'mainAxisAlignment' in opts ? opts.mainAxisAlignment : C1291 || CT.C1291;
    if (mainAxisAlignment == null) dart.nullFailed(L114, 4121, 10, "mainAxisAlignment");
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : C1292 || CT.C1292;
    if (mainAxisSize == null) dart.nullFailed(L114, 4122, 10, "mainAxisSize");
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : C1293 || CT.C1293;
    if (crossAxisAlignment == null) dart.nullFailed(L114, 4123, 10, "crossAxisAlignment");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let verticalDirection = opts && 'verticalDirection' in opts ? opts.verticalDirection : C1294 || CT.C1294;
    if (verticalDirection == null) dart.nullFailed(L114, 4125, 10, "verticalDirection");
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C804 || CT.C804;
    if (clipBehavior == null) dart.nullFailed(L114, 4127, 10, "clipBehavior");
    let children = opts && 'children' in opts ? opts.children : C365 || CT.C365;
    if (children == null) dart.nullFailed(L114, 4128, 18, "children");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[direction$3] = direction;
    this[mainAxisAlignment$] = mainAxisAlignment;
    this[mainAxisSize$] = mainAxisSize;
    this[crossAxisAlignment$] = crossAxisAlignment;
    this[textDirection$10] = textDirection;
    this[verticalDirection$] = verticalDirection;
    this[textBaseline$0] = textBaseline;
    this[clipBehavior$14] = clipBehavior;
    if (!(direction != null)) dart.assertFailed(null, L114, 4129, 15, "direction != null");
    if (!(mainAxisAlignment != null)) dart.assertFailed(null, L114, 4130, 15, "mainAxisAlignment != null");
    if (!(mainAxisSize != null)) dart.assertFailed(null, L114, 4131, 15, "mainAxisSize != null");
    if (!(crossAxisAlignment != null)) dart.assertFailed(null, L114, 4132, 15, "crossAxisAlignment != null");
    if (!(verticalDirection != null)) dart.assertFailed(null, L114, 4133, 15, "verticalDirection != null");
    if (!(!dart.equals(crossAxisAlignment, flex$.CrossAxisAlignment.baseline) || textBaseline != null)) dart.assertFailed("textBaseline is required if you specify the crossAxisAlignment with CrossAxisAlignment.baseline", L114, 4134, 15, "crossAxisAlignment != CrossAxisAlignment.baseline || textBaseline != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L114, 4135, 15, "clipBehavior != null");
    basic.Flex.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Flex.prototype;
  dart.addTypeTests(basic.Flex);
  dart.addTypeCaches(basic.Flex);
  dart.setMethodSignature(basic.Flex, () => ({
    __proto__: dart.getMethods(basic.Flex.__proto__),
    getEffectiveTextDirection: dart.fnType(dart.nullable(ui.TextDirection), [framework.BuildContext]),
    createRenderObject: dart.fnType(flex$.RenderFlex, [framework.BuildContext])
  }));
  dart.setGetterSignature(basic.Flex, () => ({
    __proto__: dart.getGetters(basic.Flex.__proto__),
    [_needTextDirection]: core.bool
  }));
  dart.setLibraryUri(basic.Flex, L115);
  dart.setFieldSignature(basic.Flex, () => ({
    __proto__: dart.getFields(basic.Flex.__proto__),
    direction: dart.finalFieldType(basic_types.Axis),
    mainAxisAlignment: dart.finalFieldType(flex$.MainAxisAlignment),
    mainAxisSize: dart.finalFieldType(flex$.MainAxisSize),
    crossAxisAlignment: dart.finalFieldType(flex$.CrossAxisAlignment),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    verticalDirection: dart.finalFieldType(basic_types.VerticalDirection),
    textBaseline: dart.finalFieldType(dart.nullable(ui.TextBaseline)),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  basic.Row = class Row extends basic.Flex {};
  (basic.Row.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let mainAxisAlignment = opts && 'mainAxisAlignment' in opts ? opts.mainAxisAlignment : C1291 || CT.C1291;
    if (mainAxisAlignment == null) dart.nullFailed(L114, 4497, 23, "mainAxisAlignment");
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : C1292 || CT.C1292;
    if (mainAxisSize == null) dart.nullFailed(L114, 4498, 18, "mainAxisSize");
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : C1293 || CT.C1293;
    if (crossAxisAlignment == null) dart.nullFailed(L114, 4499, 24, "crossAxisAlignment");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let verticalDirection = opts && 'verticalDirection' in opts ? opts.verticalDirection : C1294 || CT.C1294;
    if (verticalDirection == null) dart.nullFailed(L114, 4501, 23, "verticalDirection");
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    let children = opts && 'children' in opts ? opts.children : C365 || CT.C365;
    if (children == null) dart.nullFailed(L114, 4503, 18, "children");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    basic.Row.__proto__.new.call(this, {children: children, key: key, direction: basic_types.Axis.horizontal, mainAxisAlignment: mainAxisAlignment, mainAxisSize: mainAxisSize, crossAxisAlignment: crossAxisAlignment, textDirection: textDirection, verticalDirection: verticalDirection, textBaseline: textBaseline, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Row.prototype;
  dart.addTypeTests(basic.Row);
  dart.addTypeCaches(basic.Row);
  dart.setLibraryUri(basic.Row, L115);
  basic.Column = class Column extends basic.Flex {};
  (basic.Column.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let mainAxisAlignment = opts && 'mainAxisAlignment' in opts ? opts.mainAxisAlignment : C1291 || CT.C1291;
    if (mainAxisAlignment == null) dart.nullFailed(L114, 4697, 23, "mainAxisAlignment");
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : C1292 || CT.C1292;
    if (mainAxisSize == null) dart.nullFailed(L114, 4698, 18, "mainAxisSize");
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : C1293 || CT.C1293;
    if (crossAxisAlignment == null) dart.nullFailed(L114, 4699, 24, "crossAxisAlignment");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let verticalDirection = opts && 'verticalDirection' in opts ? opts.verticalDirection : C1294 || CT.C1294;
    if (verticalDirection == null) dart.nullFailed(L114, 4701, 23, "verticalDirection");
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    let children = opts && 'children' in opts ? opts.children : C365 || CT.C365;
    if (children == null) dart.nullFailed(L114, 4703, 18, "children");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    basic.Column.__proto__.new.call(this, {children: children, key: key, direction: basic_types.Axis.vertical, mainAxisAlignment: mainAxisAlignment, mainAxisSize: mainAxisSize, crossAxisAlignment: crossAxisAlignment, textDirection: textDirection, verticalDirection: verticalDirection, textBaseline: textBaseline, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Column.prototype;
  dart.addTypeTests(basic.Column);
  dart.addTypeCaches(basic.Column);
  dart.setLibraryUri(basic.Column, L115);
  var C1295;
  var flex$0 = dart.privateName(basic, "Flexible.flex");
  var fit$2 = dart.privateName(basic, "Flexible.fit");
  basic.Flexible = class Flexible extends framework.ParentDataWidget$(flex$.FlexParentData) {
    get flex() {
      return this[flex$0];
    }
    set flex(value) {
      super.flex = value;
    }
    get fit() {
      return this[fit$2];
    }
    set fit(value) {
      super.fit = value;
    }
    applyParentData(renderObject) {
      if (renderObject == null) dart.nullFailed(L114, 4765, 37, "renderObject");
      if (!flex$.FlexParentData.is(renderObject.parentData)) dart.assertFailed(null, L114, 4766, 12, "renderObject.parentData is FlexParentData");
      let parentData = flex$.FlexParentData.as(dart.nullCheck(renderObject.parentData));
      let needsLayout = false;
      if (parentData.flex != this.flex) {
        parentData.flex = this.flex;
        needsLayout = true;
      }
      if (!dart.equals(parentData.fit, this.fit)) {
        parentData.fit = this.fit;
        needsLayout = true;
      }
      if (needsLayout) {
        let targetParent = renderObject.parent;
        if (object$.RenderObject.is(targetParent)) targetParent.markNeedsLayout();
      }
    }
    get debugTypicalAncestorWidgetClass() {
      return dart.wrapType(basic.Flex);
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 4791, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.IntProperty.new("flex", this.flex));
    }
  };
  (basic.Flexible.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let flex = opts && 'flex' in opts ? opts.flex : 1;
    if (flex == null) dart.nullFailed(L114, 4742, 10, "flex");
    let fit = opts && 'fit' in opts ? opts.fit : C1295 || CT.C1295;
    if (fit == null) dart.nullFailed(L114, 4743, 10, "fit");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L114, 4744, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[flex$0] = flex;
    this[fit$2] = fit;
    basic.Flexible.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Flexible.prototype;
  dart.addTypeTests(basic.Flexible);
  dart.addTypeCaches(basic.Flexible);
  dart.setMethodSignature(basic.Flexible, () => ({
    __proto__: dart.getMethods(basic.Flexible.__proto__),
    applyParentData: dart.fnType(dart.void, [object$.RenderObject])
  }));
  dart.setGetterSignature(basic.Flexible, () => ({
    __proto__: dart.getGetters(basic.Flexible.__proto__),
    debugTypicalAncestorWidgetClass: core.Type
  }));
  dart.setLibraryUri(basic.Flexible, L115);
  dart.setFieldSignature(basic.Flexible, () => ({
    __proto__: dart.getFields(basic.Flexible.__proto__),
    flex: dart.finalFieldType(core.int),
    fit: dart.finalFieldType(flex$.FlexFit)
  }));
  basic.Expanded = class Expanded extends basic.Flexible {};
  (basic.Expanded.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let flex = opts && 'flex' in opts ? opts.flex : 1;
    if (flex == null) dart.nullFailed(L114, 4904, 9, "flex");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L114, 4905, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    basic.Expanded.__proto__.new.call(this, {key: key, flex: flex, fit: flex$.FlexFit.tight, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Expanded.prototype;
  dart.addTypeTests(basic.Expanded);
  dart.addTypeCaches(basic.Expanded);
  dart.setLibraryUri(basic.Expanded, L115);
  var _name$28 = dart.privateName(wrap, "_name");
  var C1296;
  var C1297;
  var direction$4 = dart.privateName(basic, "Wrap.direction");
  var alignment$12 = dart.privateName(basic, "Wrap.alignment");
  var spacing$ = dart.privateName(basic, "Wrap.spacing");
  var runAlignment$ = dart.privateName(basic, "Wrap.runAlignment");
  var runSpacing$ = dart.privateName(basic, "Wrap.runSpacing");
  var crossAxisAlignment$0 = dart.privateName(basic, "Wrap.crossAxisAlignment");
  var textDirection$11 = dart.privateName(basic, "Wrap.textDirection");
  var verticalDirection$0 = dart.privateName(basic, "Wrap.verticalDirection");
  var clipBehavior$15 = dart.privateName(basic, "Wrap.clipBehavior");
  basic.Wrap = class Wrap extends framework.MultiChildRenderObjectWidget {
    get direction() {
      return this[direction$4];
    }
    set direction(value) {
      super.direction = value;
    }
    get alignment() {
      return this[alignment$12];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get spacing() {
      return this[spacing$];
    }
    set spacing(value) {
      super.spacing = value;
    }
    get runAlignment() {
      return this[runAlignment$];
    }
    set runAlignment(value) {
      super.runAlignment = value;
    }
    get runSpacing() {
      return this[runSpacing$];
    }
    set runSpacing(value) {
      super.runSpacing = value;
    }
    get crossAxisAlignment() {
      return this[crossAxisAlignment$0];
    }
    set crossAxisAlignment(value) {
      super.crossAxisAlignment = value;
    }
    get textDirection() {
      return this[textDirection$11];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get verticalDirection() {
      return this[verticalDirection$0];
    }
    set verticalDirection(value) {
      super.verticalDirection = value;
    }
    get clipBehavior() {
      return this[clipBehavior$15];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    createRenderObject(context) {
      let t94;
      if (context == null) dart.nullFailed(L114, 5124, 46, "context");
      return new wrap.RenderWrap.new({direction: this.direction, alignment: this.alignment, spacing: this.spacing, runAlignment: this.runAlignment, runSpacing: this.runSpacing, crossAxisAlignment: this.crossAxisAlignment, textDirection: (t94 = this.textDirection, t94 == null ? basic.Directionality.maybeOf(context) : t94), verticalDirection: this.verticalDirection, clipBehavior: this.clipBehavior});
    }
    updateRenderObject(context, renderObject) {
      let t95, t94;
      if (context == null) dart.nullFailed(L114, 5139, 40, "context");
      wrap.RenderWrap.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 5139, 60, "renderObject");
      t94 = renderObject;
      (() => {
        t94.direction = this.direction;
        t94.alignment = this.alignment;
        t94.spacing = this.spacing;
        t94.runAlignment = this.runAlignment;
        t94.runSpacing = this.runSpacing;
        t94.crossAxisAlignment = this.crossAxisAlignment;
        t94.textDirection = (t95 = this.textDirection, t95 == null ? basic.Directionality.maybeOf(context) : t95);
        t94.verticalDirection = this.verticalDirection;
        t94.clipBehavior = this.clipBehavior;
        return t94;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 5153, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfAxis()).new("direction", this.direction));
      properties.add(new (EnumPropertyOfWrapAlignment()).new("alignment", this.alignment));
      properties.add(new diagnostics$.DoubleProperty.new("spacing", this.spacing));
      properties.add(new (EnumPropertyOfWrapAlignment()).new("runAlignment", this.runAlignment));
      properties.add(new diagnostics$.DoubleProperty.new("runSpacing", this.runSpacing));
      properties.add(new diagnostics$.DoubleProperty.new("crossAxisAlignment", this.runSpacing));
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
      properties.add(new (EnumPropertyOfVerticalDirection()).new("verticalDirection", this.verticalDirection, {defaultValue: basic_types.VerticalDirection.down}));
    }
  };
  (basic.Wrap.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let direction = opts && 'direction' in opts ? opts.direction : C685 || CT.C685;
    if (direction == null) dart.nullFailed(L114, 4974, 10, "direction");
    let alignment = opts && 'alignment' in opts ? opts.alignment : C1296 || CT.C1296;
    if (alignment == null) dart.nullFailed(L114, 4975, 10, "alignment");
    let spacing = opts && 'spacing' in opts ? opts.spacing : 0;
    if (spacing == null) dart.nullFailed(L114, 4976, 10, "spacing");
    let runAlignment = opts && 'runAlignment' in opts ? opts.runAlignment : C1296 || CT.C1296;
    if (runAlignment == null) dart.nullFailed(L114, 4977, 10, "runAlignment");
    let runSpacing = opts && 'runSpacing' in opts ? opts.runSpacing : 0;
    if (runSpacing == null) dart.nullFailed(L114, 4978, 10, "runSpacing");
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : C1297 || CT.C1297;
    if (crossAxisAlignment == null) dart.nullFailed(L114, 4979, 10, "crossAxisAlignment");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let verticalDirection = opts && 'verticalDirection' in opts ? opts.verticalDirection : C1294 || CT.C1294;
    if (verticalDirection == null) dart.nullFailed(L114, 4981, 10, "verticalDirection");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C804 || CT.C804;
    if (clipBehavior == null) dart.nullFailed(L114, 4982, 10, "clipBehavior");
    let children = opts && 'children' in opts ? opts.children : C365 || CT.C365;
    if (children == null) dart.nullFailed(L114, 4983, 18, "children");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[direction$4] = direction;
    this[alignment$12] = alignment;
    this[spacing$] = spacing;
    this[runAlignment$] = runAlignment;
    this[runSpacing$] = runSpacing;
    this[crossAxisAlignment$0] = crossAxisAlignment;
    this[textDirection$11] = textDirection;
    this[verticalDirection$0] = verticalDirection;
    this[clipBehavior$15] = clipBehavior;
    if (!(clipBehavior != null)) dart.assertFailed(null, L114, 4984, 15, "clipBehavior != null");
    basic.Wrap.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Wrap.prototype;
  dart.addTypeTests(basic.Wrap);
  dart.addTypeCaches(basic.Wrap);
  dart.setMethodSignature(basic.Wrap, () => ({
    __proto__: dart.getMethods(basic.Wrap.__proto__),
    createRenderObject: dart.fnType(wrap.RenderWrap, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Wrap, L115);
  dart.setFieldSignature(basic.Wrap, () => ({
    __proto__: dart.getFields(basic.Wrap.__proto__),
    direction: dart.finalFieldType(basic_types.Axis),
    alignment: dart.finalFieldType(wrap.WrapAlignment),
    spacing: dart.finalFieldType(core.double),
    runAlignment: dart.finalFieldType(wrap.WrapAlignment),
    runSpacing: dart.finalFieldType(core.double),
    crossAxisAlignment: dart.finalFieldType(wrap.WrapCrossAlignment),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    verticalDirection: dart.finalFieldType(basic_types.VerticalDirection),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var delegate$3 = dart.privateName(basic, "Flow.delegate");
  var clipBehavior$16 = dart.privateName(basic, "Flow.clipBehavior");
  basic.Flow = class Flow extends framework.MultiChildRenderObjectWidget {
    get delegate() {
      return this[delegate$3];
    }
    set delegate(value) {
      super.delegate = value;
    }
    get clipBehavior() {
      return this[clipBehavior$16];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 5363, 46, "context");
      return new flow.RenderFlow.new({delegate: this.delegate, clipBehavior: this.clipBehavior});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L114, 5366, 40, "context");
      flow.RenderFlow.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 5366, 60, "renderObject");
      renderObject.delegate = this.delegate;
      renderObject.clipBehavior = this.clipBehavior;
    }
  };
  (basic.Flow.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    if (delegate == null) dart.nullFailed(L114, 5330, 19, "delegate");
    let children = opts && 'children' in opts ? opts.children : C365 || CT.C365;
    if (children == null) dart.nullFailed(L114, 5331, 18, "children");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C470 || CT.C470;
    if (clipBehavior == null) dart.nullFailed(L114, 5332, 10, "clipBehavior");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[delegate$3] = delegate;
    this[clipBehavior$16] = clipBehavior;
    if (!(delegate != null)) dart.assertFailed(null, L114, 5333, 15, "delegate != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L114, 5334, 15, "clipBehavior != null");
    basic.Flow.__proto__.new.call(this, {key: key, children: basic.RepaintBoundary.wrapAll(children), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Flow.prototype;
  (basic.Flow.unwrapped = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    if (delegate == null) dart.nullFailed(L114, 5347, 19, "delegate");
    let children = opts && 'children' in opts ? opts.children : C365 || CT.C365;
    if (children == null) dart.nullFailed(L114, 5348, 18, "children");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C470 || CT.C470;
    if (clipBehavior == null) dart.nullFailed(L114, 5349, 10, "clipBehavior");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[delegate$3] = delegate;
    this[clipBehavior$16] = clipBehavior;
    if (!(delegate != null)) dart.assertFailed(null, L114, 5350, 15, "delegate != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L114, 5351, 15, "clipBehavior != null");
    basic.Flow.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Flow.prototype;
  dart.addTypeTests(basic.Flow);
  dart.addTypeCaches(basic.Flow);
  dart.setMethodSignature(basic.Flow, () => ({
    __proto__: dart.getMethods(basic.Flow.__proto__),
    createRenderObject: dart.fnType(flow.RenderFlow, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Flow, L115);
  dart.setFieldSignature(basic.Flow, () => ({
    __proto__: dart.getFields(basic.Flow.__proto__),
    delegate: dart.finalFieldType(flow.FlowDelegate),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var C1300;
  var C1301;
  var C1299;
  var C1298;
  var text$ = dart.privateName(basic, "RichText.text");
  var textAlign$4 = dart.privateName(basic, "RichText.textAlign");
  var textDirection$12 = dart.privateName(basic, "RichText.textDirection");
  var softWrap$2 = dart.privateName(basic, "RichText.softWrap");
  var overflow$3 = dart.privateName(basic, "RichText.overflow");
  var textScaleFactor$3 = dart.privateName(basic, "RichText.textScaleFactor");
  var maxLines$4 = dart.privateName(basic, "RichText.maxLines");
  var locale$5 = dart.privateName(basic, "RichText.locale");
  var strutStyle$1 = dart.privateName(basic, "RichText.strutStyle");
  var textWidthBasis$3 = dart.privateName(basic, "RichText.textWidthBasis");
  var textHeightBehavior$4 = dart.privateName(basic, "RichText.textHeightBehavior");
  basic.RichText = class RichText extends framework.MultiChildRenderObjectWidget {
    get text() {
      return this[text$];
    }
    set text(value) {
      super.text = value;
    }
    get textAlign() {
      return this[textAlign$4];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get textDirection() {
      return this[textDirection$12];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get softWrap() {
      return this[softWrap$2];
    }
    set softWrap(value) {
      super.softWrap = value;
    }
    get overflow() {
      return this[overflow$3];
    }
    set overflow(value) {
      super.overflow = value;
    }
    get textScaleFactor() {
      return this[textScaleFactor$3];
    }
    set textScaleFactor(value) {
      super.textScaleFactor = value;
    }
    get maxLines() {
      return this[maxLines$4];
    }
    set maxLines(value) {
      super.maxLines = value;
    }
    get locale() {
      return this[locale$5];
    }
    set locale(value) {
      super.locale = value;
    }
    get strutStyle() {
      return this[strutStyle$1];
    }
    set strutStyle(value) {
      super.strutStyle = value;
    }
    get textWidthBasis() {
      return this[textWidthBasis$3];
    }
    set textWidthBasis(value) {
      super.textWidthBasis = value;
    }
    get textHeightBehavior() {
      return this[textHeightBehavior$4];
    }
    set textHeightBehavior(value) {
      super.textHeightBehavior = value;
    }
    static _extractChildren(span) {
      if (span == null) dart.nullFailed(L114, 5458, 51, "span");
      let index = 0;
      let result = JSArrayOfWidget().of([]);
      span.visitChildren(dart.fn(span => {
        let t94;
        if (span == null) dart.nullFailed(L114, 5461, 36, "span");
        if (widget_span.WidgetSpan.is(span)) {
          result[$add](new basic.Semantics.new({tagForChildren: new paragraph.PlaceholderSpanIndexSemanticsTag.new((t94 = index, index = t94 + 1, t94)), child: span.child, $creationLocationd_0dea112b090073317d4: C1298 || CT.C1298}));
        }
        return true;
      }, InlineSpanTobool()));
      return result;
    }
    createRenderObject(context) {
      let t94, t94$;
      if (context == null) dart.nullFailed(L114, 5536, 51, "context");
      if (!(this.textDirection != null || dart.test(debug$0.debugCheckHasDirectionality(context)))) dart.assertFailed(null, L114, 5537, 12, "textDirection != null || debugCheckHasDirectionality(context)");
      return new paragraph.RenderParagraph.new(this.text, {textAlign: this.textAlign, textDirection: (t94 = this.textDirection, t94 == null ? basic.Directionality.of(context) : t94), softWrap: this.softWrap, overflow: this.overflow, textScaleFactor: this.textScaleFactor, maxLines: this.maxLines, strutStyle: this.strutStyle, textWidthBasis: this.textWidthBasis, textHeightBehavior: this.textHeightBehavior, locale: (t94$ = this.locale, t94$ == null ? localizations.Localizations.maybeLocaleOf(context) : t94$)});
    }
    updateRenderObject(context, renderObject) {
      let t95, t95$, t94;
      if (context == null) dart.nullFailed(L114, 5553, 40, "context");
      paragraph.RenderParagraph.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 5553, 65, "renderObject");
      if (!(this.textDirection != null || dart.test(debug$0.debugCheckHasDirectionality(context)))) dart.assertFailed(null, L114, 5554, 12, "textDirection != null || debugCheckHasDirectionality(context)");
      t94 = renderObject;
      (() => {
        t94.text = this.text;
        t94.textAlign = this.textAlign;
        t94.textDirection = (t95 = this.textDirection, t95 == null ? basic.Directionality.of(context) : t95);
        t94.softWrap = this.softWrap;
        t94.overflow = this.overflow;
        t94.textScaleFactor = this.textScaleFactor;
        t94.maxLines = this.maxLines;
        t94.strutStyle = this.strutStyle;
        t94.textWidthBasis = this.textWidthBasis;
        t94.textHeightBehavior = this.textHeightBehavior;
        t94.locale = (t95$ = this.locale, t95$ == null ? localizations.Localizations.maybeLocaleOf(context) : t95$);
        return t94;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 5570, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfTextAlign()).new("textAlign", this.textAlign, {defaultValue: ui.TextAlign.start}));
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
      properties.add(new diagnostics$.FlagProperty.new("softWrap", {value: this.softWrap, ifTrue: "wrapping at box width", ifFalse: "no wrapping except at line break characters", showName: true}));
      properties.add(new (EnumPropertyOfTextOverflow()).new("overflow", this.overflow, {defaultValue: paragraph.TextOverflow.clip}));
      properties.add(new diagnostics$.DoubleProperty.new("textScaleFactor", this.textScaleFactor, {defaultValue: 1.0}));
      properties.add(new diagnostics$.IntProperty.new("maxLines", this.maxLines, {ifNull: "unlimited"}));
      properties.add(new (EnumPropertyOfTextWidthBasis()).new("textWidthBasis", this.textWidthBasis, {defaultValue: text_painter.TextWidthBasis.parent}));
      properties.add(new diagnostics$.StringProperty.new("text", this.text.toPlainText()));
    }
  };
  (basic.RichText.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let text = opts && 'text' in opts ? opts.text : null;
    if (text == null) dart.nullFailed(L114, 5436, 19, "text");
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : C916 || CT.C916;
    if (textAlign == null) dart.nullFailed(L114, 5437, 10, "textAlign");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let softWrap = opts && 'softWrap' in opts ? opts.softWrap : true;
    if (softWrap == null) dart.nullFailed(L114, 5439, 10, "softWrap");
    let overflow = opts && 'overflow' in opts ? opts.overflow : C457 || CT.C457;
    if (overflow == null) dart.nullFailed(L114, 5440, 10, "overflow");
    let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : 1;
    if (textScaleFactor == null) dart.nullFailed(L114, 5441, 10, "textScaleFactor");
    let maxLines = opts && 'maxLines' in opts ? opts.maxLines : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let strutStyle = opts && 'strutStyle' in opts ? opts.strutStyle : null;
    let textWidthBasis = opts && 'textWidthBasis' in opts ? opts.textWidthBasis : C586 || CT.C586;
    if (textWidthBasis == null) dart.nullFailed(L114, 5445, 10, "textWidthBasis");
    let textHeightBehavior = opts && 'textHeightBehavior' in opts ? opts.textHeightBehavior : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[text$] = text;
    this[textAlign$4] = textAlign;
    this[textDirection$12] = textDirection;
    this[softWrap$2] = softWrap;
    this[overflow$3] = overflow;
    this[textScaleFactor$3] = textScaleFactor;
    this[maxLines$4] = maxLines;
    this[locale$5] = locale;
    this[strutStyle$1] = strutStyle;
    this[textWidthBasis$3] = textWidthBasis;
    this[textHeightBehavior$4] = textHeightBehavior;
    if (!(text != null)) dart.assertFailed(null, L114, 5447, 15, "text != null");
    if (!(textAlign != null)) dart.assertFailed(null, L114, 5448, 15, "textAlign != null");
    if (!(softWrap != null)) dart.assertFailed(null, L114, 5449, 15, "softWrap != null");
    if (!(overflow != null)) dart.assertFailed(null, L114, 5450, 15, "overflow != null");
    if (!(textScaleFactor != null)) dart.assertFailed(null, L114, 5451, 15, "textScaleFactor != null");
    if (!(maxLines == null || dart.notNull(maxLines) > 0)) dart.assertFailed(null, L114, 5452, 15, "maxLines == null || maxLines > 0");
    if (!(textWidthBasis != null)) dart.assertFailed(null, L114, 5453, 15, "textWidthBasis != null");
    basic.RichText.__proto__.new.call(this, {key: key, children: basic.RichText._extractChildren(text), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.RichText.prototype;
  dart.addTypeTests(basic.RichText);
  dart.addTypeCaches(basic.RichText);
  dart.setMethodSignature(basic.RichText, () => ({
    __proto__: dart.getMethods(basic.RichText.__proto__),
    createRenderObject: dart.fnType(paragraph.RenderParagraph, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.RichText, L115);
  dart.setFieldSignature(basic.RichText, () => ({
    __proto__: dart.getFields(basic.RichText.__proto__),
    text: dart.finalFieldType(inline_span.InlineSpan),
    textAlign: dart.finalFieldType(ui.TextAlign),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    softWrap: dart.finalFieldType(core.bool),
    overflow: dart.finalFieldType(paragraph.TextOverflow),
    textScaleFactor: dart.finalFieldType(core.double),
    maxLines: dart.finalFieldType(dart.nullable(core.int)),
    locale: dart.finalFieldType(dart.nullable(ui.Locale)),
    strutStyle: dart.finalFieldType(dart.nullable(strut_style.StrutStyle)),
    textWidthBasis: dart.finalFieldType(text_painter.TextWidthBasis),
    textHeightBehavior: dart.finalFieldType(dart.nullable(ui.TextHeightBehavior))
  }));
  var image$1 = dart.privateName(basic, "RawImage.image");
  var debugImageLabel$ = dart.privateName(basic, "RawImage.debugImageLabel");
  var width$3 = dart.privateName(basic, "RawImage.width");
  var height$3 = dart.privateName(basic, "RawImage.height");
  var scale$ = dart.privateName(basic, "RawImage.scale");
  var color$9 = dart.privateName(basic, "RawImage.color");
  var filterQuality$0 = dart.privateName(basic, "RawImage.filterQuality");
  var colorBlendMode$0 = dart.privateName(basic, "RawImage.colorBlendMode");
  var fit$3 = dart.privateName(basic, "RawImage.fit");
  var alignment$13 = dart.privateName(basic, "RawImage.alignment");
  var repeat$0 = dart.privateName(basic, "RawImage.repeat");
  var centerSlice$0 = dart.privateName(basic, "RawImage.centerSlice");
  var matchTextDirection$0 = dart.privateName(basic, "RawImage.matchTextDirection");
  var invertColors$0 = dart.privateName(basic, "RawImage.invertColors");
  var isAntiAlias$0 = dart.privateName(basic, "RawImage.isAntiAlias");
  basic.RawImage = class RawImage extends framework.LeafRenderObjectWidget {
    get image() {
      return this[image$1];
    }
    set image(value) {
      super.image = value;
    }
    get debugImageLabel() {
      return this[debugImageLabel$];
    }
    set debugImageLabel(value) {
      super.debugImageLabel = value;
    }
    get width() {
      return this[width$3];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$3];
    }
    set height(value) {
      super.height = value;
    }
    get scale() {
      return this[scale$];
    }
    set scale(value) {
      super.scale = value;
    }
    get color() {
      return this[color$9];
    }
    set color(value) {
      super.color = value;
    }
    get filterQuality() {
      return this[filterQuality$0];
    }
    set filterQuality(value) {
      super.filterQuality = value;
    }
    get colorBlendMode() {
      return this[colorBlendMode$0];
    }
    set colorBlendMode(value) {
      super.colorBlendMode = value;
    }
    get fit() {
      return this[fit$3];
    }
    set fit(value) {
      super.fit = value;
    }
    get alignment() {
      return this[alignment$13];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get repeat() {
      return this[repeat$0];
    }
    set repeat(value) {
      super.repeat = value;
    }
    get centerSlice() {
      return this[centerSlice$0];
    }
    set centerSlice(value) {
      super.centerSlice = value;
    }
    get matchTextDirection() {
      return this[matchTextDirection$0];
    }
    set matchTextDirection(value) {
      super.matchTextDirection = value;
    }
    get invertColors() {
      return this[invertColors$0];
    }
    set invertColors(value) {
      super.invertColors = value;
    }
    get isAntiAlias() {
      return this[isAntiAlias$0];
    }
    set isAntiAlias(value) {
      super.isAntiAlias = value;
    }
    createRenderObject(context) {
      let t95, t94, t94$, t94$0;
      if (context == null) dart.nullFailed(L114, 5747, 47, "context");
      if (!(!dart.test(this.matchTextDirection) && alignment$.Alignment.is(this.alignment) || dart.test(debug$0.debugCheckHasDirectionality(context)))) dart.assertFailed(null, L114, 5748, 12, "(!matchTextDirection && alignment is Alignment) || debugCheckHasDirectionality(context)");
      if (!dart.test((t94$ = (t94 = this.image, t94 == null ? null : (t95 = t94.debugGetOpenHandleStackTraces(), t95 == null ? null : t95[$isNotEmpty])), t94$ == null ? true : t94$))) dart.assertFailed("Creator of a RawImage disposed of the image when the RawImage still " + "needed it.", L114, 5750, 7, "image?.debugGetOpenHandleStackTraces()?.isNotEmpty ?? true");
      return new image.RenderImage.new({image: (t94$0 = this.image, t94$0 == null ? null : t94$0.clone()), debugImageLabel: this.debugImageLabel, width: this.width, height: this.height, scale: this.scale, color: this.color, colorBlendMode: this.colorBlendMode, fit: this.fit, alignment: this.alignment, repeat: this.repeat, centerSlice: this.centerSlice, matchTextDirection: this.matchTextDirection, textDirection: dart.test(this.matchTextDirection) || !alignment$.Alignment.is(this.alignment) ? basic.Directionality.of(context) : null, invertColors: this.invertColors, filterQuality: this.filterQuality, isAntiAlias: this.isAntiAlias});
    }
    updateRenderObject(context, renderObject) {
      let t95, t94, t94$, t95$, t94$0;
      if (context == null) dart.nullFailed(L114, 5775, 40, "context");
      image.RenderImage.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 5775, 61, "renderObject");
      if (!dart.test((t94$ = (t94 = this.image, t94 == null ? null : (t95 = t94.debugGetOpenHandleStackTraces(), t95 == null ? null : t95[$isNotEmpty])), t94$ == null ? true : t94$))) dart.assertFailed("Creator of a RawImage disposed of the image when the RawImage still " + "needed it.", L114, 5777, 7, "image?.debugGetOpenHandleStackTraces()?.isNotEmpty ?? true");
      t94$0 = renderObject;
      (() => {
        t94$0.image = (t95$ = this.image, t95$ == null ? null : t95$.clone());
        t94$0.debugImageLabel = this.debugImageLabel;
        t94$0.width = this.width;
        t94$0.height = this.height;
        t94$0.scale = this.scale;
        t94$0.color = this.color;
        t94$0.colorBlendMode = this.colorBlendMode;
        t94$0.alignment = this.alignment;
        t94$0.fit = this.fit;
        t94$0.repeat = this.repeat;
        t94$0.centerSlice = this.centerSlice;
        t94$0.matchTextDirection = this.matchTextDirection;
        t94$0.textDirection = dart.test(this.matchTextDirection) || !alignment$.Alignment.is(this.alignment) ? basic.Directionality.of(context) : null;
        t94$0.invertColors = this.invertColors;
        t94$0.filterQuality = this.filterQuality;
        return t94$0;
      })();
    }
    didUnmountRenderObject(renderObject) {
      image.RenderImage.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 5800, 43, "renderObject");
      renderObject.image = null;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 5806, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfImage()).new("image", this.image));
      properties.add(new diagnostics$.DoubleProperty.new("width", this.width, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("height", this.height, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("scale", this.scale, {defaultValue: 1.0}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new (EnumPropertyOfBlendMode()).new("colorBlendMode", this.colorBlendMode, {defaultValue: null}));
      properties.add(new (EnumPropertyOfBoxFit()).new("fit", this.fit, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment, {defaultValue: null}));
      properties.add(new (EnumPropertyOfImageRepeat()).new("repeat", this.repeat, {defaultValue: decoration_image.ImageRepeat.noRepeat}));
      properties.add(new (DiagnosticsPropertyOfRect()).new("centerSlice", this.centerSlice, {defaultValue: null}));
      properties.add(new diagnostics$.FlagProperty.new("matchTextDirection", {value: this.matchTextDirection, ifTrue: "match text direction"}));
      properties.add(new (DiagnosticsPropertyOfbool()).new("invertColors", this.invertColors));
      properties.add(new (EnumPropertyOfFilterQuality()).new("filterQuality", this.filterQuality));
    }
  };
  (basic.RawImage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let image = opts && 'image' in opts ? opts.image : null;
    let debugImageLabel = opts && 'debugImageLabel' in opts ? opts.debugImageLabel : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    if (scale == null) dart.nullFailed(L114, 5604, 10, "scale");
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C413 || CT.C413;
    if (alignment == null) dart.nullFailed(L114, 5608, 10, "alignment");
    let repeat = opts && 'repeat' in opts ? opts.repeat : C778 || CT.C778;
    if (repeat == null) dart.nullFailed(L114, 5609, 10, "repeat");
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    if (matchTextDirection == null) dart.nullFailed(L114, 5611, 10, "matchTextDirection");
    let invertColors = opts && 'invertColors' in opts ? opts.invertColors : false;
    if (invertColors == null) dart.nullFailed(L114, 5612, 10, "invertColors");
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C779 || CT.C779;
    if (filterQuality == null) dart.nullFailed(L114, 5613, 10, "filterQuality");
    let isAntiAlias = opts && 'isAntiAlias' in opts ? opts.isAntiAlias : false;
    if (isAntiAlias == null) dart.nullFailed(L114, 5614, 10, "isAntiAlias");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[image$1] = image;
    this[debugImageLabel$] = debugImageLabel;
    this[width$3] = width;
    this[height$3] = height;
    this[scale$] = scale;
    this[color$9] = color;
    this[colorBlendMode$0] = colorBlendMode;
    this[fit$3] = fit;
    this[alignment$13] = alignment;
    this[repeat$0] = repeat;
    this[centerSlice$0] = centerSlice;
    this[matchTextDirection$0] = matchTextDirection;
    this[invertColors$0] = invertColors;
    this[filterQuality$0] = filterQuality;
    this[isAntiAlias$0] = isAntiAlias;
    if (!(scale != null)) dart.assertFailed(null, L114, 5615, 15, "scale != null");
    if (!(alignment != null)) dart.assertFailed(null, L114, 5616, 15, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, L114, 5617, 15, "repeat != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, L114, 5618, 15, "matchTextDirection != null");
    if (!(isAntiAlias != null)) dart.assertFailed(null, L114, 5619, 15, "isAntiAlias != null");
    basic.RawImage.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.RawImage.prototype;
  dart.addTypeTests(basic.RawImage);
  dart.addTypeCaches(basic.RawImage);
  dart.setMethodSignature(basic.RawImage, () => ({
    __proto__: dart.getMethods(basic.RawImage.__proto__),
    createRenderObject: dart.fnType(image.RenderImage, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.RawImage, L115);
  dart.setFieldSignature(basic.RawImage, () => ({
    __proto__: dart.getFields(basic.RawImage.__proto__),
    image: dart.finalFieldType(dart.nullable(ui.Image)),
    debugImageLabel: dart.finalFieldType(dart.nullable(core.String)),
    width: dart.finalFieldType(dart.nullable(core.double)),
    height: dart.finalFieldType(dart.nullable(core.double)),
    scale: dart.finalFieldType(core.double),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    filterQuality: dart.finalFieldType(ui.FilterQuality),
    colorBlendMode: dart.finalFieldType(dart.nullable(ui.BlendMode)),
    fit: dart.finalFieldType(dart.nullable(box_fit.BoxFit)),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    repeat: dart.finalFieldType(decoration_image.ImageRepeat),
    centerSlice: dart.finalFieldType(dart.nullable(ui.Rect)),
    matchTextDirection: dart.finalFieldType(core.bool),
    invertColors: dart.finalFieldType(core.bool),
    isAntiAlias: dart.finalFieldType(core.bool)
  }));
  var bundle$ = dart.privateName(basic, "DefaultAssetBundle.bundle");
  basic.DefaultAssetBundle = class DefaultAssetBundle extends framework.InheritedWidget {
    get bundle() {
      return this[bundle$];
    }
    set bundle(value) {
      super.bundle = value;
    }
    static of(context) {
      let t94, t94$;
      if (context == null) dart.nullFailed(L114, 5898, 38, "context");
      let result = context.dependOnInheritedWidgetOfExactType(basic.DefaultAssetBundle);
      t94$ = (t94 = result, t94 == null ? null : t94.bundle);
      return t94$ == null ? asset_bundle.rootBundle : t94$;
    }
    updateShouldNotify(oldWidget) {
      basic.DefaultAssetBundle.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L114, 5904, 46, "oldWidget");
      return !dart.equals(this.bundle, oldWidget.bundle);
    }
  };
  (basic.DefaultAssetBundle.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let bundle = opts && 'bundle' in opts ? opts.bundle : null;
    if (bundle == null) dart.nullFailed(L114, 5878, 19, "bundle");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L114, 5879, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[bundle$] = bundle;
    if (!(bundle != null)) dart.assertFailed(null, L114, 5880, 15, "bundle != null");
    if (!(child != null)) dart.assertFailed(null, L114, 5881, 15, "child != null");
    basic.DefaultAssetBundle.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.DefaultAssetBundle.prototype;
  dart.addTypeTests(basic.DefaultAssetBundle);
  dart.addTypeCaches(basic.DefaultAssetBundle);
  dart.setMethodSignature(basic.DefaultAssetBundle, () => ({
    __proto__: dart.getMethods(basic.DefaultAssetBundle.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(basic.DefaultAssetBundle, L115);
  dart.setFieldSignature(basic.DefaultAssetBundle, () => ({
    __proto__: dart.getFields(basic.DefaultAssetBundle.__proto__),
    bundle: dart.finalFieldType(asset_bundle.AssetBundle)
  }));
  var renderBox$ = dart.privateName(basic, "WidgetToRenderBoxAdapter.renderBox");
  var onBuild$ = dart.privateName(basic, "WidgetToRenderBoxAdapter.onBuild");
  basic.WidgetToRenderBoxAdapter = class WidgetToRenderBoxAdapter extends framework.LeafRenderObjectWidget {
    get renderBox() {
      return this[renderBox$];
    }
    set renderBox(value) {
      super.renderBox = value;
    }
    get onBuild() {
      return this[onBuild$];
    }
    set onBuild(value) {
      super.onBuild = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 5936, 45, "context");
      return this.renderBox;
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L114, 5939, 40, "context");
      box$.RenderBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 5939, 59, "renderObject");
      if (this.onBuild != null) dart.nullCheck(this.onBuild)();
    }
  };
  (basic.WidgetToRenderBoxAdapter.new = function(opts) {
    let renderBox = opts && 'renderBox' in opts ? opts.renderBox : null;
    if (renderBox == null) dart.nullFailed(L114, 5917, 19, "renderBox");
    let onBuild = opts && 'onBuild' in opts ? opts.onBuild : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[renderBox$] = renderBox;
    this[onBuild$] = onBuild;
    if (!(renderBox != null)) dart.assertFailed(null, L114, 5919, 15, "renderBox != null");
    basic.WidgetToRenderBoxAdapter.__proto__.new.call(this, {key: new (GlobalObjectKeyOfStateOfStatefulWidget()).new(renderBox), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.WidgetToRenderBoxAdapter.prototype;
  dart.addTypeTests(basic.WidgetToRenderBoxAdapter);
  dart.addTypeCaches(basic.WidgetToRenderBoxAdapter);
  dart.setMethodSignature(basic.WidgetToRenderBoxAdapter, () => ({
    __proto__: dart.getMethods(basic.WidgetToRenderBoxAdapter.__proto__),
    createRenderObject: dart.fnType(box$.RenderBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.WidgetToRenderBoxAdapter, L115);
  dart.setFieldSignature(basic.WidgetToRenderBoxAdapter, () => ({
    __proto__: dart.getFields(basic.WidgetToRenderBoxAdapter.__proto__),
    renderBox: dart.finalFieldType(box$.RenderBox),
    onBuild: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  var C1302;
  var onPointerDown$ = dart.privateName(basic, "Listener.onPointerDown");
  var onPointerMove$ = dart.privateName(basic, "Listener.onPointerMove");
  var onPointerUp$ = dart.privateName(basic, "Listener.onPointerUp");
  var onPointerHover$ = dart.privateName(basic, "Listener.onPointerHover");
  var onPointerCancel$ = dart.privateName(basic, "Listener.onPointerCancel");
  var onPointerSignal$ = dart.privateName(basic, "Listener.onPointerSignal");
  var behavior$3 = dart.privateName(basic, "Listener.behavior");
  basic.Listener = class Listener extends framework.SingleChildRenderObjectWidget {
    get onPointerDown() {
      return this[onPointerDown$];
    }
    set onPointerDown(value) {
      super.onPointerDown = value;
    }
    get onPointerMove() {
      return this[onPointerMove$];
    }
    set onPointerMove(value) {
      super.onPointerMove = value;
    }
    get onPointerUp() {
      return this[onPointerUp$];
    }
    set onPointerUp(value) {
      super.onPointerUp = value;
    }
    get onPointerHover() {
      return this[onPointerHover$];
    }
    set onPointerHover(value) {
      super.onPointerHover = value;
    }
    get onPointerCancel() {
      return this[onPointerCancel$];
    }
    set onPointerCancel(value) {
      super.onPointerCancel = value;
    }
    get onPointerSignal() {
      return this[onPointerSignal$];
    }
    set onPointerSignal(value) {
      super.onPointerSignal = value;
    }
    get behavior() {
      return this[behavior$3];
    }
    set behavior(value) {
      super.behavior = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 6081, 57, "context");
      return new proxy_box.RenderPointerListener.new({onPointerDown: this.onPointerDown, onPointerMove: this.onPointerMove, onPointerUp: this.onPointerUp, onPointerHover: this.onPointerHover, onPointerCancel: this.onPointerCancel, onPointerSignal: this.onPointerSignal, behavior: this.behavior});
    }
    updateRenderObject(context, renderObject) {
      let t94;
      if (context == null) dart.nullFailed(L114, 6094, 40, "context");
      proxy_box.RenderPointerListener.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 6094, 71, "renderObject");
      t94 = renderObject;
      (() => {
        t94.onPointerDown = this.onPointerDown;
        t94.onPointerMove = this.onPointerMove;
        t94.onPointerUp = this.onPointerUp;
        t94.onPointerHover = this.onPointerHover;
        t94.onPointerCancel = this.onPointerCancel;
        t94.onPointerSignal = this.onPointerSignal;
        t94.behavior = this.behavior;
        return t94;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 6106, 56, "properties");
      super.debugFillProperties(properties);
      let listeners = (() => {
        let t94 = JSArrayOfString().of([]);
        if (this.onPointerDown != null) t94.push("down");
        if (this.onPointerMove != null) t94.push("move");
        if (this.onPointerUp != null) t94.push("up");
        if (this.onPointerCancel != null) t94.push("cancel");
        if (this.onPointerSignal != null) t94.push("signal");
        return t94;
      })();
      properties.add(new (IterablePropertyOfString()).new("listeners", listeners, {ifEmpty: "<none>"}));
      properties.add(new (EnumPropertyOfHitTestBehavior()).new("behavior", this.behavior));
    }
  };
  (basic.Listener.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPointerDown = opts && 'onPointerDown' in opts ? opts.onPointerDown : null;
    let onPointerMove = opts && 'onPointerMove' in opts ? opts.onPointerMove : null;
    let onPointerUp = opts && 'onPointerUp' in opts ? opts.onPointerUp : null;
    let onPointerHover = opts && 'onPointerHover' in opts ? opts.onPointerHover : null;
    let onPointerCancel = opts && 'onPointerCancel' in opts ? opts.onPointerCancel : null;
    let onPointerSignal = opts && 'onPointerSignal' in opts ? opts.onPointerSignal : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : C1302 || CT.C1302;
    if (behavior == null) dart.nullFailed(L114, 6041, 10, "behavior");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[onPointerDown$] = onPointerDown;
    this[onPointerMove$] = onPointerMove;
    this[onPointerUp$] = onPointerUp;
    this[onPointerHover$] = onPointerHover;
    this[onPointerCancel$] = onPointerCancel;
    this[onPointerSignal$] = onPointerSignal;
    this[behavior$3] = behavior;
    if (!(behavior != null)) dart.assertFailed(null, L114, 6043, 15, "behavior != null");
    basic.Listener.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Listener.prototype;
  dart.addTypeTests(basic.Listener);
  dart.addTypeCaches(basic.Listener);
  dart.setMethodSignature(basic.Listener, () => ({
    __proto__: dart.getMethods(basic.Listener.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderPointerListener, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Listener, L115);
  dart.setFieldSignature(basic.Listener, () => ({
    __proto__: dart.getFields(basic.Listener.__proto__),
    onPointerDown: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [events.PointerDownEvent]))),
    onPointerMove: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [events.PointerMoveEvent]))),
    onPointerUp: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [events.PointerUpEvent]))),
    onPointerHover: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [events.PointerHoverEvent]))),
    onPointerCancel: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [events.PointerCancelEvent]))),
    onPointerSignal: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [events.PointerSignalEvent]))),
    behavior: dart.finalFieldType(proxy_box.HitTestBehavior)
  }));
  var C1303;
  var onEnter$ = dart.privateName(basic, "MouseRegion.onEnter");
  var onHover$ = dart.privateName(basic, "MouseRegion.onHover");
  var onExit$ = dart.privateName(basic, "MouseRegion.onExit");
  var cursor$ = dart.privateName(basic, "MouseRegion.cursor");
  var opaque$0 = dart.privateName(basic, "MouseRegion.opaque");
  var child$42 = dart.privateName(basic, "MouseRegion.child");
  basic.MouseRegion = class MouseRegion extends framework.StatefulWidget {
    get onEnter() {
      return this[onEnter$];
    }
    set onEnter(value) {
      super.onEnter = value;
    }
    get onHover() {
      return this[onHover$];
    }
    set onHover(value) {
      super.onHover = value;
    }
    get onExit() {
      return this[onExit$];
    }
    set onExit(value) {
      super.onExit = value;
    }
    get cursor() {
      return this[cursor$];
    }
    set cursor(value) {
      super.cursor = value;
    }
    get opaque() {
      return this[opaque$0];
    }
    set opaque(value) {
      super.opaque = value;
    }
    get child() {
      return this[child$42];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new basic._MouseRegionState.new();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 6472, 56, "properties");
      super.debugFillProperties(properties);
      let listeners = JSArrayOfString().of([]);
      if (this.onEnter != null) listeners[$add]("enter");
      if (this.onExit != null) listeners[$add]("exit");
      if (this.onHover != null) listeners[$add]("hover");
      properties.add(new (IterablePropertyOfString()).new("listeners", listeners, {ifEmpty: "<none>"}));
      properties.add(new (DiagnosticsPropertyOfMouseCursor()).new("cursor", this.cursor, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfbool()).new("opaque", this.opaque, {defaultValue: true}));
    }
  };
  (basic.MouseRegion.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onEnter = opts && 'onEnter' in opts ? opts.onEnter : null;
    let onExit = opts && 'onExit' in opts ? opts.onExit : null;
    let onHover = opts && 'onHover' in opts ? opts.onHover : null;
    let cursor = opts && 'cursor' in opts ? opts.cursor : C1303 || CT.C1303;
    if (cursor == null) dart.nullFailed(L114, 6212, 10, "cursor");
    let opaque = opts && 'opaque' in opts ? opts.opaque : true;
    if (opaque == null) dart.nullFailed(L114, 6213, 10, "opaque");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[onEnter$] = onEnter;
    this[onExit$] = onExit;
    this[onHover$] = onHover;
    this[cursor$] = cursor;
    this[opaque$0] = opaque;
    this[child$42] = child;
    if (!(cursor != null)) dart.assertFailed(null, L114, 6215, 15, "cursor != null");
    if (!(opaque != null)) dart.assertFailed(null, L114, 6216, 15, "opaque != null");
    basic.MouseRegion.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.MouseRegion.prototype;
  dart.addTypeTests(basic.MouseRegion);
  dart.addTypeCaches(basic.MouseRegion);
  dart.setMethodSignature(basic.MouseRegion, () => ({
    __proto__: dart.getMethods(basic.MouseRegion.__proto__),
    createState: dart.fnType(basic._MouseRegionState, [])
  }));
  dart.setLibraryUri(basic.MouseRegion, L115);
  dart.setFieldSignature(basic.MouseRegion, () => ({
    __proto__: dart.getFields(basic.MouseRegion.__proto__),
    onEnter: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [events.PointerEnterEvent]))),
    onHover: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [events.PointerHoverEvent]))),
    onExit: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [events.PointerExitEvent]))),
    cursor: dart.finalFieldType(mouse_cursor.MouseCursor),
    opaque: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  var C1306;
  var C1305;
  var C1304;
  basic._MouseRegionState = class _MouseRegionState extends framework.State$(basic.MouseRegion) {
    handleExit(event) {
      if (event == null) dart.nullFailed(L114, 6488, 36, "event");
      if (this.widget.onExit != null && dart.test(this.mounted)) dart.nullCheck(this.widget.onExit)(event);
    }
    getHandleExit() {
      return this.widget.onExit == null ? null : dart.bind(this, 'handleExit');
    }
    build(context) {
      if (context == null) dart.nullFailed(L114, 6498, 29, "context");
      return new basic._RawMouseRegion.new(this, {$creationLocationd_0dea112b090073317d4: C1304 || CT.C1304});
    }
  };
  (basic._MouseRegionState.new = function() {
    basic._MouseRegionState.__proto__.new.call(this);
    ;
  }).prototype = basic._MouseRegionState.prototype;
  dart.addTypeTests(basic._MouseRegionState);
  dart.addTypeCaches(basic._MouseRegionState);
  dart.setMethodSignature(basic._MouseRegionState, () => ({
    __proto__: dart.getMethods(basic._MouseRegionState.__proto__),
    handleExit: dart.fnType(dart.void, [events.PointerExitEvent]),
    getHandleExit: dart.fnType(dart.nullable(dart.fnType(dart.void, [events.PointerExitEvent])), []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic._MouseRegionState, L115);
  basic._RawMouseRegion = class _RawMouseRegion extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 6509, 53, "context");
      let widget = this.owner.widget;
      return new proxy_box.RenderMouseRegion.new({onEnter: widget.onEnter, onHover: widget.onHover, onExit: this.owner.getHandleExit(), cursor: widget.cursor, opaque: widget.opaque});
    }
    updateRenderObject(context, renderObject) {
      let t95;
      if (context == null) dart.nullFailed(L114, 6521, 40, "context");
      proxy_box.RenderMouseRegion.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 6521, 67, "renderObject");
      let widget = this.owner.widget;
      t95 = renderObject;
      (() => {
        t95.onEnter = widget.onEnter;
        t95.onHover = widget.onHover;
        t95.onExit = this.owner.getHandleExit();
        t95.cursor = widget.cursor;
        t95.opaque = widget.opaque;
        return t95;
      })();
    }
  };
  (basic._RawMouseRegion.new = function(owner, opts) {
    if (owner == null) dart.nullFailed(L114, 6504, 24, "owner");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.owner = owner;
    basic._RawMouseRegion.__proto__.new.call(this, {child: owner.widget.child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic._RawMouseRegion.prototype;
  dart.addTypeTests(basic._RawMouseRegion);
  dart.addTypeCaches(basic._RawMouseRegion);
  dart.setMethodSignature(basic._RawMouseRegion, () => ({
    __proto__: dart.getMethods(basic._RawMouseRegion.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderMouseRegion, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic._RawMouseRegion, L115);
  dart.setFieldSignature(basic._RawMouseRegion, () => ({
    __proto__: dart.getFields(basic._RawMouseRegion.__proto__),
    owner: dart.finalFieldType(basic._MouseRegionState)
  }));
  var C1309;
  var C1310;
  var C1308;
  var C1307;
  basic.RepaintBoundary = class RepaintBoundary extends framework.SingleChildRenderObjectWidget {
    static wrap(child, childIndex, opts) {
      if (child == null) dart.nullFailed(L114, 6591, 39, "child");
      if (childIndex == null) dart.nullFailed(L114, 6591, 50, "childIndex");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      if (!(child != null)) dart.assertFailed(null, L114, 6592, 12, "child != null");
      let key = child.key != null ? new (ValueKeyOfKey()).new(dart.nullCheck(child.key)) : new (ValueKeyOfint()).new(childIndex);
      return new basic.RepaintBoundary.new({key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }
    static wrapAll(widgets) {
      if (widgets == null) dart.nullFailed(L114, 6602, 53, "widgets");
      return (() => {
        let t95 = JSArrayOfRepaintBoundary().of([]);
        for (let i = 0; i < dart.notNull(widgets[$length]); i = i + 1)
          t95.push(basic.RepaintBoundary.wrap(widgets[$_get](i), i, {$creationLocationd_0dea112b090073317d4: C1307 || CT.C1307}));
        return t95;
      })();
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 6607, 57, "context");
      return new proxy_box.RenderRepaintBoundary.new();
    }
  };
  (basic.RepaintBoundary.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    basic.RepaintBoundary.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.RepaintBoundary.prototype;
  dart.addTypeTests(basic.RepaintBoundary);
  dart.addTypeCaches(basic.RepaintBoundary);
  dart.setMethodSignature(basic.RepaintBoundary, () => ({
    __proto__: dart.getMethods(basic.RepaintBoundary.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderRepaintBoundary, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.RepaintBoundary, L115);
  var ignoring$0 = dart.privateName(basic, "IgnorePointer.ignoring");
  var ignoringSemantics$0 = dart.privateName(basic, "IgnorePointer.ignoringSemantics");
  basic.IgnorePointer = class IgnorePointer extends framework.SingleChildRenderObjectWidget {
    get ignoring() {
      return this[ignoring$0];
    }
    set ignoring(value) {
      super.ignoring = value;
    }
    get ignoringSemantics() {
      return this[ignoringSemantics$0];
    }
    set ignoringSemantics(value) {
      super.ignoringSemantics = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 6707, 55, "context");
      return new proxy_box.RenderIgnorePointer.new({ignoring: this.ignoring, ignoringSemantics: this.ignoringSemantics});
    }
    updateRenderObject(context, renderObject) {
      let t96;
      if (context == null) dart.nullFailed(L114, 6715, 40, "context");
      proxy_box.RenderIgnorePointer.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 6715, 69, "renderObject");
      t96 = renderObject;
      (() => {
        t96.ignoring = this.ignoring;
        t96.ignoringSemantics = this.ignoringSemantics;
        return t96;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 6722, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfbool()).new("ignoring", this.ignoring));
      properties.add(new (DiagnosticsPropertyOfbool()).new("ignoringSemantics", this.ignoringSemantics, {defaultValue: null}));
    }
  };
  (basic.IgnorePointer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let ignoring = opts && 'ignoring' in opts ? opts.ignoring : true;
    if (ignoring == null) dart.nullFailed(L114, 6687, 10, "ignoring");
    let ignoringSemantics = opts && 'ignoringSemantics' in opts ? opts.ignoringSemantics : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[ignoring$0] = ignoring;
    this[ignoringSemantics$0] = ignoringSemantics;
    if (!(ignoring != null)) dart.assertFailed(null, L114, 6690, 15, "ignoring != null");
    basic.IgnorePointer.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.IgnorePointer.prototype;
  dart.addTypeTests(basic.IgnorePointer);
  dart.addTypeCaches(basic.IgnorePointer);
  dart.setMethodSignature(basic.IgnorePointer, () => ({
    __proto__: dart.getMethods(basic.IgnorePointer.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderIgnorePointer, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.IgnorePointer, L115);
  dart.setFieldSignature(basic.IgnorePointer, () => ({
    __proto__: dart.getFields(basic.IgnorePointer.__proto__),
    ignoring: dart.finalFieldType(core.bool),
    ignoringSemantics: dart.finalFieldType(dart.nullable(core.bool))
  }));
  var absorbing$ = dart.privateName(basic, "AbsorbPointer.absorbing");
  var ignoringSemantics$1 = dart.privateName(basic, "AbsorbPointer.ignoringSemantics");
  basic.AbsorbPointer = class AbsorbPointer extends framework.SingleChildRenderObjectWidget {
    get absorbing() {
      return this[absorbing$];
    }
    set absorbing(value) {
      super.absorbing = value;
    }
    get ignoringSemantics() {
      return this[ignoringSemantics$1];
    }
    set ignoringSemantics(value) {
      super.ignoringSemantics = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 6809, 55, "context");
      return new proxy_box.RenderAbsorbPointer.new({absorbing: this.absorbing, ignoringSemantics: this.ignoringSemantics});
    }
    updateRenderObject(context, renderObject) {
      let t96;
      if (context == null) dart.nullFailed(L114, 6817, 40, "context");
      proxy_box.RenderAbsorbPointer.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 6817, 69, "renderObject");
      t96 = renderObject;
      (() => {
        t96.absorbing = this.absorbing;
        t96.ignoringSemantics = this.ignoringSemantics;
        return t96;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 6824, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfbool()).new("absorbing", this.absorbing));
      properties.add(new (DiagnosticsPropertyOfbool()).new("ignoringSemantics", this.ignoringSemantics, {defaultValue: null}));
    }
  };
  (basic.AbsorbPointer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let absorbing = opts && 'absorbing' in opts ? opts.absorbing : true;
    if (absorbing == null) dart.nullFailed(L114, 6787, 10, "absorbing");
    let child = opts && 'child' in opts ? opts.child : null;
    let ignoringSemantics = opts && 'ignoringSemantics' in opts ? opts.ignoringSemantics : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[absorbing$] = absorbing;
    this[ignoringSemantics$1] = ignoringSemantics;
    if (!(absorbing != null)) dart.assertFailed(null, L114, 6790, 15, "absorbing != null");
    basic.AbsorbPointer.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.AbsorbPointer.prototype;
  dart.addTypeTests(basic.AbsorbPointer);
  dart.addTypeCaches(basic.AbsorbPointer);
  dart.setMethodSignature(basic.AbsorbPointer, () => ({
    __proto__: dart.getMethods(basic.AbsorbPointer.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderAbsorbPointer, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.AbsorbPointer, L115);
  dart.setFieldSignature(basic.AbsorbPointer, () => ({
    __proto__: dart.getFields(basic.AbsorbPointer.__proto__),
    absorbing: dart.finalFieldType(core.bool),
    ignoringSemantics: dart.finalFieldType(dart.nullable(core.bool))
  }));
  var metaData$ = dart.privateName(basic, "MetaData.metaData");
  var behavior$4 = dart.privateName(basic, "MetaData.behavior");
  basic.MetaData = class MetaData extends framework.SingleChildRenderObjectWidget {
    get metaData() {
      return this[metaData$];
    }
    set metaData(value) {
      super.metaData = value;
    }
    get behavior() {
      return this[behavior$4];
    }
    set behavior(value) {
      super.behavior = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 6855, 50, "context");
      return new proxy_box.RenderMetaData.new({metaData: this.metaData, behavior: this.behavior});
    }
    updateRenderObject(context, renderObject) {
      let t96;
      if (context == null) dart.nullFailed(L114, 6863, 40, "context");
      proxy_box.RenderMetaData.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 6863, 64, "renderObject");
      t96 = renderObject;
      (() => {
        t96.metaData = this.metaData;
        t96.behavior = this.behavior;
        return t96;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 6870, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfHitTestBehavior()).new("behavior", this.behavior));
      properties.add(new diagnostics$.DiagnosticsProperty.new("metaData", this.metaData));
    }
  };
  (basic.MetaData.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let metaData = opts && 'metaData' in opts ? opts.metaData : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : C1302 || CT.C1302;
    if (behavior == null) dart.nullFailed(L114, 6844, 10, "behavior");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[metaData$] = metaData;
    this[behavior$4] = behavior;
    basic.MetaData.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.MetaData.prototype;
  dart.addTypeTests(basic.MetaData);
  dart.addTypeCaches(basic.MetaData);
  dart.setMethodSignature(basic.MetaData, () => ({
    __proto__: dart.getMethods(basic.MetaData.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderMetaData, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.MetaData, L115);
  dart.setFieldSignature(basic.MetaData, () => ({
    __proto__: dart.getFields(basic.MetaData.__proto__),
    metaData: dart.finalFieldType(dart.dynamic),
    behavior: dart.finalFieldType(proxy_box.HitTestBehavior)
  }));
  var _getTextDirection = dart.privateName(basic, "_getTextDirection");
  var properties$ = dart.privateName(basic, "Semantics.properties");
  var container$0 = dart.privateName(basic, "Semantics.container");
  var explicitChildNodes$ = dart.privateName(basic, "Semantics.explicitChildNodes");
  var excludeSemantics$ = dart.privateName(basic, "Semantics.excludeSemantics");
  basic.Semantics = class Semantics extends framework.SingleChildRenderObjectWidget {
    get properties() {
      return this[properties$];
    }
    set properties(value) {
      super.properties = value;
    }
    get container() {
      return this[container$0];
    }
    set container(value) {
      super.container = value;
    }
    get explicitChildNodes() {
      return this[explicitChildNodes$];
    }
    set explicitChildNodes(value) {
      super.explicitChildNodes = value;
    }
    get excludeSemantics() {
      return this[excludeSemantics$];
    }
    set excludeSemantics(value) {
      super.excludeSemantics = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 7087, 62, "context");
      return new proxy_box.RenderSemanticsAnnotations.new({container: this.container, explicitChildNodes: this.explicitChildNodes, excludeSemantics: this.excludeSemantics, enabled: this.properties.enabled, checked: this.properties.checked, toggled: this.properties.toggled, selected: this.properties.selected, button: this.properties.button, slider: this.properties.slider, link: this.properties.link, header: this.properties.header, textField: this.properties.textField, readOnly: this.properties.readOnly, focusable: this.properties.focusable, focused: this.properties.focused, liveRegion: this.properties.liveRegion, maxValueLength: this.properties.maxValueLength, currentValueLength: this.properties.currentValueLength, inMutuallyExclusiveGroup: this.properties.inMutuallyExclusiveGroup, obscured: this.properties.obscured, multiline: this.properties.multiline, scopesRoute: this.properties.scopesRoute, namesRoute: this.properties.namesRoute, hidden: this.properties.hidden, image: this.properties.image, label: this.properties.label, value: this.properties.value, increasedValue: this.properties.increasedValue, decreasedValue: this.properties.decreasedValue, hint: this.properties.hint, hintOverrides: this.properties.hintOverrides, textDirection: this[_getTextDirection](context), sortKey: this.properties.sortKey, tagForChildren: this.properties.tagForChildren, onTap: this.properties.onTap, onLongPress: this.properties.onLongPress, onScrollLeft: this.properties.onScrollLeft, onScrollRight: this.properties.onScrollRight, onScrollUp: this.properties.onScrollUp, onScrollDown: this.properties.onScrollDown, onIncrease: this.properties.onIncrease, onDecrease: this.properties.onDecrease, onCopy: this.properties.onCopy, onDismiss: this.properties.onDismiss, onCut: this.properties.onCut, onPaste: this.properties.onPaste, onMoveCursorForwardByCharacter: this.properties.onMoveCursorForwardByCharacter, onMoveCursorBackwardByCharacter: this.properties.onMoveCursorBackwardByCharacter, onMoveCursorForwardByWord: this.properties.onMoveCursorForwardByWord, onMoveCursorBackwardByWord: this.properties.onMoveCursorBackwardByWord, onSetSelection: this.properties.onSetSelection, onDidGainAccessibilityFocus: this.properties.onDidGainAccessibilityFocus, onDidLoseAccessibilityFocus: this.properties.onDidLoseAccessibilityFocus, customSemanticsActions: this.properties.customSemanticsActions});
    }
    [_getTextDirection](context) {
      if (context == null) dart.nullFailed(L114, 7146, 49, "context");
      if (this.properties.textDirection != null) return this.properties.textDirection;
      let containsText = this.properties.label != null || this.properties.value != null || this.properties.hint != null;
      if (!containsText) return null;
      return basic.Directionality.maybeOf(context);
    }
    updateRenderObject(context, renderObject) {
      let t96;
      if (context == null) dart.nullFailed(L114, 7159, 40, "context");
      proxy_box.RenderSemanticsAnnotations.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 7159, 76, "renderObject");
      t96 = renderObject;
      (() => {
        t96.container = this.container;
        t96.explicitChildNodes = this.explicitChildNodes;
        t96.excludeSemantics = this.excludeSemantics;
        t96.scopesRoute = this.properties.scopesRoute;
        t96.enabled = this.properties.enabled;
        t96.checked = this.properties.checked;
        t96.toggled = this.properties.toggled;
        t96.selected = this.properties.selected;
        t96.button = this.properties.button;
        t96.slider = this.properties.slider;
        t96.link = this.properties.link;
        t96.header = this.properties.header;
        t96.textField = this.properties.textField;
        t96.readOnly = this.properties.readOnly;
        t96.focusable = this.properties.focusable;
        t96.focused = this.properties.focused;
        t96.inMutuallyExclusiveGroup = this.properties.inMutuallyExclusiveGroup;
        t96.obscured = this.properties.obscured;
        t96.multiline = this.properties.multiline;
        t96.hidden = this.properties.hidden;
        t96.image = this.properties.image;
        t96.liveRegion = this.properties.liveRegion;
        t96.maxValueLength = this.properties.maxValueLength;
        t96.currentValueLength = this.properties.currentValueLength;
        t96.label = this.properties.label;
        t96.value = this.properties.value;
        t96.increasedValue = this.properties.increasedValue;
        t96.decreasedValue = this.properties.decreasedValue;
        t96.hint = this.properties.hint;
        t96.hintOverrides = this.properties.hintOverrides;
        t96.namesRoute = this.properties.namesRoute;
        t96.textDirection = this[_getTextDirection](context);
        t96.sortKey = this.properties.sortKey;
        t96.tagForChildren = this.properties.tagForChildren;
        t96.onTap = this.properties.onTap;
        t96.onLongPress = this.properties.onLongPress;
        t96.onScrollLeft = this.properties.onScrollLeft;
        t96.onScrollRight = this.properties.onScrollRight;
        t96.onScrollUp = this.properties.onScrollUp;
        t96.onScrollDown = this.properties.onScrollDown;
        t96.onIncrease = this.properties.onIncrease;
        t96.onDismiss = this.properties.onDismiss;
        t96.onDecrease = this.properties.onDecrease;
        t96.onCopy = this.properties.onCopy;
        t96.onCut = this.properties.onCut;
        t96.onPaste = this.properties.onPaste;
        t96.onMoveCursorForwardByCharacter = this.properties.onMoveCursorForwardByCharacter;
        t96.onMoveCursorBackwardByCharacter = this.properties.onMoveCursorForwardByCharacter;
        t96.onMoveCursorForwardByWord = this.properties.onMoveCursorForwardByWord;
        t96.onMoveCursorBackwardByWord = this.properties.onMoveCursorBackwardByWord;
        t96.onSetSelection = this.properties.onSetSelection;
        t96.onDidGainAccessibilityFocus = this.properties.onDidGainAccessibilityFocus;
        t96.onDidLoseAccessibilityFocus = this.properties.onDidLoseAccessibilityFocus;
        t96.customSemanticsActions = this.properties.customSemanticsActions;
        return t96;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 7218, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfbool()).new("container", this.container));
      properties.add(new (DiagnosticsPropertyOfSemanticsProperties()).new("properties", this.properties));
      this.properties.debugFillProperties(properties);
    }
  };
  (basic.Semantics.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let container = opts && 'container' in opts ? opts.container : false;
    if (container == null) dart.nullFailed(L114, 6916, 10, "container");
    let explicitChildNodes = opts && 'explicitChildNodes' in opts ? opts.explicitChildNodes : false;
    if (explicitChildNodes == null) dart.nullFailed(L114, 6917, 10, "explicitChildNodes");
    let excludeSemantics = opts && 'excludeSemantics' in opts ? opts.excludeSemantics : false;
    if (excludeSemantics == null) dart.nullFailed(L114, 6918, 10, "excludeSemantics");
    let enabled = opts && 'enabled' in opts ? opts.enabled : null;
    let checked = opts && 'checked' in opts ? opts.checked : null;
    let selected = opts && 'selected' in opts ? opts.selected : null;
    let toggled = opts && 'toggled' in opts ? opts.toggled : null;
    let button = opts && 'button' in opts ? opts.button : null;
    let slider = opts && 'slider' in opts ? opts.slider : null;
    let link = opts && 'link' in opts ? opts.link : null;
    let header = opts && 'header' in opts ? opts.header : null;
    let textField = opts && 'textField' in opts ? opts.textField : null;
    let readOnly = opts && 'readOnly' in opts ? opts.readOnly : null;
    let focusable = opts && 'focusable' in opts ? opts.focusable : null;
    let focused = opts && 'focused' in opts ? opts.focused : null;
    let inMutuallyExclusiveGroup = opts && 'inMutuallyExclusiveGroup' in opts ? opts.inMutuallyExclusiveGroup : null;
    let obscured = opts && 'obscured' in opts ? opts.obscured : null;
    let multiline = opts && 'multiline' in opts ? opts.multiline : null;
    let scopesRoute = opts && 'scopesRoute' in opts ? opts.scopesRoute : null;
    let namesRoute = opts && 'namesRoute' in opts ? opts.namesRoute : null;
    let hidden = opts && 'hidden' in opts ? opts.hidden : null;
    let image = opts && 'image' in opts ? opts.image : null;
    let liveRegion = opts && 'liveRegion' in opts ? opts.liveRegion : null;
    let maxValueLength = opts && 'maxValueLength' in opts ? opts.maxValueLength : null;
    let currentValueLength = opts && 'currentValueLength' in opts ? opts.currentValueLength : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let value = opts && 'value' in opts ? opts.value : null;
    let increasedValue = opts && 'increasedValue' in opts ? opts.increasedValue : null;
    let decreasedValue = opts && 'decreasedValue' in opts ? opts.decreasedValue : null;
    let hint = opts && 'hint' in opts ? opts.hint : null;
    let onTapHint = opts && 'onTapHint' in opts ? opts.onTapHint : null;
    let onLongPressHint = opts && 'onLongPressHint' in opts ? opts.onLongPressHint : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let sortKey = opts && 'sortKey' in opts ? opts.sortKey : null;
    let tagForChildren = opts && 'tagForChildren' in opts ? opts.tagForChildren : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onScrollLeft = opts && 'onScrollLeft' in opts ? opts.onScrollLeft : null;
    let onScrollRight = opts && 'onScrollRight' in opts ? opts.onScrollRight : null;
    let onScrollUp = opts && 'onScrollUp' in opts ? opts.onScrollUp : null;
    let onScrollDown = opts && 'onScrollDown' in opts ? opts.onScrollDown : null;
    let onIncrease = opts && 'onIncrease' in opts ? opts.onIncrease : null;
    let onDecrease = opts && 'onDecrease' in opts ? opts.onDecrease : null;
    let onCopy = opts && 'onCopy' in opts ? opts.onCopy : null;
    let onCut = opts && 'onCut' in opts ? opts.onCut : null;
    let onPaste = opts && 'onPaste' in opts ? opts.onPaste : null;
    let onDismiss = opts && 'onDismiss' in opts ? opts.onDismiss : null;
    let onMoveCursorForwardByCharacter = opts && 'onMoveCursorForwardByCharacter' in opts ? opts.onMoveCursorForwardByCharacter : null;
    let onMoveCursorBackwardByCharacter = opts && 'onMoveCursorBackwardByCharacter' in opts ? opts.onMoveCursorBackwardByCharacter : null;
    let onSetSelection = opts && 'onSetSelection' in opts ? opts.onSetSelection : null;
    let onDidGainAccessibilityFocus = opts && 'onDidGainAccessibilityFocus' in opts ? opts.onDidGainAccessibilityFocus : null;
    let onDidLoseAccessibilityFocus = opts && 'onDidLoseAccessibilityFocus' in opts ? opts.onDidLoseAccessibilityFocus : null;
    let customSemanticsActions = opts && 'customSemanticsActions' in opts ? opts.customSemanticsActions : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    basic.Semantics.fromProperties.call(this, {key: key, child: child, container: container, explicitChildNodes: explicitChildNodes, excludeSemantics: excludeSemantics, properties: new semantics.SemanticsProperties.new({enabled: enabled, checked: checked, toggled: toggled, selected: selected, button: button, slider: slider, link: link, header: header, textField: textField, readOnly: readOnly, focusable: focusable, focused: focused, inMutuallyExclusiveGroup: inMutuallyExclusiveGroup, obscured: obscured, multiline: multiline, scopesRoute: scopesRoute, namesRoute: namesRoute, hidden: hidden, image: image, liveRegion: liveRegion, maxValueLength: maxValueLength, currentValueLength: currentValueLength, label: label, value: value, increasedValue: increasedValue, decreasedValue: decreasedValue, hint: hint, textDirection: textDirection, sortKey: sortKey, tagForChildren: tagForChildren, onTap: onTap, onLongPress: onLongPress, onScrollLeft: onScrollLeft, onScrollRight: onScrollRight, onScrollUp: onScrollUp, onScrollDown: onScrollDown, onIncrease: onIncrease, onDecrease: onDecrease, onCopy: onCopy, onCut: onCut, onPaste: onPaste, onMoveCursorForwardByCharacter: onMoveCursorForwardByCharacter, onMoveCursorBackwardByCharacter: onMoveCursorBackwardByCharacter, onDidGainAccessibilityFocus: onDidGainAccessibilityFocus, onDidLoseAccessibilityFocus: onDidLoseAccessibilityFocus, onDismiss: onDismiss, onSetSelection: onSetSelection, customSemanticsActions: customSemanticsActions, hintOverrides: onTapHint != null || onLongPressHint != null ? new semantics.SemanticsHintOverrides.new({onTapHint: onTapHint, onLongPressHint: onLongPressHint}) : null}), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
  }).prototype = basic.Semantics.prototype;
  (basic.Semantics.fromProperties = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let container = opts && 'container' in opts ? opts.container : false;
    if (container == null) dart.nullFailed(L114, 7038, 10, "container");
    let explicitChildNodes = opts && 'explicitChildNodes' in opts ? opts.explicitChildNodes : false;
    if (explicitChildNodes == null) dart.nullFailed(L114, 7039, 10, "explicitChildNodes");
    let excludeSemantics = opts && 'excludeSemantics' in opts ? opts.excludeSemantics : false;
    if (excludeSemantics == null) dart.nullFailed(L114, 7040, 10, "excludeSemantics");
    let properties = opts && 'properties' in opts ? opts.properties : null;
    if (properties == null) dart.nullFailed(L114, 7041, 19, "properties");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[container$0] = container;
    this[explicitChildNodes$] = explicitChildNodes;
    this[excludeSemantics$] = excludeSemantics;
    this[properties$] = properties;
    if (!(container != null)) dart.assertFailed(null, L114, 7042, 15, "container != null");
    if (!(properties != null)) dart.assertFailed(null, L114, 7043, 15, "properties != null");
    basic.Semantics.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Semantics.prototype;
  dart.addTypeTests(basic.Semantics);
  dart.addTypeCaches(basic.Semantics);
  dart.setMethodSignature(basic.Semantics, () => ({
    __proto__: dart.getMethods(basic.Semantics.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderSemanticsAnnotations, [framework.BuildContext]),
    [_getTextDirection]: dart.fnType(dart.nullable(ui.TextDirection), [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Semantics, L115);
  dart.setFieldSignature(basic.Semantics, () => ({
    __proto__: dart.getFields(basic.Semantics.__proto__),
    properties: dart.finalFieldType(semantics.SemanticsProperties),
    container: dart.finalFieldType(core.bool),
    explicitChildNodes: dart.finalFieldType(core.bool),
    excludeSemantics: dart.finalFieldType(core.bool)
  }));
  basic.MergeSemantics = class MergeSemantics extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 7269, 56, "context");
      return new proxy_box.RenderMergeSemantics.new();
    }
  };
  (basic.MergeSemantics.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    basic.MergeSemantics.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.MergeSemantics.prototype;
  dart.addTypeTests(basic.MergeSemantics);
  dart.addTypeCaches(basic.MergeSemantics);
  dart.setMethodSignature(basic.MergeSemantics, () => ({
    __proto__: dart.getMethods(basic.MergeSemantics.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderMergeSemantics, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.MergeSemantics, L115);
  var blocking$ = dart.privateName(basic, "BlockSemantics.blocking");
  basic.BlockSemantics = class BlockSemantics extends framework.SingleChildRenderObjectWidget {
    get blocking() {
      return this[blocking$];
    }
    set blocking(value) {
      super.blocking = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 7294, 56, "context");
      return new proxy_box.RenderBlockSemantics.new({blocking: this.blocking});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L114, 7297, 40, "context");
      proxy_box.RenderBlockSemantics.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 7297, 70, "renderObject");
      renderObject.blocking = this.blocking;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 7302, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfbool()).new("blocking", this.blocking));
    }
  };
  (basic.BlockSemantics.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let blocking = opts && 'blocking' in opts ? opts.blocking : true;
    if (blocking == null) dart.nullFailed(L114, 7287, 41, "blocking");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[blocking$] = blocking;
    basic.BlockSemantics.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.BlockSemantics.prototype;
  dart.addTypeTests(basic.BlockSemantics);
  dart.addTypeCaches(basic.BlockSemantics);
  dart.setMethodSignature(basic.BlockSemantics, () => ({
    __proto__: dart.getMethods(basic.BlockSemantics.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderBlockSemantics, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.BlockSemantics, L115);
  dart.setFieldSignature(basic.BlockSemantics, () => ({
    __proto__: dart.getFields(basic.BlockSemantics.__proto__),
    blocking: dart.finalFieldType(core.bool)
  }));
  var excluding$0 = dart.privateName(basic, "ExcludeSemantics.excluding");
  basic.ExcludeSemantics = class ExcludeSemantics extends framework.SingleChildRenderObjectWidget {
    get excluding() {
      return this[excluding$0];
    }
    set excluding(value) {
      super.excluding = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 7334, 58, "context");
      return new proxy_box.RenderExcludeSemantics.new({excluding: this.excluding});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L114, 7337, 40, "context");
      proxy_box.RenderExcludeSemantics.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 7337, 72, "renderObject");
      renderObject.excluding = this.excluding;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 7342, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfbool()).new("excluding", this.excluding));
    }
  };
  (basic.ExcludeSemantics.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let excluding = opts && 'excluding' in opts ? opts.excluding : true;
    if (excluding == null) dart.nullFailed(L114, 7325, 10, "excluding");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[excluding$0] = excluding;
    if (!(excluding != null)) dart.assertFailed(null, L114, 7327, 15, "excluding != null");
    basic.ExcludeSemantics.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.ExcludeSemantics.prototype;
  dart.addTypeTests(basic.ExcludeSemantics);
  dart.addTypeCaches(basic.ExcludeSemantics);
  dart.setMethodSignature(basic.ExcludeSemantics, () => ({
    __proto__: dart.getMethods(basic.ExcludeSemantics.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderExcludeSemantics, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.ExcludeSemantics, L115);
  dart.setFieldSignature(basic.ExcludeSemantics, () => ({
    __proto__: dart.getFields(basic.ExcludeSemantics.__proto__),
    excluding: dart.finalFieldType(core.bool)
  }));
  var index$1 = dart.privateName(basic, "IndexedSemantics.index");
  basic.IndexedSemantics = class IndexedSemantics extends framework.SingleChildRenderObjectWidget {
    get index() {
      return this[index$1];
    }
    set index(value) {
      super.index = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 7395, 58, "context");
      return new proxy_box.RenderIndexedSemantics.new({index: this.index});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L114, 7398, 40, "context");
      proxy_box.RenderIndexedSemantics.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 7398, 72, "renderObject");
      renderObject.index = this.index;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 7402, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfint()).new("index", this.index));
    }
  };
  (basic.IndexedSemantics.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let index = opts && 'index' in opts ? opts.index : null;
    if (index == null) dart.nullFailed(L114, 7386, 19, "index");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[index$1] = index;
    if (!(index != null)) dart.assertFailed(null, L114, 7388, 15, "index != null");
    basic.IndexedSemantics.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.IndexedSemantics.prototype;
  dart.addTypeTests(basic.IndexedSemantics);
  dart.addTypeCaches(basic.IndexedSemantics);
  dart.setMethodSignature(basic.IndexedSemantics, () => ({
    __proto__: dart.getMethods(basic.IndexedSemantics.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderIndexedSemantics, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.IndexedSemantics, L115);
  dart.setFieldSignature(basic.IndexedSemantics, () => ({
    __proto__: dart.getFields(basic.IndexedSemantics.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  var C1313;
  var C1314;
  var C1312;
  var C1311;
  var child$43 = dart.privateName(basic, "KeyedSubtree.child");
  basic.KeyedSubtree = class KeyedSubtree extends framework.StatelessWidget {
    get child() {
      return this[child$43];
    }
    set child(value) {
      super.child = value;
    }
    static wrap(child, childIndex, opts) {
      if (child == null) dart.nullFailed(L114, 7420, 36, "child");
      if (childIndex == null) dart.nullFailed(L114, 7420, 47, "childIndex");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      let key = child.key != null ? new (ValueKeyOfKey()).new(dart.nullCheck(child.key)) : new (ValueKeyOfint()).new(childIndex);
      return new basic.KeyedSubtree.new({key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }
    static ensureUniqueKeysForList(items, opts) {
      if (items == null) dart.nullFailed(L114, 7432, 60, "items");
      let baseIndex = opts && 'baseIndex' in opts ? opts.baseIndex : 0;
      if (baseIndex == null) dart.nullFailed(L114, 7432, 73, "baseIndex");
      if (items == null || dart.test(items[$isEmpty])) return items;
      let itemsWithUniqueKeys = JSArrayOfWidget().of([]);
      let itemIndex = baseIndex;
      for (let item of items) {
        itemsWithUniqueKeys[$add](basic.KeyedSubtree.wrap(item, itemIndex, {$creationLocationd_0dea112b090073317d4: C1311 || CT.C1311}));
        itemIndex = dart.notNull(itemIndex) + 1;
      }
      if (!!dart.test(debug$0.debugItemsHaveDuplicateKeys(itemsWithUniqueKeys))) dart.assertFailed(null, L114, 7443, 12, "!debugItemsHaveDuplicateKeys(itemsWithUniqueKeys)");
      return itemsWithUniqueKeys;
    }
    build(context) {
      if (context == null) dart.nullFailed(L114, 7448, 29, "context");
      return this.child;
    }
  };
  (basic.KeyedSubtree.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L114, 7415, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$43] = child;
    if (!(child != null)) dart.assertFailed(null, L114, 7416, 15, "child != null");
    basic.KeyedSubtree.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.KeyedSubtree.prototype;
  dart.addTypeTests(basic.KeyedSubtree);
  dart.addTypeCaches(basic.KeyedSubtree);
  dart.setMethodSignature(basic.KeyedSubtree, () => ({
    __proto__: dart.getMethods(basic.KeyedSubtree.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.KeyedSubtree, L115);
  dart.setFieldSignature(basic.KeyedSubtree, () => ({
    __proto__: dart.getFields(basic.KeyedSubtree.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  var builder$3 = dart.privateName(basic, "Builder.builder");
  basic.Builder = class Builder extends framework.StatelessWidget {
    get builder() {
      return this[builder$3];
    }
    set builder(value) {
      super.builder = value;
    }
    build(context) {
      let t96;
      if (context == null) dart.nullFailed(L114, 7552, 29, "context");
      t96 = context;
      return this.builder(t96);
    }
  };
  (basic.Builder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    if (builder == null) dart.nullFailed(L114, 7538, 19, "builder");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[builder$3] = builder;
    if (!(builder != null)) dart.assertFailed(null, L114, 7539, 15, "builder != null");
    basic.Builder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Builder.prototype;
  dart.addTypeTests(basic.Builder);
  dart.addTypeCaches(basic.Builder);
  dart.setMethodSignature(basic.Builder, () => ({
    __proto__: dart.getMethods(basic.Builder.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Builder, L115);
  dart.setFieldSignature(basic.Builder, () => ({
    __proto__: dart.getFields(basic.Builder.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext]))
  }));
  var builder$4 = dart.privateName(basic, "StatefulBuilder.builder");
  basic.StatefulBuilder = class StatefulBuilder extends framework.StatefulWidget {
    get builder() {
      return this[builder$4];
    }
    set builder(value) {
      super.builder = value;
    }
    createState() {
      return new basic._StatefulBuilderState.new();
    }
  };
  (basic.StatefulBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    if (builder == null) dart.nullFailed(L114, 7610, 19, "builder");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[builder$4] = builder;
    if (!(builder != null)) dart.assertFailed(null, L114, 7611, 15, "builder != null");
    basic.StatefulBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.StatefulBuilder.prototype;
  dart.addTypeTests(basic.StatefulBuilder);
  dart.addTypeCaches(basic.StatefulBuilder);
  dart.setMethodSignature(basic.StatefulBuilder, () => ({
    __proto__: dart.getMethods(basic.StatefulBuilder.__proto__),
    createState: dart.fnType(basic._StatefulBuilderState, [])
  }));
  dart.setLibraryUri(basic.StatefulBuilder, L115);
  dart.setFieldSignature(basic.StatefulBuilder, () => ({
    __proto__: dart.getFields(basic.StatefulBuilder.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, dart.fnType(dart.void, [dart.fnType(dart.void, [])])]))
  }));
  basic._StatefulBuilderState = class _StatefulBuilderState extends framework.State$(basic.StatefulBuilder) {
    build(context) {
      let t98, t97, t96;
      if (context == null) dart.nullFailed(L114, 7629, 29, "context");
      t96 = this.widget;
      t97 = context;
      t98 = dart.bind(this, 'setState');
      return t96.builder(t97, t98);
    }
  };
  (basic._StatefulBuilderState.new = function() {
    basic._StatefulBuilderState.__proto__.new.call(this);
    ;
  }).prototype = basic._StatefulBuilderState.prototype;
  dart.addTypeTests(basic._StatefulBuilderState);
  dart.addTypeCaches(basic._StatefulBuilderState);
  dart.setMethodSignature(basic._StatefulBuilderState, () => ({
    __proto__: dart.getMethods(basic._StatefulBuilderState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic._StatefulBuilderState, L115);
  var color$10 = dart.privateName(basic, "ColoredBox.color");
  basic.ColoredBox = class ColoredBox extends framework.SingleChildRenderObjectWidget {
    get color() {
      return this[color$10];
    }
    set color(value) {
      super.color = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(L114, 7646, 53, "context");
      return new basic._RenderColoredBox.new({color: this.color});
    }
    updateRenderObject(context, renderObject) {
      if (context == null) dart.nullFailed(L114, 7651, 40, "context");
      basic._RenderColoredBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(L114, 7651, 67, "renderObject");
      renderObject.color = this.color;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L114, 7656, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfColor()).new("color", this.color));
    }
  };
  (basic.ColoredBox.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(L114, 7638, 36, "color");
    let child = opts && 'child' in opts ? opts.child : null;
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[color$10] = color;
    if (!(color != null)) dart.assertFailed(null, L114, 7639, 16, "color != null");
    basic.ColoredBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.ColoredBox.prototype;
  dart.addTypeTests(basic.ColoredBox);
  dart.addTypeCaches(basic.ColoredBox);
  dart.setMethodSignature(basic.ColoredBox, () => ({
    __proto__: dart.getMethods(basic.ColoredBox.__proto__),
    createRenderObject: dart.fnType(basic._RenderColoredBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.ColoredBox, L115);
  dart.setFieldSignature(basic.ColoredBox, () => ({
    __proto__: dart.getFields(basic.ColoredBox.__proto__),
    color: dart.finalFieldType(ui.Color)
  }));
  var _color$ = dart.privateName(basic, "_color");
  basic._RenderColoredBox = class _RenderColoredBox extends proxy_box.RenderProxyBoxWithHitTestBehavior {
    get color() {
      return this[_color$];
    }
    set color(value) {
      if (value == null) dart.nullFailed(L114, 7672, 19, "value");
      if (!(value != null)) dart.assertFailed(null, L114, 7673, 12, "value != null");
      if (dart.equals(value, this[_color$])) {
        return;
      }
      this[_color$] = value;
      this.markNeedsPaint();
    }
    paint(context, offset) {
      let t96;
      if (context == null) dart.nullFailed(L114, 7682, 30, "context");
      if (offset == null) dart.nullFailed(L114, 7682, 46, "offset");
      if (dart.test(this.size['>'](ui.Size.zero))) {
        context.canvas.drawRect(offset['&'](this.size), (t96 = ui.Paint.new(), (() => {
          t96.color = this.color;
          return t96;
        })()));
      }
      if (this.child != null) {
        context.paintChild(dart.nullCheck(this.child), offset);
      }
    }
  };
  (basic._RenderColoredBox.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(L114, 7663, 38, "color");
    this[_color$] = color;
    basic._RenderColoredBox.__proto__.new.call(this, {behavior: proxy_box.HitTestBehavior.opaque});
    ;
  }).prototype = basic._RenderColoredBox.prototype;
  dart.addTypeTests(basic._RenderColoredBox);
  dart.addTypeCaches(basic._RenderColoredBox);
  dart.setGetterSignature(basic._RenderColoredBox, () => ({
    __proto__: dart.getGetters(basic._RenderColoredBox.__proto__),
    color: ui.Color
  }));
  dart.setSetterSignature(basic._RenderColoredBox, () => ({
    __proto__: dart.getSetters(basic._RenderColoredBox.__proto__),
    color: ui.Color
  }));
  dart.setLibraryUri(basic._RenderColoredBox, L115);
  dart.setFieldSignature(basic._RenderColoredBox, () => ({
    __proto__: dart.getFields(basic._RenderColoredBox.__proto__),
    [_color$]: dart.fieldType(ui.Color)
  }));
  basic.getAxisDirectionFromAxisReverseAndDirectionality = function getAxisDirectionFromAxisReverseAndDirectionality(context, axis, reverse) {
    if (context == null) dart.nullFailed(L114, 3288, 16, "context");
    if (axis == null) dart.nullFailed(L114, 3289, 8, "axis");
    if (reverse == null) dart.nullFailed(L114, 3290, 8, "reverse");
    switch (axis) {
      case C685 || CT.C685:
      {
        if (!dart.test(debug$0.debugCheckHasDirectionality(context))) dart.assertFailed(null, L114, 3294, 14, "debugCheckHasDirectionality(context)");
        let textDirection = basic.Directionality.of(context);
        let axisDirection = basic_types.textDirectionToAxisDirection(textDirection);
        return dart.test(reverse) ? basic_types.flipAxisDirection(axisDirection) : axisDirection;
      }
      case C424 || CT.C424:
      {
        return dart.test(reverse) ? basic_types.AxisDirection.up : basic_types.AxisDirection.down;
      }
      default:
      {
        dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
      }
    }
  };
  var listener$ = dart.privateName(actions$, "ActionListener.listener");
  var action$ = dart.privateName(actions$, "ActionListener.action");
  var child$44 = dart.privateName(actions$, "ActionListener.child");
  actions$.ActionListener = class ActionListener extends framework.StatefulWidget {
    get listener() {
      return this[listener$];
    }
    set listener(value) {
      super.listener = value;
    }
    get action() {
      return this[action$];
    }
    set action(value) {
      super.action = value;
    }
    get child() {
      return this[child$44];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new actions$._ActionListenerState.new();
    }
  };
  (actions$.ActionListener.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let listener = opts && 'listener' in opts ? opts.listener : null;
    if (listener == null) dart.nullFailed(L31, 251, 19, "listener");
    let action = opts && 'action' in opts ? opts.action : null;
    if (action == null) dart.nullFailed(L31, 252, 19, "action");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L31, 253, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[listener$] = listener;
    this[action$] = action;
    this[child$44] = child;
    if (!(listener != null)) dart.assertFailed(null, L31, 254, 16, "listener != null");
    if (!(action != null)) dart.assertFailed(null, L31, 255, 16, "action != null");
    if (!(child != null)) dart.assertFailed(null, L31, 256, 16, "child != null");
    actions$.ActionListener.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = actions$.ActionListener.prototype;
  dart.addTypeTests(actions$.ActionListener);
  dart.addTypeCaches(actions$.ActionListener);
  dart.setMethodSignature(actions$.ActionListener, () => ({
    __proto__: dart.getMethods(actions$.ActionListener.__proto__),
    createState: dart.fnType(actions$._ActionListenerState, [])
  }));
  dart.setLibraryUri(actions$.ActionListener, L12);
  dart.setFieldSignature(actions$.ActionListener, () => ({
    __proto__: dart.getFields(actions$.ActionListener.__proto__),
    listener: dart.finalFieldType(dart.fnType(dart.void, [actions$.Action$(actions$.Intent)])),
    action: dart.finalFieldType(actions$.Action$(actions$.Intent)),
    child: dart.finalFieldType(framework.Widget)
  }));
  actions$._ActionListenerState = class _ActionListenerState extends framework.State$(actions$.ActionListener) {
    initState() {
      super.initState();
      this.widget.action.addActionListener(this.widget.listener);
    }
    didUpdateWidget(oldWidget) {
      actions$.ActionListener.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L31, 284, 39, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (dart.equals(oldWidget.action, this.widget.action) && dart.equals(oldWidget.listener, this.widget.listener)) {
        return;
      }
      oldWidget.action.removeActionListener(oldWidget.listener);
      this.widget.action.addActionListener(this.widget.listener);
    }
    dispose() {
      this.widget.action.removeActionListener(this.widget.listener);
      super.dispose();
    }
    build(context) {
      if (context == null) dart.nullFailed(L31, 300, 29, "context");
      return this.widget.child;
    }
  };
  (actions$._ActionListenerState.new = function() {
    actions$._ActionListenerState.__proto__.new.call(this);
    ;
  }).prototype = actions$._ActionListenerState.prototype;
  dart.addTypeTests(actions$._ActionListenerState);
  dart.addTypeCaches(actions$._ActionListenerState);
  dart.setMethodSignature(actions$._ActionListenerState, () => ({
    __proto__: dart.getMethods(actions$._ActionListenerState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(actions$._ActionListenerState, L12);
  const _is_ContextAction_default = Symbol('_is_ContextAction_default');
  actions$.ContextAction$ = dart.generic(T => {
    class ContextAction extends actions$.Action$(T) {}
    (ContextAction.new = function() {
      ContextAction.__proto__.new.call(this);
      ;
    }).prototype = ContextAction.prototype;
    dart.addTypeTests(ContextAction);
    ContextAction.prototype[_is_ContextAction_default] = true;
    dart.addTypeCaches(ContextAction);
    dart.setLibraryUri(ContextAction, L12);
    return ContextAction;
  });
  actions$.ContextAction = actions$.ContextAction$();
  dart.addTypeTests(actions$.ContextAction, _is_ContextAction_default);
  const _is_CallbackAction_default = Symbol('_is_CallbackAction_default');
  var onInvoke$ = dart.privateName(actions$, "CallbackAction.onInvoke");
  actions$.CallbackAction$ = dart.generic(T => {
    class CallbackAction extends actions$.Action$(T) {
      get onInvoke() {
        return this[onInvoke$];
      }
      set onInvoke(value) {
        super.onInvoke = value;
      }
      invoke(intent) {
        let t96;
        T.as(intent);
        if (intent == null) dart.nullFailed(L31, 376, 30, "intent");
        t96 = intent;
        return this.onInvoke(t96);
      }
    }
    (CallbackAction.new = function(opts) {
      let onInvoke = opts && 'onInvoke' in opts ? opts.onInvoke : null;
      if (onInvoke == null) dart.nullFailed(L31, 367, 33, "onInvoke");
      this[onInvoke$] = onInvoke;
      if (!(onInvoke != null)) dart.assertFailed(null, L31, 367, 53, "onInvoke != null");
      CallbackAction.__proto__.new.call(this);
      ;
    }).prototype = CallbackAction.prototype;
    dart.addTypeTests(CallbackAction);
    CallbackAction.prototype[_is_CallbackAction_default] = true;
    dart.addTypeCaches(CallbackAction);
    dart.setMethodSignature(CallbackAction, () => ({
      __proto__: dart.getMethods(CallbackAction.__proto__),
      invoke: dart.fnType(dart.nullable(core.Object), [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(CallbackAction, L12);
    dart.setFieldSignature(CallbackAction, () => ({
      __proto__: dart.getFields(CallbackAction.__proto__),
      onInvoke: dart.finalFieldType(dart.fnType(dart.nullable(core.Object), [T]))
    }));
    return CallbackAction;
  });
  actions$.CallbackAction = actions$.CallbackAction$();
  dart.addTypeTests(actions$.CallbackAction, _is_CallbackAction_default);
  const Object_Diagnosticable$36$3 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$3.new = function() {
  }).prototype = Object_Diagnosticable$36$3.prototype;
  dart.applyMixin(Object_Diagnosticable$36$3, diagnostics$.Diagnosticable);
  actions$.ActionDispatcher = class ActionDispatcher extends Object_Diagnosticable$36$3 {
    invokeAction(action, intent, context = null) {
      let t96;
      ActionOfIntent().as(action);
      if (action == null) dart.nullFailed(L31, 404, 30, "action");
      actions$.Intent.as(intent);
      if (intent == null) dart.nullFailed(L31, 405, 22, "intent");
      if (!(action != null)) dart.assertFailed(null, L31, 408, 12, "action != null");
      if (!(intent != null)) dart.assertFailed(null, L31, 409, 12, "intent != null");
      if (!dart.test(action.isEnabled(intent))) dart.assertFailed("Action must be enabled when calling invokeAction", L31, 410, 12, "action.isEnabled(intent)");
      if (ContextActionOfIntent().is(action)) {
        context == null ? context = (t96 = focus_manager.primaryFocus, t96 == null ? null : t96.context) : null;
        return action.invoke(intent, context);
      } else {
        return action.invoke(intent);
      }
    }
  };
  (actions$.ActionDispatcher.new = function() {
    ;
  }).prototype = actions$.ActionDispatcher.prototype;
  dart.addTypeTests(actions$.ActionDispatcher);
  dart.addTypeCaches(actions$.ActionDispatcher);
  dart.setMethodSignature(actions$.ActionDispatcher, () => ({
    __proto__: dart.getMethods(actions$.ActionDispatcher.__proto__),
    invokeAction: dart.fnType(dart.nullable(core.Object), [dart.nullable(core.Object), dart.nullable(core.Object)], [dart.nullable(framework.BuildContext)])
  }));
  dart.setLibraryUri(actions$.ActionDispatcher, L12);
  var C1315;
  var dispatcher$ = dart.privateName(actions$, "Actions.dispatcher");
  var actions$1 = dart.privateName(actions$, "Actions.actions");
  var child$45 = dart.privateName(actions$, "Actions.child");
  actions$.Actions = class Actions extends framework.StatefulWidget {
    get dispatcher() {
      return this[dispatcher$];
    }
    set dispatcher(value) {
      super.dispatcher = value;
    }
    get actions() {
      return this[actions$1];
    }
    set actions(value) {
      super.actions = value;
    }
    get child() {
      return this[child$45];
    }
    set child(value) {
      super.child = value;
    }
    static _visitActionsAncestors(context, visitor) {
      if (context == null) dart.nullFailed(L31, 473, 51, "context");
      if (visitor == null) dart.nullFailed(L31, 473, 65, "visitor");
      let actionsElement = context.getElementForInheritedWidgetOfExactType(actions$._ActionsMarker);
      while (actionsElement != null) {
        if (dart.equals(visitor(actionsElement), true)) {
          break;
        }
        let parent = actions$._getParent(actionsElement);
        actionsElement = parent.getElementForInheritedWidgetOfExactType(actions$._ActionsMarker);
      }
      return actionsElement != null;
    }
    static _findDispatcher(context) {
      let t96;
      if (context == null) dart.nullFailed(L31, 490, 56, "context");
      let dispatcher = null;
      actions$.Actions._visitActionsAncestors(context, dart.fn(element => {
        if (element == null) dart.nullFailed(L31, 492, 55, "element");
        let found = actions$._ActionsMarker.as(element.widget).dispatcher;
        if (found != null) {
          dispatcher = found;
          return true;
        }
        return false;
      }, InheritedElementTobool()));
      t96 = dispatcher;
      return t96 == null ? C1315 || CT.C1315 : t96;
    }
    static handler(T, context, intent) {
      if (context == null) dart.nullFailed(L31, 514, 63, "context");
      if (intent == null) dart.nullFailed(L31, 514, 74, "intent");
      let action = actions$.Actions.maybeFind(T, context);
      if (action != null && dart.test(action.isEnabled(intent))) {
        return dart.fn(() => {
          if (dart.test(action.isEnabled(intent))) {
            actions$.Actions.of(context).invokeAction(action, intent, context);
          }
        }, VoidTovoid());
      }
      return null;
    }
    static find(T, context, opts) {
      if (context == null) dart.nullFailed(L31, 545, 56, "context");
      let intent = opts && 'intent' in opts ? opts.intent : null;
      let action = actions$.Actions.maybeFind(T, context, {intent: intent});
      if (!dart.test(dart.fn(() => {
        let t96, t96$;
        if (action == null) {
          let type = (t96$ = (t96 = intent, t96 == null ? null : dart.runtimeType(t96)), t96$ == null ? dart.wrapType(T) : t96$);
          dart.throw(assertions.FlutterError.new("Unable to find an action for a " + dart.str(type) + " in an " + dart.str(dart.wrapType(actions$.Actions)) + " widget " + "in the given context.\n" + dart.str(dart.wrapType(actions$.Actions)) + ".find() was called on a context that doesn't contain an " + dart.str(dart.wrapType(actions$.Actions)) + " widget with a mapping for the given intent type.\n" + "The context used was:\n" + "  " + dart.str(context) + "\n" + "The intent type requested was:\n" + "  " + dart.str(type)));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L31, 548, 12, "() {\r\n      if (action == null) {\r\n        final Type type = intent?.runtimeType ?? T;\r\n        throw FlutterError('Unable to find an action for a $type in an $Actions widget '\r\n            'in the given context.\\n'\r\n            \"$Actions.find() was called on a context that doesn't contain an \"\r\n            '$Actions widget with a mapping for the given intent type.\\n'\r\n            'The context used was:\\n'\r\n            '  $context\\n'\r\n            'The intent type requested was:\\n'\r\n            '  $type');\r\n      }\r\n      return true;\r\n    }()");
      return dart.nullCheck(action);
    }
    static maybeFind(T, context, opts) {
      let t96, t96$;
      if (context == null) dart.nullFailed(L31, 582, 62, "context");
      let intent = opts && 'intent' in opts ? opts.intent : null;
      let action = null;
      let type = (t96$ = (t96 = intent, t96 == null ? null : dart.runtimeType(t96)), t96$ == null ? dart.wrapType(T) : t96$);
      if (!!dart.equals(type, dart.wrapType(actions$.Intent))) dart.assertFailed("The type passed to \"find\" resolved to \"Intent\": either a non-Intent" + "generic type argument or an example intent derived from Intent must be" + "specified. Intent may be used as the generic type as long as the optional" + "\"intent\" argument is passed.", L31, 589, 12, "type != Intent");
      actions$.Actions._visitActionsAncestors(context, dart.fn(element => {
        if (element == null) dart.nullFailed(L31, 595, 55, "element");
        let actions = actions$._ActionsMarker.as(element.widget);
        let result = dart.nullable(actions$.Action$(T)).as(actions.actions[$_get](type));
        if (result != null) {
          context.dependOnInheritedElement(element);
          action = result;
          return true;
        }
        return false;
      }, InheritedElementTobool()));
      return action;
    }
    static of(context) {
      let t96, t96$;
      if (context == null) dart.nullFailed(L31, 614, 43, "context");
      if (!(context != null)) dart.assertFailed(null, L31, 615, 12, "context != null");
      let marker = context.dependOnInheritedWidgetOfExactType(actions$._ActionsMarker);
      t96$ = (t96 = marker, t96 == null ? null : t96.dispatcher);
      return t96$ == null ? actions$.Actions._findDispatcher(context) : t96$;
    }
    static invoke(T, context, intent, opts) {
      if (context == null) dart.nullFailed(L31, 646, 18, "context");
      if (intent == null) dart.nullFailed(L31, 647, 7, "intent");
      let nullOk = opts && 'nullOk' in opts ? opts.nullOk : false;
      if (nullOk == null) dart.nullFailed(L31, 648, 10, "nullOk");
      if (!(intent != null)) dart.assertFailed(null, L31, 650, 12, "intent != null");
      if (!(nullOk != null)) dart.assertFailed(null, L31, 651, 12, "nullOk != null");
      if (!(context != null)) dart.assertFailed(null, L31, 652, 12, "context != null");
      let action = null;
      let actionElement = null;
      actions$.Actions._visitActionsAncestors(context, dart.fn(element => {
        if (element == null) dart.nullFailed(L31, 656, 55, "element");
        let actions = actions$._ActionsMarker.as(element.widget);
        let result = dart.nullable(actions$.Action$(T)).as(actions.actions[$_get](dart.runtimeType(intent)));
        if (result != null) {
          actionElement = element;
          if (dart.test(result.isEnabled(intent))) {
            action = result;
            return true;
          }
        }
        return false;
      }, InheritedElementTobool()));
      if (!dart.test(dart.fn(() => {
        if (!dart.test(nullOk) && actionElement == null) {
          dart.throw(assertions.FlutterError.new("Unable to find an action for an Intent with type " + dart.str(dart.runtimeType(intent)) + " in an " + dart.str(dart.wrapType(actions$.Actions)) + " widget in the given context.\n" + dart.str(dart.wrapType(actions$.Actions)) + ".invoke() was unable to find an " + dart.str(dart.wrapType(actions$.Actions)) + " widget that " + "contained a mapping for the given intent, or the intent type isn't the " + "same as the type argument to invoke (which is " + dart.str(dart.wrapType(T)) + " - try supplying a " + "type argument to invoke if one was not given)\n" + "The context used was:\n" + "  " + dart.str(context) + "\n" + "The intent type requested was:\n" + "  " + dart.str(dart.runtimeType(intent))));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, L31, 669, 12, "() {\r\n      if (!nullOk && actionElement == null) {\r\n        throw FlutterError('Unable to find an action for an Intent with type '\r\n            '${intent.runtimeType} in an $Actions widget in the given context.\\n'\r\n            '$Actions.invoke() was unable to find an $Actions widget that '\r\n            \"contained a mapping for the given intent, or the intent type isn't the \"\r\n            'same as the type argument to invoke (which is $T - try supplying a '\r\n            'type argument to invoke if one was not given)\\n'\r\n            'The context used was:\\n'\r\n            '  $context\\n'\r\n            'The intent type requested was:\\n'\r\n            '  ${intent.runtimeType}');\r\n      }\r\n      return true;\r\n    }()");
      if (actionElement == null || action == null) {
        return null;
      }
      return actions$.Actions._findDispatcher(dart.nullCheck(actionElement)).invokeAction(dart.nullCheck(action), intent, context);
    }
    createState() {
      return new actions$._ActionsState.new();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(L31, 696, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfActionDispatcher()).new("dispatcher", this.dispatcher));
      properties.add(new (DiagnosticsPropertyOfMapOfType$ActionOfIntent()).new("actions", this.actions));
    }
  };
  (actions$.Actions.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let dispatcher = opts && 'dispatcher' in opts ? opts.dispatcher : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    if (actions == null) dart.nullFailed(L31, 441, 19, "actions");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L31, 442, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[dispatcher$] = dispatcher;
    this[actions$1] = actions;
    this[child$45] = child;
    if (!(actions != null)) dart.assertFailed(null, L31, 443, 16, "actions != null");
    if (!(child != null)) dart.assertFailed(null, L31, 444, 16, "child != null");
    actions$.Actions.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = actions$.Actions.prototype;
  dart.addTypeTests(actions$.Actions);
  dart.addTypeCaches(actions$.Actions);
  dart.setMethodSignature(actions$.Actions, () => ({
    __proto__: dart.getMethods(actions$.Actions.__proto__),
    createState: dart.fnType(framework.State$(actions$.Actions), [])
  }));
  dart.setLibraryUri(actions$.Actions, L12);
  dart.setFieldSignature(actions$.Actions, () => ({
    __proto__: dart.getFields(actions$.Actions.__proto__),
    dispatcher: dart.finalFieldType(dart.nullable(actions$.ActionDispatcher)),
    actions: dart.finalFieldType(core.Map$(core.Type, actions$.Action$(actions$.Intent))),
    child: dart.finalFieldType(framework.Widget)
  }));
  var _updateActionListeners = dart.privateName(actions$, "_updateActionListeners");
  var _handleActionChanged = dart.privateName(actions$, "_handleActionChanged");
  var C1318;
  var C1319;
  var C1320;
  var C1321;
  var C1317;
  var C1316;
  actions$._ActionsState = class _ActionsState extends framework.State$(actions$.Actions) {
    initState() {
      super.initState();
      this[_updateActionListeners]();
    }
    [_handleActionChanged](action) {
      if (action == null) dart.nullFailed(L31, 716, 44, "action");
      this.setState(dart.fn(() => {
        this.rebuildKey = new core.Object.new();
      }, VoidTovoid()));
    }
    [_updateActionListeners]() {
      let widgetActions = this.widget.actions[$values][$toSet]();
      let removedActions = dart.nullCheck(this.listenedActions).difference(widgetActions);
      let addedActions = widgetActions.difference(dart.nullCheck(this.listenedActions));
      for (let action of removedActions) {
        action.removeActionListener(dart.bind(this, _handleActionChanged));
      }
      for (let action of addedActions) {
        action.addActionListener(dart.bind(this, _handleActionChanged));
      }
      this.listenedActions = widgetActions;
    }
    didUpdateWidget(oldWidget) {
      actions$.Actions.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L31, 738, 32, "oldWidget");
      super.didUpdateWidget(oldWidget);
      this[_updateActionListeners]();
    }
    dispose() {
      super.dispose();
      for (let action of dart.nullCheck(this.listenedActions)) {
        action.removeActionListener(dart.bind(this, _handleActionChanged));
      }
      this.listenedActions = null;
    }
    build(context) {
      if (context == null) dart.nullFailed(L31, 753, 29, "context");
      return new actions$._ActionsMarker.new({actions: this.widget.actions, dispatcher: this.widget.dispatcher, rebuildKey: this.rebuildKey, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C1316 || CT.C1316});
    }
  };
  (actions$._ActionsState.new = function() {
    this.listenedActions = LinkedHashSetOfActionOfIntent().new();
    this.rebuildKey = new core.Object.new();
    actions$._ActionsState.__proto__.new.call(this);
    ;
  }).prototype = actions$._ActionsState.prototype;
  dart.addTypeTests(actions$._ActionsState);
  dart.addTypeCaches(actions$._ActionsState);
  dart.setMethodSignature(actions$._ActionsState, () => ({
    __proto__: dart.getMethods(actions$._ActionsState.__proto__),
    [_handleActionChanged]: dart.fnType(dart.void, [actions$.Action$(actions$.Intent)]),
    [_updateActionListeners]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(actions$._ActionsState, L12);
  dart.setFieldSignature(actions$._ActionsState, () => ({
    __proto__: dart.getFields(actions$._ActionsState.__proto__),
    listenedActions: dart.fieldType(dart.nullable(core.Set$(actions$.Action$(actions$.Intent)))),
    rebuildKey: dart.fieldType(core.Object)
  }));
  var dispatcher$0 = dart.privateName(actions$, "_ActionsMarker.dispatcher");
  var actions$2 = dart.privateName(actions$, "_ActionsMarker.actions");
  var rebuildKey$ = dart.privateName(actions$, "_ActionsMarker.rebuildKey");
  actions$._ActionsMarker = class _ActionsMarker extends framework.InheritedWidget {
    get dispatcher() {
      return this[dispatcher$0];
    }
    set dispatcher(value) {
      super.dispatcher = value;
    }
    get actions() {
      return this[actions$2];
    }
    set actions(value) {
      super.actions = value;
    }
    get rebuildKey() {
      return this[rebuildKey$];
    }
    set rebuildKey(value) {
      super.rebuildKey = value;
    }
    updateShouldNotify(oldWidget) {
      actions$._ActionsMarker.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L31, 781, 42, "oldWidget");
      return !dart.equals(this.rebuildKey, oldWidget.rebuildKey) || !dart.equals(oldWidget.dispatcher, this.dispatcher) || !dart.test(collections.mapEquals(core.Type, ActionOfIntent(), oldWidget.actions, this.actions));
    }
  };
  (actions$._ActionsMarker.new = function(opts) {
    let dispatcher = opts && 'dispatcher' in opts ? opts.dispatcher : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    if (actions == null) dart.nullFailed(L31, 768, 19, "actions");
    let rebuildKey = opts && 'rebuildKey' in opts ? opts.rebuildKey : null;
    if (rebuildKey == null) dart.nullFailed(L31, 769, 19, "rebuildKey");
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L31, 771, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[dispatcher$0] = dispatcher;
    this[actions$2] = actions;
    this[rebuildKey$] = rebuildKey;
    if (!(child != null)) dart.assertFailed(null, L31, 772, 16, "child != null");
    if (!(actions != null)) dart.assertFailed(null, L31, 773, 16, "actions != null");
    actions$._ActionsMarker.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = actions$._ActionsMarker.prototype;
  dart.addTypeTests(actions$._ActionsMarker);
  dart.addTypeCaches(actions$._ActionsMarker);
  dart.setMethodSignature(actions$._ActionsMarker, () => ({
    __proto__: dart.getMethods(actions$._ActionsMarker.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(actions$._ActionsMarker, L12);
  dart.setFieldSignature(actions$._ActionsMarker, () => ({
    __proto__: dart.getFields(actions$._ActionsMarker.__proto__),
    dispatcher: dart.finalFieldType(dart.nullable(actions$.ActionDispatcher)),
    actions: dart.finalFieldType(core.Map$(core.Type, actions$.Action$(actions$.Intent))),
    rebuildKey: dart.finalFieldType(core.Object)
  }));
  var enabled$2 = dart.privateName(actions$, "FocusableActionDetector.enabled");
  var focusNode$3 = dart.privateName(actions$, "FocusableActionDetector.focusNode");
  var autofocus$1 = dart.privateName(actions$, "FocusableActionDetector.autofocus");
  var actions$3 = dart.privateName(actions$, "FocusableActionDetector.actions");
  var shortcuts$2 = dart.privateName(actions$, "FocusableActionDetector.shortcuts");
  var onShowFocusHighlight$ = dart.privateName(actions$, "FocusableActionDetector.onShowFocusHighlight");
  var onShowHoverHighlight$ = dart.privateName(actions$, "FocusableActionDetector.onShowHoverHighlight");
  var onFocusChange$0 = dart.privateName(actions$, "FocusableActionDetector.onFocusChange");
  var mouseCursor$0 = dart.privateName(actions$, "FocusableActionDetector.mouseCursor");
  var child$46 = dart.privateName(actions$, "FocusableActionDetector.child");
  actions$.FocusableActionDetector = class FocusableActionDetector extends framework.StatefulWidget {
    get enabled() {
      return this[enabled$2];
    }
    set enabled(value) {
      super.enabled = value;
    }
    get focusNode() {
      return this[focusNode$3];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[autofocus$1];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get actions() {
      return this[actions$3];
    }
    set actions(value) {
      super.actions = value;
    }
    get shortcuts() {
      return this[shortcuts$2];
    }
    set shortcuts(value) {
      super.shortcuts = value;
    }
    get onShowFocusHighlight() {
      return this[onShowFocusHighlight$];
    }
    set onShowFocusHighlight(value) {
      super.onShowFocusHighlight = value;
    }
    get onShowHoverHighlight() {
      return this[onShowHoverHighlight$];
    }
    set onShowHoverHighlight(value) {
      super.onShowHoverHighlight = value;
    }
    get onFocusChange() {
      return this[onFocusChange$0];
    }
    set onFocusChange(value) {
      super.onFocusChange = value;
    }
    get mouseCursor() {
      return this[mouseCursor$0];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get child() {
      return this[child$46];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new actions$._FocusableActionDetectorState.new();
    }
  };
  (actions$.FocusableActionDetector.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let enabled = opts && 'enabled' in opts ? opts.enabled : true;
    if (enabled == null) dart.nullFailed(L31, 940, 10, "enabled");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(L31, 942, 10, "autofocus");
    let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let onShowFocusHighlight = opts && 'onShowFocusHighlight' in opts ? opts.onShowFocusHighlight : null;
    let onShowHoverHighlight = opts && 'onShowHoverHighlight' in opts ? opts.onShowHoverHighlight : null;
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : C1303 || CT.C1303;
    if (mouseCursor == null) dart.nullFailed(L31, 948, 10, "mouseCursor");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(L31, 949, 19, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[enabled$2] = enabled;
    this[focusNode$3] = focusNode;
    this[autofocus$1] = autofocus;
    this[shortcuts$2] = shortcuts;
    this[actions$3] = actions;
    this[onShowFocusHighlight$] = onShowFocusHighlight;
    this[onShowHoverHighlight$] = onShowHoverHighlight;
    this[onFocusChange$0] = onFocusChange;
    this[mouseCursor$0] = mouseCursor;
    this[child$46] = child;
    if (!(enabled != null)) dart.assertFailed(null, L31, 950, 16, "enabled != null");
    if (!(autofocus != null)) dart.assertFailed(null, L31, 951, 16, "autofocus != null");
    if (!(mouseCursor != null)) dart.assertFailed(null, L31, 952, 16, "mouseCursor != null");
    if (!(child != null)) dart.assertFailed(null, L31, 953, 16, "child != null");
    actions$.FocusableActionDetector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = actions$.FocusableActionDetector.prototype;
  dart.addTypeTests(actions$.FocusableActionDetector);
  dart.addTypeCaches(actions$.FocusableActionDetector);
  dart.setMethodSignature(actions$.FocusableActionDetector, () => ({
    __proto__: dart.getMethods(actions$.FocusableActionDetector.__proto__),
    createState: dart.fnType(actions$._FocusableActionDetectorState, [])
  }));
  dart.setLibraryUri(actions$.FocusableActionDetector, L12);
  dart.setFieldSignature(actions$.FocusableActionDetector, () => ({
    __proto__: dart.getFields(actions$.FocusableActionDetector.__proto__),
    enabled: dart.finalFieldType(core.bool),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    actions: dart.finalFieldType(dart.nullable(core.Map$(core.Type, actions$.Action$(actions$.Intent)))),
    shortcuts: dart.finalFieldType(dart.nullable(core.Map$(shortcuts$.LogicalKeySet, actions$.Intent))),
    onShowFocusHighlight: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    onShowHoverHighlight: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    onFocusChange: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    mouseCursor: dart.finalFieldType(mouse_cursor.MouseCursor),
    child: dart.finalFieldType(framework.Widget)
  }));
  var _canShowHighlight = dart.privateName(actions$, "_canShowHighlight");
  var _hovering = dart.privateName(actions$, "_hovering");
  var _focused = dart.privateName(actions$, "_focused");
  var _mouseRegionKey = dart.privateName(actions$, "_mouseRegionKey");
  var _updateHighlightMode$ = dart.privateName(actions$, "_updateHighlightMode");
  var _handleFocusHighlightModeChange = dart.privateName(actions$, "_handleFocusHighlightModeChange");
  var _mayTriggerCallback = dart.privateName(actions$, "_mayTriggerCallback");
  var _handleMouseEnter = dart.privateName(actions$, "_handleMouseEnter");
  var _handleMouseExit = dart.privateName(actions$, "_handleMouseExit");
  var _handleFocusChange = dart.privateName(actions$, "_handleFocusChange");
  var _canRequestFocus$0 = dart.privateName(actions$, "_canRequestFocus");
  var C1324;
  var C1325;
  var C1326;
  var C1327;
  var C1328;
  var C1323;
  var C1322;
  var C1331;
  var C1332;
  var C1333;
  var C1334;
  var C1335;
  var C1330;
  var C1329;
  var C1338;
  var C1339;
  var C1337;
  var C1336;
  var C1342;
  var C1343;
  var C1341;
  var C1340;
  actions$._FocusableActionDetectorState = class _FocusableActionDetectorState extends framework.State$(actions$.FocusableActionDetector) {
    initState() {
      super.initState();
      dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.fn(duration => {
        if (duration == null) dart.nullFailed(L31, 1013, 63, "duration");
        this[_updateHighlightMode$](focus_manager.FocusManager.instance.highlightMode);
      }, DurationTovoid()));
      focus_manager.FocusManager.instance.addHighlightModeListener(dart.bind(this, _handleFocusHighlightModeChange));
    }
    dispose() {
      focus_manager.FocusManager.instance.removeHighlightModeListener(dart.bind(this, _handleFocusHighlightModeChange));
      super.dispose();
    }
    [_updateHighlightMode$](mode) {
      if (mode == null) dart.nullFailed(L31, 1026, 48, "mode");
      this[_mayTriggerCallback]({task: dart.fn(() => {
          switch (focus_manager.FocusManager.instance.highlightMode) {
            case C1075 || CT.C1075:
            {
              this[_canShowHighlight] = false;
              break;
            }
            case C1076 || CT.C1076:
            {
              this[_canShowHighlight] = true;
              break;
            }
            default:
            {
              dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
            }
          }
        }, VoidTovoid())});
    }
    [_handleFocusHighlightModeChange](mode) {
      if (mode == null) dart.nullFailed(L31, 1043, 59, "mode");
      if (!dart.test(this.mounted)) {
        return;
      }
      this[_updateHighlightMode$](mode);
    }
    [_handleMouseEnter](event) {
      if (event == null) dart.nullFailed(L31, 1051, 44, "event");
      if (!dart.test(this[_hovering])) {
        this[_mayTriggerCallback]({task: dart.fn(() => {
            this[_hovering] = true;
          }, VoidTovoid())});
      }
    }
    [_handleMouseExit](event) {
      if (event == null) dart.nullFailed(L31, 1059, 42, "event");
      if (dart.test(this[_hovering])) {
        this[_mayTriggerCallback]({task: dart.fn(() => {
            this[_hovering] = false;
          }, VoidTovoid())});
      }
    }
    [_handleFocusChange](focused) {
      let t96;
      if (focused == null) dart.nullFailed(L31, 1068, 32, "focused");
      if (!dart.equals(this[_focused], focused)) {
        this[_mayTriggerCallback]({task: dart.fn(() => {
            this[_focused] = focused;
          }, VoidTovoid())});
        t96 = this.widget.onFocusChange;
        t96 == null ? null : t96(this[_focused]);
      }
    }
    [_mayTriggerCallback](opts) {
      let t96, t96$, t96$0;
      let task = opts && 'task' in opts ? opts.task : null;
      let oldWidget = opts && 'oldWidget' in opts ? opts.oldWidget : null;
      const shouldShowHoverHighlight = target => {
        if (target == null) dart.nullFailed(L31, 1084, 59, "target");
        return dart.test(this[_hovering]) && dart.test(target.enabled) && dart.test(this[_canShowHighlight]);
      };
      dart.fn(shouldShowHoverHighlight, FocusableActionDetectorTobool());
      const canRequestFocus = target => {
        let t96, t96$;
        if (target == null) dart.nullFailed(L31, 1088, 50, "target");
        let mode = (t96$ = (t96 = media_query.MediaQuery.maybeOf(this.context), t96 == null ? null : t96.navigationMode), t96$ == null ? media_query.NavigationMode.traditional : t96$);
        switch (mode) {
          case C775 || CT.C775:
          {
            return target.enabled;
          }
          case C776 || CT.C776:
          {
            return true;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      };
      dart.fn(canRequestFocus, FocusableActionDetectorTobool());
      const shouldShowFocusHighlight = target => {
        if (target == null) dart.nullFailed(L31, 1098, 59, "target");
        return dart.test(this[_focused]) && dart.test(this[_canShowHighlight]) && dart.test(canRequestFocus(target));
      };
      dart.fn(shouldShowFocusHighlight, FocusableActionDetectorTobool());
      if (!!dart.equals(dart.nullCheck(binding$.SchedulerBinding.instance).schedulerPhase, binding$.SchedulerPhase.persistentCallbacks)) dart.assertFailed(null, L31, 1102, 12, "SchedulerBinding.instance!.schedulerPhase != SchedulerPhase.persistentCallbacks");
      let oldTarget = (t96 = oldWidget, t96 == null ? this.widget : t96);
      let didShowHoverHighlight = shouldShowHoverHighlight(oldTarget);
      let didShowFocusHighlight = shouldShowFocusHighlight(oldTarget);
      if (task != null) {
        task();
      }
      let doShowHoverHighlight = shouldShowHoverHighlight(this.widget);
      let doShowFocusHighlight = shouldShowFocusHighlight(this.widget);
      if (!dart.equals(didShowFocusHighlight, doShowFocusHighlight)) {
        t96$ = this.widget.onShowFocusHighlight;
        t96$ == null ? null : t96$(doShowFocusHighlight);
      }
      if (!dart.equals(didShowHoverHighlight, doShowHoverHighlight)) {
        t96$0 = this.widget.onShowHoverHighlight;
        t96$0 == null ? null : t96$0(doShowHoverHighlight);
      }
    }
    didUpdateWidget(oldWidget) {
      actions$.FocusableActionDetector.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(L31, 1120, 48, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.enabled, oldWidget.enabled)) {
        dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.fn(duration => {
          if (duration == null) dart.nullFailed(L31, 1123, 65, "duration");
          this[_mayTriggerCallback]({oldWidget: oldWidget});
        }, DurationTovoid()));
      }
    }
    get [_canRequestFocus$0]() {
      let t96, t96$;
      let mode = (t96$ = (t96 = media_query.MediaQuery.maybeOf(this.context), t96 == null ? null : t96.navigationMode), t96$ == null ? media_query.NavigationMode.traditional : t96$);
      switch (mode) {
        case C775 || CT.C775:
        {
          return this.widget.enabled;
        }
        case C776 || CT.C776:
        {
          return true;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    build(context) {
      if (context == null) dart.nullFailed(L31, 1147, 29, "context");
      let child = new basic.MouseRegion.new({key: this[_mouseRegionKey], onEnter: dart.bind(this, _handleMouseEnter), onExit: dart.bind(this, _handleMouseExit), cursor: this.widget.mouseCursor, child: new focus_scope.Focus.new({focusNode: this.widget.focusNode, autofocus: this.widget.autofocus, canRequestFocus: this[_canRequestFocus$0], onFocusChange: dart.bind(this, _handleFocusChange), child: this.widget.child, $creationLocationd_0dea112b090073317d4: C1322 || CT.C1322}), $creationLocationd_0dea112b090073317d4: C1329 || CT.C1329});
      if (dart.test(this.widget.enabled) && this.widget.actions != null && dart.test(dart.nullCheck(this.widget.actions)[$isNotEmpty])) {
        child = new actions$.Actions.new({actions: dart.nullCheck(this.widget.actions), child: child, $creationLocationd_0dea112b090073317d4: C1336 || CT.C1336});
      }
      if (dart.test(this.widget.enabled) && this.widget.shortcuts != null && dart.test(dart.nullCheck(this.widget.shortcuts)[$isNotEmpty])) {
        child = new shortcuts$.Shortcuts.new({shortcuts: dart.nullCheck(this.widget.shortcuts), child: child, $creationLocationd_0dea112b090073317d4: C1340 || CT.C1340});
      }
      return child;
    }
  };
  (actions$._FocusableActionDetectorState.new = function() {
    this[_canShowHighlight] = false;
    this[_hovering] = false;
    this[_focused] = false;
    this[_mouseRegionKey] = GlobalKeyOfStateOfStatefulWidget().new();
    actions$._FocusableActionDetectorState.__proto__.new.call(this);
    ;
  }).prototype = actions$._FocusableActionDetectorState.prototype;
  dart.addTypeTests(actions$._FocusableActionDetectorState);
  dart.addTypeCaches(actions$._FocusableActionDetectorState);
  dart.setMethodSignature(actions$._FocusableActionDetectorState, () => ({
    __proto__: dart.getMethods(actions$._FocusableActionDetectorState.__proto__),
    [_updateHighlightMode$]: dart.fnType(dart.void, [focus_manager.FocusHighlightMode]),
    [_handleFocusHighlightModeChange]: dart.fnType(dart.void, [focus_manager.FocusHighlightMode]),
    [_handleMouseEnter]: dart.fnType(dart.void, [events.PointerEnterEvent]),
    [_handleMouseExit]: dart.fnType(dart.void, [events.PointerExitEvent]),
    [_handleFocusChange]: dart.fnType(dart.void, [core.bool]),
    [_mayTriggerCallback]: dart.fnType(dart.void, [], {oldWidget: dart.nullable(actions$.FocusableActionDetector), task: dart.nullable(dart.fnType(dart.void, []))}, {}),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(actions$._FocusableActionDetectorState, () => ({
    __proto__: dart.getGetters(actions$._FocusableActionDetectorState.__proto__),
    [_canRequestFocus$0]: core.bool
  }));
  dart.setLibraryUri(actions$._FocusableActionDetectorState, L12);
  dart.setFieldSignature(actions$._FocusableActionDetectorState, () => ({
    __proto__: dart.getFields(actions$._FocusableActionDetectorState.__proto__),
    [_canShowHighlight]: dart.fieldType(core.bool),
    [_hovering]: dart.fieldType(core.bool),
    [_focused]: dart.fieldType(core.bool),
    [_mouseRegionKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))
  }));
  actions$.DoNothingIntent = class DoNothingIntent extends actions$.Intent {
    static new() {
      return C43 || CT.C43;
    }
  };
  (actions$.DoNothingIntent.__ = function() {
    actions$.DoNothingIntent.__proto__.new.call(this);
    ;
  }).prototype = actions$.DoNothingIntent.prototype;
  dart.addTypeTests(actions$.DoNothingIntent);
  dart.addTypeCaches(actions$.DoNothingIntent);
  dart.setLibraryUri(actions$.DoNothingIntent, L12);
  var C1344;
  actions$.DoNothingAndStopPropagationIntent = class DoNothingAndStopPropagationIntent extends actions$.Intent {
    static new() {
      return C1344 || CT.C1344;
    }
  };
  (actions$.DoNothingAndStopPropagationIntent.__ = function() {
    actions$.DoNothingAndStopPropagationIntent.__proto__.new.call(this);
    ;
  }).prototype = actions$.DoNothingAndStopPropagationIntent.prototype;
  dart.addTypeTests(actions$.DoNothingAndStopPropagationIntent);
  dart.addTypeCaches(actions$.DoNothingAndStopPropagationIntent);
  dart.setLibraryUri(actions$.DoNothingAndStopPropagationIntent, L12);
  var _consumesKey = dart.privateName(actions$, "_consumesKey");
  actions$.DoNothingAction = class DoNothingAction extends actions$.Action$(actions$.Intent) {
    consumesKey(intent) {
      actions$.Intent.as(intent);
      if (intent == null) dart.nullFailed(L31, 1244, 27, "intent");
      return this[_consumesKey];
    }
    invoke(intent) {
      actions$.Intent.as(intent);
      if (intent == null) dart.nullFailed(L31, 1248, 22, "intent");
    }
  };
  (actions$.DoNothingAction.new = function(opts) {
    let consumesKey = opts && 'consumesKey' in opts ? opts.consumesKey : true;
    if (consumesKey == null) dart.nullFailed(L31, 1241, 25, "consumesKey");
    this[_consumesKey] = consumesKey;
    actions$.DoNothingAction.__proto__.new.call(this);
    ;
  }).prototype = actions$.DoNothingAction.prototype;
  dart.addTypeTests(actions$.DoNothingAction);
  dart.addTypeCaches(actions$.DoNothingAction);
  dart.setMethodSignature(actions$.DoNothingAction, () => ({
    __proto__: dart.getMethods(actions$.DoNothingAction.__proto__),
    invoke: dart.fnType(dart.void, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(actions$.DoNothingAction, L12);
  dart.setFieldSignature(actions$.DoNothingAction, () => ({
    __proto__: dart.getFields(actions$.DoNothingAction.__proto__),
    [_consumesKey]: dart.finalFieldType(core.bool)
  }));
  actions$.ActivateIntent = class ActivateIntent extends actions$.Intent {};
  (actions$.ActivateIntent.new = function() {
    actions$.ActivateIntent.__proto__.new.call(this);
    ;
  }).prototype = actions$.ActivateIntent.prototype;
  dart.addTypeTests(actions$.ActivateIntent);
  dart.addTypeCaches(actions$.ActivateIntent);
  dart.setLibraryUri(actions$.ActivateIntent, L12);
  actions$.ActivateAction = class ActivateAction extends actions$.Action$(actions$.ActivateIntent) {};
  (actions$.ActivateAction.new = function() {
    actions$.ActivateAction.__proto__.new.call(this);
    ;
  }).prototype = actions$.ActivateAction.prototype;
  dart.addTypeTests(actions$.ActivateAction);
  dart.addTypeCaches(actions$.ActivateAction);
  dart.setLibraryUri(actions$.ActivateAction, L12);
  actions$.SelectIntent = class SelectIntent extends actions$.Intent {};
  (actions$.SelectIntent.new = function() {
    actions$.SelectIntent.__proto__.new.call(this);
    ;
  }).prototype = actions$.SelectIntent.prototype;
  dart.addTypeTests(actions$.SelectIntent);
  dart.addTypeCaches(actions$.SelectIntent);
  dart.setLibraryUri(actions$.SelectIntent, L12);
  actions$.SelectAction = class SelectAction extends actions$.Action$(actions$.SelectIntent) {};
  (actions$.SelectAction.new = function() {
    actions$.SelectAction.__proto__.new.call(this);
    ;
  }).prototype = actions$.SelectAction.prototype;
  dart.addTypeTests(actions$.SelectAction);
  dart.addTypeCaches(actions$.SelectAction);
  dart.setLibraryUri(actions$.SelectAction, L12);
  actions$._getParent = function _getParent(context) {
    if (context == null) dart.nullFailed(L31, 23, 38, "context");
    let parent = null;
    let parent$35isSet = false;
    function parent$35get() {
      return parent$35isSet ? parent : dart.throw(new _internal.LateError.localNI("parent"));
    }
    dart.fn(parent$35get, VoidToBuildContext());
    function parent$35set(t98) {
      if (t98 == null) dart.nullFailed(L31, 24, 27, "null");
      if (parent$35isSet)
        dart.throw(new _internal.LateError.localAI("parent"));
      else {
        parent$35isSet = true;
        return parent = t98;
      }
    }
    dart.fn(parent$35set, BuildContextTodynamic());
    context.visitAncestorElements(dart.fn(ancestor => {
      if (ancestor == null) dart.nullFailed(L31, 25, 42, "ancestor");
      parent$35set(ancestor);
      return false;
    }, ElementTobool()));
    return parent$35get();
  };
  dart.trackLibraries("packages/flutter/src/widgets/widget_span.dart", {
    "package:flutter/src/widgets/widget_span.dart": widget_span,
    "package:flutter/src/widgets/widget_inspector.dart": widget_inspector,
    "package:flutter/src/widgets/title.dart": title$,
    "package:flutter/src/widgets/shortcuts.dart": shortcuts$,
    "package:flutter/src/widgets/semantics_debugger.dart": semantics_debugger,
    "package:flutter/src/widgets/router.dart": router,
    "package:flutter/src/widgets/performance_overlay.dart": performance_overlay$,
    "package:flutter/src/widgets/modal_barrier.dart": modal_barrier,
    "package:flutter/src/widgets/routes.dart": routes,
    "package:flutter/src/widgets/pages.dart": pages,
    "package:flutter/src/widgets/heroes.dart": heroes,
    "package:flutter/src/widgets/navigator.dart": navigator$,
    "package:flutter/src/widgets/table.dart": table$,
    "package:flutter/src/widgets/inherited_model.dart": inherited_model,
    "package:flutter/src/widgets/visibility.dart": visibility,
    "package:flutter/src/widgets/transitions.dart": transitions,
    "package:flutter/src/widgets/overlay.dart": overlay$,
    "package:flutter/src/widgets/text_selection.dart": text_selection,
    "package:flutter/src/widgets/inherited_theme.dart": inherited_theme,
    "package:flutter/src/widgets/text.dart": text,
    "package:flutter/src/widgets/viewport.dart": viewport,
    "package:flutter/src/widgets/scroll_configuration.dart": scroll_configuration,
    "package:flutter/src/widgets/restoration_properties.dart": restoration_properties,
    "package:flutter/src/widgets/restoration.dart": restoration$,
    "package:flutter/src/widgets/scroll_position_with_single_context.dart": scroll_position_with_single_context,
    "package:flutter/src/widgets/scroll_activity.dart": scroll_activity,
    "package:flutter/src/widgets/page_storage.dart": page_storage,
    "package:flutter/src/widgets/scroll_position.dart": scroll_position,
    "package:flutter/src/widgets/scroll_notification.dart": scroll_notification,
    "package:flutter/src/widgets/overscroll_indicator.dart": overscroll_indicator,
    "package:flutter/src/widgets/scroll_physics.dart": scroll_physics,
    "package:flutter/src/widgets/ticker_provider.dart": ticker_provider,
    "package:flutter/src/widgets/scroll_context.dart": scroll_context,
    "package:flutter/src/widgets/scroll_controller.dart": scroll_controller,
    "package:flutter/src/widgets/primary_scroll_controller.dart": primary_scroll_controller,
    "package:flutter/src/widgets/gesture_detector.dart": gesture_detector,
    "package:flutter/src/widgets/scrollable.dart": scrollable$,
    "package:flutter/src/widgets/scroll_aware_image_provider.dart": scroll_aware_image_provider,
    "package:flutter/src/widgets/media_query.dart": media_query,
    "package:flutter/src/widgets/disposable_build_context.dart": disposable_build_context,
    "package:flutter/src/widgets/image.dart": image$,
    "package:flutter/src/widgets/container.dart": container,
    "package:flutter/src/widgets/localizations.dart": localizations,
    "package:flutter/src/widgets/sliver.dart": sliver$,
    "package:flutter/src/widgets/notification_listener.dart": notification_listener,
    "package:flutter/src/widgets/automatic_keep_alive.dart": automatic_keep_alive,
    "package:flutter/src/widgets/autofill.dart": autofill$,
    "package:flutter/src/widgets/editable_text.dart": editable_text,
    "package:flutter/src/widgets/focus_traversal.dart": focus_traversal,
    "package:flutter/src/widgets/inherited_notifier.dart": inherited_notifier,
    "package:flutter/src/widgets/focus_scope.dart": focus_scope,
    "package:flutter/src/widgets/focus_manager.dart": focus_manager,
    "package:flutter/src/widgets/framework.dart": framework,
    "package:flutter/src/widgets/debug.dart": debug$0,
    "package:flutter/src/widgets/banner.dart": banner,
    "package:flutter/src/widgets/app.dart": app,
    "package:flutter/src/widgets/binding.dart": binding$5,
    "package:flutter/src/widgets/basic.dart": basic,
    "package:flutter/src/widgets/actions.dart": actions$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["widget_span.dart","widget_inspector.dart","framework.dart","binding.dart","title.dart","shortcuts.dart","actions.dart","inherited_notifier.dart","semantics_debugger.dart","router.dart","performance_overlay.dart","modal_barrier.dart","transitions.dart","gesture_detector.dart","navigator.dart","routes.dart","pages.dart","heroes.dart","ticker_provider.dart","restoration.dart","table.dart","inherited_model.dart","visibility.dart","overlay.dart","text_selection.dart","../foundation/change_notifier.dart","inherited_theme.dart","text.dart","viewport.dart","scroll_configuration.dart","restoration_properties.dart","editable_text.dart","scroll_position.dart","scroll_position_with_single_context.dart","scroll_activity.dart","page_storage.dart","notification_listener.dart","scroll_notification.dart","overscroll_indicator.dart","scroll_physics.dart","scroll_context.dart","scroll_controller.dart","primary_scroll_controller.dart","scrollable.dart","scroll_aware_image_provider.dart","media_query.dart","disposable_build_context.dart","image.dart","container.dart","localizations.dart","sliver.dart","automatic_keep_alive.dart","autofill.dart","focus_traversal.dart","focus_scope.dart","focus_manager.dart","debug.dart","banner.dart","app.dart","basic.dart"],"names":[],"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BAAoB,UAAU;AAC+C,MAAnF,AAAW,UAAD,KAAK,oCAAwB,aAAa,+BAAyB;AACkB,MAA/F,AAAW,UAAD,KAAK,wCAA4B,iBAAiB,mCAA6B;AACR,MAAjF,AAAW,UAAD,KAAK,wCAA4B,UAAU,4BAAsB;AACW,MAAtF,AAAW,UAAD,KAAK,oCAAe,mBAAmB,qCAA+B;AACd,MAAlE,AAAW,UAAD,KAAK,iCAAY,YAAY,8BAAwB;AACM,MAArE,AAAW,UAAD,KAAK,iCAAY,YAAY,8BAAwB;AACmB,MAAlF,AAAW,UAAD,KAAK,sCAA0B,WAAW,6BAAuB;AACW,MAAtF,AAAW,UAAD,KAAK,sCAA0B,aAAa,+BAAyB;AACqB,MAApG,AAAW,UAAD,KAAK,+CAAmC,gBAAgB,kCAA4B;AACiB,MAA/G,AAAW,UAAD,KAAK,kDAAsC,oBAAoB,sCAAgC;AACH,MAAtG,AAAW,UAAD,KAAK,+CAAmC,iBAAiB,mCAA6B;AACS,MAAzG,AAAW,UAAD,KAAK,kDAAsC,iBAAiB,mCAA6B;AACkB,MAArH,AAAW,UAAD,KAAK,oDAAwC,sBAAsB,wCAAkC;IACjH;;;;QAv/BO;QACS;;QACA;;QACT;;QACA;;QACA;;QACA;;QACY;QACA;QACZ;;QACS;;QACF;QACE;;QACA;;QACT;;QACA;QACA;QACA;QACA;QACA;QACA;;QACA;;QACA;QACA;;QACA;;QACC;QACD;;QACA;QACA;QACU;QACV;QACA;;QACA;QACA;QACA;QACA;QACA;QACA;QACqB;QACrB;QACA;;QACA;;QACA;QACA;QACA;;QACA;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;QACA;QACA;QACA;;QAMA;QACA;;QACA;;IA/DS;IACA;IACT;IACA;IACA;IACA;IAGA;IACS;IAEA;IACA;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAMA;IACA;IACA;UACK,AAAW,UAAD,IAAI;UACd,AAAU,SAAD,IAAI;UACb,AAA2B,kBAAT,IAAI,QAAQ,AAAmB,AAAO,kBAAR,YAAW;UAC3D,AAAY,WAAD,IAAI;UACf,AAAY,WAAD,IAAI;IACN,0BAAkB,MAAhB,eAAe,SAAf,iBAAoB,WAAW,IAAmB,sCAA2B;IAC/E,0BAAkB,OAAhB,eAAe,UAAf,iBAAoB,WAAW,IAAmB,sCAA2B;UACxF,AAAkB,iBAAD,IAAI;UACrB,AAAqB,oBAAD,IAAI;UACxB,AAA2B,0BAAD,IAAI;UAC9B,AAAS,QAAD,IAAI;UACZ,AAAU,SAAD,IAAI;UACb,AAAM,KAAD,IAAI;UACT,AAAY,WAAD,IAAI;UACf,AAAsB,qBAAD,IAAI;UACzB,AAAqB,oBAAD,IAAI;UACxB,AAAsB,qBAAD,IAAI;UACzB,AAAqB,oBAAD,IAAI;UACxB,AAAoB,mBAAD,IAAI;UACvB,AAAU,SAAD,IAAI;UACb,AAAS,AAAQ,QAAT,IAAI,QAAiB,aAAT,QAAQ,IAAG;UAC/B,AAAS,AAAQ,QAAT,IAAI,QAAiB,aAAT,QAAQ,IAAG;UAEnC,AAAS,AAA+B,QAAhC,IAAI,QAAU,AAAS,QAAD,IAAI,QAAmB,aAAT,QAAQ,kBAAI,QAAQ,sBACjE;UAEK,AAAQ,OAAD,IAAI;UAEP,WAAR,OAAO,KAAK,AAAS,QAAD,IAAI,QAAQ,AAAS,QAAD,IAAI,yBAC7C;UAEkB,WAAZ,WAAW,KAAI,AAAS,QAAD,KAAI,sBAAG;UAC/B,AAAU,SAAD,IAAI;UACb,AAAuB,sBAAD,IAAI;UAC1B,AAAc,aAAD,IAAI;UACjB,AAAkB,iBAAD,IAAI;UACrB,AAAe,cAAD,IAAI;UAClB,AAAa,YAAD,IAAI;UAEX,WAAT,QAAQ,KAAI,AAAc,aAAD,IAAI,yBAC9B;IAEU,oBAAE,UAAU;IACX,uBAAe,QAAb,YAAY,WAAZ,OAAgB,8DAAkC,aAAa,YAAY,QAAQ;IAClF,yBAAE,AAAS,QAAD,KAAI,IACJ;;AACU;AAC5B,wBAAmB,MAAhB,eAAe,SAAf;AAAH;;WAEF,eAAe;IACV,qBAAa,MAAX,UAAU,SAAV,OAAc,WAAC,QAAQ;AACpC,8DAAW,GAAG;;EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAwoBR,mDAAwB;YAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2Qd;IAA6B;;;AAA7B;;IAA6B;;AAWX;IAAqB;;AAkBvB,YAAO,oBAAI,AAAO;IAAQ;;;AAU1C;IAA8B;;;AAA9B;;IAA8B;;AAG7B,YAAA,AAAO,AAAU;IAAQ;;AAEzB,YAAA,AAAO,AAAY,qCAAY,AAA8B;IAAM;;AAGtE,YAA0B,WAA1B,AAAO,AAAe,8CAAQ,AAAO;IAAQ;;AAG5C,YAAA,AAAO,AAAe;IAAI;;AAGzB,YAA4B,WAA5B,AAAO,AAAe,gDAAU,AAAO;IAAQ;;AAG3C,YAAA,AAAO,AAAe;IAAS;;AAKxD,MAFF,cAAS;;IAGX;;;AAMmB,MAAX;AACkD,YAAxD;2BAAkB,0BAAY;AAC2B,MAAzD,AAAO,AAAW,6CAAY;AACqB,MAAnD,yBAAmB,AAAO,AAAU,6BAAO;AACM,MAAjD,AAAO,AAAU,4CAAY;AACoC,MAAjE,2BAA4C,OAAxB,AAAO,sCAAA,OAAoB;AAC6B,MAA3D,AAAE,eAAnB,qCAA+B;;AAAyC,cAApC;6BAAmB;;AACkC,MAAzF,sCAAgC,yDAA2B,gBAAgB;AACd,MAA7D,AAA8B,0DAAY;AACuB,MAAjE,uCAAiC,yDAA2B;AACU,MAAtE,AAA+B,2DAAY;AACQ,MAAnD,AAA0B,wCAAQ,AAAO;IAC3C;;;AAI+B,MAAvB;AAEoB,6BAAiC,2BAAG;AAC9D,uBAAI,2BAAwB,gBAAgB;AACG,cAA7C;6BAAuB,eAAW;AACM,QAAxC,8BAAwB,gBAAgB;AACR,eAAhC,gBAAgB;uBAAhB,OAAkB,cAAS;AAC8C,QAAzE,6BAA4C,UAArB,yCAAwB;;AAGjD,qBAAK,kCAAiB,AAAO;AACP,QAApB,sBAAgB;AAKd,QAJuB,AAAE,eAAV,yDAA+B;cAAC;AAC/C,wBAAI;AACgD,YAAvC,AAAY,0BAAT,wBAAmB,AAAO;;;;IAIhD;oBAGkC;;;;AACA,MAA1B,sBAAgB,SAAS;AAC/B,uBAAI,AAAO,wBAAc,AAAU,SAAD;AAC+B,QAA/D,AAAU,AAAW,SAAZ,qCAA2B;AACqB,QAAzD,AAAO,AAAW,6CAAY;AACK,QAAnC;;AAEF,uBAAI,AAAO,AAAW,kCAAa,AAAU,AAAW,SAAZ;AACT,cAAjC;6BAAmB,WAAO;;AAEmC,aAA/D;4BAAmB,sBAAiB,AAAO;AAC8B,MAAzE,6BAA4C,UAArB,yCAAwB;AAE/C,uBAAI,AAAO,uBAAa,AAAU,SAAD;AACwB,QAAvD,AAAU,AAAU,SAAX,oCAA0B;AACT,gBAA1B;+BAAkB;AACiC,QAAnD,yBAAmB,AAAO,AAAU,6BAAO;AACM,QAAjD,AAAO,AAAU,4CAAY;AACZ,QAAjB;;AAEF,qBAAK;AAC4B,QAA/B;;AAEA,sBAAI,AAAU,SAAD,wBAAa;AACF,UAAtB;;;AAIJ,4BAAc;AACZ,yBAAI,AAAU,SAAD,WAAa,AAAO;AAC2B,UAAtC,AAAE,eAAtB,yCAAmC;;;AAIvC,uBAAI,AAAO,mBAAS,AAAU,SAAD;AACX,oBAAQ,AAAO;AAG/B,sBAAI;AAOD,UANmB,AAAE,eAAtB,kDACc,AAAM,KAAD,uBACP,AAAM,KAAD,uBACH,AAAM,KAAD,4BACF,mCACJ,AAAO;;;AAIxB,oBAAI,AAAO,2CAAoB,sBAAyD,qBAAzC,AAAO,+CAAA,OAAmB,eAAS,QAAS;AAC/D,gBAA1B;+BAAkB;;IAEtB;;;AAI+C,YAA7C;2BAAuB,eAAW;AAC0B,MAA5D,AAAO,AAAW,gDAAe;AAC+B,MAAhE,AAA8B,6DAAe;AAC4B,MAAzE,AAA+B,8DAAe;AACf,MAA/B;AACA,WAAO,WAAC;AACU,MAAlB;AACA,YAAO,AAAa,sBAAG;AACK,aAA5B;4BAAmB;AACK,MAAxB,0BAAoB;AACM,MAAV,AAAE,eAAlB;AACoD,MAApD,AAAO,AAAU,+CAAe;AACa,MAAtB,AAAE,eAAV,kDAAyB;AACmB,cAA3D;6BAAkB,+BAAe;AACN,cAA3B;6BAAkB;AACH,MAAT;AACN,YAAuB,aAAhB,0BAAmB,sBAAG,AAA0C,sCAAhB;IACzD;;AAgBgD;IAAM;;UAGb;AAOvC,qBAAK;AACH;;AAGF,oBAAI,AAAO;AAG0C,QAAnD,QAAQ,AAAO,oCAAoB,AAAM,KAAD;;AAEF,MAAxC,yCAAmC,KAAK;AAExC,UAAU,YAAN,KAAK,EAAI;AAIX;;AAGF,UAAI,AAAM,AAAK,KAAN,SAAS,AAAO,uBAAwB,YAAhB,AAAM,KAAD,YAAc,AAAO;AAE+B,QAAxF,8BAAwB,AAAM,KAAD,YAAY,qBAAsC;;AAElE,QAAb;AAC8B,QAA9B,gCAA0B;AAE1B,sBAAI;AACkB,UAApB;AACA,wBAAI,AAAO,4BAAe,AAAM,AAAK,AAAO,KAAb,iBAAgB,AAAO,AAAK,AAAO,6BAAE;AACD,YAAjE;AACqD,YAArD,gCAA0B,AAAO,AAAU;;;AAItB,QAAzB,yBAAmB,KAAK;;AAG1B,oBAAI;AAGqC,QAAvC,wCAAiC;AACd,QAAnB;;IAEJ;;UAGmC;AACjC,cAAQ,MAAM;;;AAKV,yBAAK,qBACH,AAA6C,uBAA5B,MAAM,kBAAiB;AAC1C;;;;;;;;;AAO6C,UAA7C,uBAAiB,MAAM,kBAAiB;AACxC;;;;;;;;;AAS8C,UAA9C,uBAAiB,MAAM,kBAAiB;AACxC;;;;AAzBJ;;;IA2BF;0BAGkC,QAA6B;UAA7B;UAA6B;AACpB,MAAf,AAAC,eAA3B,AAAO,iCAAqB,MAAM,EAAE,IAAI;IAC1C;;AAkBoC,+BAAO,KAAsC,aAAnC,AAAe,2CAAsB;IAAE;;UAGpC;AAC/C,cAAO,AAAM,KAAD;;;AAER,wBAAI,AAA+B;AACI,YAArC,AAA+B;AACH,YAA5B;;AAI+B,UAAjC,2BAAqB,AAAM,KAAD;AAEP,oCAAsB,iCAA6C,AAAE,eAA1B,AAAe;AACH,UAA1E,wBAAkB,AAAe,yCAAqB,mBAAmB;AAEL,UAApE,2BAAoC,AAAE,AAAO,eAAxB,mCAA0B;AACR,UAAvC,0BAAoB,mBAAmB;AAC+C,UAAtF,AAAe,sCAAkB,AAAM,KAAD,QAA0B,eAAlB,2BAAsC,eAAjB;AACnE;;;;AAEa,8BAA4B,AAAE,eAAd,AAAM,KAAD,cAA6B,eAAlB;AAChC,gCAAiC,AAAE,AAAO,AAAgB,eAAxC,mCAA0B,aAAa,OAAG;AAEgB,UAAzF,2BAAqB,AAAe,yDAAqC,eAAe;AACyC,UAAjI,0BAAoB,AAAe,wCAAoB,AAAe,kCAAgC,AAAE,eAApB,+BAAsB;AACpB,UAAtF,AAAe,sCAAkB,AAAM,KAAD,QAA0B,eAAlB,2BAAsC,eAAjB;AACnE;;;;AAGA,cAAI,2BAAqB,QAAQ,4BAAsB;AACX,YAA1C,AAA+B,6CAAQ;AACoE,YAA3G,AAA+B,+CAAU,gBAAe,iEAAwC;;AAElG;;;;AA/BJ;;;IAiCF;;AAGe,0BAAgB,AAAe,AAAyC,AAAW,yCAAd,eAAjB,0CAAiC;AAClG,oBAAI,AAA+B;AAC+D,QAAhG,AAAe,sCAA0C,wCAAK,aAAa,EAAmB,eAAjB;AAC7E,YAAqB,AAAE,eAAnB,mCAAqD,AAAE,eAA1B,AAAe,2CAE9C,AAAqI,8BAA/F,kDAAmC,AAAE,eAAnB,mCAA4B,qBAAsC;AACtG,QAAtB,wBAAkB;AACM,QAAxB,0BAAoB;AACK,QAAzB,2BAAqB;AACI,QAAzB,2BAAqB;;AAER,wBAAY,AAA+B;AAC3C,oBAA0E,eAAlE,cAAgC,AAAE,eAApB,8BAAwB,AAAc,aAAD,KAAK,SAAS;AACzE,oBAA0E,eAAlE,cAAgC,AAAE,eAApB,8BAAwB,AAAc,aAAD,KAAK,SAAS;AAE+C,QAArI,AAAe,sCAA0C,2CAAQ,kBAAO,KAAK,EAAE,KAAK,GAAoB,eAAjB,2CAAoC,SAAS;;IAExI;uBAEsC;;;UAAuB;;AAE3D,UAAI,AAAO,iCAAqB;AAC9B;AAC6B,UAAH,AAAC,eAAzB,AAAO;;cACA;cAAW;AAAlB;AAME,YALW,oCAAY,mDACZ,SAAS,SACb,KAAK,WACH,oBACA,oCAAiB,AAA6C,kDAAP,MAAM;;;;;AAOxC,QAAlC,AAAO,AAAW;AAClB,sBAAI,aAAa;AACf,kBAAQ,MAAM;;;;;;;;;;;;;AAYgB,cAA1B,AAAO,AAAU;AACjB;;;;AAE4B,cAA5B,AAAO,AAAU;AACjB;;;;AAEgC,cAAhC,AAAO,AAAU;AACjB;;;;AAnBJ;;;;;AAyBJ;AACuC,cAArC,AAAO;sBAAA,OAAa,IAAK,AAAO;;YACzB;YAAW;AAAlB;AAME,UALW,oCAAY,mDACZ,SAAS,SACb,KAAK,WACH,oBACA,oCAAiB,AAAuC,4CAAP,MAAM;;;;IAGtE;;AAWsB,MAApB,wBAAgB,aAAhB,yBAAmB;IACrB;;AAQsB,MAApB,wBAAgB,aAAhB,yBAAmB;AACnB,YACkB,aAAhB,0BAAmB,sBACnB;AAEiC,MAAnC;IACF;;AAGE,UAAoB,aAAhB,yBAAkB,gBAAM,4BAC1B;AACqB,uBAAa;AACpC,UAAe,YAAX,UAAU,EAAI,yCAChB;AAC+C,MAA7B,AAAE,eAAtB,4CAAsC,UAAU;AACH,MAA7C,yCAAmC,UAAU;IAC/C;;AAE+B,YAAA,AAAO,AAAW;IAAK;;UAC1B;AACK,MAA/B,AAAO,AAAW,+BAAQ,KAAK;IACjC;;AAEsB,YAAA,AAAO,AAAU;IAAQ;;AACtB,YAAA,AAAO,AAAS,0BAAG;IAAC;;UAWD;AAC1C,qBAAsB,AAAE,AAAS,eAA5B,2DACH,MAAO,2CAAwC,AAAE,eAAnB,uCAAiC,IAAI;AAE1D,yBAAe,AAAe;AAC5B;AACA;AAEb,qBAAK;AAMsD,QALzD,mBAA8B,aAAX,AAAK,IAAD,wBAAU,AAAa,YAAD,UAEtB,AAAI,aAAvB,AAAa,YAAD,UAAS,iBAAI,AAAK,AAAO,IAAR,cAG7B,AAAI,YAAiB,aAAX,AAAK,IAAD,uBAAS,AAAa,YAAD,SAAQ,AAAK,IAAD;AACpB,QAA/B;;AAKW,2BAAoB,gCACrB,AAAK,IAAD,gBACL,AAAK,IAAD,gBACH,sBAAS,AAAK,IAAD,SAAS,AAAe;AAK2B,QAF1E,mBAAuC,aAApB,AAAa,YAAD,yBAAW,AAAa,YAAD,WAC9B,AAAI,aAAxB,AAAa,YAAD,WAAU,iBAAI,AAAa,AAAO,YAAR,cACtC,AAAI,YAA0B,aAApB,AAAa,YAAD,wBAAU,AAAa,YAAD,UAAS,AAAa,YAAD;AACtC,QAA/B;;AAKW,yBACV,CAD2C,aAAjB,gBAAgB,iBAAoB,AAAE,eAAnB,0CAE3B,AAAE,AAAS,eAA5B,mDACiB,AAAE,AAAS,eAA5B;AAGS,wBAAwC,aAAT,AAAE,eAAnB,mCAA4B,YAAY;AACnE,YAAO,yCAAqB,AAAK,IAAD,OAAO,AAAW,UAAD,MAAG,WAAW,YAAW,YAAY;IACxF;;;AAEgC,qEAAsB;qBAAtB,OAAkC;IAAK;;;AAC5C,oBAAA,AAAO,yCAAA,OAAe;qBAAf,OAA6B;IAAK;;AAC7B,YAAe,WAAf,yBAAkB,6BAAwB;IAAI;;;AAGnF,qBAAK;AACH;;AAEF,qBAAK;AACoB,yBAAa;AAY6D,QAFjG,6BAAsC,UAAf,yBAAkB,6BAAwB,OACzC,AAAE,eAAtB,kCAA6B,MAAM,+BACzB,4BAAO,MAAM,oCAAmD,UAArB,yCAAwB;AACrD,QAAR,AAAE,eAAtB;AACyB,QAAzB;AAC8B,QAA9B;AACA,sBAAI;AAGqC,UAAnB,AAAE,eAAtB;;AAGc,oBAAQ,AAAO;AASA,cARX,eAApB;QAAoB;AAChB,oCACY,AAAM,KAAD,uBACP,AAAM,KAAD,uBACH,AAAM,KAAD,4BACF,mCACJ,AAAO;AAElB,8BAAgB,UAAU;;;;AAEF,QAAR,AAAE,eAAtB;;IAEJ;;AAGE,oBAAI;AAC2B,QAAT,AAAE,eAAtB;AAC2B,QAA3B,6BAAuB;AACgB,QAAvC,yCAAmC;;IAEvC;;AAGE,oBAAI,8BAAa,AAAO,AAAU;AACV,QAAtB;YACK,gBAAK;AACqB,QAA/B;AACkC,QAAlC,AAAO,AAAW;;IAEtB;;AAIE,oBAAI;AAC8C,QAA5B,AAAE,eAAtB;AAC2B,QAA3B,6BAAuB;AACgB,QAAvC,yCAAmC;AACwB,QAA3D,uBAAiC,iDAAqB;;IAE1D;;AAUE,oBAAI;AACoB,QAAtB;;AAE+B,QAA/B,AAAO,AAAU;;IAErB;;AAGE,UAAI,2BAAqB;AACvB,sBAAI;AAC+B,UAAhB,AAAE,eAAnB,gCAA0B;;AAEE,UAAX,AAAE,eAAnB;AACwB,UAAxB,0BAAoB;;;IAG1B;8BAE2C,WAA0B,cAAqC;;UAA/D;UAA0B;AAInE,qBAAK,AAAO,AAAW,mDAA4B,SAAS,IAC1D;AAEqC,MAAvC,AAAO,AAAW,mCAAY,SAAS;AAItB,MAAjB;AAEyB,YAAzB;2BAAmB;AACK,MAAxB,0BAAoB;AAEpB,UAAI,AAAO,iCAAqB;AAc7B,QAbD,0BAAoB,8DACD,iCACR,qBACF,kCACW,+BACA,+CACI,iDACF,yCACN,YAAY,qBACP,AAAO,kDACP,yBACA,AAAO,wDACD,AAAO;AAE6B,QAA9C,AAAE,eAAnB,0CAAoC,AAAO;AACX,QAAf,AAAE,eAAnB;AACA;AACmD,iBAAjD,AAAO;yBAAA,OAAoB,KAAK,SAAS,EAAE,KAAK;;cACzC;cAAW;AAAlB;AAME,YALW,oCAAY,mDACZ,SAAS,SACb,KAAK,WACH,oBACA,oCAAiB,AAA6C,mDAAN,KAAK;;;;;IAI9E;;UAK8B;AACC,MAA7B,0BAAoB,SAAS;AAG7B,oBAAI;AACsC,QAAxC,yCAAmC;AACf,QAApB;;IAEJ;;AASE,oBAAI;AACF;;AAEgC,MAAlC,oCAA8B;AA+C5B,MA9CuB,AAAE,eAAV,yDAA+B,QAAU;;;AACrB,QAAnC,oCAA8B;AAC9B,YAAI,AAAkB,2BAAG,mBAA0B,AAAE,eAAnB;AAChC;;AAGW,yBAAa,AAAe;AAIlC,4BAAgB,AAAO,AAAc;AAC5C,0DAAI,OAAmB,0BAAqB;AAC7B,6BAAmD,AAC7D,AAA0B,eADgB,AAAE,eAAnB,0DACX,UAAU;AACd,wCAA0B,sBACrC,YAAY;AAGD,uBAA6C,AACvD,eADoC,AAAE,eAAnB,4DAEM,kDACxB,UAAU;AAED,6BAA4B,AAAI,aAAjB,YAAY,IAAG,iBAAI,AAAO,MAAD;AAIpD,UAHD,gBAAgB,sBACd,AAAa,YAAD,GAAG,AAAwB,uBAAD,GAAG,GACzC,aAAa;;AAIA,2BAAe,AAAO,AACpC,4CAAiB,aAAa;AAEZ,2BAAe,8BAAyC,eAAjB;AAM3D,QAJgB,AAAE,eAAnB,mCACE,AAAa,YAAD,oBACF,gEACH;AAOR,QAJD,AAAe,wCACP,AAAa,YAAD,aAAa,AAAa,YAAD,kBACjC,gEACH;;IAGb;;;AAEY;IAAoB;;;AAApB;;IAAoB;;AAI9B,UAAyB,aAArB,2CAA8C,AAAE,AAAO,AAAW,eAA5B;AACpB,QAApB;;AAEsE,MAAxE,6BAA8C,AAAE,AAAO,AAAW,eAA5B;IACxC;;;AAE8C;kBAAuB,yEAAkD;AAAzE;;;;;;IAAwF;yBAE7F;;;AAG5B,wBAAc,AAAO,AAAmB,uBAAX,AAAM,KAAD,sBAAS,AAAO,0BAAa,AAAM,KAAD;AAE/E,UAAI,WAAW;AAOH,QAHV,SAGE,cAHM,AAAO,2CAAA,OAAiB,wCAC9B,KAAK,EACL,SAAkB,UAA6B;cAA7B;cAA6B;AAAc,gBAAA,AAAU,UAAD,kBAAkB,gBAAQ,QAAQ;iFAF3F,OAGV,KAAK;AAOV,uBAAuC,iBAAnC,AAAO,6CAAA,OAAiB,8BAAjB,OAA+B,iBACxC,AAA4D,QAApD,AAAqB,4CAAiB,gBAAQ,KAAK;;AAK/C,MAAhB;AAEc,MAAd,iBAAS,KAAK;AACd,UAAI,WAAW;AACb;AACoC,kBAAlC,AAAO;0BAAA,OAAW,MAAK,AAAM,KAAD;;cACrB;cAAW;AAAlB;AAME,YALW,oCAAY,mDACZ,SAAS,SACb,KAAK,WACH,oBACA,oCAAiB;;;;;AAKlB,MAAd;IACF;;AAGkG,MAAhG,AAAe,kCAAc,AAAO,AAAY,oCAAY,AAA8B;AACI,MAA9F,AAA0B,wCAA0B,UAAlB,AAAO,2BAAkD,aAApC,AAA8B,6CAAQ;IAC/F;;AAKmC,YAAoC,cAApC,AAA8B,6CAAQ;IAAC;;AAMtC;IAAuB;;AAIb;IAAiB;;UAKxC;AAC6B,MAAlD,gCAA0B,WAAC;AACd,oCAAgB,iCAA0B,MAAM;AAC7D,oBAAI,AAAO;AAQoE,QAA7E,AAA8B,8CAAU,aAAa,UAAgB;;AAElB,QAAnD,AAA8B,4CAAQ,aAAa;;AAGrD,UAAiC,aAA7B,sCAA+B;AAG/B,QAFF,cAAS;AACuB,UAA9B,qCAA4B,aAA5B,sCAA4B;;;IAGlC;0BAE+B;;;AAC7B,qBAAO,AAAwB,2CAAE;AACX,YAAtB;2BAAc;AACqD,MAAnE,qBAAqB,qBAAS,iDAAyB;IACzD;;AAGgC,MAA9B,gCAA0B;AACe,MAAzC,AAA8B,4CAAQ;AACtC,oBAAiB,sDACf;AACF,oBAAI,AAAO;AACoE,QAA7E,qBAAqB,qBAAS,mDAA2B;;AAEU,QAAnE,qBAAqB,qBAAS,iDAAyB;;IAE3D;;;UAE6B;;AACL,YAAtB;2BAAc;AACK,MAAnB,qBAAe;AACgB,MAA/B,gCAA0B;AACe,MAAzC,AAA8B,4CAAQ;AACtC,oBAAiB,sDACf;AACF,oBAAI,cAAc,GAChB,AAAgC,qCAAD;AACjC,oBAAI,AAAO;AAC2B,QAApC,AAA8B;AACW,QAAzC,AAA8B,4CAAQ;;IAE1C;;AAGE,UAAI,AAAa,sBAAG,kBAAQ,8BAAa,AAAO,AAAU;AACrC,QAAnB;UACG,KAAI,sBAAgB,oBAAU,+BAAc,AAAO,AAAU,wCAChE,AAAkB;IACtB;;AAGqC,MAAnC;AACiC,MAAjC;AAC0C,MAA1C;AACuC,MAAvC,yCAAmC;AAG8B,MAAjE,cAAS;;IACX;;AAGuC,MAArC;AACiC,MAAjC;AAC0C,MAA1C;AACA,oBAAI;AAEwC,QAAnB,AAAE,eAAV,+CAAsB;AACmC,QAAxE,6BAA8C,AAAE,AAAO,AAAW,eAA5B;AAClB,QAApB;AACA,uBAAK,AAAO,AAAU;AAE8E,UAAlG,8BAAsC,kDAAkB,AAAO,AAAK,8BAAS,qBAAgB;;;AAGlD,QAAtB,AAAE,eAAV,kDAAyB;AAEI,QAA5C,iBAAS,2CAAuB,AAAO;AACT,QAA9B,gCAA0B;;AAEX,MAAjB;IACF;;AAGE,oBAAI;AACS,mBAAO,AAAe;AACnB,wBAAY,AAAe,mCAAe;AACU,QAA9C,AAAE,eAAtB,wDAAkD,IAAI,EAAE,SAAS;AAEG,QAD3C,AACpB,eADY,yDACS;cAAU;AAAM;;;IAE9C;;AAQkB,2BAAiB,AAAO;AACxC,oBAAI;AACF,uBAAO;AACD,4BAAgB,AAAe,6CAAyB,cAAc;AAE5E,YAAI,AAAc,aAAD,IAAI;AACnB,gBAA+B,WAAvB,AAAe,cAAD,uBAAY,AAAe,cAAD;AACtC,iCAAS,AAAe,cAAD,YAAW,AAAe,cAAD,SAAS;AACc,UAAjF,gBAAgB,AAAe,yCAAqB,iCAAqB,MAAM;;AAEjF,cAAO,AAAc,aAAD,IAAI;AAC6B,QAAjC,AAAE,eAAtB,6CAAuC,aAAa;AAEqB,QADhD,AACpB,eADY,yDACS;cAAU;AAAM;;;IAE9C;;;AAGsB,oBAA8B,MAArB,AAAO,kCAAA,OAAgC,wBAAG;AACvE,YAAO,AAAO,MAAD,IAAI,yBAAwF,SAAhF,sBAAW;AACpC,YAAO,OAAM;IACf;;AAMqC,YAAiD,4BAAF,eAApB,AAAE,eAA7B,AAAa;IAAqD;;AAG9D;IAAM;;AAEf,YAAW,AAAY,2BAAT;IAAyB;yBAGjC;;;AACJ,YAAhC;2BAAmB,WAAO,KAAK;AACN,MAAzB,yBAAmB,KAAK;IAC1B;;UAGgC;AACnB,sBAAY,AAAe,yCAAqB,QAAQ;AAC9C,yBAAe,8BAAwB,SAAS;AAEvB,MAA7B,AAAE,eAAnB,gCAA0B,AAAa,YAAD;AACc,MAApD,AAAe,wCAAmB,AAAa,YAAD;IAChD;;AAWE;AACE,cAAO;;AAGT,UAAI,AAAkB,2BAAG,kBAAyB,AAAE,eAAnB;AAC/B,cAAO;;AAGuB,MAAf,AAAE,eAAnB;AACA,YAAO;IACT;;;AAI2B,YAAzB;2BAAmB;IACrB;;AAIE,YAAO,AAAkB,2BAAG;AAC5B,oBAAqB,AAAE,eAAnB;AACW,QAAb;;AAEa,QAAb;;IAEJ;;AAGyB,YAAA,AAAwB,4BAAT;IAAS;oCAES;;;AACxD,YAAO,AAA2B,0BAAD,IAAI;AACrC,YAAO,uDACM,AAAO,oCACR,AAAO,mCACJ,AAAO,sCACP,AAAO,0CACH,AAAO,8CACP,AAAO,gDACL,AAAO,6CACU,MAAvB,AAAO,oCAAA,OAAwC,YAApB,AAAO,0BAA8B,sCACzD,qCACA,4DAEA,AAAO,oDACP,AAAO,uDACJ,WAAC,0BAA0B,IAAG,OAAO,0DACxC,iCAC2C,gBAA9C,AAAO,0CAAA,OAAe,yBAAiB,mBAAhC,OAAkD,wDACnD;IAG3B;;AAIE,YAAO,qCAA8B;IACvC;iCAMsC,OAAW;UAAX;UAAW;AAG7C,MAFF,cAAS;AACoD,QAA3D,gCAA0B,6BAAiB,KAAK,OAAO,GAAG;;IAE9D;uBAEsD;;AACpD,YAA2D,WAApD,AAAO,2CAAoB,+BAAe,oBAAqC,mBAAxB,QAAQ,gBAAR,OAAU,YAAQ,QAAS,QACrF,cAAc,AAAE,eAAV,QAAQ,aAAa,MAAM,yCACjC;IACN;sBAEqD;;AACnD,YAA0D,WAAnD,AAAO,2CAAoB,8BAAc,oBAAoC,mBAAvB,QAAQ,gBAAR,OAAU,WAAO,QAAS,QACnF,cAAc,AAAE,eAAV,QAAQ,YAAY,uBAC1B;IACN;wBAEuD;;AACrD,YAAgG,WAAzF,AAAO,2CAAoB,gCAAgB,oBAAsC,mBAAzB,QAAQ,gBAAR,OAAU,aAAS,QAAS,UAAS,AAAiB,0BAAG,QAAgC,YAAR,AAAE,eAAlB,+BAA2C,6CACvK,cAAc,AAAE,eAAV,QAAQ,cAAc,uBAC5B;IACN;UAG0B;;;AACxB,qBAAO,gCAAwB,OAAO;AACV,MAAZ,AAAE,eAAlB;AACoB,MAAd,YAAM,OAAO;AAEU,qBAAW,AAAO;AAC/C,YAAO,qCACsB,MAAnB,AAAO,gCAAA,OAAkC,oDAC1C,sDACiB,+BACP,sBAA6B,iCAAqB,6CACrD,kCACH,AAAO,8CACG,AAAO,8CACX,AAAO,4CACL,SAAc,SAAwB;;gBAAxB;gBAAwB;AACrD,kBAAO,gDACC,gCACC,iCACG,uBAAiB,QAAQ,UAC1B,sBAAgB,QAAQ,YACtB,wBAAkB,QAAQ,UAC5B,sCACA,0CACiB,iDACF,qCACV,6BACH,6BACM,2CACU,AAAO,yDACL,uDACnB,gCAAoB,AAAO,0BAC3B,4CACK,AAAO,iCACR,AAAO,gCACP,2BACA,AAAO,gCACP,AAAO,+BACR,AAAO,iCACJ,AAAO,wCACH,AAAO,8CACiB,MAAvB,AAAO,oCAAA,OAA8B,yCAAkB,OAAO,qBACpE,AAAO,sCACH,gCACP,AAAO,yCAC+B,OAA1B,AAAO,wCAAA,OAAgD,kCAAG,OAAO,2BACrE,AAAO,gDACH,AAAO,6CACd,AAAO,sCACP,AAAO,0CACH,AAAO,8CACP,AAAO,gDACL,AAAO,uCAClB,MAAM,gCACM,0DACJ,oDACQ,AAAO,iDAClB,AAAO,uCACN,AAAO,wCACP,AAAO,wCACP,AAAO,gDACC,AAAO,uDACR,AAAO,uDACN,AAAO,8DACD,AAAO,+DACZ,wBACL,0CACD,gDACA,AAAO,uDACV,AAAO;;IAOnC;;AAOE,oBAAI,AAAO;AACF,mBAAO,AAAO;AACyB,QAA9C,OAAO,AAAO,AAAmB,uCAAE,AAAK,IAAD;AAEvC,aAA2B,YAAtB,gCAAwC,oCACf,YAAtB,gCAAwC,gCAClB,YAAtB,gCAAwC;AAEnC,kBACsB,aAA7B,sCAA+B,IAAI,gCAA0B;AACjE,cAAI,CAAC,IAAI,QAAU,aAAF,CAAC,KAAI,KAAO,aAAF,CAAC,IAAG,AAAK,IAAD,SACjC,AAAmE,OAA5D,AAAK,IAAD,gBAAc,CAAC,EAAI,aAAF,CAAC,IAAG,GAAG,AAAO,AAAK,gCAAU,CAAC,EAAI,aAAF,CAAC,IAAG;;AAEpE,cAAO,oCAAgB,AAAO,yBAAa,IAAI;;AAGjD,YAAO,AAAO,AAAW,8CAChB,AAAO,kCACC,WAAC,AAAO;IAE3B;;;IA3pCO;IACF,gCAA0B;IACL,kCAA4B,gCAAoB;IAC1D,qBAAe;IACA,yBAAmB,OAAS,OAAO;IAE7C;IACC;IAEJ;8DAEO;;IAET,0BAAoB;IACpB,8BAAwB;IACxB,4BAAsB;IAEjC,sBAAgB;IACJ;IAEG;IAKf,6BAAuB;+DAyBH;;IAuJP;IA8FZ;IAIQ;IAGN;IAGA;IAwHJ,wBAAkB;IAkPjB,yCAAmC;IAClC;IAgBD,oCAA8B;qDAwDvB;;qDAUkC;;IAkE1C,qCAA+B;IAC9B;IAuOM;;;EAoIb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAhnCwB,6CAAa;;;MAIb,wDAAwB;;;MAynBxB,uDAAuB;;;MAC1B,oDAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAuiBxB;;;;;;IACQ;;;;;;IACV;;;;;;IACG;;;;;;IACA;;;;;;IACH;;;;;;IACa;;;;;;IACf;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACO;;;;;;IACL;;;;;;IACA;;;;;;IACG;;;;;;IACI;;;;;;IACN;;;;;;IACD;;;;;;IACF;;;;;;IACe;;;;;;IACL;;;;;;IACV;;;;;;IACW;;;;;;IACA;;;;;;IACX;;;;;;IACU;;;;;;IACU;;;;;;IACJ;;;;;;IAChB;;;;;;IACE;;;;;;IACC;;;;;;IACA;;;;;;IACA;;;;;;IACH;;;;;;IACa;;;;;;IACD;;;;;;IACZ;;;;;;IACiB;;;;;;IACf;;;;;;IACI;;;;;;IACJ;;;;;;IACF;;;;;;uBAGoC;;;AAC7C,YAAO,wCACC,4BACO,wCACS,+CACF,gDACG,wCACX,4BACD,0BACD,yBACA,yBACA,yBACA,wBACD,0BACG,iCACI,sCACC,iCACN,+BACI,6BACA,0BAAP,OAAwB,0CAAc,OAAO,qBAC1C,AAAM,8BACT,iCACY,yCACJ,oCACD,iDACK,sCACP,sCACO,yCACJ,kCACH,gCACC,iCACA,iCACA,yCACQ,iDACA,gDACD,sDACO,wDACL,8CACL,wCACD,uCACA,oCACH;IAElB;uBAGqC,SAAwB;;UAAxB;iCAAwB;;AAuCpB,YAtCvC,YAAY;MAAZ;AACI,mBAAO;AACP,0BAAc;AACd,mCAAuB;AACvB,iCAAqB;AACrB,yBAAa;AACb,wBAAY;AACZ,uBAAW;AACX,uBAAW;AACX,uBAAW;AACX,uBAAW;AACX,sBAAU;AACV,yBAAa;AACb,6BAAiB;AACjB,8BAAkB;AAClB,wBAAY;AACZ,4BAAgB;AAChB,sBAAgB,0BAAP,OAAwB,0CAAc,OAAO;AACtD,wBAAY,AAAM;AAClB,qBAAS;AACT,iCAAqB;AACrB,6BAAiB;AACjB,4BAAgB;AAChB,iCAAqB;AACrB,6BAAiB;AACjB,iCAAqB;AACrB,0BAAc;AACd,0BAAc;AACd,2BAAe;AACf,2BAAe;AACf,2BAAe;AACf,mCAAuB;AACvB,kCAAsB;AACtB,oCAAwB;AACxB,+BAAmB;AACnB,mCAAuB;AACvB,8BAAkB;AAClB,2BAAe;AACf,+BAAmB;;;IACzB;;;QArLO;QACS;;QACA;;QACA;;QACA;;QACT;QACA;QACS;;QACA;;QACA;;QACT;QACS;;QACA;;QACA;QACT;QACS;;QACT;QACA;QACS;;QACA;;QACA;;QACT;QACS;;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;QACT;QACA;QACA;;QACS;;QACT;QACA;QACA;QACS;;QACT;;QACA;;QACA;;QACS;;QACA;;QACT;QACA;QACS;;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","file":"../../../../../../../packages/flutter/src/widgets/widget_span.dart.lib.js"}');
  // Exports:
  return {
    src__widgets__widget_span: widget_span,
    src__widgets__widget_inspector: widget_inspector,
    src__widgets__title: title$,
    src__widgets__shortcuts: shortcuts$,
    src__widgets__semantics_debugger: semantics_debugger,
    src__widgets__router: router,
    src__widgets__performance_overlay: performance_overlay$,
    src__widgets__modal_barrier: modal_barrier,
    src__widgets__routes: routes,
    src__widgets__pages: pages,
    src__widgets__heroes: heroes,
    src__widgets__navigator: navigator$,
    src__widgets__table: table$,
    src__widgets__inherited_model: inherited_model,
    src__widgets__visibility: visibility,
    src__widgets__transitions: transitions,
    src__widgets__overlay: overlay$,
    src__widgets__text_selection: text_selection,
    src__widgets__inherited_theme: inherited_theme,
    src__widgets__text: text,
    src__widgets__viewport: viewport,
    src__widgets__scroll_configuration: scroll_configuration,
    src__widgets__restoration_properties: restoration_properties,
    src__widgets__restoration: restoration$,
    src__widgets__scroll_position_with_single_context: scroll_position_with_single_context,
    src__widgets__scroll_activity: scroll_activity,
    src__widgets__page_storage: page_storage,
    src__widgets__scroll_position: scroll_position,
    src__widgets__scroll_notification: scroll_notification,
    src__widgets__overscroll_indicator: overscroll_indicator,
    src__widgets__scroll_physics: scroll_physics,
    src__widgets__ticker_provider: ticker_provider,
    src__widgets__scroll_context: scroll_context,
    src__widgets__scroll_controller: scroll_controller,
    src__widgets__primary_scroll_controller: primary_scroll_controller,
    src__widgets__gesture_detector: gesture_detector,
    src__widgets__scrollable: scrollable$,
    src__widgets__scroll_aware_image_provider: scroll_aware_image_provider,
    src__widgets__media_query: media_query,
    src__widgets__disposable_build_context: disposable_build_context,
    src__widgets__image: image$,
    src__widgets__container: container,
    src__widgets__localizations: localizations,
    src__widgets__sliver: sliver$,
    src__widgets__notification_listener: notification_listener,
    src__widgets__automatic_keep_alive: automatic_keep_alive,
    src__widgets__autofill: autofill$,
    src__widgets__editable_text: editable_text,
    src__widgets__focus_traversal: focus_traversal,
    src__widgets__inherited_notifier: inherited_notifier,
    src__widgets__focus_scope: focus_scope,
    src__widgets__focus_manager: focus_manager,
    src__widgets__framework: framework,
    src__widgets__debug: debug$0,
    src__widgets__banner: banner,
    src__widgets__app: app,
    src__widgets__binding: binding$5,
    src__widgets__basic: basic,
    src__widgets__actions: actions$
  };
}));

//# sourceMappingURL=widget_span.dart.lib.js.map
